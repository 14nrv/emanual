{
	"�0": {
		"product": "AX-12A",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 53 54 크기 32 50 40 mm 26 97 57 inch 최소 제어각 29 deg 모터 Cored 기어비 254 정지 토크 12 무부하 속도 59 rpm 12 동작 모드 관절 모드 300 deg 바퀴 모드 무한 회전 동작 온도 70 사용 전압 12 권장 전압 11 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communicationf 8bit 1stop No Parity 통신 연결 TTL Level Multi Drop Bus ID 254 ID 253 피드백 Position Temperature Load Input Voltage 등 기어 재질 Engineering Plastic Full 케이스 재질 Engineering Plastic Front Middle Back 주의 Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 70 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#주요-사양"
	},
	"1": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#컨트롤-테이블"
	},
	"2": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#컨트롤-테이블-데이터-주소"
	},
	"3": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#영역-eeprom-ram"
	},
	"4": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#크기"
	},
	"5": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#접근권한"
	},
	"6": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#초기값"
	},
	"7": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 12 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 70 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 140 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#eeprom-영역"
	},
	"8": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED Status LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#ram-영역"
	},
	"9": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#컨트롤-테이블-설명"
	},
	"10": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#model-number-0"
	},
	"11": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#firmware-version-2"
	},
	"12": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#id-3"
	},
	"13": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 기본값 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#baud-rate-4"
	},
	"14": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#return-delay-time-5"
	},
	"15": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#cwccw-angle-limit6-8"
	},
	"16": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#temperature-limit-11"
	},
	"17": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 160 16 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#minmax-voltage-limit-12-13"
	},
	"18": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#max-torque-14"
	},
	"19": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#status-return-level-16"
	},
	"20": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#alarm-led17-shutdown18"
	},
	"21": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#torque-enable-24"
	},
	"22": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#led-25"
	},
	"23": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#compliance-margin-26-27"
	},
	"24": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#compliance-slope-28-29"
	},
	"25": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#goal-position-30"
	},
	"26": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#moving-speed-32"
	},
	"27": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#torque-limit-34"
	},
	"28": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#present-position-36"
	},
	"29": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#present-speed-38"
	},
	"30": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#present-load-40"
	},
	"31": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#present-voltage-42"
	},
	"32": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#present-temperature-43"
	},
	"33": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#registered-instruction-44"
	},
	"34": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#moving-46"
	},
	"35": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#lock-47"
	},
	"36": {
		"product": "AX-12A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#punch-48"
	},
	"37": {
		"product": "AX-12A",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "기본 제공 Frames AX 12A 와 함께 기본으로 제공되는 Frame은 다음과 같다 F2의 적용 F2는 다음과 같은 방법으로 적용됩니다 F3의 적용 F3은 다음과 같은 방법으로 적용됩니다 F3은 AX 12A의 3면 좌 우 아래면 에 결합될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#조립-예시"
	},
	"38": {
		"product": "AX-12A",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#유지보수"
	},
	"39": {
		"product": "AX-12A",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#혼과-베어링-교체"
	},
	"40": {
		"product": "AX-12A",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#혼과-베어링-교체"
	},
	"41": {
		"product": "AX-12A",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#혼과-베어링-교체"
	},
	"42": {
		"product": "AX-12A",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#참고자료"
	},
	"43": {
		"product": "AX-12A",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀 번호 GND VDD DATA 다이어그램 하우징 MOLEX 50 37 5033 PCB 헤더 MOLEX 22 03 5035 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#커넥터-정보"
	},
	"44": {
		"product": "AX-12A",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#도면"
	},
	"45": {
		"product": "AX-12A",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#통신-회로"
	},
	"46": {
		"product": "AX-12A",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#ttl-통신"
	},
	"47": {
		"product": "AX-12A",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12a/#rs485-통신"
	},
	"48": {
		"product": "AX-12W",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 52 크기 32 50 40 mm 26 97 57 inch 최소 제어각 29 deg 모터 Cored 기어비 32 정지 토크 12 무부하 속도 470 rpm 12 Wheel Mode 54 rpm 12 Joint Mode 동작 모드 관절 모드 300 deg 바퀴 모드 무한 회전 동작 온도 70 사용 전압 12 권장 전압 11 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 TTL Level Multi Drop Bus ID 254 ID 253 통신 속도 843 000 000 bps 피드백 Position Temperature Load Input Voltage 등 기어 재질 Engineering Plastic Full 케이스 재질 Engineering Plastic Front Middle Back 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 70 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#주요-사양"
	},
	"49": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#컨트롤-테이블"
	},
	"50": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#컨트롤-테이블-데이터-주소"
	},
	"51": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#영역-eeprom-ram"
	},
	"52": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#크기"
	},
	"53": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#접근권한"
	},
	"54": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#초기값"
	},
	"55": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 300 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 70 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 140 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#eeprom-영역"
	},
	"56": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED Status LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 64 29 CCW Compliance Slope CCW Compliance Slope 64 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#ram-영역"
	},
	"57": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#컨트롤-테이블-설명"
	},
	"58": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#model-number-0"
	},
	"59": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#firmware-version-2"
	},
	"60": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#id-3"
	},
	"61": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 기본값 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#baud-rate-4"
	},
	"62": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#return-delay-time-5"
	},
	"63": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#cwccw-angle-limit6-8"
	},
	"64": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#temperature-limit-11"
	},
	"65": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 160 16 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#minmax-voltage-limit-12-13"
	},
	"66": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#max-torque-14"
	},
	"67": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#status-return-level-16"
	},
	"68": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#alarm-led17-shutdown18"
	},
	"69": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#torque-enable-24"
	},
	"70": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#led-25"
	},
	"71": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#compliance-margin-26-27"
	},
	"72": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#compliance-slope-28-29"
	},
	"73": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#goal-position-30"
	},
	"74": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#moving-speed-32"
	},
	"75": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#torque-limit-34"
	},
	"76": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#present-position-36"
	},
	"77": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#present-speed-38"
	},
	"78": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#present-load-40"
	},
	"79": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#present-voltage-42"
	},
	"80": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#present-temperature-43"
	},
	"81": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#registered-instruction-44"
	},
	"82": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#moving-46"
	},
	"83": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#lock-47"
	},
	"84": {
		"product": "AX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#punch-48"
	},
	"85": {
		"product": "AX-12W",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#조립-예시"
	},
	"86": {
		"product": "AX-12W",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#유지보수"
	},
	"87": {
		"product": "AX-12W",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#혼과-베어링-교체"
	},
	"88": {
		"product": "AX-12W",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#혼과-베어링-교체"
	},
	"89": {
		"product": "AX-12W",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#혼과-베어링-교체"
	},
	"90": {
		"product": "AX-12W",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#참고자료"
	},
	"91": {
		"product": "AX-12W",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀 번호 GND VDD DATA 다이어그램 하우징 MOLEX 50 37 5033 PCB 헤더 MOLEX 22 03 5035 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#커넥터-정보"
	},
	"92": {
		"product": "AX-12W",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#도면"
	},
	"93": {
		"product": "AX-12W",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#통신-회로"
	},
	"94": {
		"product": "AX-12W",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#ttl-통신"
	},
	"95": {
		"product": "AX-12W",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-12w/#rs485-통신"
	},
	"96": {
		"product": "AX-18A",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 54 55 크기 32 50 40 mm 26 97 57 inch 최소 제어각 29 deg 모터 Coreless 기어비 254 정지 토크 12 무부하 속도 97 rpm 12 동작 모드 관절 모드 300 deg 바퀴 모드 무한 회전 동작 온도 70 사용 전압 12 권장 전압 11 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 TTL Level Multi Drop Bus ID 254 ID 253 피드백 Position Temperature Load Input Voltage 등 기어 재질 Engineering Plastic Precious Metal 케이스 재질 Engineering Plastic Front Middle Back 주의 Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 70 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#주요-사양"
	},
	"97": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#컨트롤-테이블"
	},
	"98": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#컨트롤-테이블-데이터-주소"
	},
	"99": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#영역-eeprom-ram"
	},
	"100": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#크기"
	},
	"101": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#접근권한"
	},
	"102": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#초기값"
	},
	"103": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 18 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 75 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 140 14 Max Torque 토크 한계 값의 바이트 983 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#eeprom-영역"
	},
	"104": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 하위 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#ram-영역"
	},
	"105": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#컨트롤-테이블-설명"
	},
	"106": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#model-number-0"
	},
	"107": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#firmware-version-2"
	},
	"108": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#id-3"
	},
	"109": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 기본값 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#baud-rate-4"
	},
	"110": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#return-delay-time-5"
	},
	"111": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#cwccw-angle-limit6-8"
	},
	"112": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#temperature-limit-11"
	},
	"113": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 160 16 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#minmax-voltage-limit-12-13"
	},
	"114": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#max-torque-14"
	},
	"115": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#status-return-level-16"
	},
	"116": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#alarm-led17-shutdown18"
	},
	"117": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#torque-enable-24"
	},
	"118": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#led-25"
	},
	"119": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#compliance-margin-26-27"
	},
	"120": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#compliance-slope-28-29"
	},
	"121": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#goal-position-30"
	},
	"122": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#moving-speed-32"
	},
	"123": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#torque-limit-34"
	},
	"124": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#present-position-36"
	},
	"125": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#present-speed-38"
	},
	"126": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#present-load-40"
	},
	"127": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#present-voltage-42"
	},
	"128": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#present-temperature-43"
	},
	"129": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#registered-instruction-44"
	},
	"130": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#moving-46"
	},
	"131": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#lock-47"
	},
	"132": {
		"product": "AX-18A",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#punch-48"
	},
	"133": {
		"product": "AX-18A",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#조립-예시"
	},
	"134": {
		"product": "AX-18A",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#유지보수"
	},
	"135": {
		"product": "AX-18A",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#혼과-베어링-교체"
	},
	"136": {
		"product": "AX-18A",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#혼과-베어링-교체"
	},
	"137": {
		"product": "AX-18A",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#혼과-베어링-교체"
	},
	"138": {
		"product": "AX-18A",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#참고자료"
	},
	"139": {
		"product": "AX-18A",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀 번호 GND VDD DATA 다이어그램 하우징 MOLEX 50 37 5033 PCB 헤더 MOLEX 22 03 5035 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#커넥터-정보"
	},
	"140": {
		"product": "AX-18A",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#도면"
	},
	"141": {
		"product": "AX-18A",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#통신-회로"
	},
	"142": {
		"product": "AX-18A",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#ttl-통신"
	},
	"143": {
		"product": "AX-18A",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ax/ax-18a/#rs485-통신"
	},
	"144": {
		"product": "CRC Calculation",
		"header1": "CRC-16 (IBM/ANSI)",
		"header2": "",
		"header3": "",
		"content": "생성다항식 x16 x15 x2 다항식 키값 0x8005 초기값 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/crc/"
	},
	"145": {
		"product": "CRC Calculation",
		"header1": "CRC-16 (IBM/ANSI)",
		"header2": "CRC16 계산 코드",
		"header3": "",
		"content": "unsigned short update crc unsigned short crc accum unsigned char data blk ptr unsigned short data blk size unsigned short unsigned short crc table 256 0x0000 0x8005 0x800F 0x000A 0x801B 0x001E 0x0014 0x8011 0x8033 0x0036 0x003C 0x8039 0x0028 0x802D 0x8027 0x0022 0x8063 0x0066 0x006C 0x8069 0x0078 0x807D 0x8077 0x0072 0x0050 0x8055 0x805F 0x005A 0x804B 0x004E 0x0044 0x8041 0x80C3 0x00C6 0x00CC 0x80C9 0x00D8 0x80DD 0x80D7 0x00D2 0x00F0 0x80F5 0x80FF 0x00FA 0x80EB 0x00EE 0x00E4 0x80E1 0x00A0 0x80A5 0x80AF 0x00AA 0x80BB 0x00BE 0x00B4 0x80B1 0x8093 0x0096 0x009C 0x8099 0x0088 0x808D 0x8087 0x0082 0x8183 0x0186 0x018C 0x8189 0x0198 0x819D 0x8197 0x0192 0x01B0 0x81B5 0x81BF 0x01BA 0x81AB 0x01AE 0x01A4 0x81A1 0x01E0 0x81E5 0x81EF 0x01EA 0x81FB 0x01FE 0x01F4 0x81F1 0x81D3 0x01D6 0x01DC 0x81D9 0x01C8 0x81CD 0x81C7 0x01C2 0x0140 0x8145 0x814F 0x014A 0x815B 0x015E 0x0154 0x8151 0x8173 0x0176 0x017C 0x8179 0x0168 0x816D 0x8167 0x0162 0x8123 0x0126 0x012C 0x8129 0x0138 0x813D 0x8137 0x0132 0x0110 0x8115 0x811F 0x011A 0x810B 0x010E 0x0104 0x8101 0x8303 0x0306 0x030C 0x8309 0x0318 0x831D 0x8317 0x0312 0x0330 0x8335 0x833F 0x033A 0x832B 0x032E 0x0324 0x8321 0x0360 0x8365 0x836F 0x036A 0x837B 0x037E 0x0374 0x8371 0x8353 0x0356 0x035C 0x8359 0x0348 0x834D 0x8347 0x0342 0x03C0 0x83C5 0x83CF 0x03CA 0x83DB 0x03DE 0x03D4 0x83D1 0x83F3 0x03F6 0x03FC 0x83F9 0x03E8 0x83ED 0x83E7 0x03E2 0x83A3 0x03A6 0x03AC 0x83A9 0x03B8 0x83BD 0x83B7 0x03B2 0x0390 0x8395 0x839F 0x039A 0x838B 0x038E 0x0384 0x8381 0x0280 0x8285 0x828F 0x028A 0x829B 0x029E 0x0294 0x8291 0x82B3 0x02B6 0x02BC 0x82B9 0x02A8 0x82AD 0x82A7 0x02A2 0x82E3 0x02E6 0x02EC 0x82E9 0x02F8 0x82FD 0x82F7 0x02F2 0x02D0 0x82D5 0x82DF 0x02DA 0x82CB 0x02CE 0x02C4 0x82C1 0x8243 0x0246 0x024C 0x8249 0x0258 0x825D 0x8257 0x0252 0x0270 0x8275 0x827F 0x027A 0x826B 0x026E 0x0264 0x8261 0x0220 0x8225 0x822F 0x022A 0x823B 0x023E 0x0234 0x8231 0x8213 0x0216 0x021C 0x8219 0x0208 0x820D 0x8207 0x0202 data blk size unsigned short crc accum data blk ptr amp 0xFF crc accum crc accum crc table return crc accum ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/crc/"
	},
	"146": {
		"product": "CRC Calculation",
		"header1": "CRC-16 (IBM/ANSI)",
		"header2": "CRC 계산 예제",
		"header3": "",
		"content": "unsigned short update crc unsigned short crc accum unsigned char data blk ptr unsigned short data blk size 리턴 값 16bit CRC 값 Arguments crc accum 으로 설정 data blk ptr Packet array pointer data blk size CRC를 제외한 패킷의 byte 수 data blk size Header Reserved Packet ID Packet Length Packet Length CRC Pakcet Length Packet Length Packet Length LEN LEN Little endian Packet 분석 및 CRC 계산 Packet 예제 장치의 시작 주소 0x0000에서 byte 데이터를 읽기 위한 Read Instruction Packet unsigned char TxPacket 0xFF 0xFF 0xFD 0x00 0x01 0x07 0x00 0x02 0x00 0x00 0x02 0x00 CRC CRC CRC 계산 코드 CRC update crc TxPacket 12 12 Packet Length CRC CRC amp 0x00FF Little endian CRC CRC amp 0x00FF ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/crc/"
	},
	"147": {
		"product": "DX-113",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 58g 크기 31mm 46mm 37mm 최소 제어각 29 기어비 192 정지 토크 12V 무부하 속도 54rpm 12V 동작 모드 관절 모드 300 동작 온도 85 사용 전압 12V 권장 전압 11 1V 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 통신 속도 7843bps Mbps 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Engineering Plastic Body WARNING Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 85 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#주요-사양"
	},
	"148": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#컨트롤-테이블"
	},
	"149": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#컨트롤-테이블-데이터-주소"
	},
	"150": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#영역-eeprom-ram"
	},
	"151": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#크기"
	},
	"152": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#접근권한"
	},
	"153": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#초기값"
	},
	"154": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 113 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 하위 바이트 1023 11 Temperature Limit 내부 한계 온도 85 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 190 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#eeprom-영역"
	},
	"155": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED Status LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#ram-영역"
	},
	"156": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#컨트롤-테이블-설명"
	},
	"157": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#model-number-0"
	},
	"158": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#firmware-version-2"
	},
	"159": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#id-3"
	},
	"160": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#baud-rate-4"
	},
	"161": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#return-delay-time-5"
	},
	"162": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 주의 DX 113은 바퀴 모드를 지원하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#cwccw-angle-limit6-8"
	},
	"163": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#temperature-limit-11"
	},
	"164": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#minmax-voltage-limit-12-13"
	},
	"165": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#max-torque-14"
	},
	"166": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#status-return-level-16"
	},
	"167": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#alarm-led17-shutdown18"
	},
	"168": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#torque-enable-24"
	},
	"169": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#led-25"
	},
	"170": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#compliance-margin-26-27"
	},
	"171": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#compliance-slope-28-29"
	},
	"172": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#goal-position-30"
	},
	"173": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 Goal Position으로 이동하는 속도입니다 1023 0x3FF 까지 사용되며 단위는 약 111rpm입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 1023의 경우 약 114rpm이 됩니다 예를 들어 300으로 설정된 경우 약 33 3rpm입니다 주의 참고 해당 모델의 최대 rpm을 확인하시기 바랍니다 최대 rpm 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 2047 0x7FF 까지 사용되며 단위는 약 입니다 1023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 1024 2047 범위의 값을 사용하면 CW방향으로 회전하며 1024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#moving-speed-32"
	},
	"174": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#torque-limit-34"
	},
	"175": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 해당 모델의 전면이 기준입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#present-position-36"
	},
	"176": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 2047 0x7FF 까지 사용됩니다 1023 범위의 값이면 CCW방향으로 회전한다는 의미입니다 1024 2047 범위의 값이면 CW방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 1024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111rpm입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 3rpm으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#present-speed-38"
	},
	"177": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#present-load-40"
	},
	"178": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#present-voltage-42"
	},
	"179": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#present-temperature-43"
	},
	"180": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#registered-instruction-44"
	},
	"181": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#moving-46"
	},
	"182": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#lock-47"
	},
	"183": {
		"product": "DX-113",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#punch-48"
	},
	"184": {
		"product": "DX-113",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "OF 116B Option Frame OF 116H Option Frame OF 116S Option Frame 기구결합 아래는 옵션 프레임과 혼을 이용한 결합구조의 예입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#조립-예시"
	},
	"185": {
		"product": "DX-113",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#유지보수"
	},
	"186": {
		"product": "DX-113",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#혼과-베어링-교체"
	},
	"187": {
		"product": "DX-113",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#혼과-베어링-교체"
	},
	"188": {
		"product": "DX-113",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#혼과-베어링-교체"
	},
	"189": {
		"product": "DX-113",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#참고자료"
	},
	"190": {
		"product": "DX-113",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#커넥터-정보"
	},
	"191": {
		"product": "DX-113",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#도면"
	},
	"192": {
		"product": "DX-113",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#통신-회로"
	},
	"193": {
		"product": "DX-113",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#ttl-통신"
	},
	"194": {
		"product": "DX-113",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-113/#rs485-통신"
	},
	"195": {
		"product": "DX-116",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 66g 크기 31mm 46mm 37mm 최소 제어각 29 기어비 142 동작 모드 관절 모드 300 정지 토크 12V 16V 동작 온도 85 사용 전압 12 16V 권장전압 14 8V 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 통신 속도 7843bps Mbps 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Engineering Plastic Body WARNING Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 85 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#주요-사양"
	},
	"196": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#컨트롤-테이블"
	},
	"197": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#컨트롤-테이블-데이터-주소"
	},
	"198": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#영역-eeprom-ram"
	},
	"199": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#크기"
	},
	"200": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#접근권한"
	},
	"201": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#초기값"
	},
	"202": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 116 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 85 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 190 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#eeprom-영역"
	},
	"203": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#ram-영역"
	},
	"204": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#컨트롤-테이블-설명"
	},
	"205": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#model-number-0"
	},
	"206": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#firmware-version-2"
	},
	"207": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#id-3"
	},
	"208": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#baud-rate-4"
	},
	"209": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#return-delay-time-5"
	},
	"210": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 주의 DX 116은 바퀴 모드를 지원하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#cwccw-angle-limit6-8"
	},
	"211": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#temperature-limit-11"
	},
	"212": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#minmax-voltage-limit-12-13"
	},
	"213": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#max-torque-14"
	},
	"214": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#status-return-level-16"
	},
	"215": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#alarm-led17-shutdown18"
	},
	"216": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#torque-enable-24"
	},
	"217": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#led-25"
	},
	"218": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#compliance-margin-26-27"
	},
	"219": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#compliance-slope-28-29"
	},
	"220": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#goal-position-30"
	},
	"221": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 Goal Position으로 이동하는 속도입니다 1023 0x3FF 까지 사용되며 단위는 약 111rpm입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 1023의 경우 약 114rpm이 됩니다 예를 들어 300으로 설정된 경우 약 33 3rpm입니다 주의 참고 해당 모델의 최대 rpm을 확인하시기 바랍니다 최대 rpm 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 2047 0x7FF 까지 사용되며 단위는 약 입니다 1023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 1024 2047 범위의 값을 사용하면 CW방향으로 회전하며 1024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#moving-speed-32"
	},
	"222": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#torque-limit-34"
	},
	"223": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 해당 모델의 전면이 기준입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#present-position-36"
	},
	"224": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 2047 0x7FF 까지 사용됩니다 1023 범위의 값이면 CCW방향으로 회전한다는 의미입니다 1024 2047 범위의 값이면 CW방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 1024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111rpm입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 3rpm으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#present-speed-38"
	},
	"225": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#present-load-40"
	},
	"226": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#present-voltage-42"
	},
	"227": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#present-temperature-43"
	},
	"228": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#registered-instruction-44"
	},
	"229": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#moving-46"
	},
	"230": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#lock-47"
	},
	"231": {
		"product": "DX-116",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#punch-48"
	},
	"232": {
		"product": "DX-116",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "OF 116B Option Frame OF 116H Option Frame OF 116S Option Frame 기구결합 아래는 옵션 프레임과 혼을 이용한 결합구조의 예입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#조립-예시"
	},
	"233": {
		"product": "DX-116",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#유지보수"
	},
	"234": {
		"product": "DX-116",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#혼과-베어링-교체"
	},
	"235": {
		"product": "DX-116",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#혼과-베어링-교체"
	},
	"236": {
		"product": "DX-116",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#혼과-베어링-교체"
	},
	"237": {
		"product": "DX-116",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#참고자료"
	},
	"238": {
		"product": "DX-116",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#커넥터-정보"
	},
	"239": {
		"product": "DX-116",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#도면"
	},
	"240": {
		"product": "DX-116",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#통신-회로"
	},
	"241": {
		"product": "DX-116",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#ttl-통신"
	},
	"242": {
		"product": "DX-116",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-116/#rs485-통신"
	},
	"243": {
		"product": "DX-117",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 66g 크기 31mm 46mm 37mm 최소 제어각 29 기어비 192 정지 토크 18 5V 9A 무부하 속도 85 RPM 18 5V 동작 모드 관절 모드 300 동작 온도 80 사용 전압 12 18 5V 권장 전압 14 8V 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 통신 속도 7343 bps Mbps 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Engineering Plastic Body WARNING Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#주요-사양"
	},
	"244": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#컨트롤-테이블"
	},
	"245": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#컨트롤-테이블-데이터-주소"
	},
	"246": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#영역-eeprom-ram"
	},
	"247": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#크기"
	},
	"248": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#접근권한"
	},
	"249": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#초기값"
	},
	"250": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 117 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 190 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#eeprom-영역"
	},
	"251": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED Status LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#ram-영역"
	},
	"252": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#컨트롤-테이블-설명"
	},
	"253": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#model-number-0"
	},
	"254": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#firmware-version-2"
	},
	"255": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#id-3"
	},
	"256": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#baud-rate-4"
	},
	"257": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#return-delay-time-5"
	},
	"258": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 주의 DX 117은 바퀴 모드를 지원하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#cwccw-angle-limit6-8"
	},
	"259": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#temperature-limit-11"
	},
	"260": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#minmax-voltage-limit-12-13"
	},
	"261": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#max-torque-14"
	},
	"262": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#status-return-level-16"
	},
	"263": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#alarm-led17-shutdown18"
	},
	"264": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#torque-enable-24"
	},
	"265": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#led-25"
	},
	"266": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#compliance-margin-26-27"
	},
	"267": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#compliance-slope-28-29"
	},
	"268": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#goal-position-30"
	},
	"269": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 Goal Position으로 이동하는 속도입니다 1023 0x3FF 까지 사용되며 단위는 약 111rpm입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 1023의 경우 약 114rpm이 됩니다 예를 들어 300으로 설정된 경우 약 33 3rpm입니다 주의 참고 해당 모델의 최대 rpm을 확인하시기 바랍니다 최대 rpm 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 2047 0x7FF 까지 사용되며 단위는 약 입니다 1023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 1024 2047 범위의 값을 사용하면 CW방향으로 회전하며 1024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#moving-speed-32"
	},
	"270": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#torque-limit-34"
	},
	"271": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 해당 모델의 전면이 기준입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#present-position-36"
	},
	"272": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 2047 0x7FF 까지 사용됩니다 1023 범위의 값이면 CCW방향으로 회전한다는 의미입니다 1024 2047 범위의 값이면 CW방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 1024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111rpm입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 3rpm으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#present-speed-38"
	},
	"273": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#present-load-40"
	},
	"274": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#present-voltage-42"
	},
	"275": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#present-temperature-43"
	},
	"276": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#registered-instruction-44"
	},
	"277": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#moving-46"
	},
	"278": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#lock-47"
	},
	"279": {
		"product": "DX-117",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#punch-48"
	},
	"280": {
		"product": "DX-117",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "OF 116B Option Frame OF 116H Option Frame OF 116S Option Frame 기구결합 아래는 옵션 프레임과 혼을 이용한 결합구조의 예입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#조립-예시"
	},
	"281": {
		"product": "DX-117",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#유지보수"
	},
	"282": {
		"product": "DX-117",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#혼과-베어링-교체"
	},
	"283": {
		"product": "DX-117",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#혼과-베어링-교체"
	},
	"284": {
		"product": "DX-117",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#혼과-베어링-교체"
	},
	"285": {
		"product": "DX-117",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#참고자료"
	},
	"286": {
		"product": "DX-117",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#커넥터-정보"
	},
	"287": {
		"product": "DX-117",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#도면"
	},
	"288": {
		"product": "DX-117",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#통신-회로"
	},
	"289": {
		"product": "DX-117",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#ttl-통신"
	},
	"290": {
		"product": "DX-117",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/dx/dx-117/#rs485-통신"
	},
	"291": {
		"product": "EX-106+",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 154g 크기 40 2mm 65 1mm 46mm 최소 제어각 06 모터 Coreless Maxon 기어비 184 정지 토크 10 18 5V 7A 무부하 속도 91rpm 18 5V 동작 모드 관절 모드 251 바퀴 모드 무한 회전 동작 온도 80 사용 전압 12 18 5V Recommended 14 8V 제어 명령 Digital Packet 프로토콜 타입 RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 통신 속도 7843 bps Mbps 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Aluminium Front Case Engineering Plastic Body 대기 전류 55mA 주의 Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#주요-사양"
	},
	"292": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#컨트롤-테이블"
	},
	"293": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#컨트롤-테이블-데이터-주소"
	},
	"294": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#영역-eeprom-ram"
	},
	"295": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#크기"
	},
	"296": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#접근권한"
	},
	"297": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#초기값"
	},
	"298": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 107 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 095 10 Drive Mode 드라이브 모드 설정 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 240 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#eeprom-영역"
	},
	"299": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 56 Sensed Current 모터가 소비하고 있는 전류량 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#ram-영역"
	},
	"300": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#컨트롤-테이블-설명"
	},
	"301": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#model-number-0"
	},
	"302": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#firmware-version-2"
	},
	"303": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 주의 슬레이브 모드시에는 슬레이브 모터의 아이디는 ID영역 26 이외의 영역을 지정하는것을 권장 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#id-3"
	},
	"304": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#baud-rate-4"
	},
	"305": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#return-delay-time-5"
	},
	"306": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit (6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#cwccw-angle-limit-6-8"
	},
	"307": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode (10)",
		"content": "다이나믹셀의 드라이브 모드를 설정합니다 Bit 명칭 내용 Bit Bit Master Slave Mode 0일 경우 마스터 모드 1일 경우 슬레이브 모드 Bit Normal Reverse Mode 0일 경우 일반 모드 1일 경우 리버스 모드 마스터 모드 듀얼 관절로 사용할 경우 마스터로 지정하기 위해 설정합니다 슬레이브 모드 듀얼 관절로 사용할 경우 슬레이브로 지정하기 위해 설정합니다 일반 모드 회전 방향을 그대로 사용할 경우 설정합니다 일반적인 위치값 데이터를 읽습니다 리버스 모드 회전 방향을 반대로 사용할 경우 설정합니다 반전된 위치값 데이터를 읽습니다 주의 리버스 모드는 실제 회전 방향을 반대로 바꾸는 것으로서 좌우 대칭적인 관절 배치의 로봇을 구성할 때 편리하게 사용할 수 있습니다 듀얼 관절 듀얼 관절은 2개의 모터를 동시에 제어하여 1개의 관절로 사용하는 방법입니다 듀얼 관절을 쓰기 위해서는 마스터 모드로 설정된 1개의 모터와 슬레이브로 설정된 1개의 모터가 필요합니다 그리고 동기화 케이블을 이용해서 이 2개의 모터를 연결시켜야 합니다 일반 모드용 동기화 케이블 마스터와 동일한 PWM 신호로 구동됩니다 리버스모드용 동기화 케이블 반전된PWM신호로 구동됩니다 주의 슬레이브는 마스터로부터 동기화 케이블을 통해 제어 명령을 직접 받아 동기화 되어 구동됩니다 슬레이브 모드 경우에도 각 통신 명령 패킷에 통신 반응은 하지만 모터 구동과 관련된 부분은 마스터와 연결된 동기화 케이블을 통해서만 동작합니다 주의 듀얼로 구동시 Slave의 위치정보는무시되며 Mster는 Mster의 위치값을 기반으로 두개의 모터에 동일한 PWM제어를 하게됩니다 Master와 Slave가 하드웨어적으로 연결되어있지않으면 로드차이에 의해 조금씩 다르게 구동됩니다 아래와 같이 프레임으로 연결하신후 듀얼모드를 사용해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#drive-mode-10"
	},
	"308": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#temperature-limit-11"
	},
	"309": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#minmax-voltage-limit-12-13"
	},
	"310": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#max-torque-14"
	},
	"311": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#status-return-level-16"
	},
	"312": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#alarm-led17-shutdown18"
	},
	"313": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#torque-enable-24"
	},
	"314": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#led-25"
	},
	"315": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#compliance-margin-26-27"
	},
	"316": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#compliance-slope-28-29"
	},
	"317": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 095 0xFFF 까지 사용 가능하며 단위는 06 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alram LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#goal-position-30"
	},
	"318": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#moving-speed-32"
	},
	"319": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#torque-limit-34"
	},
	"320": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "다이나믹셀의 현재 위치 값입니다 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 값의 범위는 095 0xFFF 이며 단위는 06 입니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 바퀴 모드 값의 범위는 65 535 0xFFFF 이며 단위는 06 입니다 바퀴 모드의 경우 현재 위치는 엔코더 Encoder 의 값을 출력하는 것이기 때문에 움직인 거리만 측정할 수 있습니다 바퀴가 움직이는 방향에 따라 1씩 증가하거나 감소 합니다 값이 0일때 감소하게 되면 65 535로 되고 값이 65 535일때 증가하게 되면 0이 됩니다 움직인 총 각도 현재 측정한 값 과거에 측정한 값 06 위 공식에 의해서 움직인 총 각도가 0보다 크면 CCW방향으로 회전한 것이고 0보다 작다면 CW방향으로 회전했다는 뜻입니다 예를 들어 값이 000에서 10 000으로 변했다면 10 000 000 06 300이고 CCW방향으로 총 300 를 움직인 것입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#present-position-36"
	},
	"321": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#present-speed-38"
	},
	"322": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 주의 보다 정확한 하중을 측정하려면 Sensed Current Address 56 57 의 값을 사용해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#present-load-40"
	},
	"323": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#present-voltage-42"
	},
	"324": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#present-temperature-43"
	},
	"325": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#registered-instruction-44"
	},
	"326": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#moving-46"
	},
	"327": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#lock-47"
	},
	"328": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#punch-48"
	},
	"329": {
		"product": "EX-106+",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Sensed Current (56)",
		"content": "현재 사용 중인 전류의 양입니다 이 값은 023범위를 사용하며 단위는 10mA입니다 512보다 작은 값은 CCW방향으로 모터가 출력을 내며 전류를 사용한다는 의미입니다 512보다 큰 값은 CW방향으로 모터가 출력을 내며 전류를 사용한다는 의미입니다 512는 0mA로써 모터 출력이 없다는 뜻입니다 예를 들어 값이 612인 경우 CW방향으로 모터가 출력을 내며 1000mA 612 512 100 100x10mA 000mA 를 소모한다는 뜻입니다 값이 312인 경우는 CW방향으로 모터가 출력을 내며 2000mA 512 312 200 200x10mA 000mA 를 소모한다는 뜻입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#sensed-current-56"
	},
	"330": {
		"product": "EX-106+",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#조립-예시"
	},
	"331": {
		"product": "EX-106+",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#유지보수"
	},
	"332": {
		"product": "EX-106+",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#혼과-베어링-교체"
	},
	"333": {
		"product": "EX-106+",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#혼과-베어링-교체"
	},
	"334": {
		"product": "EX-106+",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#혼과-베어링-교체"
	},
	"335": {
		"product": "EX-106+",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#참고자료"
	},
	"336": {
		"product": "EX-106+",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#커넥터-정보"
	},
	"337": {
		"product": "EX-106+",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#도면"
	},
	"338": {
		"product": "EX-106+",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#통신-회로"
	},
	"339": {
		"product": "EX-106+",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#ttl-통신"
	},
	"340": {
		"product": "EX-106+",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/ex/ex-106+/#rs485-통신"
	},
	"341": {
		"product": "다이나믹셀",
		"header1": "AX 시리즈",
		"header2": "",
		"header3": "",
		"content": "AX 12W AX 12 12 12A AX 18F 18A ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#ax-시리즈"
	},
	"342": {
		"product": "다이나믹셀",
		"header1": "EX 시리즈",
		"header2": "",
		"header3": "",
		"content": "EX 106 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#ex-시리즈"
	},
	"343": {
		"product": "다이나믹셀",
		"header1": "DX 시리즈",
		"header2": "",
		"header3": "",
		"content": "DX 113 DX 116 DX 117 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#dx-시리즈"
	},
	"344": {
		"product": "다이나믹셀",
		"header1": "RX 시리즈",
		"header2": "",
		"header3": "",
		"content": "RX 10 RX 24F RX 28 RX 64 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#rx-시리즈"
	},
	"345": {
		"product": "다이나믹셀",
		"header1": "MX 시리즈",
		"header2": "",
		"header3": "",
		"content": "MX 12W MX 28T AT AR MX 64T AT AR MX 106T Protocol Protocol Protocol Protocol Protocol Protocol ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#mx-시리즈"
	},
	"346": {
		"product": "다이나믹셀",
		"header1": "시리즈",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#x-시리즈"
	},
	"347": {
		"product": "다이나믹셀",
		"header1": "시리즈",
		"header2": "XL 시리즈",
		"header3": "",
		"content": "XL320 XL430 W250 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#xl-시리즈"
	},
	"348": {
		"product": "다이나믹셀",
		"header1": "시리즈",
		"header2": "XM 시리즈",
		"header3": "",
		"content": "XM430 XM540 XM430 W210 XM430 W350 XM540 W150 XM540 W270 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#xm-시리즈"
	},
	"349": {
		"product": "다이나믹셀",
		"header1": "시리즈",
		"header2": "XH 시리즈",
		"header3": "",
		"content": "XH430 XH430 W210 XH430 W350 XH430 V210 XH430 V350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#xh-시리즈"
	},
	"350": {
		"product": "다이나믹셀",
		"header1": "PRO 시리즈",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#pro-시리즈"
	},
	"351": {
		"product": "다이나믹셀",
		"header1": "PRO 시리즈",
		"header2": "PRO 시리즈",
		"header3": "",
		"content": "L54 50 S500 L54 50 S290 L54 30 S500 L54 30 S400 L42 10 S300 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#pro-l-시리즈"
	},
	"352": {
		"product": "다이나믹셀",
		"header1": "PRO 시리즈",
		"header2": "PRO 시리즈",
		"header3": "",
		"content": "M54 60 S250 M54 40 S250 M42 10 S260 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#pro-m-시리즈"
	},
	"353": {
		"product": "다이나믹셀",
		"header1": "PRO 시리즈",
		"header2": "PRO 시리즈",
		"header3": "",
		"content": "H54 200 S500 H54 100 S500 H42 20 S300 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/#pro-h-시리즈"
	},
	"354": {
		"product": "MX-106",
		"header1": "주요 사양 요약 ",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless Maxon 통신속도 000 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 20 arcmin 33 동작 모드 관절 모드 360 바퀴 모드 무한 회전 무게 165 크기 40 65 46 mm 기어비 225 정지 토크 Nm 11 Nm 12 10 Nm 14 무부하 속도 41 rev min 11 45 rev min 12 55 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 254 ID 253 피드백 Position Temperature Load Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 100 mA 알루미늄 금속케이스 제품 MX 28AR AT MX 64AR AT MX 106R 에 한정합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#주요-사양-요약"
	},
	"355": {
		"product": "MX-106",
		"header1": "주요 사양 요약 ",
		"header2": "성능 그래프",
		"header3": "",
		"content": "Stall torque Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Perforamnce Graph의 Max torque는 Stall torque보다 적게 측정됩니다 주의 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기 나 SMPS2Dynamixel 통한 전원공급을 권장 드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#성능-그래프"
	},
	"356": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#컨트롤-테이블"
	},
	"357": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#컨트롤-테이블-데이터-주소"
	},
	"358": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#영역-eeprom-ram"
	},
	"359": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#크기"
	},
	"360": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#접근권한"
	},
	"361": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#초기값"
	},
	"362": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Model Number 모델 번호의 바이트 320 Firmware Version 펌웨어 버전 정보 ID 통신 ID Baud Rate 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 095 10 Drive Mode 드라이브 모드 설정 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 160 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 20 Multi Turn Offset 다중 회전 오프셋 바이트 22 Resolution Divider 해상도 디바이더 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#eeprom-영역"
	},
	"363": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 24 Torque Enable 토크 Off 25 LED LED Off 26 Gain Derivative Gain 27 Gain Integral Gain 28 Gain Proportional Gain 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 50 Realtime Tick Realtime Tick 값의 바이트 68 Current 전류소비량의 바이트 70 Torque Ctrl Mode Enable 토크 제어 모드 Off 71 Goal Torque 목표 토크 값의 바이트 73 Goal Acceleration 목표 가속도값 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#ram-영역"
	},
	"364": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#컨트롤-테이블-설명"
	},
	"365": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#model-number-0"
	},
	"366": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#firmware-version-2"
	},
	"367": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#id-3"
	},
	"368": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 Value 값이 250 이상인 경우 Value Baud Rate 오차 250 250 000 000 251 500 000 000 252 000 000 000 주의 UART는 Baudrate오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#baud-rate-4"
	},
	"369": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#return-delay-time-5"
	},
	"370": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 3가지 동작 모드를 설정할 수 있습니다 동작모드 CW CCW 바퀴 모드 CW와 CCW가 0일때 관절 모드 CW와 CCW가 0이 아닐때 다중회전 모드 CW와 CCW가 095일때 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 다중 회전 모드는 관절모드와 같이 특정 각도로 제어가 가능하며 28 672 28 672 까지 제어가 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#cwccw-angle-limit6-8"
	},
	"371": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode (10)",
		"content": "Bit 명칭 내용 Bit Bit Master Slave Mode 0일 경우 마스터 모드 1일 경우 슬레이브 모드 Bit Normal Reverse Mode 0일 경우 일반 모드 1일 경우 리버스 모드 마스터 모드 듀얼 관절로 사용할 경우 마스터로 지정하기 위해 설정합니다 슬레이브 모드 듀얼 관절로 사용할 경우 슬레이브로 지정하기 위해 설정합니다 일반 모드 회전 방향을 그대로 사용할 경우 설정합니다 일반적인 위치값 데이터를 읽습니다 리버스 모드 회전 방향을 반대로 사용할 경우 설정합니다 반전된 위치값 데이터를 읽습니다 주의 리버스 모드는 실제 회전 방향을 거꾸로 바꾸는 것으로서 좌우 대칭적인 관절 배치의 로봇을 구성할 때 편리하게 사용할 수 있습니다 듀얼 관절 듀얼 관절은 2개의 모터를 동시에 제어하여 1개의 관절로 사용하는 방법입니다 듀얼 관절을 쓰기 위해서는 마스터 모드로 설정된 1개의 모터와 슬레이브로 설정된 1개의 모터가 필요합니다 그리고 동기화 케이블을 이용해서 이 2개의 모터를 연결시켜야 합니다 일반 모드용 동기화 케이블 마스터와 동일한 PWM 신호로 구동됩니다 리버스모드용 동기화 케이블 반전된PWM신호로 구동됩니다 주의 슬레이브는 마스터로부터 동기화 케이블을 통해 제어 명령을 직접 받아 동기화 되어 구동됩니다 슬레이브 모드 경우에도 각 통신 명령 패킷에 통신 반응은 하지만 모터 구동과 관련된 부분은 마스터와 연결된 동기화 케이블을 통해서만 동작합니다 주의 듀얼로 구동시 Slave의 위치정보는무시되며 Mster는 Mster의 위치값을 기반으로 두개의 모터에 동일한 PWM제어를 하게됩니다 Master와 Slave가 하드웨어적으로 연결되어있지않으면 로드차이에 의해 조금씩 다르게 구동됩니다 아래와 같이 프레임으로 연결하신후 듀얼모드를 사용해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#drive-mode-10"
	},
	"372": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#temperature-limit-11"
	},
	"373": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 160 16 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#minmax-voltage-limit-12-13"
	},
	"374": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#max-torque-14"
	},
	"375": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#status-return-level-16"
	},
	"376": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#alarm-led17-shutdown18"
	},
	"377": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Multi Turn Offset (20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 36 에 더해지게 됩니다 Present Position 실제 위치 Multi Turn offset 이 됩니다 초기값은 값의 범위는 24 576 24 576 까지 입니다 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024를 적용하면 모터는 회전 하지 않지만 Present Position의 값은 072가 됩니다 참고 다중 회전 모드 Multi turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#multi-turn-offset-20"
	},
	"378": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Resolution Divider (22)",
		"content": "모터의 해상도를 변경 할 수 있습니다 초기값은 1이며 4까지 사용 가능합니다 모터의 해상도를 낮추고 CW CCW 방향으로 회전 횟수를 늘릴 수 있습니다 각 방향으로 최대 28바퀴까지 회전 가능 합니다 Present Position 실제 위치 Resolution Divider 예를 들어 실제 위치 값이 048 일 때 Resolution Divider의 값이 2이면 048 024 즉 Present Position의 값은 024가 됩니다 이렇게 Resolution Divider의 값을 2로 변경하면 모터의 한 바퀴의 해상도는 048이 됩니다 Multi Turn offset과 Resolution Divider를 같이 사용한다면 Present Position은 아래와 같은 식을 통해 구할 수 있습니다 Present Position 실제 위치 Resolution Divider Multi Turn offset 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024 Resolution Divider 를 적용하면 모터는 회전하지 않지만 Present Position의 값은 535가 됩니다 참고 다중 회전 모드 Multi Turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#resolution-divider-22"
	},
	"379": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#torque-enable-24"
	},
	"380": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#led-25"
	},
	"381": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PID Gains (26, 27, 28)",
		"content": "MX 시리즈는 대표적 제어기법인 PID Controller를 이용합니다 Gain 은 Propotional Gain값 입니다 Gain 은 Integral Gain값 입니다 Gain 은 Derivative Gain값 입니다 값의 범위는 254 입니다 sub sub Gain sub sub Gain 000 048 sub sub Gain 000 relationship between Compliance Slop PID Slope Gain 128 16 64 32 32 64 16 128 gain larger back lash weaker amount output near goal position At some extent like combined concept margine slope does exactly match previous concept compliance So obvious see difference terms motion Explanation PID required brief explanation general PID refer website link below http en wikipedia org wiki PID controller ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#pid-gains-26-27-28"
	},
	"382": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 목표지점의 위치 값입니다 095 0xFFF 까지 사용 가능하며 단위는 088 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alram LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 장치를 정면에서 보았을 때의 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672로 늘어나게 되며 0에서부터 CW CCW 각 방향으로 7바퀴씩 회전 할 수 있습니다 만약 Resolution Divider와 같이 사용한다면 회전 횟수를 더 증가 시킬 수 있습니다 참고 휠 모드로 동작시에는 Goal Position값이 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#goal-position-30"
	},
	"383": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "관절 모드 다중 회전 모드 Goal Position으로 이동하는 속도입니다 023 0x3FF 까지 사용되며 단위는 약 114 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 속도를 사용한다는 의미입니다 023의 경우 약 117 07 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 34 33 rev min 입니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 114 rev min 입니다 023 범위의 값을 사용하면 CCW 방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW 방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 주의 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#moving-speed-32"
	},
	"384": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#torque-limit-34"
	},
	"385": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 095 0xFFF 이며 단위는 088 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672 이며 단위는 Resolution Divider 값에 따라 088 Resolution Divider 도로 변화 합니다 참고 다중 회전 모드 Multi turn Mode 일 때 실제 위치와 Present Position의 관계는 Resolution Divider와 Multi Turn offset의 값에 따라 달라 질 수 있습니다 더 자세한 내용은 Multi Turn offset과 Resolution Divider를 참고 하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#present-position-36"
	},
	"386": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 2047 0X7FF 까지 사용됩니다 1023 범위의 값이면 CCW방향으로 회전한다는 의미입니다 1024 2047 범위의 값이면 CW방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 1024는 같습니다 이 값의 단위는 약 114 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 34 33 rev min 으로 이동 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#present-speed-38"
	},
	"387": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#present-load-40"
	},
	"388": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#present-voltage-42"
	},
	"389": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#present-temperature-43"
	},
	"390": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#registered-instruction-44"
	},
	"391": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#moving-46"
	},
	"392": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#lock-47"
	},
	"393": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#punch-48"
	},
	"394": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime-Tick (50)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 주의 펌웨어 버전 40 이상부터 사용 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#realtime-tick-50"
	},
	"395": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current (68)",
		"content": "전류가 소모되지 않고 있을때의 값은 048 0x800 입니다 만약 전류가 양의 방향으로 흐르면 048 0x800 보다 큰값이 나옵니다 만약 전류가 음의 방향으로 흐르면 048 0x800 보다 작은 값이 나옵니다 전류값을 계산하는 방법은 다음과 같습니다 mA CURRENT 048 단위 예를 들어 68번지의 값이 148 이면 양의 방향으로 450 mA 가 흐르고 있다는 뜻입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#current-68"
	},
	"396": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Control Mode Enable (70)",
		"content": "값 의미 토크 모드를 OFF 시킵니다 관절 모드 또는 휠모드가 실행됩니다 토크 모드를 ON 시킵니다 위치 제어 및 속도 제어는 되지 않고 오직 토크만 제어 됩니다 Torque Control Mode Enable이 1이 되면 장치는 다음과 같은 행동을 합니다 장치는 위치 및 속도 제어를 하지 않습니다 장치는 Goal Torque 에 적힌 토크로 제어합니다 Goal position 및Goal speed 에 값을 적더라도 반응하지 않습니다 위치 및 속도 제어가 되지 않으므로 마치 바퀴모드처럼 행동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#torque-control-mode-enable-70"
	},
	"397": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque (71)",
		"content": "목표하는 토크의 값입니다 047 0x7FF 까지 사용되며 단위는 mA 입니다 토크와 전류값은 정 비례합니다 023 범위의 값을 사용하면 CCW 방향으로 토크가 가해지며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW 방향으로 토크가 가해지며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 Goal Torque 는Torque Limit 34 35 보다 커질 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#goal-torque-71"
	},
	"398": {
		"product": "MX-106",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration (73)",
		"content": "목표 가속도 값입니다 254 0xFE 까지 사용되며 단위는 약 583 sec 입니다 0으로 설정하면 가속도 제어를 하지 않고 모터의 최대 가속도로 움직인다는 의미입니다 목표속도가 0일 경우에도 가속도 제어를 하지 않고 모터의 최대 가속도로 움직입니다 254를 설정할 경우 180 sec 이 됩니다 예를 들어 장치의 속도가 현재 0이고 Goal Acceleration이 10인 경우 1초 뒤의 장치의 속도는 14 rev min 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#goal-acceleration-73"
	},
	"399": {
		"product": "MX-106",
		"header1": "조립 방법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#조립-빙밥"
	},
	"400": {
		"product": "MX-106",
		"header1": "조립 방법",
		"header2": "옵션 프레임",
		"header3": "",
		"content": "FR05 F101 FR08 X101 FR05 S101 FR08 B101 FR08 H101 FR08 H110 FR08 D101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#조립-빙밥"
	},
	"401": {
		"product": "MX-106",
		"header1": "조립 방법",
		"header2": "혼",
		"header3": "",
		"content": "HN05 N102 HN05 I101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#조립-빙밥"
	},
	"402": {
		"product": "MX-106",
		"header1": "조립 방법",
		"header2": "기구결합",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#조립-빙밥"
	},
	"403": {
		"product": "MX-106",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#유지보수"
	},
	"404": {
		"product": "MX-106",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#혼과-베어링-교체"
	},
	"405": {
		"product": "MX-106",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#혼과-베어링-교체"
	},
	"406": {
		"product": "MX-106",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#혼과-베어링-교체"
	},
	"407": {
		"product": "MX-106",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#참고자료"
	},
	"408": {
		"product": "MX-106",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 Dual Joint 핀 번호 GND VDD DATA GND VDD DATA DATA PWM1 PWM2 ENABLE 다이어그램 하우징 MOLEX 50 37 5033 MOLEX 50 37 5043 MOLEX 51021 0300 PCB 헤더 MOLEX 22 03 5035 MOLEX 22 03 5045 MOLEX 53398 0371 Crimp 터미널 MOLEX 80 70 1039 MOLEX 80 70 1039 MOLEX 50058 8000 Wire Gauge 21 AWG 21 AWG 26 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#커넥터-정보"
	},
	"409": {
		"product": "MX-106",
		"header1": "참고자료",
		"header2": "Videos",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#videos"
	},
	"410": {
		"product": "MX-106",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 MX 106T DWG 다운로드 MX 106T PDF 다운로드 MX 106T STEP 다운로드 MX 106T IGES 다운로드 MX 106R DWG 다운로드 MX 106R PDF 다운로드 MX 106R STEP 다운로드 MX 106R IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106/#도면"
	},
	"411": {
		"product": "MX-106(2.0)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless Maxon 통신속도 000 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 20 arcmin 33 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 165 크기 40 65 46 mm 기어비 225 정지 토크 Nm 11 Nm 12 10 Nm 14 무부하 속도 41 rev min 11 45 rev min 12 55 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 100 mA 알루미늄 금속케이스 제품 MX 28AR AT MX 64AR AT MX 106R 에 한정합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#주요-사양"
	},
	"412": {
		"product": "MX-106(2.0)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#성능-그래프"
	},
	"413": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 MX Firmware는 MX series의 Control table과 주소가 다릅니다 사용 전에 Control table 주소를 필히 확인해 주세요 MX Firmware는 Dynamixel X의 기능을 상속받습니다 따라서 Protocol 0과 및 다양한 Operating Mode와 Secondary ID Drive Mode Bus Watchdog 등을 지원합니다 자세한 사항은 Control table을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#컨트롤-테이블"
	},
	"414": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#컨트롤-테이블-데이터-주소"
	},
	"415": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#영역-eeprom-ram"
	},
	"416": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#크기"
	},
	"417": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#접근권한"
	},
	"418": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 주의 MX Firmware는 MX series의 Control table과 주소가 다릅니다 사용 전에 Control table 주소를 필히 확인해 주세요 MX Firmware는 Dynamixel X의 기능을 상속받습니다 따라서 Protocol 0과 및 다양한 Operating Mode와 Secondary ID Drive Mode Bus Watchdog 등을 지원합니다 자세한 사항은 Control table을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#초기값"
	},
	"419": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Model Number 모델 번호 321 Model Information 모델 정보 Firmware Version 펌웨어 버전 정보 ID 통신 ID Baud Rate 통신 속도 Return Delay Time 응답 지연 시간 250 10 Drive Mode 드라이브 모드 11 Operating Mode 동작 모드 12 Secondary Shadow ID 보조 ID 255 13 Protocol Version 프로토콜 버전 20 Homing Offset 점 위치 조정값 24 Moving Threshold 움직임 유무를 결정하는 속도 기준값 10 31 Temperature Limit 내부 한계 온도 80 32 Max Voltage Limit 최고 한계 전압 160 34 Min Voltage Limit 최저 한계 전압 95 36 PWM Limit PWM 한계값 885 38 Current Limit 전류 한계값 2047 40 Acceleration Limit 가속도 한계값 32767 44 Velocity Limit 속도 한계값 210 48 Max Position Limit 최대 위치 제한값 095 52 Min Position Limit 최소 위치 제한값 63 Shutdown 셧다운 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#eeprom-영역"
	},
	"420": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 64 Torque Enable 토크 Off 65 LED LED Off 68 Status Return Level 응답레벨 69 Registered Instruction Instruction의 등록 여부 70 Hardware Error Status 하드웨어 에러 상태 76 Velocity Gain 속도 Gain 1920 78 Velocity Gain 속도 Gain 100 80 Position Gain 위치 Gain 82 Position Gain 위치 Gain 84 Position Gain 위치 Gain 850 88 Feedforward 2nd Gain 피드포워드 2nd Gain 90 Feedforward 1st Gain 피드포워드 1st Gain 98 BUS Watchdog 통신 버스 워치독 100 Goal PWM 목표 PWM 값 102 Goal Current 목표 전류 값 104 Goal Velocity 목표 속도 값 108 Profile Acceleration 프로파일 가속도 값 112 Profile Velocity 프로파일 속도 값 116 Goal Position 목표 위치 값 120 Realtime Tick 실시간 Tick 122 Moving 움직임 유무 123 Moving Status 움직임의 상태 124 Present PWM 현재 PWM 값 126 Present Current 현재 전류 값 128 Present Velocity 현재 속도 값 132 Present Position 현재 위치 값 136 Velocity Trajectory 속도 궤적 값 140 Position Trajectory 위치 궤적 값 144 Present Input Voltage 현재 전압 146 Present Temperature 현재 온도 168 Indirect Address 간접 주소 값 224 170 Indirect Address 간접 주소 값 225 172 Indirect Address 간접 주소 값 226 218 Indirect Address 26 간접 주소 값 26 249 220 Indirect Address 27 간접 주소 값 27 250 222 Indirect Address 28 간접 주소 값 28 251 224 Indirect Data 간접 주소 데이터 225 Indirect Data 간접 주소 데이터 226 Indirect Data 간접 주소 데이터 249 Indirect Data 26 간접 주소 데이터 26 250 Indirect Data 27 간접 주소 데이터 27 251 Indirect Data 28 간접 주소 데이터 28 578 Indirect Address 29 간접 주소 값 29 634 580 Indirect Address 30 간접 주소 값 30 635 582 Indirect Address 31 간접 주소 값 31 636 628 Indirect Address 54 간접 주소 값 54 659 630 Indirect Address 55 간접 주소 값 55 660 632 Indirect Address 56 간접 주소 값 56 661 634 Indirect Data 29 간접 주소 데이터 29 635 Indirect Data 30 간접 주소 데이터 30 636 Indirect Data 31 간접 주소 데이터 31 659 Indirect Data 54 Indirect Data 54 660 Indirect Data 55 Indirect Data 55 661 Indirect Data 56 Indirect Data 56 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#ram-영역"
	},
	"421": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#컨트롤-테이블-설명"
	},
	"422": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#model-number0"
	},
	"423": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#firmware-version6"
	},
	"424": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#id7"
	},
	"425": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#baud-rate8"
	},
	"426": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#return-delay-time9"
	},
	"427": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "장치의 드라이브 모드를 설정합니다 펌웨어 38 이상부터 지원합니다 Bit 항목 설명 Bit 사용하지 않음 항상 Bit 마스터 슬레이브 설정 듀얼 조인트 마스터 모드 마스터 장치로 동작합니다 슬레이브 모드 슬레이브 장치로 동작합니다 Bit 0x01 회전 방향 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 참고 회전방향의 역방향 모드 를 설정하면 장치의 회전 방향이 변경됩니다 따라서 Position Velocity Current PWM의 방향이 모두 변경됩니다 좌우 대칭적인 구조의 관절이나 바퀴 구동 시스템을 구성할 때 편리하게 사용할 수 있습니다 마스터 슬레이브 설정 듀얼 조인트 은 2개의 장치를 1개의 장치처럼 동시에 제어하기 위한 방법입니다 마스터 장치과 슬레이브 장치는 동기화 케이블로 연결되어야 합니다 슬레이브 장치는 동기화 케이블을 통해 전달된 Master 장치의 PWM 신호에 의해서 직접 제어됩니다 따라서 슬레이브 장치의 Goal Position Goal Velocity Goal Current Goal PWM은 무시됩니다 동기화 케이블 설명 일반 모드용 동기화 케이블 Slave 장치는 Master 장치의 PWM 신호에 의해서 제어됩니다 즉 마스터 슬레이브 장치의 회전방향은 동일합니다 리버스 모드용 동기화 케이블 Slave 장치는 Master 장치의 반전된 PWM 신호에 의해서 제어됩니다 즉 마스터 슬레이브 장치의 회전방향은 서로 반대방향이 됩니다 주의 Master와 Slave가 하드웨어적으로 연결되어있지않으면 로드차이에 의해 조금씩 다르게 구동됩니다 아래와 같이 프레임으로 연결하신후 듀얼모드를 사용해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#drive-mode10"
	},
	"428": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#operating-mode11"
	},
	"429": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#secondaryshadow-id-12"
	},
	"430": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#protocol-version13"
	},
	"431": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#homing-offset20"
	},
	"432": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#moving-threshold24"
	},
	"433": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#temperature-limit31"
	},
	"434": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#minmax-voltage-limit32-34"
	},
	"435": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#pwm-limit36"
	},
	"436": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 구분 상세 비고 단위 약 36 mA 전류 관련 Data의 단위는 모두 동일 범위 047 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#current-limit38"
	},
	"437": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "Profile Acceleration 108 의 한계 값입니다 Profile Acceleration 108 에는 Acceleration Limit 40 보다 큰 값을 쓸 수 없습니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 자세한 설명은 Profile Velocity 112 을 참고하세요 단위 값의 범위 214 577 rev min 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#acceleration-limit40"
	},
	"438": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#velocity-limit44"
	},
	"439": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#minmax-position-limit48-52"
	},
	"440": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#shutdown63"
	},
	"441": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#torque-enable64"
	},
	"442": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#led65"
	},
	"443": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#status-return-level68"
	},
	"444": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#registered-instruction69"
	},
	"445": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#hardware-error-status70"
	},
	"446": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#velocity-pi-gain76-78"
	},
	"447": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#velocity-pi-gain76-78"
	},
	"448": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "BUS Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#bus-watchdog98"
	},
	"449": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#goal-pwm100"
	},
	"450": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 구분 상세 비고 단위 약 36 mA 전류 관련 Data의 단위는 모두 동일 범위 Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#goal-current102"
	},
	"451": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#goal-velocity104"
	},
	"452": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#profile-acceleration108"
	},
	"453": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#profile-velocity112"
	},
	"454": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#goal-position116"
	},
	"455": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#realtime-tick120"
	},
	"456": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#moving122"
	},
	"457": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#moving-status123"
	},
	"458": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#present-pwm124"
	},
	"459": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#present-current126"
	},
	"460": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#present-velocity128"
	},
	"461": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#present-position132"
	},
	"462": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#velocity-trajectory136"
	},
	"463": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#position-trajectory140"
	},
	"464": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#present-input-voltage144"
	},
	"465": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#present-temperature146"
	},
	"466": {
		"product": "MX-106(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#indirect-address"
	},
	"467": {
		"product": "MX-106(2.0)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#조립-예시"
	},
	"468": {
		"product": "MX-106(2.0)",
		"header1": "조립 예시",
		"header2": "옵션 프레임",
		"header3": "",
		"content": "FR05 F101 FR08 X101 FR05 S101 FR08 B101 FR08 H101 FR08 H110 FR08 D101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#조립-예시"
	},
	"469": {
		"product": "MX-106(2.0)",
		"header1": "조립 예시",
		"header2": "혼",
		"header3": "",
		"content": "HN05 N102 HN05 I101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#조립-예시"
	},
	"470": {
		"product": "MX-106(2.0)",
		"header1": "조립 예시",
		"header2": "기구 결합",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#조립-예시"
	},
	"471": {
		"product": "MX-106(2.0)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#유지보수"
	},
	"472": {
		"product": "MX-106(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#혼과-베어링-교체"
	},
	"473": {
		"product": "MX-106(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#혼과-베어링-교체"
	},
	"474": {
		"product": "MX-106(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#혼과-베어링-교체"
	},
	"475": {
		"product": "MX-106(2.0)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#참고자료"
	},
	"476": {
		"product": "MX-106(2.0)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 Dual Joint 핀 번호 GND VDD DATA GND VDD DATA DATA PWM1 PWM2 ENABLE 다이어그램 하우징 MOLEX 50 37 5033 MOLEX 50 37 5043 MOLEX 51021 0300 PCB 헤더 MOLEX 22 03 5035 MOLEX 22 03 5045 MOLEX 53398 0371 Crimp 터미널 MOLEX 80 70 1039 MOLEX 80 70 1039 MOLEX 50058 8000 Wire Gauge 21 AWG 21 AWG 26 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#커넥터-정보"
	},
	"477": {
		"product": "MX-106(2.0)",
		"header1": "참고자료",
		"header2": "Videos",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#videos"
	},
	"478": {
		"product": "MX-106(2.0)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 MX 106T DWG 다운로드 MX 106T PDF 다운로드 MX 106T STEP 다운로드 MX 106T IGES 다운로드 MX 106R DWG 다운로드 MX 106R PDF 다운로드 MX 106R STEP 다운로드 MX 106R IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-106-2/#도면"
	},
	"479": {
		"product": "MX-12W",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72MHZ 32BIT 위치 센서 Contactless absolute encoder 12BIT 360 Maker ams www ams com Part No AS5045 모터 Cored 통신속도 000 bps Mbps 제어 알고리즘 PID CONTROL 최소 제어각 088 동작 모드 관절 모드 360 바퀴 모드 무한 회전 무게 54 크기 32 50 40 mm 기어비 32 무부하 속도 470 rev min 12V 동작 온도 70 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 TTL Level Multidrop Bus Daisy Chain Type Connector ID 254 ID 253 피드백 Position Temperature Load Input Voltage 등 재질 Engineering Plastic 대기 전류 60 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 70 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#주요-사양"
	},
	"480": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#컨트롤-테이블"
	},
	"481": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#컨트롤-테이블-데이터-주소"
	},
	"482": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#영역-eeprom-ram"
	},
	"483": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#크기"
	},
	"484": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#접근권한"
	},
	"485": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#초기값"
	},
	"486": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Model Number 모델 번호의 바이트 104 Firmware Version 펌웨어 버전 정보 ID 통신 ID Baud Rate 통신 속도 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 095 11 Temperature Limit 내부 한계 온도 70 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 160 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 20 Multi Turn Offset 다중 회전 오프셋 바이트 22 Resolution Divider 해상도 디바이더 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#eeprom-영역"
	},
	"487": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 24 Torque Enable 토크 켜기 25 LED LED Off 26 Gain Derivative Gain 27 Gain Integral Gain 28 Gain Proportional Gain 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 50 Realtime Tick 실시간 Tick 73 Goal Acceleration 목표 가속도값 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#ram-영역"
	},
	"488": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#컨트롤-테이블-설명"
	},
	"489": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#model-number-0"
	},
	"490": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#firmware-version-2"
	},
	"491": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#id-3"
	},
	"492": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 Value 값이 250 이상인 경우 Value Baud Rate 오차 250 250 000 000 251 500 000 000 252 000 000 000 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#baud-rate-4"
	},
	"493": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#return-delay-time-5"
	},
	"494": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 3가지 동작 모드를 설정할 수 있습니다 동작모드 CW CCW 바퀴 모드 CW와 CCW가 0일때 관절 모드 CW와 CCW가 0이 아닐때 다중회전 모드 CW와 CCW가 095일때 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 다중 회전 모드는 관절모드와 같이 특정 각도로 제어가 가능하며 28 672 28 672 까지 제어가 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#cwccw-angle-limit6-8"
	},
	"495": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#temperature-limit-11"
	},
	"496": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 160 16 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#minmax-voltage-limit-12-13"
	},
	"497": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#max-torque-14"
	},
	"498": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#status-return-level-16"
	},
	"499": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#alarm-led17-shutdown18"
	},
	"500": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Multi Turn Offset (20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 36 에 더해지게 됩니다 Present Position 실제 위치 Multi Turn offset 이 됩니다 초기값은 값의 범위는 24 576 24 576 까지 입니다 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024를 적용하면 모터는 회전 하지 않지만 Present Position의 값은 072가 됩니다 참고 다중 회전 모드 Multi turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#multi-turn-offset-20"
	},
	"501": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Resolution Divider (22)",
		"content": "모터의 해상도를 변경 할 수 있습니다 초기값은 1이며 4까지 사용 가능합니다 모터의 해상도를 낮추고 CW CCW 방향으로 회전 횟수를 늘릴 수 있습니다 각 방향으로 최대 28바퀴까지 회전 가능 합니다 Present Position 실제 위치 Resolution Divider 예를 들어 실제 위치 값이 048 일 때 Resolution Divider의 값이 2이면 048 024 즉 Present Position의 값은 024가 됩니다 이렇게 Resolution Divider의 값을 2로 변경하면 모터의 한 바퀴의 해상도는 048이 됩니다 Multi Turn offset과 Resolution Divider를 같이 사용한다면 Present Position은 아래와 같은 식을 통해 구할 수 있습니다 Present Position 실제 위치 Resolution Divider Multi Turn offset 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024 Resolution Divider 를 적용하면 모터는 회전하지 않지만 Present Position의 값은 535가 됩니다 참고 다중 회전 모드 Multi Turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#resolution-divider-22"
	},
	"502": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#torque-enable-24"
	},
	"503": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#led-25"
	},
	"504": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PID Gains (26, 27, 28)",
		"content": "MX 시리즈는 대표적 제어기법인 PID Controller를 이용합니다 Gain 은 Propotional Gain값 입니다 Gain 은 Integral Gain값 입니다 Gain 은 Derivative Gain값 입니다 값의 범위는 254 입니다 sub sub Gain sub sub Gain 000 048 sub sub Gain 000 relationship between Compliance Slop PID Slope Gain 128 16 64 32 32 64 16 128 gain larger back lash weaker amount output near goal position At some extent like combined concept margine slope does exactly match previous concept compliance So obvious see difference terms motion Explanation PID required brief explanation general PID refer website link below http en wikipedia org wiki PID controller ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#pid-gains-26-27-28"
	},
	"505": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 목표지점의 위치 값입니다 095 0xFFF 까지 사용 가능하며 단위는 088 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alram LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 장치를 정면에서 보았을 때의 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672로 늘어나게 되며 0에서부터 CW CCW 각 방향으로 7바퀴씩 회전 할 수 있습니다 만약 Resolution Divider와 같이 사용한다면 회전 횟수를 더 증가 시킬 수 있습니다 참고 휠 모드로 동작시에는 Goal Position값이 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#goal-position-30"
	},
	"506": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "관절 모드 다중 회전 모드 Goal Position으로 이동하는 속도입니다 023 0x3FF 까지 사용되며 단위는 약 916 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 속도를 사용한다는 의미입니다 023의 경우 약 937 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 274 rev min 입니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 916 rev min 입니다 023 범위의 값을 사용하면 CCW 방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW 방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 주의 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#moving-speed-32"
	},
	"507": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#torque-limit-34"
	},
	"508": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 095 0xFFF 이며 단위는 088 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672 이며 단위는 Resolution Divider 값에 따라 088 Resolution Divider 도로 변화 합니다 참고 다중 회전 모드 Multi turn Mode 일 때 실제 위치와 Present Position의 관계는 Resolution Divider와 Multi Turn offset의 값에 따라 달라 질 수 있습니다 더 자세한 내용은 Multi Turn offset과 Resolution Divider를 참고 하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#present-position-36"
	},
	"509": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 약 916 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 274 rev min 으로 이동 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#present-speed-38"
	},
	"510": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#present-load-40"
	},
	"511": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#present-voltage-42"
	},
	"512": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#present-temperature-43"
	},
	"513": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#registered-instruction-44"
	},
	"514": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#moving-46"
	},
	"515": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#lock-47"
	},
	"516": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#punch-48"
	},
	"517": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime-Tick (50)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 주의 펌웨어 버전 41 이상부터 사용 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#realtime-tick-50"
	},
	"518": {
		"product": "MX-12W",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration (73)",
		"content": "목표 가속도 값입니다 254 0xFE 까지 사용되며 단위는 약 583 sec 입니다 0으로 설정하면 가속도 제어를 하지 않고 모터의 최대 가속도로 움직인다는 의미입니다 목표속도가 0일 경우에도 가속도 제어를 하지 않고 모터의 최대 가속도로 움직입니다 254를 설정할 경우 180 sec 이 됩니다 예를 들어 장치의 속도가 현재 0이고 Goal Acceleration이 10인 경우 1초 뒤의 장치의 속도는 14 rev min 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#goal-acceleration-73"
	},
	"519": {
		"product": "MX-12W",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#조립-예시"
	},
	"520": {
		"product": "MX-12W",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#유지보수"
	},
	"521": {
		"product": "MX-12W",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#혼과-베어링-교체"
	},
	"522": {
		"product": "MX-12W",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#혼과-베어링-교체"
	},
	"523": {
		"product": "MX-12W",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#혼과-베어링-교체"
	},
	"524": {
		"product": "MX-12W",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#참고자료"
	},
	"525": {
		"product": "MX-12W",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀 번호 GND VDD DATA 다이어그램 하우징 MOLEX 50 37 5033 PCB 헤더 MOLEX 22 03 5035 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#커넥터-정보"
	},
	"526": {
		"product": "MX-12W",
		"header1": "참고자료",
		"header2": "Videos",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#videos"
	},
	"527": {
		"product": "MX-12W",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-12w/#도면"
	},
	"528": {
		"product": "MX-28",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless Maxon 통신속도 000 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 20 arcmin 33 동작 모드 관절 모드 360 바퀴 모드 무한 회전 무게 MX 28AR AT 77 MX 28R 72 크기 35 50 35 mm 기어비 193 정지 토크 Nm 11 Nm 12 Nm 14 무부하 속도 50 rev min 11 55 rev min 12 67 rev min 14 반경방향 하중 30 혼으로부터 10 mm 축방향 하중 15 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 254 ID 253 피드백 Position Temperature Load Input Voltage 재질 Full Metal Gear MX 28AR AT Metal Front Engineering Plastic Middle Back MX 28R Engineering Plastic Front Middle Back 대기 전류 100 mA 알루미늄 금속케이스 제품 MX 28AR AT MX 64AR AT MX 106R 에 한정합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#주요-사양"
	},
	"529": {
		"product": "MX-28",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "Stall torque Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Perforamnce Graph의 Max torque는 Stall torque보다 적게 측정됩니다 주의 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기 나 SMPS2Dynamixel 통한 전원공급을 권장 드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#성능-그래프"
	},
	"530": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#컨트롤-테이블"
	},
	"531": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#컨트롤-테이블-데이터-주소"
	},
	"532": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#영역-eeprom-ram"
	},
	"533": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#크기"
	},
	"534": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#접근권한"
	},
	"535": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#초기값"
	},
	"536": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Model Number 모델 번호의 바이트 29 Firmware Version 펌웨어 버전 정보 ID 통신 ID Baud Rate 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 095 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 160 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 20 Multi Turn Offset 다중 회전 오프셋 바이트 22 Resolution Divider 해상도 디바이더 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#eeprom-영역"
	},
	"537": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 24 Torque Enable 토크 켜기 25 LED LED Off 26 Gain Derivative Gain 27 Gain Integral Gain 28 Gain Proportional Gain 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 하위 바이트 50 Realtime Tick Realtime Tick 값의 바이트 73 Goal Acceleration 목표 가속도값 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#ram-영역"
	},
	"538": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#컨트롤-테이블-설명"
	},
	"539": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#model-number-0"
	},
	"540": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#firmware-version-2"
	},
	"541": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#id-3"
	},
	"542": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 Value 값이 250 이상인 경우 Value Baud Rate 오차 250 250 000 000 251 500 000 000 252 000 000 000 주의 UART는 Baudrate오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#baud-rate-4"
	},
	"543": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#return-delay-time-5"
	},
	"544": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 3가지 동작 모드를 설정할 수 있습니다 동작모드 CW CCW 바퀴 모드 CW와 CCW가 0일때 관절 모드 CW와 CCW가 0이 아닐때 다중회전 모드 CW와 CCW가 095일때 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 다중 회전 모드는 관절모드와 같이 특정 각도로 제어가 가능하며 28 672 28 672 까지 제어가 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#cwccw-angle-limit6-8"
	},
	"545": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#temperature-limit-11"
	},
	"546": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 160 16 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#minmax-voltage-limit-12-13"
	},
	"547": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#max-torque-14"
	},
	"548": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#status-return-level-16"
	},
	"549": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#alarm-led17-shutdown18"
	},
	"550": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Multi Turn Offset (20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 36 에 더해지게 됩니다 Present Position 실제 위치 Multi Turn offset 이 됩니다 초기값은 값의 범위는 24 576 24 576 까지 입니다 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024를 적용하면 모터는 회전 하지 않지만 Present Position의 값은 072가 됩니다 참고 다중 회전 모드 Multi turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#multi-turn-offset-20"
	},
	"551": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Resolution Divider (22)",
		"content": "모터의 해상도를 변경 할 수 있습니다 초기값은 1이며 4까지 사용 가능합니다 모터의 해상도를 낮추고 CW CCW 방향으로 회전 횟수를 늘릴 수 있습니다 각 방향으로 최대 28바퀴까지 회전 가능 합니다 Present Position 실제 위치 Resolution Divider 예를 들어 실제 위치 값이 048 일 때 Resolution Divider의 값이 2이면 048 024 즉 Present Position의 값은 024가 됩니다 이렇게 Resolution Divider의 값을 2로 변경하면 모터의 한 바퀴의 해상도는 048이 됩니다 Multi Turn offset과 Resolution Divider를 같이 사용한다면 Present Position은 아래와 같은 식을 통해 구할 수 있습니다 Present Position 실제 위치 Resolution Divider Multi Turn offset 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024 Resolution Divider 를 적용하면 모터는 회전하지 않지만 Present Position의 값은 535가 됩니다 참고 다중 회전 모드 Multi Turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#resolution-divider-22"
	},
	"552": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#torque-enable-24"
	},
	"553": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#led-25"
	},
	"554": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PID Gains (26, 27, 28)",
		"content": "MX 시리즈는 대표적 제어기법인 PID Controller를 이용합니다 Gain 은 Propotional Gain값 입니다 Gain 은 Integral Gain값 입니다 Gain 은 Derivative Gain값 입니다 값의 범위는 254 입니다 sub sub Gain sub sub Gain 000 048 sub sub Gain 000 relationship between Compliance Slop PID Slope Gain 128 16 64 32 32 64 16 128 gain larger back lash weaker amount output near goal position At some extent like combined concept margine slope does exactly match previous concept compliance So obvious see difference terms motion Explanation PID required brief explanation general PID refer website link below http en wikipedia org wiki PID controller ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#pid-gains-26-27-28"
	},
	"555": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 목표지점의 위치 값입니다 095 0xFFF 까지 사용 가능하며 단위는 088 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alram LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 장치를 정면에서 보았을 때의 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672로 늘어나게 되며 0에서부터 CW CCW 각 방향으로 7바퀴씩 회전 할 수 있습니다 만약 Resolution Divider와 같이 사용한다면 회전 횟수를 더 증가 시킬 수 있습니다 참고 휠 모드로 동작시에는 Goal Position값이 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#goal-position-30"
	},
	"556": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "관절 모드 다중 회전 모드 Goal Position으로 이동하는 속도입니다 023 0x3FF 까지 사용되며 단위는 약 114 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 속도를 사용한다는 의미입니다 023의 경우 약 117 07 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 34 33 rev min 입니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 114 rev min 입니다 023 범위의 값을 사용하면 CCW 방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW 방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 주의 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#moving-speed-32"
	},
	"557": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#torque-limit-34"
	},
	"558": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 095 0xFFF 이며 단위는 088 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672 이며 단위는 Resolution Divider 값에 따라 088 Resolution Divider 도로 변화 합니다 참고 다중 회전 모드 Multi turn Mode 일 때 실제 위치와 Present Position의 관계는 Resolution Divider와 Multi Turn offset의 값에 따라 달라 질 수 있습니다 더 자세한 내용은 Multi Turn offset과 Resolution Divider를 참고 하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#present-position-36"
	},
	"559": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 약 114 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 34 33 rev min 으로 이동 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#present-speed-38"
	},
	"560": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#present-load-40"
	},
	"561": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#present-voltage-42"
	},
	"562": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#present-temperature-43"
	},
	"563": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#registered-instruction-44"
	},
	"564": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#moving-46"
	},
	"565": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#lock-47"
	},
	"566": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#punch-48"
	},
	"567": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime-Tick (50)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 주의 펌웨어 버전 40 이상부터 사용 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#realtime-tick-50"
	},
	"568": {
		"product": "MX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration (73)",
		"content": "목표 가속도 값입니다 254 0xFE 까지 사용되며 단위는 약 583 sec 입니다 0으로 설정하면 가속도 제어를 하지 않고 모터의 최대 가속도로 움직인다는 의미입니다 목표속도가 0일 경우에도 가속도 제어를 하지 않고 모터의 최대 가속도로 움직입니다 254를 설정할 경우 180 sec 이 됩니다 예를 들어 장치의 속도가 현재 0이고 Goal Acceleration이 10인 경우 1초 뒤의 장치의 속도는 14 rev min 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#goal-acceleration-73"
	},
	"569": {
		"product": "MX-28",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#조립-예시"
	},
	"570": {
		"product": "MX-28",
		"header1": "조립 예시",
		"header2": "옵션 프레임",
		"header3": "",
		"content": "FR07 B101 Option Frame FR07 F101 FR07 X101 Option Frame FR07 H101 Option Frame FR07 S101 Option Frame ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#조립-예시"
	},
	"571": {
		"product": "MX-28",
		"header1": "조립 예시",
		"header2": "혼",
		"header3": "",
		"content": "HN07 I101 HN07 N101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#조립-예시"
	},
	"572": {
		"product": "MX-28",
		"header1": "조립 예시",
		"header2": "기구 결합",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#조립-예시"
	},
	"573": {
		"product": "MX-28",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#유지보수"
	},
	"574": {
		"product": "MX-28",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#혼과-베어링-교체"
	},
	"575": {
		"product": "MX-28",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#혼과-베어링-교체"
	},
	"576": {
		"product": "MX-28",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#혼과-베어링-교체"
	},
	"577": {
		"product": "MX-28",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#참고자료"
	},
	"578": {
		"product": "MX-28",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀 번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5033 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5035 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 MOLEX 80 70 1039 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#커넥터-정보"
	},
	"579": {
		"product": "MX-28",
		"header1": "참고자료",
		"header2": "Videos",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#videos"
	},
	"580": {
		"product": "MX-28",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 MX 28AT AR DWG 다운로드 MX 28AT AR PDF 다운로드 MX 28AT AR STEP 다운로드 MX 28T DWG 다운로드 MX 28T PDF 다운로드 MX 28T STEP 다운로드 MX 28T IGES 다운로드 MX 28R DWG 다운로드 MX 28R PDF 다운로드 MX 28R STEP 다운로드 MX 28R IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28/#도면"
	},
	"581": {
		"product": "MX-28(2.0)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless Maxon 통신속도 000 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 20 arcmin 33 동작 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 PWM 제어 모드 무게 MX 28AR AT 77 MX 28R 72 크기 35 50 35 mm 기어비 193 정지 토크 Nm 11 Nm 12 Nm 14 무부하 속도 50 rev min 11 55 rev min 12 67 rev min 14 반경방향 하중 30 혼으로부터 10 mm 축방향 하중 15 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Temperature Load Input Voltage Trajectory Realtime Tick 재질 Full Metal Gear MX 28AR AT Metal Front Engineering Plastic Middle Back MX 28R Engineering Plastic Front Middle Back 대기 전류 100 mA 알루미늄 금속케이스 제품 MX 28AR AT MX 64AR AT MX 106R 에 한정합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#주요-사양"
	},
	"582": {
		"product": "MX-28(2.0)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#성능-그래프"
	},
	"583": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 MX Firmware는 MX series의 Control table과 주소가 다릅니다 사용 전에 Control table 주소를 필히 확인해 주세요 MX Firmware는 Dynamixel X의 기능을 상속받습니다 따라서 Protocol 0과 및 다양한 Operating Mode와 Secondary ID Drive Mode Bus Watchdog 등을 지원합니다 자세한 사항은 Control table을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#컨트롤-테이블"
	},
	"584": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#컨트롤-테이블-데이터-주소"
	},
	"585": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#영역-eeprom-ram"
	},
	"586": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#크기"
	},
	"587": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#접근권한"
	},
	"588": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 주의 MX Firmware는 MX series의 Control table과 주소가 다릅니다 사용 전에 Control table 주소를 필히 확인해 주세요 MX Firmware는 Dynamixel X의 기능을 상속받습니다 따라서 Protocol 0과 및 다양한 Operating Mode와 Secondary ID Drive Mode Bus Watchdog 등을 지원합니다 자세한 사항은 Control table을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#초기값"
	},
	"589": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Model Number 모델 번호 30 Model Information 모델 정보 Firmware Version 펌웨어 버전 정보 ID 통신 ID Baud Rate 통신 속도 Return Delay Time 응답 지연 시간 250 10 Drive Mode 드라이브 모드 11 Operating Mode 동작 모드 12 Secondary Shadow ID 보조 ID 255 13 Protocol Version 프로토콜 버전 20 Homing Offset 점 위치 조정값 24 Moving Threshold 움직임 유무를 결정하는 속도 기준값 10 31 Temperature Limit 내부 한계 온도 80 32 Max Voltage Limit 최고 한계 전압 160 34 Min Voltage Limit 최저 한계 전압 95 36 PWM Limit PWM 한계값 885 40 Acceleration Limit 가속도 한계값 32767 44 Velocity Limit 속도 한계값 230 48 Max Position Limit 최대 위치 제한값 095 52 Min Position Limit 최소 위치 제한값 63 Shutdown 셧다운 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#eeprom-영역"
	},
	"590": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 64 Torque Enable 토크 Off 65 LED LED Off 68 Status Return Level 응답레벨 69 Registered Instruction Instruction의 등록 여부 70 Hardware Error Status 하드웨어 에러 상태 76 Velocity Gain 속도 Gain 1920 78 Velocity Gain 속도 Gain 100 80 Position Gain 위치 Gain 82 Position Gain 위치 Gain 84 Position Gain 위치 Gain 850 88 Feedforward 2nd Gain 피드포워드 2nd Gain 90 Feedforward 1st Gain 피드포워드 1st Gain 98 BUS Watchdog 통신 버스 워치독 100 Goal PWM 목표 PWM 값 104 Goal Velocity 목표 속도 값 108 Profile Acceleration 프로파일 가속도 값 112 Profile Velocity 프로파일 속도 값 116 Goal Position 목표 위치 값 120 Realtime Tick 실시간 Tick 122 Moving 움직임 유무 123 Moving Status 움직임의 상태 124 Present PWM 현재 PWM 값 126 Present Load 현재 하중 값 128 Present Velocity 현재 속도 값 132 Present Position 현재 위치 값 136 Velocity Trajectory 속도 궤적 값 140 Position Trajectory 위치 궤적 값 144 Present Input Voltage 현재 전압 146 Present Temperature 현재 온도 168 Indirect Address 간접 주소 값 224 170 Indirect Address 간접 주소 값 225 172 Indirect Address 간접 주소 값 226 218 Indirect Address 26 간접 주소 값 26 249 220 Indirect Address 27 간접 주소 값 27 250 222 Indirect Address 28 간접 주소 값 28 251 224 Indirect Data 간접 주소 데이터 225 Indirect Data 간접 주소 데이터 226 Indirect Data 간접 주소 데이터 249 Indirect Data 26 간접 주소 데이터 26 250 Indirect Data 27 간접 주소 데이터 27 251 Indirect Data 28 간접 주소 데이터 28 578 Indirect Address 29 간접 주소 값 29 634 580 Indirect Address 30 간접 주소 값 30 635 582 Indirect Address 31 간접 주소 값 31 636 628 Indirect Address 54 간접 주소 값 54 659 630 Indirect Address 55 간접 주소 값 55 660 632 Indirect Address 56 간접 주소 값 56 661 634 Indirect Data 29 간접 주소 데이터 29 635 Indirect Data 30 간접 주소 데이터 30 636 Indirect Data 31 간접 주소 데이터 31 659 Indirect Data 54 간접 주소 데이터 54 660 Indirect Data 55 간접 주소 데이터 55 661 Indirect Data 56 간접 주소 데이터 56 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#ram-영역"
	},
	"591": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#컨트롤-테이블-설명"
	},
	"592": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#model-number0"
	},
	"593": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#firmware-version6"
	},
	"594": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#id7"
	},
	"595": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#baud-rate8"
	},
	"596": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#return-delay-time9"
	},
	"597": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#drive-mode10"
	},
	"598": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작모드 설명 속도제어 모드 360 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일하며 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 PWM Limit 36 으로 초기화 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#operating-mode11"
	},
	"599": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#secondaryshadow-id12"
	},
	"600": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#protocol-version13"
	},
	"601": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#homing-offset20"
	},
	"602": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#moving-threshold24"
	},
	"603": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#temperature-limit31"
	},
	"604": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#minmax-voltage-limit32-34"
	},
	"605": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#pwm-limit36"
	},
	"606": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "Profile Acceleration 108 의 한계 값입니다 Profile Acceleration 108 에는 Acceleration Limit 40 보다 큰 값을 쓸 수 없습니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 자세한 설명은 Profile Velocity 112 을 참고하세요 단위 값의 범위 214 577 rev min 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#acceleration-limit40"
	},
	"607": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#velocity-limit44"
	},
	"608": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#minmax-position-limit48-52"
	},
	"609": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#shutdown63"
	},
	"610": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#torque-enable64"
	},
	"611": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#led65"
	},
	"612": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#status-return-level68"
	},
	"613": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#registered-instruction69"
	},
	"614": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#hardware-error-status70"
	},
	"615": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#velocity-pi-gain76-78"
	},
	"616": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#velocity-pi-gain76-78"
	},
	"617": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "BUS Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#bus-watchdog98"
	},
	"618": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#goal-pwm100"
	},
	"619": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#goal-velocity104"
	},
	"620": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#profile-acceleration108"
	},
	"621": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#profile-velocity112"
	},
	"622": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#goal-position116"
	},
	"623": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#realtime-tick120"
	},
	"624": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#moving122"
	},
	"625": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#moving-status123"
	},
	"626": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#present-pwm124"
	},
	"627": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load(126)",
		"content": "현재 적용되는 하중을 의미합니다 Present Load 126 의 값이 500 인 경우 CCW 방향으로 50 의 하중이 감지되었다는 의미입니다 단위 범위 상세 설명 000 000 양수 CCW 방향의 하중 음수 CW 방향의 하중 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#present-load126"
	},
	"628": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#present-velocity128"
	},
	"629": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#present-position132"
	},
	"630": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#velocity-trajectory136"
	},
	"631": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#position-trajectory140"
	},
	"632": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#present-input-voltage144"
	},
	"633": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#present-temperature146"
	},
	"634": {
		"product": "MX-28(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#indirect-address"
	},
	"635": {
		"product": "MX-28(2.0)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#조립-예시"
	},
	"636": {
		"product": "MX-28(2.0)",
		"header1": "조립 예시",
		"header2": "옵션 프레임",
		"header3": "",
		"content": "FR07 B101 Option Frame FR07 F101 FR07 X101 Option Frame FR07 H101 Option Frame FR07 S101 Option Frame ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#조립-예시"
	},
	"637": {
		"product": "MX-28(2.0)",
		"header1": "조립 예시",
		"header2": "혼",
		"header3": "",
		"content": "HN07 I101 HN07 N101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#조립-예시"
	},
	"638": {
		"product": "MX-28(2.0)",
		"header1": "조립 예시",
		"header2": "기구 결합",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#조립-예시"
	},
	"639": {
		"product": "MX-28(2.0)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#유지보수"
	},
	"640": {
		"product": "MX-28(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#혼과-베어링-교체"
	},
	"641": {
		"product": "MX-28(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#혼과-베어링-교체"
	},
	"642": {
		"product": "MX-28(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#혼과-베어링-교체"
	},
	"643": {
		"product": "MX-28(2.0)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#참고자료"
	},
	"644": {
		"product": "MX-28(2.0)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀 번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5033 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5035 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 MOLEX 80 70 1039 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#커넥터-정보"
	},
	"645": {
		"product": "MX-28(2.0)",
		"header1": "참고자료",
		"header2": "Videos",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#videos"
	},
	"646": {
		"product": "MX-28(2.0)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 MX 28AT AR DWG 다운로드 MX 28AT AR PDF 다운로드 MX 28AT AR STEP 다운로드 MX 28T DWG 다운로드 MX 28T PDF 다운로드 MX 28T STEP 다운로드 MX 28T IGES 다운로드 MX 28R DWG 다운로드 MX 28R PDF 다운로드 MX 28R STEP 다운로드 MX 28R IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-28-2/#도면"
	},
	"647": {
		"product": "MX-64",
		"header1": "주요 사양 요약 ",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless Maxon 통신속도 000 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 20 arcmin 33 동작 모드 관절 모드 360 바퀴 모드 무한 회전 무게 165 크기 40 61 41 mm 기어비 200 정지 토크 Nm 11 Nm 12 Nm 14 무부하 속도 58 rev min 11 63 rev min 12 78 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 254 ID 253 피드백 Position Temperature Load Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 100 mA 알루미늄 금속케이스 제품 MX 28AR AT MX 64AR AT MX 106R 에 한정합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#주요-사양-요약"
	},
	"648": {
		"product": "MX-64",
		"header1": "주요 사양 요약 ",
		"header2": "성능 그래프",
		"header3": "",
		"content": "Stall torque Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Perforamnce Graph의 Max torque는 Stall torque보다 적게 측정됩니다 주의 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기 나 SMPS2Dynamixel 통한 전원공급을 권장 드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#성능-그래프"
	},
	"649": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#컨트롤-테이블"
	},
	"650": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#컨트롤-테이블-데이터-주소"
	},
	"651": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#영역-eeprom-ram"
	},
	"652": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#크기"
	},
	"653": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#접근권한"
	},
	"654": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#초기값"
	},
	"655": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Model Number 모델 번호의 바이트 310 Firmware Version 펌웨어 버전 정보 ID 통신 ID Baud Rate 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 095 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 240 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 20 Multi Turn Offset 다중 회전 오프셋 바이트 22 Resolution Divider 해상도 디바이더 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#eeprom-영역"
	},
	"656": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 24 Torque Enable 토크 켜기 25 LED LED Off 26 Gain Derivative Gain 27 Gain Integral Gain 28 Gain Proportional Gain 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 50 Realtime Tick Realtime Tick 값의 바이트 68 Current 전류소비량의 바이트 70 Torque Ctrl Mode Enable 토크 제어 모드 Off 71 Goal Torque 목표 토크 값의 바이트 73 Goal Acceleration 목표 가속도값 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#ram-영역"
	},
	"657": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#컨트롤-테이블-설명"
	},
	"658": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#model-number-0"
	},
	"659": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#firmware-version-2"
	},
	"660": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#id-3"
	},
	"661": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 Value 값이 250 이상인 경우 Value Baud Rate 오차 250 250 000 000 251 500 000 000 252 000 000 000 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#baud-rate-4"
	},
	"662": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#return-delay-time-5"
	},
	"663": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 3가지 동작 모드를 설정할 수 있습니다 동작모드 CW CCW 바퀴 모드 CW와 CCW가 0일때 관절 모드 CW와 CCW가 0이 아닐때 다중회전 모드 CW와 CCW가 095일때 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 다중 회전 모드는 관절모드와 같이 특정 각도로 제어가 가능하며 28 672 28 672 까지 제어가 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#cwccw-angle-limit6-8"
	},
	"664": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#temperature-limit-11"
	},
	"665": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 160 16 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#minmax-voltage-limit-12-13"
	},
	"666": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#max-torque-14"
	},
	"667": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#status-return-level-16"
	},
	"668": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#alarm-led17-shutdown18"
	},
	"669": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Multi Turn Offset (20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 36 에 더해지게 됩니다 Present Position 실제 위치 Multi Turn offset 이 됩니다 초기값은 값의 범위는 24 576 24 576 까지 입니다 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024를 적용하면 모터는 회전 하지 않지만 Present Position의 값은 072가 됩니다 참고 다중 회전 모드 Multi turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#multi-turn-offset-20"
	},
	"670": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Resolution Divider (22)",
		"content": "모터의 해상도를 변경 할 수 있습니다 초기값은 1이며 4까지 사용 가능합니다 모터의 해상도를 낮추고 CW CCW 방향으로 회전 횟수를 늘릴 수 있습니다 각 방향으로 최대 28바퀴까지 회전 가능 합니다 Present Position 실제 위치 Resolution Divider 예를 들어 실제 위치 값이 048 일 때 Resolution Divider의 값이 2이면 048 024 즉 Present Position의 값은 024가 됩니다 이렇게 Resolution Divider의 값을 2로 변경하면 모터의 한 바퀴의 해상도는 048이 됩니다 Multi Turn offset과 Resolution Divider를 같이 사용한다면 Present Position은 아래와 같은 식을 통해 구할 수 있습니다 Present Position 실제 위치 Resolution Divider Multi Turn offset 모터의 실제 위치가 048값에 있을 때 Multi Turn offset 024 Resolution Divider 를 적용하면 모터는 회전하지 않지만 Present Position의 값은 535가 됩니다 참고 다중 회전 모드 Multi Turn Mode 일 때 만 이 값이 적용되며 그 외의 모드에서는 이 값은 무시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#resolution-divider-22"
	},
	"671": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#torque-enable-24"
	},
	"672": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#led-25"
	},
	"673": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PID Gains (26, 27, 28)",
		"content": "MX 시리즈는 대표적 제어기법인 PID Controller를 이용합니다 Gain 은 Propotional Gain값 입니다 Gain 은 Integral Gain값 입니다 Gain 은 Derivative Gain값 입니다 값의 범위는 254 입니다 sub sub Gain sub sub Gain 000 048 sub sub Gain 000 relationship between Compliance Slop PID Slope Gain 128 16 64 32 32 64 16 128 gain larger back lash weaker amount output near goal position At some extent like combined concept margine slope does exactly match previous concept compliance So obvious see difference terms motion Explanation PID required brief explanation general PID refer website link below http en wikipedia org wiki PID controller ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#pid-gains-26-27-28"
	},
	"674": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 목표지점의 위치 값입니다 095 0xFFF 까지 사용 가능하며 단위는 088 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alram LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 장치를 정면에서 보았을 때의 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672로 늘어나게 되며 0에서부터 CW CCW 각 방향으로 7바퀴씩 회전 할 수 있습니다 만약 Resolution Divider와 같이 사용한다면 회전 횟수를 더 증가 시킬 수 있습니다 참고 휠 모드로 동작시에는 Goal Position값이 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#goal-position-30"
	},
	"675": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "관절 모드 다중 회전 모드 Goal Position으로 이동하는 속도입니다 1023 0X3FF 까지 사용되며 단위는 약 114 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 속도를 사용한다는 의미입니다 1023의 경우 약 117 07 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 34 33 rev min 입니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 2047 0X7FF 까지 사용되며 단위는 114 rev min 입니다 1023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 1024 2047 범위의 값을 사용하면 CW방향으로 회전하며 1024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 주의 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#moving-speed-32"
	},
	"676": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#torque-limit-34"
	},
	"677": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 095 0xFFF 이며 단위는 088 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 다중 회전 모드일 때 값의 범위는 28 672 28 672 이며 단위는 Resolution Divider 값에 따라 088 Resolution Divider 도로 변화 합니다 참고 다중 회전 모드 Multi turn Mode 일 때 실제 위치와 Present Position의 관계는 Resolution Divider와 Multi Turn offset의 값에 따라 달라 질 수 있습니다 더 자세한 내용은 Multi Turn offset과 Resolution Divider를 참고 하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#present-position-36"
	},
	"678": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 2047 0X7FF 까지 사용됩니다 1023 범위의 값이면 CCW방향으로 회전한다는 의미입니다 1024 2047 범위의 값이면 CW방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 1024는 같습니다 이 값의 단위는 약 114 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 34 33rpm으로 이동 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#present-speed-38"
	},
	"679": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#present-load-40"
	},
	"680": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#present-voltage-42"
	},
	"681": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#present-temperature-43"
	},
	"682": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#registered-instruction-44"
	},
	"683": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#moving-46"
	},
	"684": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#lock-47"
	},
	"685": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#punch-48"
	},
	"686": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime-Tick (50)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 주의 펌웨어 버전 40 이상부터 사용 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#realtime-tick-50"
	},
	"687": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current (68)",
		"content": "전류가 소모되지 않고 있을때의 값은 048 0x800 입니다 만약 전류가 양의 방향으로 흐르면 048 0x800 보다 큰값이 나옵니다 만약 전류가 음의 방향으로 흐르면 048 0x800 보다 작은 값이 나옵니다 전류값을 계산하는 방법은 다음과 같습니다 mA CURRENT 048 단위 예를 들어 68번지의 값이 148 이면 양의 방향으로 450 mA 가 흐르고 있다는 뜻입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#current-68"
	},
	"688": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Control Mode Enable (70)",
		"content": "값 의미 토크 모드를 OFF 시킵니다 관절 모드 또는 휠모드가 실행됩니다 토크 모드를 ON 시킵니다 위치 제어 및 속도 제어는 되지 않고 오직 토크만 제어 됩니다 Torque Control Mode Enable이 1이 되면 장치는 다음과 같은 행동을 합니다 장치는 위치 및 속도 제어를 하지 않습니다 장치는 Goal Torque 에 적힌 토크로 제어합니다 Goal position 및Goal speed 에 값을 적더라도 반응하지 않습니다 위치 및 속도 제어가 되지 않으므로 마치 바퀴모드처럼 행동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#torque-control-mode-enable-70"
	},
	"689": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque (71)",
		"content": "목표하는 토크의 값입니다 047 0x7FF 까지 사용되며 단위는 mA 입니다 토크와 전류값은 정 비례합니다 023 범위의 값을 사용하면 CCW 방향으로 토크가 가해지며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW 방향으로 토크가 가해지며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 Goal Torque 는Torque Limit 34 35 보다 커질 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#goal-torque-71"
	},
	"690": {
		"product": "MX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration (73)",
		"content": "목표 가속도 값입니다 254 0xFE 까지 사용되며 단위는 약 583 sec 입니다 0으로 설정하면 가속도 제어를 하지 않고 모터의 최대 가속도로 움직인다는 의미입니다 목표속도가 0일 경우에도 가속도 제어를 하지 않고 모터의 최대 가속도로 움직입니다 254를 설정할 경우 180 sec 이 됩니다 예를 들어 장치의 속도가 현재 0이고 Goal Acceleration이 10인 경우 1초 뒤의 장치의 속도는 14 rev min 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#goal-acceleration-73"
	},
	"691": {
		"product": "MX-64",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#조립-예시"
	},
	"692": {
		"product": "MX-64",
		"header1": "조립 예시",
		"header2": "옵션 프레임",
		"header3": "",
		"content": "FR05 B101 FR05 F101 FR05 X101 FR05 H101 FR05 S101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#조립-예시"
	},
	"693": {
		"product": "MX-64",
		"header1": "조립 예시",
		"header2": "혼",
		"header3": "",
		"content": "HN05 I102 HN05 N101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#조립-예시"
	},
	"694": {
		"product": "MX-64",
		"header1": "조립 예시",
		"header2": "기구결합",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#조립-예시"
	},
	"695": {
		"product": "MX-64",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#유지보수"
	},
	"696": {
		"product": "MX-64",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#혼과-베어링-교체"
	},
	"697": {
		"product": "MX-64",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#혼과-베어링-교체"
	},
	"698": {
		"product": "MX-64",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#혼과-베어링-교체"
	},
	"699": {
		"product": "MX-64",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#참고자료"
	},
	"700": {
		"product": "MX-64",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀 번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5033 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5035 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 MOLEX 80 70 1039 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#커넥터-정보"
	},
	"701": {
		"product": "MX-64",
		"header1": "참고자료",
		"header2": "Videos",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#videos"
	},
	"702": {
		"product": "MX-64",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 MX 64AT AR DWG 다운로드 MX 64AT AR PDF 다운로드 MX 64AT AR STEP 다운로드 MX 64T DWG 다운로드 MX 64T PDF 다운로드 MX 64T STEP 다운로드 MX 64T IGES 다운로드 MX 64R DWG 다운로드 MX 64R PDF 다운로드 MX 64R STEP 다운로드 MX 64R IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64/#도면"
	},
	"703": {
		"product": "MX-64(2.0)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless Maxon 통신속도 000 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 20 arcmin 33 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 165 크기 40 61 41 mm 기어비 200 정지 토크 Nm 11 Nm 12 Nm 14 무부하 속도 58 rev min 11 63 rev min 12 78 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 100 mA 알루미늄 금속케이스 제품 MX 28AR AT MX 64AR AT MX 106R 에 한정합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#주요-사양"
	},
	"704": {
		"product": "MX-64(2.0)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#성능-그래프"
	},
	"705": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 MX Firmware는 MX series의 Control table과 주소가 다릅니다 사용 전에 Control table 주소를 필히 확인해 주세요 MX Firmware는 Dynamixel X의 기능을 상속받습니다 따라서 Protocol 0과 및 다양한 Operating Mode와 Secondary ID Drive Mode Bus Watchdog 등을 지원합니다 자세한 사항은 Control table을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#컨트롤-테이블"
	},
	"706": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#컨트롤-테이블-데이터-주소"
	},
	"707": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#영역-eeprom-ram"
	},
	"708": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#크기"
	},
	"709": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#접근권한"
	},
	"710": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 주의 MX Firmware는 MX series의 Control table과 주소가 다릅니다 사용 전에 Control table 주소를 필히 확인해 주세요 MX Firmware는 Dynamixel X의 기능을 상속받습니다 따라서 Protocol 0과 및 다양한 Operating Mode와 Secondary ID Drive Mode Bus Watchdog 등을 지원합니다 자세한 사항은 Control table을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#초기값"
	},
	"711": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Model Number 모델 번호 311 Model Information 모델 정보 Firmware Version 펌웨어 버전 정보 ID 통신 ID Baud Rate 통신 속도 Return Delay Time 응답 지연 시간 250 10 Drive Mode 드라이브 모드 11 Operating Mode 동작 모드 12 Secondary Shadow ID 보조 ID 255 13 Protocol Version 프로토콜 버전 20 Homing Offset 점 위치 조정값 24 Moving Threshold 움직임 유무를 결정하는 속도 기준값 10 31 Temperature Limit 내부 한계 온도 80 32 Max Voltage Limit 최고 한계 전압 160 34 Min Voltage Limit 최저 한계 전압 95 36 PWM Limit PWM 한계값 885 38 Current Limit 전류 한계값 1941 40 Acceleration Limit 가속도 한계값 32767 44 Velocity Limit 속도 한계값 285 48 Max Position Limit 최대 위치 제한값 095 52 Min Position Limit 최소 위치 제한값 63 Shutdown 셧다운 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#eeprom-영역"
	},
	"712": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Initial Value 64 Torque Enable 토크 Off 65 LED LED Off 68 Status Return Level 응답레벨 69 Registered Instruction Instruction의 등록 여부 70 Hardware Error Status 하드웨어 에러 상태 76 Velocity Gain 속도 Gain 1920 78 Velocity Gain 속도 Gain 100 80 Position Gain 위치 Gain 82 Position Gain 위치 Gain 84 Position Gain 위치 Gain 850 88 Feedforward 2nd Gain 피드포워드 2nd Gain 90 Feedforward 1st Gain 피드포워드 1st Gain 98 BUS Watchdog 통신 버스 워치독 100 Goal PWM 목표 PWM 값 102 Goal Current 목표 전류 값 104 Goal Velocity 목표 속도 값 108 Profile Acceleration 프로파일 가속도 값 112 Profile Velocity 프로파일 속도 값 116 Goal Position 목표 위치 값 120 Realtime Tick 실시간 Tick 122 Moving 움직임 유무 123 Moving Status 움직임의 상태 124 Present PWM 현재 PWM 값 126 Present Current 현재 전류 값 128 Present Velocity 현재 속도 값 132 Present Position 현재 위치 값 136 Velocity Trajectory 속도 궤적 값 140 Position Trajectory 위치 궤적 값 144 Present Input Voltage 현재 전압 146 Present Temperature 현재 온도 168 Indirect Address 간접 주소 값 224 170 Indirect Address 간접 주소 값 225 172 Indirect Address 간접 주소 값 226 218 Indirect Address 26 간접 주소 값 26 249 220 Indirect Address 27 간접 주소 값 27 250 222 Indirect Address 28 간접 주소 값 28 251 224 Indirect Data 간접 주소 데이터 225 Indirect Data 간접 주소 데이터 226 Indirect Data 간접 주소 데이터 249 Indirect Data 26 간접 주소 데이터 26 250 Indirect Data 27 간접 주소 데이터 27 251 Indirect Data 28 간접 주소 데이터 28 578 Indirect Address 29 간접 주소 값 29 634 580 Indirect Address 30 간접 주소 값 30 635 582 Indirect Address 31 간접 주소 값 31 636 628 Indirect Address 54 간접 주소 값 54 659 630 Indirect Address 55 간접 주소 값 55 660 632 Indirect Address 56 간접 주소 값 56 661 634 Indirect Data 29 간접 주소 데이터 29 635 Indirect Data 30 간접 주소 데이터 30 636 Indirect Data 31 간접 주소 데이터 31 659 Indirect Data 54 간접 주소 데이터 54 660 Indirect Data 55 간접 주소 데이터 55 661 Indirect Data 56 간접 주소 데이터 56 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#ram-영역"
	},
	"713": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#컨트롤-테이블-설명"
	},
	"714": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#model-number0"
	},
	"715": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#firmware-version6"
	},
	"716": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#id7"
	},
	"717": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#baud-rate8"
	},
	"718": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#return-delay-time9"
	},
	"719": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#drive-mode10"
	},
	"720": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#operating-mode11"
	},
	"721": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#secondaryshadow-id-12"
	},
	"722": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#protocol-version13"
	},
	"723": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#homing-offset20"
	},
	"724": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#moving-threshold24"
	},
	"725": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#temperature-limit31"
	},
	"726": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#minmax-voltage-limit32-34"
	},
	"727": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#pwm-limit36"
	},
	"728": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 구분 상세 비고 단위 약 36 mA 전류 관련 Data의 단위는 모두 동일 범위 193 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#current-limit38"
	},
	"729": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "Profile Acceleration 108 의 한계 값입니다 Profile Acceleration 108 에는 Acceleration Limit 40 보다 큰 값을 쓸 수 없습니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 자세한 설명은 Profile Velocity 112 을 참고하세요 단위 값의 범위 214 577 rev min 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#acceleration-limit40"
	},
	"730": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#velocity-limit44"
	},
	"731": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#minmax-position-limit48-52"
	},
	"732": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#shutdown63"
	},
	"733": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#torque-enable64"
	},
	"734": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#led65"
	},
	"735": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#status-return-level68"
	},
	"736": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#registered-instruction69"
	},
	"737": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#hardware-error-status70"
	},
	"738": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#velocity-pi-gain76-78"
	},
	"739": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#velocity-pi-gain76-78"
	},
	"740": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "BUS Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#bus-watchdog98"
	},
	"741": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#goal-pwm100"
	},
	"742": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 구분 상세 비고 단위 약 36 mA 전류 관련 Data의 단위는 모두 동일 범위 Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#goal-current102"
	},
	"743": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#goal-velocity104"
	},
	"744": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#profile-acceleration108"
	},
	"745": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#profile-velocity112"
	},
	"746": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#goal-position116"
	},
	"747": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#realtime-tick120"
	},
	"748": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#moving122"
	},
	"749": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#moving-status123"
	},
	"750": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#present-pwm124"
	},
	"751": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#present-current126"
	},
	"752": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#present-velocity128"
	},
	"753": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#present-position132"
	},
	"754": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#velocity-trajectory136"
	},
	"755": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#position-trajectory140"
	},
	"756": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#present-input-voltage144"
	},
	"757": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#present-temperature146"
	},
	"758": {
		"product": "MX-64(2.0)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#indirect-address"
	},
	"759": {
		"product": "MX-64(2.0)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#조립-예시"
	},
	"760": {
		"product": "MX-64(2.0)",
		"header1": "조립 예시",
		"header2": "옵션 프레임",
		"header3": "",
		"content": "FR05 B101 FR05 F101 FR05 X101 FR05 H101 FR05 S101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#조립-예시"
	},
	"761": {
		"product": "MX-64(2.0)",
		"header1": "조립 예시",
		"header2": "혼",
		"header3": "",
		"content": "HN05 I102 HN05 N101 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#조립-예시"
	},
	"762": {
		"product": "MX-64(2.0)",
		"header1": "조립 예시",
		"header2": "기구 결합",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#조립-예시"
	},
	"763": {
		"product": "MX-64(2.0)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#유지보수"
	},
	"764": {
		"product": "MX-64(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#혼과-베어링-교체"
	},
	"765": {
		"product": "MX-64(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#혼과-베어링-교체"
	},
	"766": {
		"product": "MX-64(2.0)",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#혼과-베어링-교체"
	},
	"767": {
		"product": "MX-64(2.0)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#참고자료"
	},
	"768": {
		"product": "MX-64(2.0)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀 번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5033 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5035 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 MOLEX 80 70 1039 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#커넥터-정보"
	},
	"769": {
		"product": "MX-64(2.0)",
		"header1": "참고자료",
		"header2": "동영상",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#동영상"
	},
	"770": {
		"product": "MX-64(2.0)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 MX 64AT AR DWG 다운로드 MX 64AT AR PDF 다운로드 MX 64AT AR STEP 다운로드 MX 64T DWG 다운로드 MX 64T PDF 다운로드 MX 64T STEP 다운로드 MX 64T IGES 다운로드 MX 64R DWG 다운로드 MX 64R PDF 다운로드 MX 64R STEP 다운로드 MX 64R IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/mx/mx-64-2/#도면"
	},
	"771": {
		"product": "H42-20-S300-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 340 크기 42 84 42 mm 해상도 303 750 pulse rev 감속비 303 75 백래쉬 arcmin 반경방향 하중 280 혼으로부터 10 mm 축방향 하중 100 No Load Speed 32 rev min No Load Current 57 Continuous Speed 29 rev min Continuous Torque Nm Continuous Current 출력 20 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#주요-사양"
	},
	"772": {
		"product": "H42-20-S300-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#성능-그래프"
	},
	"773": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#컨트롤-테이블"
	},
	"774": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#컨트롤-테이블-데이터-주소"
	},
	"775": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#영역-eeprom-ram"
	},
	"776": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#크기"
	},
	"777": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#접근권한"
	},
	"778": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#초기값"
	},
	"779": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 51 200 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00329218 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 255 147 483 647 58 000 rev min 30 Torque Limit 465 1395 02832 mA 32 Velocity Limit 10 300 147 483 647 00329218 rev min 36 Max Position Limit 151 875 147 483 648 147 483 647 pulse 40 Min Position Limit 151 875 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#eeprom-영역"
	},
	"780": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 40 65535 588 Velocity Gain 440 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00329218 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 02832 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00329218 rev min 621 Present Current 02832 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#ram-영역"
	},
	"781": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#컨트롤-테이블-설명"
	},
	"782": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 Model Name Model Number H42 20 S300 51 200 0xC800 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#model-number0"
	},
	"783": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#firmware-version6"
	},
	"784": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#id7"
	},
	"785": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#baud-rate8"
	},
	"786": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#return-delay-time9"
	},
	"787": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#operating-mode11"
	},
	"788": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#homing-offset13"
	},
	"789": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#moving-threshold17"
	},
	"790": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#temperature-limit21"
	},
	"791": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#minmax-voltage-limit22-24"
	},
	"792": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#acceleration-limit26"
	},
	"793": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#torque-limit30"
	},
	"794": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#velocity-limit32"
	},
	"795": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#minmax-position-limit36-40"
	},
	"796": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#external-port-mode"
	},
	"797": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#shutdown48"
	},
	"798": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#indirect-address"
	},
	"799": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#torque-enable562"
	},
	"800": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#rgb-led563"
	},
	"801": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#velocity-pi-gain586-588"
	},
	"802": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#position-p-gain594"
	},
	"803": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#goal-position596"
	},
	"804": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#goal-velocity600"
	},
	"805": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#goal-torque604"
	},
	"806": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#goal-acceleration606"
	},
	"807": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#moving610"
	},
	"808": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#present-velocity615"
	},
	"809": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#present-current621"
	},
	"810": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#present-input-voltage623"
	},
	"811": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#present-temperature625"
	},
	"812": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#registered-instruction890"
	},
	"813": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#status-return-level891"
	},
	"814": {
		"product": "H42-20-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#hardware-error-status892"
	},
	"815": {
		"product": "H42-20-S300-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#조립-예시"
	},
	"816": {
		"product": "H42-20-S300-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP42 H110K FRP42 H120K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#옵션프레임-조립"
	},
	"817": {
		"product": "H42-20-S300-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#유지보수"
	},
	"818": {
		"product": "H42-20-S300-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#참고자료"
	},
	"819": {
		"product": "H42-20-S300-R",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#퀵스타트"
	},
	"820": {
		"product": "H42-20-S300-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#커넥터-정보"
	},
	"821": {
		"product": "H42-20-S300-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-r/#도면"
	},
	"822": {
		"product": "H42-20-S300-R(A)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 340 크기 42 84 42 mm 해상도 607 500 pulse rev 감속비 303 75 백래쉬 arcmin 반경방향 하중 280 혼으로부터 10 mm 축방향 하중 100 No Load Speed 32 rev min No Load Current 57 Continuous Speed 29 rev min Continuous Torque Nm Continuous Current 출력 20 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#주요-사양"
	},
	"823": {
		"product": "H42-20-S300-R(A)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#성능-그래프"
	},
	"824": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#컨트롤-테이블"
	},
	"825": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#컨트롤-테이블-데이터-주소"
	},
	"826": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#영역-eeprom-ram"
	},
	"827": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#크기"
	},
	"828": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#접근권한"
	},
	"829": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#초기값"
	},
	"830": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 51 201 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 255 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 20 920 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 500 500 mA 40 Acceleration Limit 10 765 306 173 rev min 44 Velocity Limit 920 920 01 rev min 48 Max Position Limit 303 454 303 750 303 750 pulse 52 Min Position Limit 303 454 303 750 303 750 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#eeprom-영역"
	},
	"831": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 532 Position Gain 32 767 530 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 msec 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#ram-영역"
	},
	"832": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 주의 Dynamixel PRO 는 Dynmaxiel PRO의 개선된 firmware 입니다 두 firmware의 Control table이 다르니 사용 전에 Control table의 주소를 필히 확인해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#컨트롤-테이블-설명"
	},
	"833": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "모델 번호입니다 모델명 Model Number H42 20 S300 51 201 0xC801 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#model-number0"
	},
	"834": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#firmware-version6"
	},
	"835": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#id7"
	},
	"836": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#baud-rate8"
	},
	"837": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#return-delay-time9"
	},
	"838": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#drive-mode10"
	},
	"839": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#operating-mode11"
	},
	"840": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#secondary-id12"
	},
	"841": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 13 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#homing-offset20"
	},
	"842": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#moving-threshold24"
	},
	"843": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#temperature-limit31"
	},
	"844": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#maxmin-voltage-limit32-34"
	},
	"845": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#pwm-limit36"
	},
	"846": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 Current Limit 38 보다 큰 값으로 설정할 수 없습니다 큰 값으로 설정을 시도하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 500 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#current-limit38"
	},
	"847": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 Acceleration Limit 40 보다 큰 값으로 설정할 수 없습니다 큰 값으로 설정을 시도하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 306 173 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#acceleration-limit40"
	},
	"848": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 Velocity Limit 40 보다 큰 값으로 설정할 수 없습니다 큰 값으로 설정을 시도하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#velocity-limit44"
	},
	"849": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 범위 내에서 목표 위치를 제한 합니다 위치 제어 모드에서 Goal Position 564 을 Position Limit 48 52 을 벗어난 값으로 설정을 시도하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 1회전 범위 pulse 303 750 303 750 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#maxmin-position-limit48-52"
	},
	"850": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "",
		"content": "External Port Data 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#external-port-mode"
	},
	"851": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#shutdown63"
	},
	"852": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#indirect-address"
	},
	"853": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#torque-enable512"
	},
	"854": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "RGB LED",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#rgb-led"
	},
	"855": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#status-return-level516"
	},
	"856": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#registered-instruction517"
	},
	"857": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#hardware-error-status518"
	},
	"858": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#velocity-pi-gain524-526, Feedforward 2nd Gains(536)"
	},
	"859": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Position PID Gain(528,530,532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#position-pid-gain528-530-532, Feedforward 1st Gains(538)"
	},
	"860": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#bus-watchdog546"
	},
	"861": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#goal-pwm548"
	},
	"862": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#goal-current550"
	},
	"863": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#goal-velocity552"
	},
	"864": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#profile-acceleration556"
	},
	"865": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#profile-velocity560"
	},
	"866": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 303 750 303 750 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#goal-position564"
	},
	"867": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#realtime-tick568"
	},
	"868": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#moving570"
	},
	"869": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#moving-status571"
	},
	"870": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#present-pwm572"
	},
	"871": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#present-current574"
	},
	"872": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#present-velocity576"
	},
	"873": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#present-position580"
	},
	"874": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#velocity-trajectory584"
	},
	"875": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#position-trajectory588"
	},
	"876": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#present-input-voltage592"
	},
	"877": {
		"product": "H42-20-S300-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "External Port Mode",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#present-temperature594"
	},
	"878": {
		"product": "H42-20-S300-R(A)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#조립-예시"
	},
	"879": {
		"product": "H42-20-S300-R(A)",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP42 H110K FRP42 H120K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#옵션프레임-조립"
	},
	"880": {
		"product": "H42-20-S300-R(A)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#유지보수"
	},
	"881": {
		"product": "H42-20-S300-R(A)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#참고자료"
	},
	"882": {
		"product": "H42-20-S300-R(A)",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#퀵스타트"
	},
	"883": {
		"product": "H42-20-S300-R(A)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#커넥터-정보"
	},
	"884": {
		"product": "H42-20-S300-R(A)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h42-20-s300-ra/#도면"
	},
	"885": {
		"product": "H54-100-S500-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 732 크기 54 108 54 mm 해상도 501 923 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 33 rev min No Load Current 13 Continuous Speed 29 rev min Continuous Torque 25 Nm Continuous Current 출력 100 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#주요-사양"
	},
	"886": {
		"product": "H54-100-S500-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#성능-그래프"
	},
	"887": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#컨트롤-테이블"
	},
	"888": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#컨트롤-테이블-데이터-주소"
	},
	"889": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#영역-eeprom-ram"
	},
	"890": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#크기"
	},
	"891": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#접근권한"
	},
	"892": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#초기값"
	},
	"893": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 53 768 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00199234 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 310 930 16 11328 mA 32 Velocity Limit 17 000 147 483 647 00199234 rev min 36 Max Position Limit 250 961 147 483 648 147 483 647 pulse 40 Min Position Limit 250 961 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#eeprom-영역"
	},
	"894": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 16 65535 588 Velocity Gain 256 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00199234 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00199234 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#ram-영역"
	},
	"895": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#컨트롤-테이블-설명"
	},
	"896": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number H54 100 S500 53 768 0xD208 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#model-number0"
	},
	"897": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#firmware-version6"
	},
	"898": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#id7"
	},
	"899": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#baud-rate8"
	},
	"900": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#return-delay-time9"
	},
	"901": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#operating-mode11"
	},
	"902": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#homing-offset13"
	},
	"903": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#moving-threshold17"
	},
	"904": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#temperature-limit21"
	},
	"905": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#minmax-voltage-limit22-24"
	},
	"906": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#acceleration-limit26"
	},
	"907": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#torque-limit30"
	},
	"908": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#velocity-limit32"
	},
	"909": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#minmax-position-limit36-40"
	},
	"910": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#external-port-mode"
	},
	"911": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#shutdown48"
	},
	"912": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#indirect-address"
	},
	"913": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#torque-enable562"
	},
	"914": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#rgb-led563"
	},
	"915": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#velocity-pi-gain586-588"
	},
	"916": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#position-p-gain594"
	},
	"917": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#goal-position596"
	},
	"918": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#goal-velocity600"
	},
	"919": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#goal-torque604"
	},
	"920": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#goal-acceleration606"
	},
	"921": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#moving610"
	},
	"922": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#present-velocity615"
	},
	"923": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#present-current621"
	},
	"924": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#present-input-voltage623"
	},
	"925": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#present-temperature625"
	},
	"926": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#registered-instruction890"
	},
	"927": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#status-return-level891"
	},
	"928": {
		"product": "H54-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#hardware-error-status892"
	},
	"929": {
		"product": "H54-100-S500-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#조립-예시"
	},
	"930": {
		"product": "H54-100-S500-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#옵션프레임-조립"
	},
	"931": {
		"product": "H54-100-S500-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#유지보수"
	},
	"932": {
		"product": "H54-100-S500-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#참고자료"
	},
	"933": {
		"product": "H54-100-S500-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#커넥터-정보"
	},
	"934": {
		"product": "H54-100-S500-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-r/#도면"
	},
	"935": {
		"product": "H54-100-S500-R(A)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 732 크기 54 108 54 mm 해상도 003 846 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 33 rev min No Load Current 13 Continuous Speed 29 rev min Continuous Torque 25 Nm Continuous Current 출력 100 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#주요-사양"
	},
	"936": {
		"product": "H54-100-S500-R(A)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#성능-그래프"
	},
	"937": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#컨트롤-테이블"
	},
	"938": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#컨트롤-테이블-데이터-주소"
	},
	"939": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#영역-eeprom-ram"
	},
	"940": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#크기"
	},
	"941": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#접근권한"
	},
	"942": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#초기값"
	},
	"943": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 53 769 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 255 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 50 920 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 15 900 15 900 mA 40 Acceleration Limit 10 639 255 632 rev min 44 Velocity Limit 920 920 01 rev min 48 Max Position Limit 501 433 501 923 501 923 pulse 52 Min Position Limit 501 433 501 923 501 923 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#eeprom-영역"
	},
	"944": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 532 Position Gain 32 767 530 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 msec 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#ram-영역"
	},
	"945": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 주의 Dynamixel PRO 는 Dynmaxiel PRO의 개선된 firmware 입니다 두 firmware의 Control table이 다르니 사용 전에 Control table의 주소를 필히 확인해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#컨트롤-테이블-설명"
	},
	"946": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number H54 100 S500 53 769 0xD209 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#model-number0"
	},
	"947": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#firmware-version6"
	},
	"948": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#id7"
	},
	"949": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#baud-rate8"
	},
	"950": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#return-delay-time9"
	},
	"951": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#drive-mode10"
	},
	"952": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#operating-mode11"
	},
	"953": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#secondary-id12"
	},
	"954": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 13 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#homing-offset20"
	},
	"955": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#moving-threshold24"
	},
	"956": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#temperature-limit31"
	},
	"957": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#maxmin-voltage-limit32-34"
	},
	"958": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#pwm-limit36"
	},
	"959": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 15 900 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#current-limit38"
	},
	"960": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 255 632 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#acceleration-limit40"
	},
	"961": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#velocity-limit44"
	},
	"962": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 501 923 501 923 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 pulse 501 923 501 923 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#maxmin-position-limit48-52"
	},
	"963": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#external-port-mode"
	},
	"964": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#shutdown63"
	},
	"965": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#indirect-address"
	},
	"966": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#torque-enable512"
	},
	"967": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#rgb-led"
	},
	"968": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#status-return-level516"
	},
	"969": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#registered-instruction517"
	},
	"970": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#hardware-error-status518"
	},
	"971": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#velocity-pi-gain524-526, Feedforward 2nd Gains(536)"
	},
	"972": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528,530,532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#position-pid-gain528-530-532, Feedforward 1st Gains(538)"
	},
	"973": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#bus-watchdog546"
	},
	"974": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#goal-pwm548"
	},
	"975": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#goal-current550"
	},
	"976": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#goal-velocity552"
	},
	"977": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#profile-acceleration556"
	},
	"978": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#profile-velocity560"
	},
	"979": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 501 923 501 923 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#goal-position564"
	},
	"980": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#realtime-tick568"
	},
	"981": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#moving570"
	},
	"982": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#moving-status571"
	},
	"983": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#present-pwm572"
	},
	"984": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#present-current574"
	},
	"985": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#present-velocity576"
	},
	"986": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#present-position580"
	},
	"987": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#velocity-trajectory584"
	},
	"988": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#position-trajectory588"
	},
	"989": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#present-input-voltage592"
	},
	"990": {
		"product": "H54-100-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#present-temperature594"
	},
	"991": {
		"product": "H54-100-S500-R(A)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#조립-예시"
	},
	"992": {
		"product": "H54-100-S500-R(A)",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#옵션프레임-조립"
	},
	"993": {
		"product": "H54-100-S500-R(A)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#유지보수"
	},
	"994": {
		"product": "H54-100-S500-R(A)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#참고자료"
	},
	"995": {
		"product": "H54-100-S500-R(A)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#커넥터-정보"
	},
	"996": {
		"product": "H54-100-S500-R(A)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-100-s500-ra/#도면"
	},
	"997": {
		"product": "H54-200-S500-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 855 크기 54 126 54 mm 해상도 501 923 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 33 rev min No Load Current 65 Continuous Speed 29 rev min Continuous Torque 44 Nm Continuous Current 출력 200 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#주요-사양"
	},
	"998": {
		"product": "H54-200-S500-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#성능-그래프"
	},
	"999": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#컨트롤-테이블"
	},
	"1000": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#컨트롤-테이블-데이터-주소"
	},
	"1001": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#영역-eeprom-ram"
	},
	"1002": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#크기"
	},
	"1003": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#접근권한"
	},
	"1004": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#초기값"
	},
	"1005": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 54 024 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00199234 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 620 1860 16 11328 mA 32 Velocity Limit 17 000 147 483 647 00199234 rev min 36 Max Position Limit 250 961 147 483 648 147 483 647 pulse 40 Min Position Limit 250 961 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#eeprom-영역"
	},
	"1006": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 14 65535 588 Velocity Gain 399 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00199234 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00199234 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#ram-영역"
	},
	"1007": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#컨트롤-테이블-설명"
	},
	"1008": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 Model Name Model Number H54 200 S500 54 024 0xD308 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#model-number0"
	},
	"1009": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#firmware-version6"
	},
	"1010": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#id7"
	},
	"1011": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#baud-rate8"
	},
	"1012": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#return-delay-time9"
	},
	"1013": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#operating-mode11"
	},
	"1014": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#homing-offset13"
	},
	"1015": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#moving-threshold17"
	},
	"1016": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#temperature-limit21"
	},
	"1017": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#minmax-voltage-limit22-24"
	},
	"1018": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#acceleration-limit26"
	},
	"1019": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#torque-limit30"
	},
	"1020": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#velocity-limit32"
	},
	"1021": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#minmax-position-limit36-40"
	},
	"1022": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#external-port-mode"
	},
	"1023": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#shutdown48"
	},
	"1024": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#indirect-address"
	},
	"1025": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#torque-enable562"
	},
	"1026": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#rgb-led563"
	},
	"1027": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#velocity-pi-gain586-588"
	},
	"1028": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#position-p-gain594"
	},
	"1029": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#goal-position596"
	},
	"1030": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#goal-velocity600"
	},
	"1031": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#goal-torque604"
	},
	"1032": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#goal-acceleration606"
	},
	"1033": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#moving610"
	},
	"1034": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#present-velocity615"
	},
	"1035": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#present-current621"
	},
	"1036": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#present-input-voltage623"
	},
	"1037": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#present-temperature625"
	},
	"1038": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#registered-instruction890"
	},
	"1039": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#status-return-level891"
	},
	"1040": {
		"product": "H54-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#hardware-error-status892"
	},
	"1041": {
		"product": "H54-200-S500-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#조립-예시"
	},
	"1042": {
		"product": "H54-200-S500-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#옵션프레임-조립"
	},
	"1043": {
		"product": "H54-200-S500-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#유지보수"
	},
	"1044": {
		"product": "H54-200-S500-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#참고자료"
	},
	"1045": {
		"product": "H54-200-S500-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#커넥터-정보"
	},
	"1046": {
		"product": "H54-200-S500-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-r/#도면"
	},
	"1047": {
		"product": "H54-200-S500-R(A)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 855 크기 54 126 54 mm 해상도 003 846 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 33 rev min No Load Current 65 Continuous Speed 29 rev min Continuous Torque 44 Nm Continuous Current 출력 200 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#주요-사양"
	},
	"1048": {
		"product": "H54-200-S500-R(A)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#성능-그래프"
	},
	"1049": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#컨트롤-테이블"
	},
	"1050": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#컨트롤-테이블-데이터-주소"
	},
	"1051": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#영역-eeprom-ram"
	},
	"1052": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#크기"
	},
	"1053": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#접근권한"
	},
	"1054": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#초기값"
	},
	"1055": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 54 025 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 255 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 50 900 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 22 740 22 740 mA 40 Acceleration Limit 982 992 644 rev min 44 Velocity Limit 900 900 01 rev min 48 Max Position Limit 501 433 501 923 501 923 pulse 52 Min Position Limit 501 433 501 923 501 923 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#eeprom-영역"
	},
	"1056": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 532 Position Gain 32 767 530 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 msec 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#ram-영역"
	},
	"1057": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 주의 Dynamixel PRO 는 Dynmaxiel PRO의 개선된 firmware 입니다 두 firmware의 Control table이 다르니 사용 전에 Control table의 주소를 필히 확인해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#컨트롤-테이블-설명"
	},
	"1058": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number H54 200 S500 54 025 0xD309 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#model-number0"
	},
	"1059": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#firmware-version6"
	},
	"1060": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#id7"
	},
	"1061": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#baud-rate8"
	},
	"1062": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#return-delay-time9"
	},
	"1063": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#drive-mode10"
	},
	"1064": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#operating-mode11"
	},
	"1065": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#secondary-id12"
	},
	"1066": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 13 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#homing-offset20"
	},
	"1067": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 900 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#moving-threshold24"
	},
	"1068": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#temperature-limit31"
	},
	"1069": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#maxmin-voltage-limit32-34"
	},
	"1070": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#pwm-limit36"
	},
	"1071": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 22 740 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#current-limit38"
	},
	"1072": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 992 644 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#acceleration-limit40"
	},
	"1073": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 900 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#velocity-limit44"
	},
	"1074": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 501 923 501 923 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 pulse 501 923 501 923 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#maxmin-position-limit48-52"
	},
	"1075": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#external-port-mode"
	},
	"1076": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#shutdown63"
	},
	"1077": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#indirect-address"
	},
	"1078": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#torque-enable512"
	},
	"1079": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#rgb-led"
	},
	"1080": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#status-return-level516"
	},
	"1081": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#registered-instruction517"
	},
	"1082": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#hardware-error-status518"
	},
	"1083": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#velocity-pi-gain524-526, Feedforward 2nd Gains(536)"
	},
	"1084": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528,530,532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#position-pid-gain528-530-532, Feedforward 1st Gains(538)"
	},
	"1085": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#bus-watchdog546"
	},
	"1086": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#goal-pwm548"
	},
	"1087": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#goal-current550"
	},
	"1088": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#goal-velocity552"
	},
	"1089": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#profile-acceleration556"
	},
	"1090": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#profile-velocity560"
	},
	"1091": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 501 923 501 923 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#goal-position564"
	},
	"1092": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#realtime-tick568"
	},
	"1093": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#moving570"
	},
	"1094": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#moving-status571"
	},
	"1095": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#present-pwm572"
	},
	"1096": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#present-current574"
	},
	"1097": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#present-velocity576"
	},
	"1098": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#present-position580"
	},
	"1099": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#velocity-trajectory584"
	},
	"1100": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#position-trajectory588"
	},
	"1101": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#present-input-voltage592"
	},
	"1102": {
		"product": "H54-200-S500-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#present-temperature594"
	},
	"1103": {
		"product": "H54-200-S500-R(A)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#조립-예시"
	},
	"1104": {
		"product": "H54-200-S500-R(A)",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#옵션프레임-조립"
	},
	"1105": {
		"product": "H54-200-S500-R(A)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#유지보수"
	},
	"1106": {
		"product": "H54-200-S500-R(A)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#참고자료"
	},
	"1107": {
		"product": "H54-200-S500-R(A)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#커넥터-정보"
	},
	"1108": {
		"product": "H54-200-S500-R(A)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/h54-200-s500-ra/#도면"
	},
	"1109": {
		"product": "DYNAMIXEL PRO",
		"header1": "제품 라인업",
		"header2": "",
		"header3": "",
		"content": "ockquote 다이나믹셀 PRO 라인업 일체형 로봇 구동장치 로봇의 관절에 필요한 기능을 하나의 모듈로 만들었습니다 힘세고 단단한 사이클로이드 감속기 다이나믹셀 PRO는 탈부착이 가능한 사이클로이드 감속기를 사용합니다 싸이클로이드 방식을 사용함으로서 작고 가벼우면서도 감속비가 높은 감속 장치를 실현하였습니다 또한 싸이클로이드 감속기는 진동 충격에 강한 내구성과 작은 백래쉬를 자랑합니다 다양한 모델 다이나믹셀 PRO의 모터 전력 감속기 형태 감속비 통신 타입 가격대 등 구동기에 필요한 많은 사양을 다양화 하였습니다 따라서 사용자는 자신의 로봇에 보다 알맞는 다이나믹셀 PRO를 선택하실 수 있습니다 다양한 제어 알고리즘 다이나믹셀 PRO는 위치 속도 전류 등 3가지 방식의 제어를 알고리즘을 사용합니다 사용자는 이 3가지 방식의 제어기를 조합하여 자신의 로봇에 알맞게 튜닝하여 사용하실 수 있습니다 전류 제어의 경우 다이나믹셀 PRO와 함께 제공되는 전류 대 토크 상관관계 그래프를 사용하실 경우 토크 제어기로 응용하여 사용하실 수 있습니다 정밀 제어 최대 502 000 1회전 의 높은 분해능을 사용하여 제어하기 때문에 사용자는 0007도의 작은 각도를 정밀하게 제어하실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/#제품-라인업"
	},
	"1110": {
		"product": "DYNAMIXEL PRO",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "모델명 크기 mm 무게 해상도 모터 H54 200 S500 54 126 54 855g 501 923 BLDC Maxon H54 100 S500 54 108 54 732g 501 923 BLDC Maxon H42 20 S300 42 84 42 340g 303 750 Coreless Maxon M54 60 S250 54 126 54 853g 251 417 BLDC Maxon M54 40 S250 54 108 54 710g 251 417 BLDC Maxon M42 10 S260 42 72 42 269g 263 187 Coreless Maxon L54 50 S290 54 108 54 656g 207 692 BLDC L54 50 S500 54 108 54 656g 361 384 BLDC L54 30 S400 54 108 54 612g 288 395 BLDC L54 30 S500 54 108 54 591g 361 384 BLDC L42 10 S300 42 72 42 257g 096 Coreless ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/#주요-사양"
	},
	"1111": {
		"product": "DYNAMIXEL PRO",
		"header1": "통신 회로",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/#통신-회로"
	},
	"1112": {
		"product": "DYNAMIXEL PRO",
		"header1": "통신 회로",
		"header2": "UART 연결 회로도",
		"header3": "",
		"content": "Main Controller를 직접 제작하여 다이나믹셀 PRO를 제어하기 위해서는 Main Controller UART의 신호를 RS485 type으로 변환시켜 주어야 합니다 다음은 권장 회로도 입니다 MAX485 Datasheet 전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 다이나믹셀 전용 제어기에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/#uart-연결-회로도"
	},
	"1113": {
		"product": "DYNAMIXEL PRO",
		"header1": "통신 회로",
		"header2": "핀 배열",
		"header3": "",
		"content": "커넥터의 핀 배열은 아래 그림과 같습니다 다이나믹셀 PRO에 있는 두 개의 4P 커넥터는 내부에서 서로 연결되어 있으므로 두 개 중 어떠한 커넥터에 연결해도 다이나믹셀 PRO 시리즈를 구동시킬 수 있습니다 또한 2Pin 커넥터는 파워 커넥터 전용으로 높은 전류를 사용할 때에는 이 커넥터를 통해서 전원을 공급해주는 것을 권장합니다 경고 배선 시에는 핀 배열이 틀리지 않도록 각별히 주의하십시오 올바르게 연결되지 않을 경우 다이나믹셀의 심각한 손상을 초래할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/#핀-배열"
	},
	"1114": {
		"product": "DYNAMIXEL PRO",
		"header1": "통신 회로",
		"header2": "연결 확인",
		"header3": "",
		"content": "배선을 통하여 다이나믹셀에 전원이 올바르게 공급되었다면 다이나믹셀의 LED가 한 번 깜박입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/#연결-확인"
	},
	"1115": {
		"product": "L42-10-S300-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 257 크기 42 72 42 mm 해상도 096 pulse rev 감속비 303 75 백래쉬 arcmin 반경방향 하중 280 혼으로부터 10 mm 축방향 하중 100 No Load Speed 29 rev min No Load Current 72 Continuous Speed 27 rev min Continuous Torque Nm Continuous Current 출력 10 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#주요-사양"
	},
	"1116": {
		"product": "L42-10-S300-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#성능-그래프"
	},
	"1117": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#컨트롤-테이블"
	},
	"1118": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#컨트롤-테이블-데이터-주소"
	},
	"1119": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#영역-eeprom-ram"
	},
	"1120": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#크기"
	},
	"1121": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#접근권한"
	},
	"1122": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#초기값"
	},
	"1123": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 35 072 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 10 147 483 647 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 30 Torque Limit 987 987 32 Velocity Limit 147 483 647 36 Max Position Limit 2048 147 483 648 147 483 647 pulse 40 Min Position Limit 2047 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 30 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#eeprom-영역"
	},
	"1124": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 40 65535 588 Velocity Gain 440 65535 594 Position Gain 64 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 604 Goal Torque Torque Limit 30 Torque Limit 30 606 Goal Acceleration Acceleration Limit 26 610 Moving 611 Present Position pulse 615 Present Velocity 621 Present Current 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#ram-영역"
	},
	"1125": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#컨트롤-테이블-설명"
	},
	"1126": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number L42 10 S300 35 072 0x8900 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#model-number0"
	},
	"1127": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#firmware-version6"
	},
	"1128": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#id7"
	},
	"1129": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#baud-rate8"
	},
	"1130": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#return-delay-time9"
	},
	"1131": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 속도제어 모드 이 모드에서는 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 기본값 위치제어 모드 이 모드에서는 위치와 속도와 토크를 제어 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#operating-mode11"
	},
	"1132": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#moving-threshold17"
	},
	"1133": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#temperature-limit21"
	},
	"1134": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#minmax-voltage-limit22-24"
	},
	"1135": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#acceleration-limit26"
	},
	"1136": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#torque-limit30"
	},
	"1137": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#velocity-limit32"
	},
	"1138": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#minmax-position-limit36-40"
	},
	"1139": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#external-port-mode"
	},
	"1140": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 기본값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 기본값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#shutdown48"
	},
	"1141": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#indirect-address"
	},
	"1142": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#torque-enable562"
	},
	"1143": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#rgb-led563"
	},
	"1144": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(594, 592, 590)",
		"content": "위치 제어모드에서 동작하는 위치 제어기의 Gain입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 Position Gain을 Position Gain을 Position Gain을 P로 표기합니다 Gain 값 범위 32 767 주의 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기에 대한 설명은 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#position-pid-gain594-592-590"
	},
	"1145": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 095 0xFFF 까지 사용 가능하며 단위는 088 입니다 CW CCW Angle Limit에서 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alram LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 모델명 각도값 범위 위치값 범위 설명 L42 10 S300 360 095 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#goal-position596"
	},
	"1146": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "위치제어 모드 Goal Position으로 이동하는 속도입니다 023 0x3FF 까지 사용되며 단위는 약 114 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 속도를 사용한다는 의미입니다 023의 경우 약 117 07 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 34 33 rev min 입니다 속도제어 모드 목표 방향으로 이동하는 속도입니다 023 023 까지 사용되며 단위는 114 rev min 입니다 023 범위의 값을 사용하면 CCW 방향으로 회전하며 0으로 설정하면 정지합니다 023 범위의 값을 사용하면 CW 방향으로 회전하며 0으로 설정하면 정지합니다 주의 해당 모델의 최대 rpm을 확인하시기 바랍니다 최대 rpm 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#goal-velocity600"
	},
	"1147": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 30 31 의 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#goal-torque604"
	},
	"1148": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "이 값을 이용해 목표 가속도 값을 설정 할 수 있습니다 동작 모드가 속도제어 모드 위치제어 모드 확장 위치제어 모드 일 때 사용할 수 있습니다 Goal Acceleration 606 과 Goal Velocity 600 의 값이 0이 아니어야 프로파일 컨트롤을 합니다 rev min 환산계수는 Goal Velocity 600 를 참조하세요 값 단위 147 483 647 147 483 647 214 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#goal-acceleration606"
	},
	"1149": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#moving610"
	},
	"1150": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(611)",
		"content": "장치의 현재 위치 값입니다 자세한 정보는 Goal Position 596 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#present-position611"
	},
	"1151": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "현재 이동하는 속도입니다 이 값은 023 023 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 023 범위의 값이면 CW 방향으로 회전한다는 의미입니다 이 값의 단위는 약 114 rev min 입니다 예를 들어 300으로 설정된 경우 CCW 방향 약 34 33 rev min 으로 이동 중이라는 의미입니다 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#present-velocity615"
	},
	"1152": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "수식 250 048 Current mA Present Current Goal Torque ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#present-current621"
	},
	"1153": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100이면 10 입니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#present-input-voltage623"
	},
	"1154": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "장치 내부의 온도이며 값의 단위는 섭씨 입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 더 자세한 정보는 Temperature Limit 21 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#present-temperature625"
	},
	"1155": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#registered-instruction890"
	},
	"1156": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#status-return-level891"
	},
	"1157": {
		"product": "L42-10-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#hardware-error-status892"
	},
	"1158": {
		"product": "L42-10-S300-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#조립-예시"
	},
	"1159": {
		"product": "L42-10-S300-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP42 H110K FRP42 H120K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#옵션프레임-조립"
	},
	"1160": {
		"product": "L42-10-S300-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#유지보수"
	},
	"1161": {
		"product": "L42-10-S300-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#참고자료"
	},
	"1162": {
		"product": "L42-10-S300-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#커넥터-정보"
	},
	"1163": {
		"product": "L42-10-S300-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l42-10-s300-r/#도면"
	},
	"1164": {
		"product": "L54-30-S400-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 612 크기 54 108 54 mm 해상도 288 395 pulse rev 감속비 400 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 28 rev min No Load Current 19 Continuous Speed 26 rev min Continuous Torque Nm Continuous Current 출력 30 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#주요-사양"
	},
	"1165": {
		"product": "L54-30-S400-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#성능-그래프"
	},
	"1166": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#컨트롤-테이블"
	},
	"1167": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#컨트롤-테이블-데이터-주소"
	},
	"1168": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#영역-eeprom-ram"
	},
	"1169": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#크기"
	},
	"1170": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#접근권한"
	},
	"1171": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#초기값"
	},
	"1172": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 37 928 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00249657 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 100 300 16 11328 mA 32 Velocity Limit 000 147 483 647 00249657 rev min 36 Max Position Limit 144 197 147 483 648 147 483 647 pulse 40 Min Position Limit 144 197 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#eeprom-영역"
	},
	"1173": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 16 65535 588 Velocity Gain 412 65535 594 Position Gain 200 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00249657 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00249657 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#ram-영역"
	},
	"1174": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#컨트롤-테이블-설명"
	},
	"1175": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number L54 30 S400 37 928 0x9428 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#model-number0"
	},
	"1176": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#firmware-version6"
	},
	"1177": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#id7"
	},
	"1178": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#baud-rate8"
	},
	"1179": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#return-delay-time9"
	},
	"1180": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#operating-mode11"
	},
	"1181": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#homing-offset13"
	},
	"1182": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#moving-threshold17"
	},
	"1183": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#temperature-limit21"
	},
	"1184": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#minmax-voltage-limit22-24"
	},
	"1185": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#acceleration-limit26"
	},
	"1186": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#torque-limit30"
	},
	"1187": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#velocity-limit32"
	},
	"1188": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#minmax-position-limit36-40"
	},
	"1189": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#external-port-mode"
	},
	"1190": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#shutdown48"
	},
	"1191": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#indirect-address"
	},
	"1192": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#torque-enable562"
	},
	"1193": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#rgb-led563"
	},
	"1194": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#velocity-pi-gain586-588"
	},
	"1195": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#position-p-gain594"
	},
	"1196": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#goal-position596"
	},
	"1197": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#goal-velocity600"
	},
	"1198": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#goal-torque604"
	},
	"1199": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#goal-acceleration606"
	},
	"1200": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#moving610"
	},
	"1201": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#present-velocity615"
	},
	"1202": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#present-current621"
	},
	"1203": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#present-input-voltage623"
	},
	"1204": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#present-temperature625"
	},
	"1205": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#registered-instruction890"
	},
	"1206": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#status-return-level891"
	},
	"1207": {
		"product": "L54-30-S400-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#hardware-error-status892"
	},
	"1208": {
		"product": "L54-30-S400-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#조립-예시"
	},
	"1209": {
		"product": "L54-30-S400-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#옵션프레임-조립"
	},
	"1210": {
		"product": "L54-30-S400-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#유지보수"
	},
	"1211": {
		"product": "L54-30-S400-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#참고자료"
	},
	"1212": {
		"product": "L54-30-S400-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#커넥터-정보"
	},
	"1213": {
		"product": "L54-30-S400-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s400-r/#도면"
	},
	"1214": {
		"product": "L54-30-S500-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 591 크기 54 108 54 mm 해상도 361 384 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 23 rev min No Load Current Continuous Speed 21 rev min Continuous Torque Nm Continuous Current 출력 30 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#주요-사양"
	},
	"1215": {
		"product": "L54-30-S500-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#성능-그래프"
	},
	"1216": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#컨트롤-테이블"
	},
	"1217": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#컨트롤-테이블-데이터-주소"
	},
	"1218": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#영역-eeprom-ram"
	},
	"1219": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#크기"
	},
	"1220": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#접근권한"
	},
	"1221": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#초기값"
	},
	"1222": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 37 896 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00199234 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 100 300 16 11328 mA 32 Velocity Limit 000 147 483 647 00199234 rev min 36 Max Position Limit 180 692 147 483 648 147 483 647 pulse 40 Min Position Limit 180 692 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#eeprom-영역"
	},
	"1223": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 16 65535 588 Velocity Gain 256 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00199234 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00199234 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#ram-영역"
	},
	"1224": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#컨트롤-테이블-설명"
	},
	"1225": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number L54 30 S500 37 896 0x9408 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#model-number0"
	},
	"1226": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#firmware-version6"
	},
	"1227": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#id7"
	},
	"1228": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#baud-rate8"
	},
	"1229": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#return-delay-time9"
	},
	"1230": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#operating-mode11"
	},
	"1231": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#homing-offset13"
	},
	"1232": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#moving-threshold17"
	},
	"1233": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#temperature-limit21"
	},
	"1234": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#minmax-voltage-limit22-24"
	},
	"1235": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#acceleration-limit26"
	},
	"1236": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#torque-limit30"
	},
	"1237": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#velocity-limit32"
	},
	"1238": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#minmax-position-limit36-40"
	},
	"1239": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#external-port-mode"
	},
	"1240": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#shutdown48"
	},
	"1241": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#indirect-address"
	},
	"1242": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#torque-enable562"
	},
	"1243": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#rgb-led563"
	},
	"1244": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#velocity-pi-gain586-588"
	},
	"1245": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#position-p-gain594"
	},
	"1246": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#goal-position596"
	},
	"1247": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#goal-velocity600"
	},
	"1248": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#goal-torque604"
	},
	"1249": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#goal-acceleration606"
	},
	"1250": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#moving610"
	},
	"1251": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#present-velocity615"
	},
	"1252": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#present-current621"
	},
	"1253": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#present-input-voltage623"
	},
	"1254": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#present-temperature625"
	},
	"1255": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#registered-instruction890"
	},
	"1256": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#status-return-level891"
	},
	"1257": {
		"product": "L54-30-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#hardware-error-status892"
	},
	"1258": {
		"product": "L54-30-S500-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#조립-예시"
	},
	"1259": {
		"product": "L54-30-S500-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#옵션프레임-조립"
	},
	"1260": {
		"product": "L54-30-S500-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#유지보수"
	},
	"1261": {
		"product": "L54-30-S500-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#참고자료"
	},
	"1262": {
		"product": "L54-30-S500-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#커넥터-정보"
	},
	"1263": {
		"product": "L54-30-S500-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-30-s500-r/#도면"
	},
	"1264": {
		"product": "L54-50-S290-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 656 크기 54 108 54 mm 해상도 207 692 pulse rev 감속비 288 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 26 rev min No Load Current 05 Continuous Speed 22 rev min Continuous Torque Nm Continuous Current 출력 50 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#주요-사양"
	},
	"1265": {
		"product": "L54-50-S290-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#성능-그래프"
	},
	"1266": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#컨트롤-테이블"
	},
	"1267": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#컨트롤-테이블-데이터-주소"
	},
	"1268": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#영역-eeprom-ram"
	},
	"1269": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#크기"
	},
	"1270": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#접근권한"
	},
	"1271": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#초기값"
	},
	"1272": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 38 176 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00346667 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 120 360 16 11328 mA 32 Velocity Limit 000 147 483 647 00346667 rev min 36 Max Position Limit 103 846 147 483 648 147 483 647 pulse 40 Min Position Limit 103 846 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#eeprom-영역"
	},
	"1273": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 16 65535 588 Velocity Gain 412 65535 594 Position Gain 250 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00346667 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00346667 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#ram-영역"
	},
	"1274": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#컨트롤-테이블-설명"
	},
	"1275": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number L54 50 S290 38 176 0x9520 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#model-number0"
	},
	"1276": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#firmware-version6"
	},
	"1277": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#id7"
	},
	"1278": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#baud-rate8"
	},
	"1279": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#return-delay-time9"
	},
	"1280": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#operating-mode11"
	},
	"1281": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#homing-offset13"
	},
	"1282": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#moving-threshold17"
	},
	"1283": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#temperature-limit21"
	},
	"1284": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#minmax-voltage-limit22-24"
	},
	"1285": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#acceleration-limit26"
	},
	"1286": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#torque-limit30"
	},
	"1287": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#velocity-limit32"
	},
	"1288": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#minmax-position-limit36-40"
	},
	"1289": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#external-port-mode"
	},
	"1290": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#shutdown48"
	},
	"1291": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#indirect-address"
	},
	"1292": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#torque-enable562"
	},
	"1293": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#rgb-led563"
	},
	"1294": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#velocity-pi-gain586-588"
	},
	"1295": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#position-p-gain594"
	},
	"1296": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#goal-position596"
	},
	"1297": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#goal-velocity600"
	},
	"1298": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#goal-torque604"
	},
	"1299": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#goal-acceleration606"
	},
	"1300": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#moving610"
	},
	"1301": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#present-velocity615"
	},
	"1302": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#present-current621"
	},
	"1303": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#present-input-voltage623"
	},
	"1304": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#present-temperature625"
	},
	"1305": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#registered-instruction890"
	},
	"1306": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#status-return-level891"
	},
	"1307": {
		"product": "L54-50-S290-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#hardware-error-status892"
	},
	"1308": {
		"product": "L54-50-S290-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#조립-예시"
	},
	"1309": {
		"product": "L54-50-S290-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#옵션프레임-조립"
	},
	"1310": {
		"product": "L54-50-S290-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#유지보수"
	},
	"1311": {
		"product": "L54-50-S290-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#참고자료"
	},
	"1312": {
		"product": "L54-50-S290-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#커넥터-정보"
	},
	"1313": {
		"product": "L54-50-S290-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s290-r/#도면"
	},
	"1314": {
		"product": "L54-50-S500-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 656 크기 54 108 54 mm 해상도 361 384 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 16 rev min No Load Current Continuous Speed 13 rev min Continuous Torque 14 Nm Continuous Current 출력 100 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#주요-사양"
	},
	"1315": {
		"product": "L54-50-S500-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#성능-그래프"
	},
	"1316": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#컨트롤-테이블"
	},
	"1317": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#컨트롤-테이블-데이터-주소"
	},
	"1318": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#영역-eeprom-ram"
	},
	"1319": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#크기"
	},
	"1320": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#접근권한"
	},
	"1321": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#초기값"
	},
	"1322": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 38 152 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00199234 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 120 360 16 11328 mA 32 Velocity Limit 000 147 483 647 00199234 rev min 36 Max Position Limit 180 692 147 483 648 147 483 647 pulse 40 Min Position Limit 180 692 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#eeprom-영역"
	},
	"1323": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 16 65535 588 Velocity Gain 256 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00199234 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00199234 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#ram-영역"
	},
	"1324": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#컨트롤-테이블-설명"
	},
	"1325": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number L54 50 S500 38 152 0x9508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#model-number0"
	},
	"1326": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#firmware-version6"
	},
	"1327": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#id7"
	},
	"1328": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#baud-rate8"
	},
	"1329": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#return-delay-time9"
	},
	"1330": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#operating-mode11"
	},
	"1331": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#homing-offset13"
	},
	"1332": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#moving-threshold17"
	},
	"1333": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#temperature-limit21"
	},
	"1334": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#minmax-voltage-limit22-24"
	},
	"1335": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#acceleration-limit26"
	},
	"1336": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#torque-limit30"
	},
	"1337": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#velocity-limit32"
	},
	"1338": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#minmax-position-limit36-40"
	},
	"1339": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#external-port-mode"
	},
	"1340": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#shutdown48"
	},
	"1341": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#indirect-address"
	},
	"1342": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#torque-enable562"
	},
	"1343": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#rgb-led563"
	},
	"1344": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#velocity-pi-gain586-588"
	},
	"1345": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#position-p-gain594"
	},
	"1346": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#goal-position596"
	},
	"1347": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#goal-velocity600"
	},
	"1348": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#goal-torque604"
	},
	"1349": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#goal-acceleration606"
	},
	"1350": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#moving610"
	},
	"1351": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#present-velocity615"
	},
	"1352": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#present-current621"
	},
	"1353": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#present-input-voltage623"
	},
	"1354": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#present-temperature625"
	},
	"1355": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#registered-instruction890"
	},
	"1356": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#status-return-level891"
	},
	"1357": {
		"product": "L54-50-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#hardware-error-status892"
	},
	"1358": {
		"product": "L54-50-S500-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#조립-예시"
	},
	"1359": {
		"product": "L54-50-S500-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#옵션프레임-조립"
	},
	"1360": {
		"product": "L54-50-S500-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#유지보수"
	},
	"1361": {
		"product": "L54-50-S500-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#참고자료"
	},
	"1362": {
		"product": "L54-50-S500-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#커넥터-정보"
	},
	"1363": {
		"product": "L54-50-S500-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/l54-50-s500-r/#도면"
	},
	"1364": {
		"product": "M42-10-S260-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 269 크기 42 72 42 mm 해상도 263 187 pulse rev 감속비 257 백래쉬 arcmin 반경방향 하중 280 혼으로부터 10 mm 축방향 하중 100 No Load Speed 28 rev min No Load Current 52 Continuous Speed 26 rev min Continuous Torque Nm Continuous Current 출력 10 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#주요-사양"
	},
	"1365": {
		"product": "M42-10-S260-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#성능-그래프"
	},
	"1366": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#컨트롤-테이블"
	},
	"1367": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#컨트롤-테이블-데이터-주소"
	},
	"1368": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#영역-eeprom-ram"
	},
	"1369": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#크기"
	},
	"1370": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#접근권한"
	},
	"1371": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#초기값"
	},
	"1372": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 43 288 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00389076 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 300 900 02832 mA 32 Velocity Limit 000 147 483 647 00389076 rev min 36 Max Position Limit 131 593 147 483 648 147 483 647 pulse 40 Min Position Limit 131 593 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#eeprom-영역"
	},
	"1373": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 72 65535 588 Velocity Gain 520 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00389076 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 02832 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00389076 rev min 621 Present Current 02832 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#ram-영역"
	},
	"1374": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#컨트롤-테이블-설명"
	},
	"1375": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number M42 10 S260 43 288 0xA918 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#model-number0"
	},
	"1376": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#firmware-version6"
	},
	"1377": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#id7"
	},
	"1378": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#baud-rate8"
	},
	"1379": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#return-delay-time9"
	},
	"1380": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#operating-mode11"
	},
	"1381": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#homing-offset13"
	},
	"1382": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#moving-threshold17"
	},
	"1383": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#temperature-limit21"
	},
	"1384": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#minmax-voltage-limit22-24"
	},
	"1385": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#acceleration-limit26"
	},
	"1386": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#torque-limit30"
	},
	"1387": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#velocity-limit32"
	},
	"1388": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#minmax-position-limit36-40"
	},
	"1389": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#external-port-mode"
	},
	"1390": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#shutdown48"
	},
	"1391": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#indirect-address"
	},
	"1392": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#torque-enable562"
	},
	"1393": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#rgb-led563"
	},
	"1394": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#velocity-pi-gain586-588"
	},
	"1395": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#position-p-gain594"
	},
	"1396": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#goal-position596"
	},
	"1397": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#goal-velocity600"
	},
	"1398": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#goal-torque604"
	},
	"1399": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#goal-acceleration606"
	},
	"1400": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#moving610"
	},
	"1401": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#present-velocity615"
	},
	"1402": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#present-current621"
	},
	"1403": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#present-input-voltage623"
	},
	"1404": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#present-temperature625"
	},
	"1405": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#registered-instruction890"
	},
	"1406": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#status-return-level891"
	},
	"1407": {
		"product": "M42-10-S260-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#hardware-error-status892"
	},
	"1408": {
		"product": "M42-10-S260-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#조립-예시"
	},
	"1409": {
		"product": "M42-10-S260-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP42 H110K FRP42 H120K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#옵션프레임-조립"
	},
	"1410": {
		"product": "M42-10-S260-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#유지보수"
	},
	"1411": {
		"product": "M42-10-S260-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#참고자료"
	},
	"1412": {
		"product": "M42-10-S260-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#커넥터-정보"
	},
	"1413": {
		"product": "M42-10-S260-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-r/#도면"
	},
	"1414": {
		"product": "M42-10-S260-R(A)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 269 크기 42 72 42 mm 해상도 526 375 pulse rev 감속비 257 백래쉬 arcmin No Load Speed 28 rev min No Load Current 52 Continuous Speed 26 rev min Continuous Torque Nm Continuous Current 출력 10 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#주요-사양"
	},
	"1415": {
		"product": "M42-10-S260-R(A)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#성능-그래프"
	},
	"1416": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#컨트롤-테이블"
	},
	"1417": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#컨트롤-테이블-데이터-주소"
	},
	"1418": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#영역-eeprom-ram"
	},
	"1419": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#크기"
	},
	"1420": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#접근권한"
	},
	"1421": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#초기값"
	},
	"1422": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 43 289 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 255 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 20 600 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 461 461 mA 40 Acceleration Limit 10 867 346 756 rev min 44 Velocity Limit 600 600 01 rev min 48 Max Position Limit 262 931 263 187 263 187 pulse 52 Min Position Limit 262 931 263 187 263 187 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#eeprom-영역"
	},
	"1423": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 532 Position Gain 32 767 530 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 msec 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#ram-영역"
	},
	"1424": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 주의 Dynamixel PRO 는 Dynmaxiel PRO의 개선된 firmware 입니다 두 firmware의 Control table이 다르니 사용 전에 Control table의 주소를 필히 확인해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#컨트롤-테이블-설명"
	},
	"1425": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number M42 10 S260 43 289 0xA919 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#model-number0"
	},
	"1426": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#firmware-version6"
	},
	"1427": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#id7"
	},
	"1428": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#baud-rate8"
	},
	"1429": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#return-delay-time9"
	},
	"1430": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#drive-mode10"
	},
	"1431": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#operating-mode11"
	},
	"1432": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#secondary-id12"
	},
	"1433": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 13 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#homing-offset20"
	},
	"1434": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 600 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#moving-threshold24"
	},
	"1435": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#temperature-limit31"
	},
	"1436": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#maxmin-voltage-limit32-34"
	},
	"1437": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#pwm-limit36"
	},
	"1438": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 461 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#current-limit38"
	},
	"1439": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 346 756 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#acceleration-limit40"
	},
	"1440": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 600 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#velocity-limit44"
	},
	"1441": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 263 187 263 187 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 pulse 263 187 263 187 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#maxmin-position-limit48-52"
	},
	"1442": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#external-port-mode"
	},
	"1443": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#shutdown63"
	},
	"1444": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#indirect-address"
	},
	"1445": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#torque-enable512"
	},
	"1446": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#rgb-led"
	},
	"1447": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#status-return-level516"
	},
	"1448": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#registered-instruction517"
	},
	"1449": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#hardware-error-status518"
	},
	"1450": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#velocity-pi-gain524-526, Feedforward 2nd Gains(536)"
	},
	"1451": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528,530,532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#position-pid-gain528-530-532, Feedforward 1st Gains(538)"
	},
	"1452": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#bus-watchdog546"
	},
	"1453": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#goal-pwm548"
	},
	"1454": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#goal-current550"
	},
	"1455": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#goal-velocity552"
	},
	"1456": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#profile-acceleration556"
	},
	"1457": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#profile-velocity560"
	},
	"1458": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 263 187 263 187 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#goal-position564"
	},
	"1459": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#realtime-tick568"
	},
	"1460": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#moving570"
	},
	"1461": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#moving-status571"
	},
	"1462": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#present-pwm572"
	},
	"1463": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#present-current574"
	},
	"1464": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#present-velocity576"
	},
	"1465": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#present-position580"
	},
	"1466": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#velocity-trajectory584"
	},
	"1467": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#position-trajectory588"
	},
	"1468": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#present-input-voltage592"
	},
	"1469": {
		"product": "M42-10-S260-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#present-temperature594"
	},
	"1470": {
		"product": "M42-10-S260-R(A)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#조립-예시"
	},
	"1471": {
		"product": "M42-10-S260-R(A)",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP42 H110K FRP42 H120K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#옵션프레임-조립"
	},
	"1472": {
		"product": "M42-10-S260-R(A)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#유지보수"
	},
	"1473": {
		"product": "M42-10-S260-R(A)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#참고자료"
	},
	"1474": {
		"product": "M42-10-S260-R(A)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#커넥터-정보"
	},
	"1475": {
		"product": "M42-10-S260-R(A)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m42-10-s260-ra/#도면"
	},
	"1476": {
		"product": "M54-40-S250-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 710 크기 54 108 54 mm 해상도 251 417 pulse rev 감속비 251 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 28 rev min No Load Current 32 Continuous Speed 24 rev min Continuous Torque Nm Continuous Current 출력 40 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#주요-사양"
	},
	"1477": {
		"product": "M54-40-S250-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#성능-그래프"
	},
	"1478": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#컨트롤-테이블"
	},
	"1479": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#컨트롤-테이블-데이터-주소"
	},
	"1480": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#영역-eeprom-ram"
	},
	"1481": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#크기"
	},
	"1482": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#접근권한"
	},
	"1483": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#초기값"
	},
	"1484": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 46 096 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00397746 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 120 360 16 11328 mA 32 Velocity Limit 000 147 483 647 00397746 rev min 36 Max Position Limit 125 708 147 483 648 147 483 647 pulse 40 Min Position Limit 125 708 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#eeprom-영역"
	},
	"1485": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 16 65535 588 Velocity Gain 256 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00397746 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00397746 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#ram-영역"
	},
	"1486": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#컨트롤-테이블-설명"
	},
	"1487": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number M54 40 S250 46 096 0xB410 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#model-number0"
	},
	"1488": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#firmware-version6"
	},
	"1489": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#id7"
	},
	"1490": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#baud-rate8"
	},
	"1491": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#return-delay-time9"
	},
	"1492": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#operating-mode11"
	},
	"1493": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#homing-offset13"
	},
	"1494": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#moving-threshold17"
	},
	"1495": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#temperature-limit21"
	},
	"1496": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#minmax-voltage-limit22-24"
	},
	"1497": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#acceleration-limit26"
	},
	"1498": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#torque-limit30"
	},
	"1499": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#velocity-limit32"
	},
	"1500": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#minmax-position-limit36-40"
	},
	"1501": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#external-port-mode"
	},
	"1502": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#shutdown48"
	},
	"1503": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#indirect-address"
	},
	"1504": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#torque-enable562"
	},
	"1505": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#rgb-led563"
	},
	"1506": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#velocity-pi-gain586-588"
	},
	"1507": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#position-p-gain594"
	},
	"1508": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#goal-position596"
	},
	"1509": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#goal-velocity600"
	},
	"1510": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#goal-torque604"
	},
	"1511": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#goal-acceleration606"
	},
	"1512": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#moving610"
	},
	"1513": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#present-velocity615"
	},
	"1514": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#present-current621"
	},
	"1515": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#present-input-voltage623"
	},
	"1516": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#present-temperature625"
	},
	"1517": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#registered-instruction890"
	},
	"1518": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#status-return-level891"
	},
	"1519": {
		"product": "M54-40-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#hardware-error-status892"
	},
	"1520": {
		"product": "M54-40-S250-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#조립-예시"
	},
	"1521": {
		"product": "M54-40-S250-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#옵션프레임-조립"
	},
	"1522": {
		"product": "M54-40-S250-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#유지보수"
	},
	"1523": {
		"product": "M54-40-S250-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#참고자료"
	},
	"1524": {
		"product": "M54-40-S250-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#커넥터-정보"
	},
	"1525": {
		"product": "M54-40-S250-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-r/#도면"
	},
	"1526": {
		"product": "M54-40-S250-R(A)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 710 크기 54 108 54 mm 해상도 502 834 pulse rev 감속비 251 백래쉬 arcmin No Load Speed 28 rev min No Load Current 32 Continuous Speed 24 rev min Continuous Torque Nm Continuous Current 출력 40 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#주요-사양"
	},
	"1527": {
		"product": "M54-40-S250-R(A)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#성능-그래프"
	},
	"1528": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#컨트롤-테이블"
	},
	"1529": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#컨트롤-테이블-데이터-주소"
	},
	"1530": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#영역-eeprom-ram"
	},
	"1531": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#크기"
	},
	"1532": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#접근권한"
	},
	"1533": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#초기값"
	},
	"1534": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 46 097 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 255 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 20 840 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 470 470 mA 40 Acceleration Limit 11 037 414 976 rev min 44 Velocity Limit 840 840 01 rev min 48 Max Position Limit 251 173 251 417 251 417 pulse 52 Min Position Limit 251 173 251 417 241 417 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#eeprom-영역"
	},
	"1535": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 532 Position Gain 32 767 530 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 msec 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#ram-영역"
	},
	"1536": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 주의 Dynamixel PRO 는 Dynmaxiel PRO의 개선된 firmware 입니다 두 firmware의 Control table이 다르니 사용 전에 Control table의 주소를 필히 확인해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#컨트롤-테이블-설명"
	},
	"1537": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number M54 40 S250 46 097 0xB411 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#model-number0"
	},
	"1538": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#firmware-version6"
	},
	"1539": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#id7"
	},
	"1540": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#baud-rate8"
	},
	"1541": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#return-delay-time9"
	},
	"1542": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#drive-mode10"
	},
	"1543": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#operating-mode11"
	},
	"1544": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#secondary-id12"
	},
	"1545": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 13 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#homing-offset20"
	},
	"1546": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 840 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#moving-threshold24"
	},
	"1547": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#temperature-limit31"
	},
	"1548": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#maxmin-voltage-limit32-34"
	},
	"1549": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#pwm-limit36"
	},
	"1550": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 470 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#current-limit38"
	},
	"1551": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 414 976 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#acceleration-limit40"
	},
	"1552": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 840 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#velocity-limit44"
	},
	"1553": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 251 417 251 417 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 pulse 251 417 251 417 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#maxmin-position-limit48-52"
	},
	"1554": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#external-port-mode"
	},
	"1555": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#shutdown63"
	},
	"1556": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#indirect-address"
	},
	"1557": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#torque-enable512"
	},
	"1558": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#rgb-led"
	},
	"1559": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#status-return-level516"
	},
	"1560": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#registered-instruction517"
	},
	"1561": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#hardware-error-status518"
	},
	"1562": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#velocity-pi-gain524-526, Feedforward 2nd Gains(536)"
	},
	"1563": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528,530,532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#position-pid-gain528-530-532, Feedforward 1st Gains(538)"
	},
	"1564": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#bus-watchdog546"
	},
	"1565": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#goal-pwm548"
	},
	"1566": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#goal-current550"
	},
	"1567": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#goal-velocity552"
	},
	"1568": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#profile-acceleration556"
	},
	"1569": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#profile-velocity560"
	},
	"1570": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 251 417 251 417 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#goal-position564"
	},
	"1571": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#realtime-tick568"
	},
	"1572": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#moving570"
	},
	"1573": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#moving-status571"
	},
	"1574": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#present-pwm572"
	},
	"1575": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#present-current574"
	},
	"1576": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#present-velocity576"
	},
	"1577": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#present-position580"
	},
	"1578": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#velocity-trajectory584"
	},
	"1579": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#position-trajectory588"
	},
	"1580": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#present-input-voltage592"
	},
	"1581": {
		"product": "M54-40-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#present-temperature594"
	},
	"1582": {
		"product": "M54-40-S250-R(A)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#조립-예시"
	},
	"1583": {
		"product": "M54-40-S250-R(A)",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#옵션프레임-조립"
	},
	"1584": {
		"product": "M54-40-S250-R(A)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#유지보수"
	},
	"1585": {
		"product": "M54-40-S250-R(A)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#참고자료"
	},
	"1586": {
		"product": "M54-40-S250-R(A)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#커넥터-정보"
	},
	"1587": {
		"product": "M54-40-S250-R(A)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-40-s250-ra/#도면"
	},
	"1588": {
		"product": "M54-60-S250-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 853 크기 54 108 54 mm 해상도 251 417 pulse rev 감속비 251 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 33 rev min No Load Current 25 Continuous Speed 28 rev min Continuous Torque 10 Nm Continuous Current 출력 60 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#주요-사양"
	},
	"1589": {
		"product": "M54-60-S250-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#성능-그래프"
	},
	"1590": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#컨트롤-테이블"
	},
	"1591": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#컨트롤-테이블-데이터-주소"
	},
	"1592": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#영역-eeprom-ram"
	},
	"1593": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#크기"
	},
	"1594": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#접근권한"
	},
	"1595": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#초기값"
	},
	"1596": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 46 352 Model Information Firmware Version ID 252 Baud Rate 13 Return Delay Time 250 255 11 Operating Mode 13 Homing Offset 147 483 648 147 483 647 pulse 17 Moving Threshold 50 147 483 647 00397746 rev min 21 Temperature Limit 80 100 22 Max Voltage Limit 400 400 24 Min Voltage Limit 150 400 26 Acceleration Limit 147 483 647 58 000 rev min 30 Torque Limit 180 540 16 11328 mA 32 Velocity Limit 000 147 483 647 00397746 rev min 36 Max Position Limit 125 708 147 483 648 147 483 647 pulse 40 Min Position Limit 125 708 147 483 648 147 483 647 pulse 44 External Port Mode 45 External Port Mode 46 External Port Mode 47 External Port Mode 48 Shutdown 58 255 49 Indirect Address 634 562 949 51 Indirect Address 635 562 949 53 Indirect Address 636 562 949 Indirect Address 562 949 559 Indirect Address 256 889 562 949 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#eeprom-영역"
	},
	"1597": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 562 Torque Enable 563 LED Red 255 564 LED Green 255 565 LED Blue 255 586 Velocity Gain 16 65535 588 Velocity Gain 256 65535 594 Position Gain 32 65535 596 Goal Position Min Position Limit 40 Max Position Limit 36 pulse 600 Goal Velocity Velocity Limit 32 Velocity Limit 32 00397746 rev min 604 Goal Torque Torque Limit 30 Torque Limit 30 16 11328 mA 606 Goal Acceleration Acceleration Limit 26 58 000 rev min 610 Moving 611 Present Position pulse 615 Present Velocity 00397746 rev min 621 Present Current 16 11328 mA 623 Present Input Voltage 625 Present Temperature 626 External Port Data 095 628 External Port Data 095 630 External Port Data 095 632 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 Indirect Data 255 889 Indirect Data 256 255 890 Registered Instruction 891 Status Return Level 892 Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#ram-영역"
	},
	"1598": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#컨트롤-테이블-설명"
	},
	"1599": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number M54 60 S250 46 352 0xB510 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#model-number0"
	},
	"1600": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#firmware-version6"
	},
	"1601": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#id7"
	},
	"1602": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#baud-rate8"
	},
	"1603": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#return-delay-time9"
	},
	"1604": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "값 동작 모드 설명 토크 제어 모드 토크를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 토크와 속도를 제어 할 수 있습니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 토크를 제어 할 수 있습니다 확장 위치 제어 모드 위치와 속도와 토크를 제어할 수 있습니다 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#operating-mode11"
	},
	"1605": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(13)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 611 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 13 이 됩니다 값의 범위 147 483 648 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#homing-offset13"
	},
	"1606": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#moving-threshold17"
	},
	"1607": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#temperature-limit21"
	},
	"1608": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#minmax-voltage-limit22-24"
	},
	"1609": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#acceleration-limit26"
	},
	"1610": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(30)",
		"content": "목표 토크 값의 한계 값입니다 Goal Torque 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#torque-limit30"
	},
	"1611": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#velocity-limit32"
	},
	"1612": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "목표 위치의 상한과 하한 값입니다 Goal position 596 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 위치값의 범위는 147 483 648 147 483 647 이며 위치 제한값의 범위는 모델마다 상이하므로 아래 표를 참고하시기 바랍니다 동작모드가 확장 위치 제어 모드 일 때는 Position Limit이 의미가 없어집니다 모델명 위치 제한값의 범위 H54 200 S500 H54 100 S500 250 961 250 961 H42 20 S300 151 875 151 875 M54 60 S250 M54 40 S250 125 708 125 708 M42 10 S260 131 593 131 593 L54 50 S290 103 846 103 846 L54 50 S500 L54 30 S500 180 692 180 692 L54 30 S400 144 197 144 197 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#minmax-position-limit36-40"
	},
	"1613": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치에는 다용도의 외부확장포트가 있습니다 항목 범위 전압 전류 mA Analog input mode 외부 포트에 연결된 analog 값을 digital 값으로 변환해줍니다 이 값은 외부 포트 데이터 626 632 에 자동으로 업데이트 됩니다 Output mode 외부 포트의 전압을 또는 로 조절할 수 있습니다 외부 포트 데이터에 0을 쓰면 1을 쓰게 되면 가 나옵니다 Pull up input mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull up 됩니다 필요에 따라 외부에 추가로 Strong pull up 회로를 추가하셔도 됩니다 Pull up output mode 외부포트의 값이 0인지 1인지 확인 할 수 있습니다 외부 확장포트에 들어오는 전압에 따라서 External port data의 값이 변합니다 일땐 일땐 1이 됩니다 이 포트는 week pull down 됩니다 필요에 따라 외부에 추가로 Strong pull down 회로를 추가하셔도 됩니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#external-port-mode"
	},
	"1614": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 Torque enable값을 0으로 만들어서 모터 출력이 가 되도록 합니다 위험 상황이 발생하면 reboot를 하지 않는 한 장치를 사용할 수 없습니다 Bit 명칭 내용 Bit Bit Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 초기값 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 초기값 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 프로토콜 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#shutdown48"
	},
	"1615": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#indirect-address"
	},
	"1616": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#torque-enable562"
	},
	"1617": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#rgb-led563"
	},
	"1618": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(586, 588)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Gain에는 샘플링 타임이 포함되어 있습니다 아래 그림은 속도 제어모드에서의 제어기 블록다이어그램입니다 Velocity Gain을 Velocity Gain을 로 표기합니다 게인 값 범위 32 767 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#velocity-pi-gain586-588"
	},
	"1619": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain(594)",
		"content": "위치 제어 모드에서 동작하는 위치 제어기의 Gain 입니다 아래 그림은 위치 제어모드에서의 제어기 블록다이어그램입니다 위치제어기는 속도제어기와 Cascade형태로 연결되어 동작합니다 Position Gain을 P로 표기합니다 게인 값 범위 32 767 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#position-p-gain594"
	},
	"1620": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "Present Position 611 Goal Position 596 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 Max position limit 36 과 Min Position limit 40 사이에 있는 값이어야 합니다 모델명 각도 범위 위치값 범위 설명 H54 200 S500 H54 100 S500 180 180 250 961 250 961 H42 20 S300 180 180 151 875 151 875 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#goal-position596"
	},
	"1621": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "Goal Velocity 600 을 통해 목표 속도를 설정 할 수 있습니다 이 값은 Velocity Limit 32 보다 클 수 없습니다 동작모드 가 위치제어 모드 또는 확장 위치제어 모드일 경우 Goal Velocity 600 는 속도 제한값으로 사용됩니다 예외적으로 Goal Velocity 값이 일 경우에는 Velocity Limit 32 이 속도 제한값으로 사용됩니다 Position Gain 블록 다이어그램 참고 여기서 속도는 기어 전 단에 있는 모터의 회전속도를 의미합니다 기어 후 단의 장치 회전속도는 아래 변환계수를 곱하여 계산 할 수 있습니다 속도 RPM Goal Velocity 값 변환계수 모델명 RPM 변환계수 H54 200 S500 H54 100 S500 00199234 H42 20 S300 00329218 M54 60 S250 M54 40 S250 00397746 M42 10 S260 00389076 L54 50 S290 00346667 L54 50 S500 L54 30 S500 00199234 L54 30 S400 00249657 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#goal-velocity600"
	},
	"1622": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Torque(604)",
		"content": "Goal Torque 604 를 이용해 목표 토크를 설정할 수 있습니다 이 값은 Torque Limit 30 보다 큰 값을 쓸 수 없습니다 동작모드 가 토크 제어 모드가 아닐 경우 토크 제한값으로 사용됩니다 예외적으로 Goal Torque 604 가 일 경우에는 Torque Limit 30 이 토크 제한값으로 사용됩니다 Position Gain 또는 Velocity Gain의 블록 다이어그램 참고 토크 전류 Goal torque와의 관계는 아래 식을 참고하십시오 모델명 변환 수식 PRO 54 33 000 048 권선전류 mA Present Current 621 Goal Torque 604 PRO 42 250 048 권선전류 mA Present Current 621 Goal Torque 604 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#goal-torque604"
	},
	"1623": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "목표 가속도 값을 설정할 수 있습니다 동작모드 가 속도 제어모드 위치제어모드 확장 위치제어모드 일 때 사용할 수 있습니다 Goal Acceleration 과 Goal Velocity의 값이 0이 아니어야 프로파일 컨트롤을 합니다 값의 범위는 147 483 648 147 483 647 이며 단위는 기어 전 단에 있는 모터를 기준으로 58 000 rev min 입니다 변환계수는 Goal Velocity 600 를 참고하시기 바랍니다 값의 범위 단위 147 483 647 147 483 647 58 000 rev min Core Motor ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#goal-acceleration606"
	},
	"1624": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#moving610"
	},
	"1625": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "이 값은 현재 속도를 나타냅니다 더 자세한 정보는 Goal Velocity 600 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#present-velocity615"
	},
	"1626": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "이 값은 현재 전류를 나타냅니다 더 자세한 정보는 Goal Torque 604 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#present-current621"
	},
	"1627": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "이 값은 현재 입력전류를 나타냅니다 더 자세한 정보는 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#present-input-voltage623"
	},
	"1628": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "이 값은 다이나믹셀의 내부온도를 나타냅니다 더 자세한 정보는 Temperature Limit 21 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#present-temperature625"
	},
	"1629": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#registered-instruction890"
	},
	"1630": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#status-return-level891"
	},
	"1631": {
		"product": "M54-60-S250-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#hardware-error-status892"
	},
	"1632": {
		"product": "M54-60-S250-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#조립-예시"
	},
	"1633": {
		"product": "M54-60-S250-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#옵션프레임-조립"
	},
	"1634": {
		"product": "M54-60-S250-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#유지보수"
	},
	"1635": {
		"product": "M54-60-S250-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#참고자료"
	},
	"1636": {
		"product": "M54-60-S250-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#커넥터-정보"
	},
	"1637": {
		"product": "M54-60-S250-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-r/#도면"
	},
	"1638": {
		"product": "M54-60-S250-R(A)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 853 크기 54 126 54 mm 해상도 502 834 pulse rev 감속비 251 백래쉬 arcmin No Load Speed 33 rev min No Load Current 25 Continuous Speed 28 rev min Continuous Torque 10 Nm Continuous Current 출력 60 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 80 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#주요-사양"
	},
	"1639": {
		"product": "M54-60-S250-R(A)",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#성능-그래프"
	},
	"1640": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#컨트롤-테이블"
	},
	"1641": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#컨트롤-테이블-데이터-주소"
	},
	"1642": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#영역-eeprom-ram"
	},
	"1643": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#크기"
	},
	"1644": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#접근권한"
	},
	"1645": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#초기값"
	},
	"1646": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 46 353 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 255 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 50 830 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 980 980 mA 40 Acceleration Limit 11 145 457 932 rev min 44 Velocity Limit 830 830 01 rev min 48 Max Position Limit 251 173 251 417 251 417 pulse 52 Min Position Limit 251 173 251 417 241 417 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#eeprom-영역"
	},
	"1647": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 532 Position Gain 32 767 530 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 msec 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#ram-영역"
	},
	"1648": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 주의 Dynamixel PRO 는 Dynmaxiel PRO의 개선된 firmware 입니다 두 firmware의 Control table이 다르니 사용 전에 Control table의 주소를 필히 확인해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#컨트롤-테이블-설명"
	},
	"1649": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 Model Number M54 60 S250 46 353 0xB511 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#model-number0"
	},
	"1650": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#firmware-version6"
	},
	"1651": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#id7"
	},
	"1652": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#baud-rate8"
	},
	"1653": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#return-delay-time9"
	},
	"1654": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#drive-mode10"
	},
	"1655": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#operating-mode11"
	},
	"1656": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#secondary-id12"
	},
	"1657": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 13 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#homing-offset20"
	},
	"1658": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 830 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#moving-threshold24"
	},
	"1659": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#temperature-limit31"
	},
	"1660": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#maxmin-voltage-limit32-34"
	},
	"1661": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#pwm-limit36"
	},
	"1662": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 980 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#current-limit38"
	},
	"1663": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 457 932 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#acceleration-limit40"
	},
	"1664": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 830 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#velocity-limit44"
	},
	"1665": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 251 417 251 417 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 pulse 251 417 251 417 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#maxmin-position-limit48-52"
	},
	"1666": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#external-port-mode"
	},
	"1667": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#shutdown63"
	},
	"1668": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#indirect-address"
	},
	"1669": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#torque-enable512"
	},
	"1670": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#rgb-led"
	},
	"1671": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#status-return-level516"
	},
	"1672": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#registered-instruction517"
	},
	"1673": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#hardware-error-status518"
	},
	"1674": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#velocity-pi-gain524-526, Feedforward 2nd Gains(536)"
	},
	"1675": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528,530,532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#position-pid-gain528-530-532, Feedforward 1st Gains(538)"
	},
	"1676": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#bus-watchdog546"
	},
	"1677": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#goal-pwm548"
	},
	"1678": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#goal-current550"
	},
	"1679": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#goal-velocity552"
	},
	"1680": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#profile-acceleration556"
	},
	"1681": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#profile-velocity560"
	},
	"1682": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 251 417 251 417 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#goal-position564"
	},
	"1683": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#realtime-tick568"
	},
	"1684": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#moving570"
	},
	"1685": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#moving-status571"
	},
	"1686": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#present-pwm572"
	},
	"1687": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#present-current574"
	},
	"1688": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#present-velocity576"
	},
	"1689": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#present-position580"
	},
	"1690": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#velocity-trajectory584"
	},
	"1691": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#position-trajectory588"
	},
	"1692": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#present-input-voltage592"
	},
	"1693": {
		"product": "M54-60-S250-R(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#present-temperature594"
	},
	"1694": {
		"product": "M54-60-S250-R(A)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#조립-예시"
	},
	"1695": {
		"product": "M54-60-S250-R(A)",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H110K FRP54 H120K Set FRP54 H210K FRP54 H220K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#옵션프레임-조립"
	},
	"1696": {
		"product": "M54-60-S250-R(A)",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#유지보수"
	},
	"1697": {
		"product": "M54-60-S250-R(A)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "참고 장치 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#참고자료"
	},
	"1698": {
		"product": "M54-60-S250-R(A)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 MOLEX 50 37 5043 MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 MOLEX 22 03 5045 MOLEX 39 28 1023 MOLEX 53047 0610 Crimp 터미널 MOLEX 80 70 1039 MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#커넥터-정보"
	},
	"1699": {
		"product": "M54-60-S250-R(A)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro/m54-60-s250-ra/#도면"
	},
	"1700": {
		"product": "Protocol 1.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 다이나믹셀의 프로토콜에 맞추어 통신을 해야 합니다 다이나믹셀은 binary 형태의 데이터를 받아 구동됩니다 이러한 데이터를 전송하기 위한 프로그램 예제는 Dynamixel 전용 Controller 또는 USB2Dynamixel U2D2 의 사용자 설명서에 자세히 기술되어 있습니다 따라서 본 다이나믹셀의 사용자 설명서에서는 Main controller 가binary 형태의 데이터를 전송할 수 있다는 가정하에 다이나믹셀에서 사용하는 통신 방식에 대한 설명과 통신 프로토콜에 대한 설명만을 기술하였습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#개요"
	},
	"1701": {
		"product": "Protocol 1.0",
		"header1": "개요",
		"header2": "Packet",
		"header3": "",
		"content": "Main Controller와 다이나믹셀은 Packet이라고 불리는 데이터를 주고 받으며 통신합니다 Packet에는 두 가지 종류가 있습니다 Main Controller가 다이나믹셀을 제어하기 위해 전송하는 Instruction Packet과 다이나믹셀이 Main Controller로 답변하는 Status Packet이 그것입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#packet"
	},
	"1702": {
		"product": "Protocol 1.0",
		"header1": "개요",
		"header2": "ID",
		"header3": "",
		"content": "ID는 한 개의 버스에 여러 개의 다이나믹셀이 연결되었을 때 각각의 다이나믹셀들을 구별하기 위해 만든 고유 번호입니다 Instruction Packet과 Status Packet에 ID를 넣음으로써 Main Controller는 제어하고자 하는 다이나믹셀만을 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#id"
	},
	"1703": {
		"product": "Protocol 1.0",
		"header1": "개요",
		"header2": "Protocol",
		"header3": "",
		"content": "다이나믹셀은 bit Stop bit None Parity의 Asynchronous Serial 통신을 합니다 만약 같은 ID 를 가진 다이나믹셀이 연결되었을 경우 Packet 충돌이 일어나서 통신에 문제를 일으키게 됩니다 그러므로 ID가 같은 다이나믹셀이 존재하지 않도록 ID설정을 해야 합니다 다이나믹셀의 ID 는 변경 가능합니다 변경 방법은 다이나믹셀 ID설정 을 참고하시기 바랍니다 공장 출하시 초기 ID 는 1번 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#protocol"
	},
	"1704": {
		"product": "Protocol 1.0",
		"header1": "개요",
		"header2": "Half Duplex",
		"header3": "",
		"content": "Half Duplex란 TxD RxD를 하나의 선으로 공유하는 통신 방식으로 다이나믹셀은 Half Duplex 방식을 사용하고 있습니다 보통 하나의 BUS에 여러 개의 통신 장치를 연결할 경우에 사용합니다 여러 개의 장치가 송신하는 동안 그 외의 다른 모든 장치들은 입력 상태이어야 하기 때문에 통신 방향을 제어하는 Direction Port가 필요합니다 다이나믹셀을 제어하는 Main Controller는 통신 방향을 입력으로 설정해 놓고 있다가 Instructon Packet을 전송하는 동안만 통신 방향을 출력으로 설정해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#half-duplex"
	},
	"1705": {
		"product": "Protocol 1.0",
		"header1": "개요",
		"header2": "Tx, Rx Direction",
		"header3": "",
		"content": "Half Duplex 통신 방식을 사용하기 위해 필요한 제어 방법입니다 RS485 UART 에서는 송신이 끝나는 Timing 을 잘 맞춰서 Direction 을 수신 Mode 로 바꾸어야 합니다 CPU 에서는 일반적으로 UART STATUS 를 표시해주는 REGISTER 내에 다음과 같은 의미의 BIT 가 있습니다 TXD BUFFER READY BIT Transmission DATA 를 Buffer 에 적재할 수 있는 상태임을 뜻합니다 상태는 SERIAL TX BUFFER 가 비어 있다는 의미이지 이전에 전송한 데이터가 모두 CPU 밖으로 배출된 상태를 의미하는 것은 아닙니다 TXD SHIFT REGISTER EMPTY BIT Transmission Data 가 모두 CPU 밖으로 배출되었을 때 SET 됩니다 TXD BUFFER READY BIT 의 경우는 Serial 통신에서 한 Byte 를 송신할 때 사용되며 그 예는 다음과 같습니다 TxDByte byte bData TXD BUFFER READY BIT wait until data loaded SerialTxDBuffer bData data load TxD buffer Direction을 전환하는 시점에서는 TXD SHIFT REGISTER EMPTY BIT를 확인해야 합니다 다음은 Instruction packet을 전송하는 예제 프로그램입니다 DIRECTION PORT TX DIRECTION TxDByte 0xff TxDByte 0xff TxDByte bID TxDByte bLength TxDByte bInstruction TxDByte Parameter0 TxDByte Parameter1 DisableInterrupt interrupt should disable TxDByte Checksum last TxD TXD SHIFT REGISTER EMPTY BIT Wait till last data bit sent DIRECTION PORT RX DIRECTION Direction change RXD EnableInterrupt enable interrupt again 주의 주의할 부분은 LINE 8부터 LINE 12입니다 LINE 8이 필요한 이유는 그 시점에서 Interrupt 가 발생하여 Return Delay Time 보다 긴 시간 동안 Interrupt routine이 수행될 경우 Status Packet의 앞부분이 손상되기 때문입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#tx-rx-direction"
	},
	"1706": {
		"product": "Protocol 1.0",
		"header1": "개요",
		"header2": "Byte to Byte Time",
		"header3": "",
		"content": "Instruction Packet을 전송할 때 Byte와 Byte사이의 Delay Time을 의미하는데 이 시간이 100msec가 넘을 경우 RX 64는 전송 장해가 발생한 것으로 간주하고 다시 Packet의 header 0xff 0xff 를 기다립니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#byte-to-byte-time"
	},
	"1707": {
		"product": "Protocol 1.0",
		"header1": "Instruction Packet",
		"header2": "",
		"header3": "",
		"content": "Instruction Packet은 제어기가 다이나믹셀에게 보내는 명령 데이터입니다 Instruction Packet의 구조는 아래와 같습니다 Header1 Header2 ID Length Instruction Param Param Checksum 0xFF 0xFF ID Length Instruction Param Param CHKSUM ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#instruction-packet"
	},
	"1708": {
		"product": "Protocol 1.0",
		"header1": "Instruction Packet",
		"header2": "Header",
		"header3": "",
		"content": "Packet의 시작을 알리는 신호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#header"
	},
	"1709": {
		"product": "Protocol 1.0",
		"header1": "Instruction Packet",
		"header2": "Packet ID",
		"header3": "",
		"content": "Instruction Packet을 받을 다이나믹셀의 ID입니다 일반 ID 253 0x00 0xFD 254개를 사용할 수 있습니다 Broadcast ID 254 0xFE 연결된 모든 다이나믹셀이 Instruction Packet의 명령을 수행하며 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#packet-id"
	},
	"1710": {
		"product": "Protocol 1.0",
		"header1": "Instruction Packet",
		"header2": "Length",
		"header3": "",
		"content": "Packet의 길이로서 Instruction Parameter Checksum 항목의 데이터 길이를 포함합니다 Length Parameter 개수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#length"
	},
	"1711": {
		"product": "Protocol 1.0",
		"header1": "Instruction Packet",
		"header2": "Instruction",
		"header3": "",
		"content": "다이나믹셀에 지시하는 명령으로 아래와 같은 종류가 있습니다 값 명령어 세부 설명 파라미터 갯수 0x01 Ping 수행 내용 없음 제어기가 Status Packet을 받고자할 경우 사용 0x02 Read 다이나믹셀의 데이터를 읽는 명령 0x03 Write 다이나믹셀의 데이터를 쓰는 명령 0x04 Reg Write WRTE DATA와 내용은 유사하나 대기상태로 있다가 ACTION 명령이 도착해야 수행됨 0x05 Action REG WRITE로 등록된 동작을 시작하라는 명령 0x06 Factory Reset 다이나믹셀의 상태를 공장 출하 상태로 복귀시키는 명령 0x08 Reboot 장치를 재부팅 시키는 Instruction 0x83 Sync Write 한번에 여러 개의 다이나믹셀을 동시에 제어하고자 할때 사용되는 명령 0x92 Bulk Read 한번의 명령으로 여러 개의 다이나믹셀의 데이터를 순차적으로 읽음 이명령은 MX시리즈에서만 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#instruction"
	},
	"1712": {
		"product": "Protocol 1.0",
		"header1": "Instruction Packet",
		"header2": "Parameters",
		"header3": "",
		"content": "보조 데이터가 필요한 INSTRUCTION일 경우 PARAMETER를 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#parameters"
	},
	"1713": {
		"product": "Protocol 1.0",
		"header1": "Instruction Packet",
		"header2": "Instruction Checksum",
		"header3": "",
		"content": "Check Sum 은 Packet이 통신 중에 파손되었는지를 점검하기 위해 사용됩니다 아래의 방법에 따라 Check Sum을 계산하여 작성하십시오 Instruction Checksum ID Length Instruction Parameter1 Parameter 은 Not Bit 연산자입니다 위 식에서 괄호 안의 계산 결과가 255 0xFF 보다 클 경우 하위 byte 만 사용합니다 예를 들면 아래와 같은 Instruction Packet 을 쓰고 싶을 경우 ID 0x01 Length 0x05 Instruction 0x03 Parameter1 12 0x0C Parameter2 100 0x64 Parameter3 170 0xAA Checksum ID Length Instruction Parameter1 Parameter 0x01 0x05 0x03 0x0C 0x64 0xAA 0x123 하위 byte인 0x23만 Not 연산을 수행합니다 0xDC 따라서 Instruction Packet 은 0x01 0x05 0x03 0x0C 0x64 0xAA 0xDC 가 되어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#instruction-checksum"
	},
	"1714": {
		"product": "Protocol 1.0",
		"header1": "Status Packet(Return Packet)",
		"header2": "",
		"header3": "",
		"content": "다이나믹셀은 Main Controller로부터 받은 명령을 수행한 뒤 그 결과를 Main Controller에게 Return합니다 이 때 Return 되는 데이터를 Status Packet이라고 합니다 Status Packet의 구조는 아래와 같습니다 Header1 Header2 ID Length Error Param Param Checksum 0xFF 0xFF ID Length Error Param Param CHKSUM ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#status-packetreturn-packet"
	},
	"1715": {
		"product": "Protocol 1.0",
		"header1": "Status Packet(Return Packet)",
		"header2": "Header",
		"header3": "",
		"content": "Packet의 시작을 알리는 신호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#header"
	},
	"1716": {
		"product": "Protocol 1.0",
		"header1": "Status Packet(Return Packet)",
		"header2": "Packet ID",
		"header3": "",
		"content": "Status Packet을 전송하는 다이나믹셀의 ID입니다 일반 ID 253 0x00 0xFD 254개를 사용할 수 있습니다 Broadcast ID 254 0xFE 연결된 모든 다이나믹셀이 Instruction Packet의 명령을 수행하며 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#packet-id"
	},
	"1717": {
		"product": "Protocol 1.0",
		"header1": "Status Packet(Return Packet)",
		"header2": "Length",
		"header3": "",
		"content": "Status Packet의 길이로서 Error Parameter Checksum 항목의 데이터 길이를 포함합니다 Length Parameter 개수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#length"
	},
	"1718": {
		"product": "Protocol 1.0",
		"header1": "Status Packet(Return Packet)",
		"header2": "Error",
		"header3": "",
		"content": "다이나믹셀의 동작 중에 발생된 오류 상태를 나타내며 각 Bit별 의미는 다음 표와 같습니다 Bit 명령 세부 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 action명령이 전달된 경우 1로 설정됨 Bit Overload Error 설정된 Torque로 현재의 하중을 제어할 수 없을 때 1로 설정됨 Bit Checksum Error 전송된 Instruction Packet의 Checksum이 맞지 않을 때 1로 설정됨 Bit Range Error 사용범위를 벗어난 명령일 경우 1로 설정됨 Bit Overheating Error Dynamixel 내부 온도가 Control Table에 설정된 동작온도 범위를 벗어났을 때 1로 설정 Bit Angle Limit Error Goal Position이 CW Angle Limit CCW Angle Limit 범위 밖의 값으로 Writing 되었을때 1로 설정됨 Bit Input Voltage Error Error인가된 전압이 Control Table에 설정된 동작전압 범위를 벗어났을 경우 1로 설정됨 예를 들어 Status Packet이 아래와 같이 Return 되었을 경우 0xFF 0xFF 0x01 0x02 0x24 0xD8 ID 가 01 번인 RX 64로부터 0x24 의 Error가 발생했다는 것을 의미합니다 0x24는 진수로 00100100 이므로 Bit 와 Bit 가 이 된 것입니다 즉 Overload Error 와 Overheating Error 가 발생되었다는 것을 알 수 있습니다 주의 위 테이블에 나와있는 에러 종류는 액츄에이터와 관련된 사항이며 다이나믹셀의 종류에 따라 내용이 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#error"
	},
	"1719": {
		"product": "Protocol 1.0",
		"header1": "Status Packet(Return Packet)",
		"header2": "[Parameter]",
		"header3": "",
		"content": "ERROR 외의 Data 를 Return 합니다 사용 방법은 Instruction의 종류 를 참고하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#error"
	},
	"1720": {
		"product": "Protocol 1.0",
		"header1": "Status Packet(Return Packet)",
		"header2": "Status Checksum",
		"header3": "",
		"content": "used check packet damaged during communication Status Checksum calculated according following formula Status Checksum ID Length Error Parameter1 Parameter ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#status-checksum"
	},
	"1721": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "",
		"header3": "",
		"content": "Instruction Packet은 7종류의 명령들이 있습니다 다이나믹셀을 구동시키기 위해서는 Main Controller에서 다이나믹셀에 Instruction Packet이라는 binary 형태의 데이터를 보내야 합니다 또한 다이나믹셀은 Instruction Packet을 받아 명령을 수행한 뒤 그 결과를 Status Packet으로 Main Controller 에 응답합니다 여기에서는 Instruction Packet의 각 명령 별로 사용 예를 기술하였습니다 주의 아래 예제는 다이나믹셀 액츄에이터 RX 64를 기반으로 작성된 예제입니다 AX 12A DX 등 다른 다이나믹셀도 동일한 명령으로 구성되어 있으므로 같은 Packet 형식으로 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#instruction의-종류"
	},
	"1722": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Ping",
		"header3": "",
		"content": "아무 것도 지시하지 않습니다 단지 Status Packet을 받고자 할 때나 특정 ID를 갖는 다이나믹셀의 존재를 확인하기 위해 사용됩니다 다이나믹셀의 Status Return Level 16 이 으로 설정되어 있더라도 Ping 명령어에 응답하게 됩니다 단 PING instruction 을 사용하더라도 Check Sum Error가 발생한 경우에는 Status Packet을 반환하지 않습니다 Length Instruction Parameter 0x02 0x01 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#ping"
	},
	"1723": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Ping",
		"header3": "예제",
		"content": "예제 설명 ID RX 64 가 동일한 통신속도를 사용하는 PC와 연결되어 있을것 Ping Instruction Packet H1 H2 ID LEN INST CKSM 0xFF 0xFF 0x01 0x02 0x01 0xFB ID Status Packet H1 H2 ID LEN ERR CKSM 0xFF 0xFF 0x01 0x02 0x00 0xFC ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#ping"
	},
	"1724": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Read",
		"header3": "",
		"content": "Control Table의 Data를 읽는 명령입니다 Length Instruction Param Param 0x04 0x02 데이터의 시작 주소 데이터의 길이 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#read"
	},
	"1725": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Read",
		"header3": "예제",
		"content": "예제 설명 ID RX 64 Present Temperature 읽어오기 시작주소 43 0x2B Read Instruction Packet H1 H2 ID LEN INST P1 P2 CKSM 0xFF 0xFF 0x01 0x04 0x02 0x2B 0x01 0xCC ID Status Packet H1 H2 ID LEN ERR P1 CKSM 0xFF 0xFF 0x01 0x03 0x00 0x20 0xDB ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#read"
	},
	"1726": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Write",
		"header3": "",
		"content": "Control Table에 Data를 쓰는 명령입니다 Length Instruction Param Param Param Param 0x03 데이터의 시작 주소 첫번째 바이트 두번째 바이트 N번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#write"
	},
	"1727": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Write",
		"header3": "예제",
		"content": "예제 설명 ID broadcast RX 64 불특정 다이나믹셀의 ID를 로 설정합니다 Write Instruction Packet H1 H2 ID LEN INST P1 P2 CKSM 0xFF 0xFF 0xFE 0x04 0x03 0x03 0x01 0xF6 주의 Broadcast ID 0xFE 가 사용될 경우 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#write"
	},
	"1728": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Reg Write",
		"header3": "",
		"content": "REG WRITE명령은 WRITE DATA명령과 기능은 유사하나 명령이 수행되는 시점이 다릅니다 Instruction Packet이 도착하면 그 값을 Buffer에 저장하고 Write 동작은 대기 상태로 남겨둡니다 이때 Registered Instruction Address 44 0x2C 이 1로 설정됩니다 이후에 Action Instruction Packet이 도착하면 Registered Instruction 이 0으로 바뀌면서 비로소 등록되어 있던 Write명령이 실행됩니다 Length Instruction Param Param Param 0x04 데이터의 시작 주소 첫번째 바이트 N번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#reg-write"
	},
	"1729": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Reg Write",
		"header3": "예제",
		"content": "예제 설명 ID RX 64 Reg Write을 이용해서 500 0x1F4 을 Goal Position 30 에 입력하고 Action 명령어를 기다렸다가 움직입니다 Reg Write Instruction Packet H1 H2 ID LEN INST P1 P2 P3 CKSM 0xFF 0xFF 0x01 0x05 0x04 0x1E 0xF4 0x01 0xE2 ID Status Packet H1 H2 ID LEN ERR CKSM 0xFF 0xFF 0x01 0x02 0x00 0xFC ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#reg-write"
	},
	"1730": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Action",
		"header3": "",
		"content": "REG WRITE로 등록된 WRITE 작업을 수행하라는 명령입니다 ACTION 명령은 여러 개의 다이나믹셀들을 동시에 움직여야 하는 경우 사용합니다 여러 개의 구동장치를 통신에 의해 제어할 때 맨 처음 명령을 전달 받는 구동장치와 맨 마지막에 명령을 전달 받는 구동장치는 구동 시점에 약간의 시간 차이가 있는데 ACTION 명령은 이 문제를 해결합니다 주의 Action 명령어를 사용할 경우 Status Packet은 반환되지 않습니다 Length Instruction Parameter 0x02 0x05 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#action"
	},
	"1731": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Action",
		"header3": "예제",
		"content": "예제 설명 다이나믹셀이 미리 Reg Write를 이용해서 데이터를 수신해야 합니다 Action Instruction Packet H1 H2 ID LEN INST CKSM 0xFF 0xFF 0xFE 0x02 0x05 0xFA ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#action"
	},
	"1732": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Factory Reset",
		"header3": "",
		"content": "Control Table의 Data를 공장 출하 값 상태로 되돌려 놓습니다 Broadcast ID 0xFE 로 RESET 명령을 사용할 수 없습니다 지원 모델 MX 12W V41 MX 28 V40 MX 64 V40 MX 106 V40 시리즈 XL 320 제외 MX 시리즈 주의 RESET 명령을 사용하면 사용자가 EEPROM에 설정했던 값이 지워지므로 사용에 주의하시기 바랍니다 Length Instruction Parameter 0x02 0x06 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#factory-reset"
	},
	"1733": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Factory Reset",
		"header3": "예제",
		"content": "예제 설명 ID RX 64 다이나믹셀을 공장 출하시 설정으로 복구시킵니다 Factory Reset Instruction Packet H1 H2 ID LEN INST CKSM 0xFF 0xFF 0x00 0x02 0x06 0xF7 ID Status Packet H1 H2 ID LEN ERR CKSM 0xFF 0xFF 0x00 0x02 0x00 0xFD ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#factory-reset"
	},
	"1734": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Reboot",
		"header3": "",
		"content": "장치를 재부팅 시킵니다 지원 모델 MX 12W V41 MX 28 V40 MX 64 V40 MX 106 V40 시리즈 XL 320 제외 MX 시리즈 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#reboot"
	},
	"1735": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Reboot",
		"header3": "예제",
		"content": "예제 설명 ID XM430 W210 를 Reboot 시킬 경우 Reboot Instruction Packet H1 H2 ID LEN INST CKSM 0xFF 0xFF 0x01 0x02 0x08 0xF4 ID Status Packet H1 H2 ID LEN ERR CKSM 0xFF 0xFF 0x01 0x02 0x00 0xFC ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#reboot"
	},
	"1736": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Write",
		"header3": "",
		"content": "한번의 Instruction Packet전송으로 여러 개의 다이나믹셀들을 동시에 제어하고자 할 때 사용되는 명령어입니다 이 명령을 사용하면 여러 명령을 한번에 전달하므로 Reg Write Action에 비해 통신시간이 줄어듭니다 단 Write 하고자 하는 컨트롤 테이블의 주소와 길이가 모두 동일해야 SYNC WRITE 명령을 사용할 수 있습니다 또한 ID는 Broadcasting ID로 전송되어야 합니다 항목 설명 Instruction 0x83 Length 데이터 길이 다이나믹셀 갯수 Parameter 시작주소 Parameter 데이터 길이 Parameter 첫번째 장치 ID Parameter 첫번째 장치 첫번째 데이터 바이트 Parameter 첫번째 장치 두번째 데이터 바이트 Parameter 첫번째 장치 L번째 데이터 바이트 Parameter 두번째 장치 ID Parameter 두번째 장치 첫번째 데이터 바이트 Parameter 두번째 장치 두번째 데이터 바이트 Parameter 2L 두번째 장치 L번째 데이터 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#sync-write"
	},
	"1737": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Write",
		"header3": "예제",
		"content": "예제 설명 ID RX 64 Goal Position 30 0x1E 에 0x010을 입력하고 Moving Speed 32 0x20 에 0x150을 입력함 ID RX 64 Goal Position 30 0x1E 에 0x220을 입력하고 Moving Speed 32 0x20 에 0x360을 입력함 Sync Write Instruction Packet H1 H2 ID LEN INST P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 CKSM 0xFF 0xFF 0xFE 0x0E 0x83 0x1E 0x04 0x00 0x10 0x00 0x50 0x01 0x01 0x20 0x02 0x60 0x03 0x67 주의 Broadcast ID 0xFE 가 사용될 경우 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#sync-write"
	},
	"1738": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Read",
		"header3": "",
		"content": "한 번의 Instruction Packet 전송으로 여러 개의 다이나믹셀 MX시리즈 에서 동시에 값을 읽어오고자 할 때 사용되는 명령어입니다 여러 번의 READ 명령을 내리는 것에 비해 패킷의 길이가 줄어들고 리턴 되는 상태 패킷들 사이에 유휴 시간이 줄어들어 통신 시간을 절약할 수 있습니다 단 하나의 모듈에 여러 번 읽어 오도록 사용할 수는 없으며 동일한 모듈 ID 를 여러 번 지정할 경우 가장 먼저 지정된 파라미터만 처리됩니다 항목 설명 Instruction 0x92 Length 3N Parameter 0x00 Parameter 첫번째 장치 읽어들일 데이터의 길이 Parameter 첫번째 장치 ID Parameter 첫번째 장치 시작주소 Parameter 3N N번째 장치 읽어들일 데이터의 길이 Parameter 3N N번째 장치 ID Parameter 3N N번째 장치 시작주소 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#bulk-read"
	},
	"1739": {
		"product": "Protocol 1.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Read",
		"header3": "예제",
		"content": "예제 설명 ID MX 64 바이트 Goal Position 30 0x1E 값을 읽어옵니다 ID MX 64 바이트 Present Position 36 0x24 값을 읽어옵니다 Bulk Read Instruction Packet H1 H2 ID LEN INST P1 P2 P3 P4 P5 P6 P7 CKSM 0xFF 0xFF 0xFE 0x09 0x92 0x00 0x02 0x01 0x1E 0x02 0x02 0x24 0x1D 이러한 동작을 지시하기 위한 명령 패킷은 다음과 같이 이루어집니다 0xFF 0xFF 0xFE 0x09 0x92 0x00 0x02 0x01 0x1E 0x02 0x02 0x24 0x1D 이 때 ID 인 모듈은 데이터 버스 상에 ID 바로 전 파라미터의 ID 인 모듈의 상태 패킷이 전송되는 것을 감시하다가 ID 인 모듈의 상태 패킷이 전송 완료되는 즉시 자신의 상태 패킷을 전송하게 된다 리턴되는 상태 패킷은 아래와 같이 됩니다 0xFF 0xFF 0x01 0x04 0x00 0x00 0x80 0x7A 0xFF 0xFF 0x02 0x04 0x00 0x00 0x80 0x79 각각 모듈 ID 과 ID 에서 보낸 상태 패킷이 연달아 들어오는 형식이 됩니다 ID Status Packet H1 H2 ID LEN ERR P1 P2 CKSM 0xFF 0xFF 0x01 0x04 0x00 0x00 0x80 0x7A ID Status Packet H1 H2 ID LEN ERR P1 P2 CKSM 0xFF 0xFF 0x02 0x04 0x00 0x00 0x80 0x79 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#bulk-read"
	},
	"1740": {
		"product": "Protocol 1.0",
		"header1": "추가 예제",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol1/#추가-예제"
	},
	"1741": {
		"product": "Protocol 2.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "프로토콜 0을 지원하는 다이나믹셀 MX 28 MX 64 MX 106 펌웨어 v39 이상 시리즈 Pro 시리즈 프로토콜 0을 지원하는 제어기 CM 150 CM 200 OpenCM9 04 OpenCR 프로토콜 0을 지원하는 소프트웨어 로보플러스 스마트 앱 로보플러스 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#개요"
	},
	"1742": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "",
		"header3": "",
		"content": "Instruction Packet은 Main Controller가 장치 Device 로 보내는 명령 데이터 입니다 Header1 Header2 Header3 Reserved Packet ID Length1 Length2 Instruction Param Param Param CRC1 CRC2 0xFF 0xFF 0xFD 0x00 ID Len Len Instruction Param Param CRC CRC ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#instruction-packet"
	},
	"1743": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "Header",
		"header3": "",
		"content": "Packet의 시작을 나타내는 필드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#header"
	},
	"1744": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "Reserved",
		"header3": "",
		"content": "0x00 0xFD 는 사용할 수 없음 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reserved"
	},
	"1745": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "Packet ID",
		"header3": "",
		"content": "Instruction Packet을 받아 처리해야 할 장치의 ID를 나타내는 필드 범위 252 0x00 0xFC 까지 253 개 사용 가능 Broadcast ID 254 0xFE 연결된 모든 장치가 Instruction Packet 을 실행하도록 함 253 0xFD 255 0xFF Header와 중복을 피하기 위해 사용하지 않음 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#packet-id"
	},
	"1746": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "Packet Length",
		"header3": "",
		"content": "Packet Length 이후의 길이 Instruction Parameter CRC 필드 Packet Length Parameter 갯수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#packet-length"
	},
	"1747": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "Instruction",
		"header3": "",
		"content": "Packet의 용도를 정의하는 필드 값 명령 상세 설명 0x01 Ping Packet ID와 동일한 ID를 갖은 장치에 Packet이 도달했는지 여부 확인을 위한 Instruction 0x02 Read 장치로부터 데이터를 읽어오기 위한 Instruction 0x03 Write 장치에 데이터를 쓰기 위한 Instruction 0x04 Reg Write Instruction Packet을 대기 상태로 등록하는 Instruction Action 명령에 의해 실행됨 0x05 Action Reg Write 로 미리 등록한 Packet을 실행하는 Instruction 0x06 Factory Reset 컨트롤테이블을 공장 출하 상태의 초기값으로 되돌리는 Instruction 0x08 Reboot 장치를 재부팅 시키는 Instruction 0x10 Clear 장치의 특정 상태를 해제하는 Instruction 0x55 Status Return Instruction Packet 에 대한 Return Instruction 0x82 Sync Read 다수의 장치에 대해서 동일한 Address에서 동일한 길이의 데이터를 한 번에 읽기 위한 Instruction 0x83 Sync Write 다수의 장치에 대해서 동일한 Address에 동일한 길이의 데이터를 한 번에 쓰기 위한 Instruction 0x92 Bulk Read 다수의 장치에 대해서 서로 다른 Address에서 서로 다른 길이의 데이터를 한 번에 읽기 위한 Instruction 0x93 Bulk Write 다수의 장치에 대해서 서로 다른 Address에 서로 다른 길이의 데이터를 한번에 쓰기 위한 Instruction ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#instruction"
	},
	"1748": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "Parameters",
		"header3": "",
		"content": "Instruction의 보조 데이터 필드로써 Instruction 마다 용도가 다름 음수 데이터의 표현 방법 제품별로 차이가 있으므로 해당 제품의 eManual 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#parameters"
	},
	"1749": {
		"product": "Protocol 2.0",
		"header1": "Instruction Packet",
		"header2": "CRC",
		"header3": "",
		"content": "16bit CRC Packet이 통신 중에 파손되었는지를 점검하기 위한 필드 CRC 계산 코드 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#crc"
	},
	"1750": {
		"product": "Protocol 2.0",
		"header1": "Status Packet",
		"header2": "",
		"header3": "",
		"content": "기본구성 Header Reserved Packet ID Packet Length 16bit CRC Instruction Packet 과 동일 Header1 Header2 Header3 Reserved Packet ID Length1 Length2 Instruction ERR PARAM PARAM PARAM CRC1 CRC2 0xFF 0xFF 0xFD 0x00 ID Len Len Instruction Error Param Param CRC CRC ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#status-packet"
	},
	"1751": {
		"product": "Protocol 2.0",
		"header1": "Status Packet",
		"header2": "Instruction",
		"header3": "",
		"content": "Status Packet의 Instruction은 0x55 Status 로 고정 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#status-packet"
	},
	"1752": {
		"product": "Protocol 2.0",
		"header1": "Status Packet",
		"header2": "Error",
		"header3": "",
		"content": "Instruction Packet 의 처리 결과를 나타냄 Bit Bit Bit Alert Error Number Alert 장치에 문제가 발생한 경우 로 Setting 됨 이 경우 Control Table 의 Hardware error status 값을 읽어 보면 문제의 원인을 알 수 있음 Error Number Instruction Packet 의 처리에 Error 가 발생한 경우 Value Error 설명 0x01 Result Fail 전송된 Instruction Packet 을 처리하는데 실패한 경우 0x02 Instruction Error 정의되지 않은 Instruction 을 사용한 경우 Reg Write 없이 Action 을 사용한 경우 0x03 CRC Error 전송된 Packet 의 CRC 값이 맞지 않는 경우 0x04 Data Range Error 해당 Address 에 쓰려는 Data 가 최소 최대값의 범위를 벗어난 경우 0x05 Data Length Error 해당 Address 의 데이터 길이보다 짧은 데이터를 적으려고 한 경우 예 byte로 정의된 항목의 byte 만 쓰려고 하는 경우 0x06 Data Limit Error 해당 Address 에 쓰려는 Data 가 Limit 값을 벗어난 경우 0x07 Access Errer Read 혹은 정의되지 않은 Address 에 값을 쓰려고 한 경우 Write 혹은 정의되지 않은 Address 에 값을 읽으려고 한 경우 Torque Enable ROM Lock 상태에서 ROM 영역에 값을 쓰려고 한 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#error"
	},
	"1753": {
		"product": "Protocol 2.0",
		"header1": "Status Packet",
		"header2": "Parameter",
		"header3": "",
		"content": "Instruction의 보조 데이터 필드로써 Instruction 마다 용도가 다름 음수 데이터의 표현 방법 제품별로 차이가 있으므로 해당 제품의 eManual 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#error"
	},
	"1754": {
		"product": "Protocol 2.0",
		"header1": "Packet 처리",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#packet-처리"
	},
	"1755": {
		"product": "Protocol 2.0",
		"header1": "Packet 처리",
		"header2": "전송 시 처리 순서",
		"header3": "",
		"content": "Packet 기본 형태 생성 후 Byte Stuffing 0xFD 검사 범위 Instruction 필드부터 Parameter 필드 전체 CRC 제외 처리 방법 0xFF 0xFF 0xFD 패턴이 나타날 경우 Byte Stuffing 0xFD 을 추가 0xFF 0xFF 0xFD 가 존재하면 0xFD를 추가해서 0xFF 0xFF 0xFD 0xFD 로 변경 Packet Length Byte Stuffing이 적용된 Packet Length로 수정 CRC Byte Stuffing이 적용된 상태에서 CRC 계산 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#packet-처리"
	},
	"1756": {
		"product": "Protocol 2.0",
		"header1": "Packet 처리",
		"header2": "수신 시 처리 순서",
		"header3": "",
		"content": "Header 0xFF 0xFF 0xFD 검색 Byte Stuffing 0xFF 0xFF 0xFD 0xFD 은 무시 Packet ID Packet ID가 유효하면 Packet Length 만큼 추가로 수신 CRC Byte Stuffing이 포함된 수신 Packet 상태에서 계산 CRC가 일치하면 Byte Stuffing을 제거 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#packet-처리"
	},
	"1757": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#instruction의-종류"
	},
	"1758": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Ping",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#ping"
	},
	"1759": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Ping",
		"header3": "설명",
		"content": "장치의 존재 여부 및 기본 정보를 얻기 위한 Instruction 장치는 Status Return Level에 관계없이 Ping Instruction에는 무조건 Status Packet을 전송함 Packet ID 필드가 0xFE Broadcast ID 인 경우 모든 장치는 정해진 순서에 따라 자신의 Status Packet 을 전송함 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#ping"
	},
	"1760": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Ping",
		"header3": "Packet Parameters",
		"content": "주의 Status Packet received Device Status Packet 상세 설명 Parameter 모델번호 LSB Parameter 모델번호 MSB Parameter 펌웨어 Version ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#ping"
	},
	"1761": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Ping",
		"header3": "예제 1",
		"content": "예제 설명 ID1 XM430 W210 Model Number 1030 0x0406 Version Firmware 38 0x26 인 경우 Instruction Packet ID Ping Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x03 0x00 0x01 0x19 0x4E ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 PARAM2 PARAM3 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x07 0x00 0x55 0x00 0x06 0x04 0x26 0x65 0x5D ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#ping"
	},
	"1762": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Ping",
		"header3": "예제 2",
		"content": "예제 설명 ID1 XM430 W210 Model Number 1030 0x0406 Version Firmware 38 0x26 인 경우 ID2 XM430 W210 Model Number 1030 0x0406 Version Firmware 38 0x26 인 경우 Instruction Packet ID 254 Broadcast ID Ping Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0xFE 0x03 0x00 0x01 0x31 0x42 ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 PARAM2 PARAM3 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x07 0x00 0x55 0x00 0x06 0x04 0x26 0x65 0x5D ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 PARAM2 PARAM3 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x02 0x07 0x00 0x55 0x00 0x06 0x04 0x26 0x6F 0x6D ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#ping"
	},
	"1763": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Read",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#read"
	},
	"1764": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Read",
		"header3": "설명",
		"content": "Control Table 의 값을 읽어오기 위한 Instruction 음수 데이터의 표현 방법 제품별로 차이가 있으므로 해당 제품의 manual 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#read"
	},
	"1765": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Read",
		"header3": "Packet Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 시작 주소의 하위 바이트 Parameter 시작 주소의 상위 바이트 Parameter 데이터 길이 의 하위 바이트 Parameter 데이터 길이 의 상위 바이트 Status Packet 상세 설명 Parameter 첫 번째 바이트 Parameter 두 번째 바이트 Parameter 번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#read"
	},
	"1766": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Read",
		"header3": "예제",
		"content": "예제 설명 ID1 XM430 W210 Present Position 132 0x0084 byte 이 166 0x000000A6 인 경우 Read Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST PARAM1 PARAM2 PARAM3 PARAM4 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x07 0x00 0x02 0x84 0x00 0x04 0x00 0x1D 0x15 ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 PARAM2 PARAM3 PARAM4 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x08 0x00 0x55 0x00 0xA6 0x00 0x00 0x00 0x8C 0xC0 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#read"
	},
	"1767": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Write",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#write"
	},
	"1768": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Write",
		"header3": "설명",
		"content": "Control Table 에 값을 쓰기 위한 Instruction 음수 데이터의 표현 방법 제품별로 차이가 있으므로 해당 제품의 manual 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#write"
	},
	"1769": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Write",
		"header3": "Packet Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 시작 주소의 하위 바이트 Parameter 시작 주소의 상위 바이트 Parameter 첫번째 바이트 Parameter 두번째 바이트 Parameter X번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#write"
	},
	"1770": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Write",
		"header3": "예제",
		"content": "예제 설명 ID1 XM430 W210 Goal Position 116 0x0074 byte 를 512 0x00000200 로 변경하려는 경우 Write Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 P2 P3 P4 P5 P6 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x09 0x00 0x03 0x74 0x00 0x00 0x02 0x00 0x00 0xCA 0x89 ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x04 0x00 0x55 0x00 0xA1 0x0C ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#write"
	},
	"1771": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Reg Write",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reg-write"
	},
	"1772": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Reg Write",
		"header3": "설명",
		"content": "Write Instruction과 유사하지만 동기화 특성이 향상된 Instruction Write Instruction은 Instruction Packet 을 받으면 즉시 실행됨 Reg Write Instruction은 Instruction Packet 을 대기 상태로 등록하고 Control table Registered Instruction을 로 설정함 Action Instruction 을 수신하면 등록된 Packet을 실행하고 Control Table Registered Instruction을 으로 변경함 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reg-write"
	},
	"1773": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Reg Write",
		"header3": "Packet Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 시작 주소의 하위 바이트 Parameter 시작 주소의 상위 바이트 Parameter 첫번째 바이트 Parameter 두번째 바이트 Parameter X번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reg-write"
	},
	"1774": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Reg Write",
		"header3": "예제",
		"content": "Condition ID1 XM430 W210 Goal Velocity 104 0x0068 byte 를 200 0x000000C8 로 변경하려는 경우 Reg Write Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 P2 P3 P4 P5 P6 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x09 0x00 0x04 0x68 0x00 0xC8 0x00 0x00 0x00 0xAE 0x8E ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x04 0x00 0x55 0x00 0xA1 0x0C ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reg-write"
	},
	"1775": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Action",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#action"
	},
	"1776": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Action",
		"header3": "설명",
		"content": "Reg Write Instruction으로 등록된 Packet을 실행하라는 Instruction Write Instruction으로 다수의 장치를 제어할 경우 Packet을 최초로 수신한 장치와 마지막으로 수신한 장치는 실행 시점에 차이가 발생함 Reg Write 와 Action Instruction을 사용하면 다수의 장치를 동시에 구동할 수 있음 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#action"
	},
	"1777": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Action",
		"header3": "예제",
		"content": "Condition ID1 XM430 W210 Reg Write Instruction에 의해 Instruction이 등록된 경우 Action Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x03 0x00 0x05 0x02 0xCE ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x04 0x00 0x55 0x00 0xA1 0x0C ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#action"
	},
	"1778": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Factory Reset",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#factory-reset"
	},
	"1779": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Factory Reset",
		"header3": "설명",
		"content": "Control Table 을 공장 출하 시의 초기값으로 되돌리는 Instruction Packet ID가 Broadcast ID 0xFE 이고 Option이 Reset value 0xFF 일 경우 Factory Reset Instruction 0x06 은 동작하지 않음 MX FW42 Dynamixel 시리즈 FW42 이상부터 적용 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#factory-reset"
	},
	"1780": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Factory Reset",
		"header3": "Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 0xFF 모든 값 초기화 0x01 ID를 제외한 모든 값 초기화 0x02 ID와 통신속도를 제외한 모든 값 초기화 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#factory-reset"
	},
	"1781": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Factory Reset",
		"header3": "예제",
		"content": "예제 설명 ID1 XM430 W210 Option 0x01 ID를 제외한 모든 값 초기화 Factory Reset Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x04 0x00 0x06 0x01 0xA1 0xE6 ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x04 0x00 0x55 0x00 0xA1 0x0C ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#factory-reset"
	},
	"1782": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Reboot",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reboot"
	},
	"1783": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Reboot",
		"header3": "설명",
		"content": "장치를 재부팅 시키는 Instruction ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reboot"
	},
	"1784": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Reboot",
		"header3": "예제",
		"content": "예제 설명 ID1 XM430 W210 를 Reboot 시킬 경우 Reboot Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x03 0x00 0x08 0x2F 0x4E ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x04 0x00 0x55 0x00 0xA1 0x0C ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#reboot"
	},
	"1785": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Clear",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#clear"
	},
	"1786": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Clear",
		"header3": "설명",
		"content": "장치의 특정 상태를 해제하는 Instruction 특이사항 MX FW42 이상 Dynamixel 시리즈 FW42 이상부터 지원 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#clear"
	},
	"1787": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Clear",
		"header3": "Parameters",
		"content": "P1 P2 P5 설명 0x01 고정값 0x44 0x58 0x4C 0x22 현재 위치의 다수 회전 멀티턴 을 1회전 싱글턴 으로 변경 정지된 상태에서만 사용이 가능 구동중인 경우 Status packet은 Error 필드를 통해서 Result Fail 0x01 을 전송 0x02 사용하지 않음 사용하지 않음 0xFF 사용하지 않음 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#clear"
	},
	"1788": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Clear",
		"header3": "예제",
		"content": "예제 설명 ID1 XM430 W210 다수의 회전 정보 멀티턴 을 초기화 Clear Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 P2 P3 P4 P5 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x08 0x00 0x10 0x01 0x44 0x58 0x4C 0x22 0xB1 0xDC ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x04 0x00 0x55 0x00 0xA1 0x0C ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#clear"
	},
	"1789": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Read",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-read"
	},
	"1790": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Read",
		"header3": "설명",
		"content": "하나의 Instruction Packet 으로 동시에 여러 개 장치의 데이터를 읽을 때 사용하는 Instruction 데이터의 Address와 Data Length가 모두 동일해야 함 데이터의 주소가 연속적이지 않을 경우 Indirect Address를 사용할 수 있음 Packet ID 필드 0xFE Broadcast ID ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-read"
	},
	"1791": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Read",
		"header3": "Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 시작 주소의 하위 바이트 Parameter 시작 주소의 상위 바이트 Parameter 데이터 길이 의 하위 바이트 Parameter 데이터 길이 의 상위 바이트 Parameter 첫번째 장치의 ID Parameter 두번째 장치의 ID Parameter X번째 장치의 ID Status Packet 상세 설명 Parameter Frist Byte Parameter Second Byte Parameter X번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-read"
	},
	"1792": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Read",
		"header3": "예제",
		"content": "예제 설명 ID1 XM430 W210 Present Position 132 0x0084 byte 이 166 0x000000A6 인 경우 ID2 XM430 W210 Present Position 132 0x0084 byte 이 079 0x0000081F 인 경우 Sync Read Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 P2 P3 P4 P5 P6 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0xFE 0x09 0x00 0x82 0x84 0x00 0x04 0x00 0x01 0x02 0xCE 0xFA ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 PARAM2 PARAM3 PARAM4 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x08 0x00 0x55 0x00 0xA6 0x00 0x00 0x00 0x8C 0xC0 ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 PARAM2 PARAM3 PARAM4 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x02 0x08 0x00 0x55 0x00 0x1F 0x08 0x00 0x00 0xBA 0xBE ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-read"
	},
	"1793": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Write",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-write"
	},
	"1794": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Write",
		"header3": "설명",
		"content": "하나의 Instruction Packet 으로 동시에 여러 개 장치를 제어하기 위해 사용하는 Instruction 데이터의 Address와 Data Length가 모두 동일해야 함 데이터의 주소가 연속적이지 않을 경우 Indirect Address를 사용할 수 있음 Packet ID 필드 0xFE Broadcast ID ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-write"
	},
	"1795": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Write",
		"header3": "Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 시작 주소의 하위 바이트 Parameter 시작 주소의 상위 바이트 Parameter 데이터 길이 의 하위 바이트 Parameter 데이터 길이 의 상위 바이트 Parameter 첫번째 장치 ID Parameter 첫번째 장치 첫번째 바이트 Parameter 첫번째 장치 두번째 바이트 첫번째 장치 Parameter 두번째 장치 X번째 바이트 Parameter 두번째 장치 ID Parameter 두번째 장치 첫번째 바이트 Parameter 두번째 장치 두번째 바이트 두번째 장치 Parameter 두번째 장치 X번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-write"
	},
	"1796": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Sync Write",
		"header3": "예제",
		"content": "예제 설명 ID1 XM430 W210 Goal Position 116 0x0074 byte 을 150 0x00000096 로 변경하려는 경우 ID2 XM430 W210 Goal Position 116 0x0074 byte 을 170 0x000000AA 로 변경하려는 경우 Sync Write Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 P2 P3 P4 0xFF 0xFF 0xFD 0x00 0xFE 0x11 0x00 0x83 0x74 0x00 0x04 0x00 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 CRC1 CRC2 0x01 0x96 0x00 0x00 0x00 0x02 0xAA 0x00 0x00 0x00 0x82 0x87 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#sync-write"
	},
	"1797": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Read",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-read"
	},
	"1798": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Read",
		"header3": "설명",
		"content": "Sync Read 와 유사하게 하나의 Instruction Packet 으로 동시에 여러 개 장치의 데이터를 읽을 때 사용하는 Instruction 데이터의 Address와 Data Length가 장치별로 달라도 사용 가능 Parameter에 동일한 아이디가 여러 번 사용될 수 없음 즉 하나의 장치에서는 한 번만 읽을 수 있음 데이터의 주소가 연속적이지 않을 경우 Indirect Address를 사용할 수 있음 Packet ID 필드 0xFE Broadcast ID ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-read"
	},
	"1799": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Read",
		"header3": "Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 첫번째 장치 ID Parameter 첫번째 장치 시작 주소 하위 바이트 Parameter 첫번째 장치 시작 주소 상위 바이트 Parameter 첫번째 장치 데이터 길이 하위 바이트 Parameter 첫번째 장치 데이터 길이 상위 바이트 Parameter 두번째 장치 ID Parameter 두번째 장치 시작 주소 하위 바이트 Parameter 두번째 장치 시작 주소 상위 바이트 Parameter 두번째 장치 데이터 길이 하위 바이트 Parameter 10 두번째 장치 데이터 길이 상위 바이트 Status Packet 상세 설명 Parameter 첫번째 바이트 Parameter 두번째 바이트 Parameter X번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-read"
	},
	"1800": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Read",
		"header3": "예제",
		"content": "Condition ID1 XM430 W210 Present Voltage 144 0x0090 byte 이 119 0x0077 인 경우 ID2 XM430 W210 Present Temperature 146 0x0092 byte 이 36 0x24 인 경우 Bulk Read Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 P2 P3 P4 P5 0xFF 0xFF 0xFD 0x00 0xFE 0x0D 0x00 0x92 0x01 0x90 0x00 0x02 0x00 P6 P7 P8 P9 P10 CRC1 CRC2 0x02 0x92 0x00 0x01 0x00 0x1A 0x05 ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 PARAM2 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x01 0x06 0x00 0x55 0x00 0x77 0x00 0xC3 0x69 ID Status Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST ERR PARAM1 CRC1 CRC2 0xFF 0xFF 0xFD 0x00 0x02 0x05 0x00 0x55 0x00 0x24 0x8B 0xA9 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-read"
	},
	"1801": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Write",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-write"
	},
	"1802": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Write",
		"header3": "설명",
		"content": "Sync Write 와 유사하게 하나의 Instruction Packet 으로 여러 개 장치를 제어하기 위해 사용하는 Instruction 데이터의 Address와 Data Length가 장치별로 달라도 사용 가능 Parameter에 동일한 아이디가 여러 번 사용될 수 없음 즉 하나의 장치에서는 한 번만 읽을 수 있음 데이터의 주소가 연속적이지 않을 경우 Indirect Address를 사용할 수 있음 Packet ID 필드 0xFE Broadcast ID ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-write"
	},
	"1803": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Write",
		"header3": "Parameters",
		"content": "Instruction Packet 상세 설명 Parameter 첫번째 장치 ID Parameter 첫번째 장치 시작 주소 하위 바이트 Parameter 첫번째 장치 시작 주소 상위 바이트 Parameter 첫번째 장치 데이터 길이 하위 바이트 Parameter 첫번째 장치 데이터 길이 상위 바이트 Parameter 첫번째 장치 첫번째 바이트 Parameter 첫번째 장치 두번째 바이트 Parameter 첫번째 장치 X번째 바이트 Parameter 두번째 장치 ID Parameter 두번째 장치 시작 주소 하위 바이트 Parameter 두번째 장치 시작 주소 상위 바이트 Parameter 두번째 장치 데이터 길이 하위 바이트 Parameter 10 두번째 장치 데이터 길이 상위 바이트 Parameter 10 두번째 장치 첫번째 바이트 Parameter 10 두번째 장치 두번째 바이트 Parameter 10 두번째 장치 Y번째 바이트 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-write"
	},
	"1804": {
		"product": "Protocol 2.0",
		"header1": "Instruction의 종류",
		"header2": "Bulk Write",
		"header3": "예제",
		"content": "Condition ID1 XM430 W210 Max Voltage Limit 32 0x0020 byte 을 160 0x00A0 로 변경하려는 경우 ID2 XM430 W210 Temperature Limit 31 0x001F byte 를 80 0x50 으로 쓸 경우 Bulk Write Instruction Packet H1 H2 H3 RSRV ID LEN1 LEN2 INST P1 P2 P3 P4 P5 P6 P7 0xFF 0xFF 0xFD 0x00 0xFE 0x10 0x00 0x93 0x01 0x20 0x00 0x02 0x00 0xA0 0x00 P8 P9 P10 P11 P12 P13 CRC1 CRC2 0x02 0x1F 0x00 0x01 0x00 0x50 0xB7 0x68 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/protocol2/#bulk-write"
	},
	"1805": {
		"product": "H42P-020-S300-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 Coreless Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 340 크기 42 84 42 mm 해상도 607 500 pulse rev 감속비 303 75 백래쉬 arcmin 반경방향 하중 280 혼으로부터 10 mm 축방향 하중 100 No Load Speed 32 rev min No Load Current 57 Continuous Speed 29 rev min Continuous Torque Nm Continuous Current 출력 20 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 30 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#주요-사양"
	},
	"1806": {
		"product": "H42P-020-S300-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#성능-그래프"
	},
	"1807": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#컨트롤-테이블"
	},
	"1808": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#컨트롤-테이블-데이터-주소"
	},
	"1809": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#영역-eeprom-ram"
	},
	"1810": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#크기"
	},
	"1811": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#접근권한"
	},
	"1812": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#초기값"
	},
	"1813": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 초기값 범위 단위 Model Number 000 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary Shadow ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 20 920 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 500 500 mA 40 Acceleration Limit 10 765 306 173 rev min 44 Velocity Limit 920 920 01 rev min 48 Max Position Limit 303 454 303 750 303 750 pulse 52 Min Position Limit 303 454 303 750 303 750 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#eeprom-영역"
	},
	"1814": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 530 Position Gain 32 767 532 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 ms 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#ram-영역"
	},
	"1815": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#컨트롤-테이블-설명"
	},
	"1816": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "모델 번호입니다 모델명 Model Number H42P 20 S300 000 0x07D0 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#model-number0"
	},
	"1817": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#firmware-version6"
	},
	"1818": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#id7"
	},
	"1819": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#baud-rate8"
	},
	"1820": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#return-delay-time9"
	},
	"1821": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#drive-mode10"
	},
	"1822": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#operating-mode11"
	},
	"1823": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#secondary-id12"
	},
	"1824": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#homing-offset20"
	},
	"1825": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#moving-threshold24"
	},
	"1826": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#temperature-limit31"
	},
	"1827": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#maxmin-voltage-limit32-34"
	},
	"1828": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#pwm-limit36"
	},
	"1829": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 Current Limit 38 보다 큰 값을 입력할 수 없습니다 이 값보다 큰 값을 입력 하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 500 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#current-limit38"
	},
	"1830": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 Acceleration Limit 40 보다 큰 값을 입력할 수 없습니다 큰 값을 입력 하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 306 173 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#acceleration-limit40"
	},
	"1831": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 Velocity Limit 44 보다 큰 값을 입력할 수 없습니다 큰 값을 입력하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#velocity-limit44"
	},
	"1832": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 303 750 303 750 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 기본값 값의 범위 pulse 303 454 303 454 303 750 303 750 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#maxmin-position-limit48-52"
	},
	"1833": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode, External Port Data",
		"content": "다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#external-port-mode-external-port-data"
	},
	"1834": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#shutdown63"
	},
	"1835": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address, Indirect Data",
		"content": "사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#indirect-address-indirect-data"
	},
	"1836": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#torque-enable512"
	},
	"1837": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(513)",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#rgb-led513"
	},
	"1838": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#status-return-level516"
	},
	"1839": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#registered-instruction517"
	},
	"1840": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#hardware-error-status518"
	},
	"1841": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#velocity-pi-gain524-526-feedforward-2nd-gains536"
	},
	"1842": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528, 530, 532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#position-pid-gain528-530-532-feedforward-1st-gains538"
	},
	"1843": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#bus-watchdog546"
	},
	"1844": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#goal-pwm548"
	},
	"1845": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#goal-current550"
	},
	"1846": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#goal-velocity552"
	},
	"1847": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#profile-acceleration556"
	},
	"1848": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#profile-velocity560"
	},
	"1849": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 303 750 303 750 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#goal-position564"
	},
	"1850": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#realtime-tick568"
	},
	"1851": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#moving570"
	},
	"1852": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#moving-status571"
	},
	"1853": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#present-pwm572"
	},
	"1854": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#present-current574"
	},
	"1855": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#present-velocity576"
	},
	"1856": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#present-position580"
	},
	"1857": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#velocity-trajectory584"
	},
	"1858": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#position-trajectory588"
	},
	"1859": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#present-input-voltage592"
	},
	"1860": {
		"product": "H42P-020-S300-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#present-temperature594"
	},
	"1861": {
		"product": "H42P-020-S300-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#조립-예시"
	},
	"1862": {
		"product": "H42P-020-S300-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP42 H120K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#옵션프레임-조립"
	},
	"1863": {
		"product": "H42P-020-S300-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#유지보수"
	},
	"1864": {
		"product": "H42P-020-S300-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "NOTE 다이나믹셀 프로 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#참고자료"
	},
	"1865": {
		"product": "H42P-020-S300-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 JST EHR MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 JST B4B EH MOLEX 39 28 1023 MOLEX 87427 0242 MOLEX 53047 0610 Crimp 터미널 JST SEH 001T MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 26 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#커넥터-정보"
	},
	"1866": {
		"product": "H42P-020-S300-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "Download PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h42p-020-s300-r/#도면"
	},
	"1867": {
		"product": "H54P-100-S500-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 740 크기 54 108 54 mm 해상도 003 846 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 33 rev min No Load Current 13 Continuous Speed 29 rev min Continuous Torque 25 Nm Continuous Current 출력 100 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 40 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#주요-사양"
	},
	"1868": {
		"product": "H54P-100-S500-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#성능-그래프"
	},
	"1869": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#컨트롤-테이블"
	},
	"1870": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#컨트롤-테이블-데이터-주소"
	},
	"1871": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#영역-eeprom-ram"
	},
	"1872": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#크기"
	},
	"1873": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#접근권한"
	},
	"1874": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#초기값"
	},
	"1875": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 010 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary Shadow ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 50 920 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 15 900 15 900 mA 40 Acceleration Limit 10 639 255 632 rev min 44 Velocity Limit 920 920 01 rev min 48 Max Position Limit 501 433 501 923 501 923 pulse 52 Min Position Limit 501 433 501 923 501 923 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#eeprom-영역"
	},
	"1876": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 530 Position Gain 32 767 532 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 ms 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#ram-영역"
	},
	"1877": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#컨트롤-테이블-설명"
	},
	"1878": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "다이나믹셀의 모델 번호입니다 모델명 Model Number H54P 100 S500 010 0x07DA ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#model-number0"
	},
	"1879": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#firmware-version6"
	},
	"1880": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#id7"
	},
	"1881": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#baud-rate8"
	},
	"1882": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#return-delay-time9"
	},
	"1883": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#drive-mode10"
	},
	"1884": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#operating-mode11"
	},
	"1885": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#secondary-id12"
	},
	"1886": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#homing-offset20"
	},
	"1887": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#moving-threshold24"
	},
	"1888": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#temperature-limit31"
	},
	"1889": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#maxmin-voltage-limit32-34"
	},
	"1890": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#pwm-limit36"
	},
	"1891": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 Current Limit 38 보다 큰 값을 입력할 수 없습니다 이 값보다 큰 값을 입력 하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 15 900 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#current-limit38"
	},
	"1892": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 Acceleration Limit 40 보다 큰 값을 입력할 수 없습니다 큰 값을 입력 하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 255 632 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#acceleration-limit40"
	},
	"1893": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 Velocity Limit 44 보다 큰 값을 입력할 수 없습니다 큰 값을 입력하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#velocity-limit44"
	},
	"1894": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 501 923 501 923 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 기본값 값의 범위 pulse 501 433 501 433 501 923 501 923 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#maxmin-position-limit48-52"
	},
	"1895": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode, External Port Data",
		"content": "다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#external-port-mode-external-port-data"
	},
	"1896": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#shutdown63"
	},
	"1897": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address, Indirect Data",
		"content": "사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#indirect-address-indirect-data"
	},
	"1898": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#torque-enable512"
	},
	"1899": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(513)",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#rgb-led513"
	},
	"1900": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#status-return-level516"
	},
	"1901": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#registered-instruction517"
	},
	"1902": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#hardware-error-status518"
	},
	"1903": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#velocity-pi-gain524-526-feedforward-2nd-gains536"
	},
	"1904": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528, 530, 532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#position-pid-gain528-530-532-feedforward-1st-gains538"
	},
	"1905": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#bus-watchdog546"
	},
	"1906": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#goal-pwm548"
	},
	"1907": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#goal-current550"
	},
	"1908": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#goal-velocity552"
	},
	"1909": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#profile-acceleration556"
	},
	"1910": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#profile-velocity560"
	},
	"1911": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 501 923 501 923 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#goal-position564"
	},
	"1912": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#realtime-tick568"
	},
	"1913": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#moving570"
	},
	"1914": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#moving-status571"
	},
	"1915": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#present-pwm572"
	},
	"1916": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#present-current574"
	},
	"1917": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#present-velocity576"
	},
	"1918": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#present-position580"
	},
	"1919": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#velocity-trajectory584"
	},
	"1920": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#position-trajectory588"
	},
	"1921": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#present-input-voltage592"
	},
	"1922": {
		"product": "H54P-100-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#present-temperature594"
	},
	"1923": {
		"product": "H54P-100-S500-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#조립-예시"
	},
	"1924": {
		"product": "H54P-100-S500-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H121K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#옵션프레임-조립"
	},
	"1925": {
		"product": "H54P-100-S500-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#유지보수"
	},
	"1926": {
		"product": "H54P-100-S500-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "NOTE 다이나믹셀 프로 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#참고자료"
	},
	"1927": {
		"product": "H54P-100-S500-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 JST EHR MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 JST B4B EH MOLEX 39 28 1023 MOLEX 87427 0242 MOLEX 53047 0610 Crimp 터미널 JST SEH 001T MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 26 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#커넥터-정보"
	},
	"1928": {
		"product": "H54P-100-S500-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "Download PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-100-s500-r/#도면"
	},
	"1929": {
		"product": "H54P-200-S500-R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 모터 BLDC Maxon 통신속도 600 bps 10 Mbps 동작모드 토크 제어모드 속도 제어모드 위치 제어모드 확장 위치 제어모드 PWM 제어모드 전압 제어모드 무게 855 크기 54 126 54 mm 해상도 003 846 pulse rev 감속비 501 923 백래쉬 arcmin 반경방향 하중 370 혼으로부터 10 mm 축방향 하중 130 No Load Speed 33 rev min No Load Current 65 Continuous Speed 29 rev min Continuous Torque 44 Nm Continuous Current 출력 200 동작 온도 55 사용 전압 24 Command Signal 디지털 패킷 Protocol Type RS485 비동기 시리얼 통신 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 253 ID 252 대기 전류 40 mA 명시된 토크 전류 값은 입력 모터 사양에 따른 값입니다 일반적으로 사용하는 토크 범위는 성능 그래프를 참고하여 주시고 장시간 사용 환경에서는 별도로 문의 바랍니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 55 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#주요-사양"
	},
	"1930": {
		"product": "H54P-200-S500-R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "ockquote 그래프 자세히 보기 참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#성능-그래프"
	},
	"1931": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#컨트롤-테이블"
	},
	"1932": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#컨트롤-테이블-데이터-주소"
	},
	"1933": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#영역-eeprom-ram"
	},
	"1934": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#크기"
	},
	"1935": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#접근권한"
	},
	"1936": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#초기값"
	},
	"1937": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 020 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Sencondary Shadow ID 255 255 20 Homing Offset 147 483 648 147 483 647 pulse 24 Moving Threshold 50 900 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 22 740 22 740 mA 40 Acceleration Limit 982 992 644 rev min 44 Velocity Limit 900 900 01 rev min 48 Max Position Limit 501 433 501 923 501 923 pulse 52 Min Position Limit 501 433 501 923 501 923 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#eeprom-영역"
	},
	"1938": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 530 Position Gain 32 767 532 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 ms 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#ram-영역"
	},
	"1939": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#컨트롤-테이블-설명"
	},
	"1940": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "다이나믹셀의 모델 번호입니다 Model Name Model Number H54P 200 S500 020 0x07E4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#model-number0"
	},
	"1941": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#firmware-version6"
	},
	"1942": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#id7"
	},
	"1943": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#baud-rate8"
	},
	"1944": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#return-delay-time9"
	},
	"1945": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#drive-mode10"
	},
	"1946": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "제어 모드를 설정할 수 있습니다 값 동작 모드 설명 전류 제어 모드 전류를 제어합니다 속도와 위치는 제어하지 않습니다 속도 제어 모드 속도와 전류를 제어합니다 위치는 제어하지 않습니다 초기값 위치 제어 모드 위치와 속도와 전류를 제어합니다 확장 위치 제어 모드 위치 제어 모드와 동일하지만 Position limit이 없습니다 즉 제어 범위가 360 가 아닌 multi turn position control이 가능해 집니다 16 PWM 전압 제어 모드 PWM 전압 출력을 직접 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#operating-mode11"
	},
	"1947": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#secondary-id12"
	},
	"1948": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 147 483 648 147 483 647 참고 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 90 90 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#homing-offset20"
	},
	"1949": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 920 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#moving-threshold24"
	},
	"1950": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#temperature-limit31"
	},
	"1951": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#maxmin-voltage-limit32-34"
	},
	"1952": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#pwm-limit36"
	},
	"1953": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 Current Limit 38 보다 큰 값을 입력할 수 없습니다 이 값보다 큰 값을 입력 하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 22 740 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#current-limit38"
	},
	"1954": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 Acceleration Limit 40 보다 큰 값을 입력할 수 없습니다 큰 값을 입력 하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 992 644 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#acceleration-limit40"
	},
	"1955": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 Velocity Limit 44 보다 큰 값을 입력할 수 없습니다 큰 값을 입력하면 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 900 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#velocity-limit44"
	},
	"1956": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "위치 제어 모드에서 목표 위치의 제한 값으로써 1회전 501 923 501 923 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 기본값 값의 범위 pulse 501 433 501 433 501 923 501 923 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#maxmin-position-limit48-52"
	},
	"1957": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode, External Port Data",
		"content": "다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#external-port-mode-external-port-data"
	},
	"1958": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#shutdown63"
	},
	"1959": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address, Indirect Data",
		"content": "사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#indirect-address-indirect-data"
	},
	"1960": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#torque-enable512"
	},
	"1961": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(513)",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 녹색 점멸 공장 초기화 4회 녹색 점멸 알람 적색 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#rgb-led513"
	},
	"1962": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#status-return-level516"
	},
	"1963": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#registered-instruction517"
	},
	"1964": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#hardware-error-status518"
	},
	"1965": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Feedforward 2nd Gains(536)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 상세 설명 Velocity Gain 524 32 767 Veocity Integral Gain Velocity Gain 526 32 767 Velocity Proportional Gain Feedforward 2nd Gain 536 FF1st 32 767 Acceleration Feedforward Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 552 에 등록됩니다 Goal Velocity 552 는 Profile Acceleration 556 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 584 에 표기됩니다 PI 제어기는 목표 속도 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수는 없습니다 PID제어기에 대한 설명은 위키피디아 PID Controller 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#velocity-pi-gain524-526-feedforward-2nd-gains536"
	},
	"1966": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(528, 530, 532), Feedforward 1st Gains(538)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Position Gain 528 32 767 Position Derivative Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportional Gain Feedforward 1st Gain 538 FF1st 32 767 Velocity Feedforward Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#position-pid-gain528-530-532-feedforward-1st-gains538"
	},
	"1967": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#bus-watchdog546"
	},
	"1968": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#goal-pwm548"
	},
	"1969": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 속도 제어 모드 위치 제어 모드 그리고 확장 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#goal-current550"
	},
	"1970": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어 모드에서는 목표 속도값으로 동작합니다 위치 제어 모드와 확장 위치 제어 모드에서는 속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#goal-velocity552"
	},
	"1971": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 속도 제어 모드 위치 제어 모드 확장 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#profile-acceleration556"
	},
	"1972": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 위치 제어 모드와 확장 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 556 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#profile-velocity560"
	},
	"1973": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "Goal Position 564 을 통해 목표 위치를 설정 할 수 있습니다 이 값은 위치 제어 모드 일 때 Min Position limit 52 에서 Max position limit 48 까지 입력이 가능하고 확장 위치 제어 모드 일 때는 147 483 648 에서 147 483 647 까지 입력이 가능합니다 각도 위치값 방향 180 180 501 923 501 923 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#goal-position564"
	},
	"1974": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#realtime-tick568"
	},
	"1975": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#moving570"
	},
	"1976": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#moving-status571"
	},
	"1977": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#present-pwm572"
	},
	"1978": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#present-current574"
	},
	"1979": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#present-velocity576"
	},
	"1980": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "현재 장치의 위치 값입니다 자세한 사항은 Goal Position 564 을 참고하세요 참고 Present Position 580 은 Torque OFF 상태일 경우 동작 모드와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 580 의 값이 초기화되는 시점은 다음과 같습니다 위치 제어 모드에서 토크가 Off에서 ON으로 변경되는 시점에 바퀴 범위로 초기화 동작 모드가 위치 제어 모드로 변경되는 시점에 바퀴 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#present-position580"
	},
	"1981": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 560 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 584 은 Goal Velocity 552 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#velocity-trajectory584"
	},
	"1982": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#position-trajectory588"
	},
	"1983": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#present-input-voltage592"
	},
	"1984": {
		"product": "H54P-200-S500-R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#present-temperature594"
	},
	"1985": {
		"product": "H54P-200-S500-R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#조립-예시"
	},
	"1986": {
		"product": "H54P-200-S500-R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "FRP54 H221K Set ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#옵션프레임-조립"
	},
	"1987": {
		"product": "H54P-200-S500-R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#유지보수"
	},
	"1988": {
		"product": "H54P-200-S500-R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "NOTE 다이나믹셀 프로 호환가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#참고자료"
	},
	"1989": {
		"product": "H54P-200-S500-R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 Power 외부포트 핀 번호 GND VDD DATA DATA GND VDD GND VDD PORT PORT PORT PORT 다이어그램 하우징 JST EHR MOLEX 39 01 2020 MOLEX 51021 0600 PCB 헤더 JST B4B EH MOLEX 39 28 1023 MOLEX 87427 0242 MOLEX 53047 0610 Crimp 터미널 JST SEH 001T MOLEX 39 00 0038 MOLEX 50079 8100 Wire Gauge 21 AWG 20 AWG 26 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 주의 구동 전에 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#커넥터-정보"
	},
	"1990": {
		"product": "H54P-200-S500-R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "Download PDF DWG STEP IGES 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/h54p-200-s500-r/#도면"
	},
	"1991": {
		"product": "DYNAMIXEL PRO+",
		"header1": "제품 라인업",
		"header2": "",
		"header3": "",
		"content": "ockquote 다이나믹셀 PRO 라인업 일체형 로봇 구동장치 로봇의 관절에 필요한 기능을 하나의 모듈로 만들었습니다 힘세고 단단한 사이클로이드 감속기 다이나믹셀 프로는 탈부착이 가능한 사이클로이드 감속기를 사용합니다 싸이클로이드 방식을 사용함으로서 작고 가벼우면서도 감속비가 높은 감속 장치를 실현하였습니다 또한 싸이클로이드 감속기는 진동 충격에 강한 내구성과 작은 백래쉬를 자랑합니다 다양한 모델 다이나믹셀 프로의 모터 전력 감속기 형태 감속비 통신 타입 가격대 등 구동기에 필요한 많은 사양을 다양화 하였습니다 따라서 사용자는 자신의 로봇에 보다 알맞는 다이나믹셀 프로를 선택하실 수 있습니다 다양한 제어 알고리즘 다이나믹셀 프로는 위치 속도 전류 등 3가지 방식의 제어를 알고리즘을 사용합니다 사용자는 이 3가지 방식의 제어기를 조합하여 자신의 로봇에 알맞게 튜닝하여 사용하실 수 있습니다 전류 제어의 경우 다이나믹셀 프로와 함께 제공되는 전류 대 토크 상관관계 그래프를 사용하실 경우 토크 제어기로 응용하여 사용하실 수 있습니다 정밀 제어 최대 003 846 1회전 의 높은 분해능을 사용하여 제어하기 때문에 사용자는 0004도의 작은 각도를 정밀하게 제어하실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/#제품-라인업"
	},
	"1992": {
		"product": "DYNAMIXEL PRO+",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "모델명 크기 mm 무게 해상도 모터 H54P 200 S500 54 126 54 855g 003 846 BLDC Maxon H54P 100 S500 54 108 54 740g 003 846 BLDC Maxon H42P 020 S300 42 84 42 340g 607 500 Coreless Maxon ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/#주요-사양"
	},
	"1993": {
		"product": "DYNAMIXEL PRO+",
		"header1": "통신 회로",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/#통신-회로"
	},
	"1994": {
		"product": "DYNAMIXEL PRO+",
		"header1": "통신 회로",
		"header2": "UART 연결 회로도",
		"header3": "",
		"content": "Main Controller를 직접 제작하여 다이나믹셀 프로를 제어하기 위해서는 Main Controller UART의 신호를 RS485 type으로 변환시켜 주어야 합니다 다음은 권장 회로도 입니다 MAX485 Datasheet 전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 다이나믹셀 전용 제어기에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/#uart-연결-회로도"
	},
	"1995": {
		"product": "DYNAMIXEL PRO+",
		"header1": "통신 회로",
		"header2": "핀 배열",
		"header3": "",
		"content": "커넥터의 핀 배열은 아래 그림과 같습니다 다이나믹셀 프로에 있는 두 개의 4P 커넥터는 내부에서 서로 연결되어 있으므로 두 개 중 어떠한 커넥터에 연결해도 다이나믹셀 프로 시리즈를 구동시킬 수 있습니다 또한 2Pin 커넥터는 파워 커넥터 전용으로 높은 전류를 사용할 때에는 이 커넥터를 통해서 전원을 공급해주는 것을 권장합니다 경고 배선 시에는 핀 배열이 틀리지 않도록 각별히 주의하십시오 올바르게 연결되지 않을 경우 다이나믹셀의 심각한 손상을 초래할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/#핀-배열"
	},
	"1996": {
		"product": "DYNAMIXEL PRO+",
		"header1": "통신 회로",
		"header2": "연결 확인",
		"header3": "",
		"content": "배선을 통하여 다이나믹셀에 전원이 올바르게 공급되었다면 다이나믹셀의 LED가 한 번 깜박입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/#연결-확인"
	},
	"1997": {
		"product": "DYNAMIXEL PRO+",
		"header1": "기구 도면",
		"header2": "",
		"header3": "",
		"content": "출력부 혼 의 도면이 변경되었습니다 다음은 PRO와 변경된 PRO 의 도면 입니다 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/pro_plus/#기구-도면"
	},
	"1998": {
		"product": "RX-10",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 64 5g 크기 35 6mm 50 6mm 35 5mm 최소 제어각 29 모터 Cored 기어비 193 정지 토크 12V 8A 무부하 속도 54rpm 12V 동작 모드 관절 모드 300 바퀴 모드 무한 회전 동작 온도 80 사용 전압 12V 권장 전압 11 1V 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Engineering Plastic Body 대기 전류 50mA 주의 Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#주요-사양"
	},
	"1999": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#컨트롤-테이블"
	},
	"2000": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#컨트롤-테이블-데이터-주소"
	},
	"2001": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#영역-eeprom-ram"
	},
	"2002": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#크기"
	},
	"2003": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#접근권한"
	},
	"2004": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#초기값"
	},
	"2005": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 10 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 190 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#eeprom-영역"
	},
	"2006": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#ram-영역"
	},
	"2007": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#컨트롤-테이블-설명"
	},
	"2008": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#model-number-0"
	},
	"2009": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#firmware-version-2"
	},
	"2010": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#id-3"
	},
	"2011": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#baud-rate-4"
	},
	"2012": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#return-delay-time-5"
	},
	"2013": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#cwccw-angle-limit6-8"
	},
	"2014": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#temperature-limit-11"
	},
	"2015": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#minmax-voltage-limit-12-13"
	},
	"2016": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#max-torque-14"
	},
	"2017": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#status-return-level-16"
	},
	"2018": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#alarm-led17-shutdown18"
	},
	"2019": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#torque-enable-24"
	},
	"2020": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#led-25"
	},
	"2021": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#compliance-margin-26-27"
	},
	"2022": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#compliance-slope-28-29"
	},
	"2023": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#goal-position-30"
	},
	"2024": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#moving-speed-32"
	},
	"2025": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#torque-limit-34"
	},
	"2026": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#present-position-36"
	},
	"2027": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#present-speed-38"
	},
	"2028": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#present-load-40"
	},
	"2029": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#present-voltage-42"
	},
	"2030": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#present-temperature-43"
	},
	"2031": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#registered-instruction-44"
	},
	"2032": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#moving-46"
	},
	"2033": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#lock-47"
	},
	"2034": {
		"product": "RX-10",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#punch-48"
	},
	"2035": {
		"product": "RX-10",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "FR07 B1 Option Frame FR07 H1 Option Frame FR07 S1 Option Frame HN07 N1 Horn HN07 I1 Horn HN07 T1 Horn 기구결합 아래는 옵션 프레임과 혼을 이용한 결합구조의 예입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#조립-예시"
	},
	"2036": {
		"product": "RX-10",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#유지보수"
	},
	"2037": {
		"product": "RX-10",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#혼과-베어링-교체"
	},
	"2038": {
		"product": "RX-10",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#혼과-베어링-교체"
	},
	"2039": {
		"product": "RX-10",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#혼과-베어링-교체"
	},
	"2040": {
		"product": "RX-10",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#참고자료"
	},
	"2041": {
		"product": "RX-10",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#커넥터-정보"
	},
	"2042": {
		"product": "RX-10",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#도면"
	},
	"2043": {
		"product": "RX-10",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#통신-회로"
	},
	"2044": {
		"product": "RX-10",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#ttl-통신"
	},
	"2045": {
		"product": "RX-10",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-10/#rs485-통신"
	},
	"2046": {
		"product": "RX-24F",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 67g 크기 35 6mm 50 6mm 35 5mm 최소 제어각 29 모터 Coreless 기어비 193 정지 토크 12V 4A 무부하 속도 126rpm 12V 동작 모드 관절 모드 300 바퀴 모드 무한 회전 동작 온도 80 사용 전압 12V 권장 전압 11 1V 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Engineering Plastic Body 대기 전류 50mA 주의 Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#주요-사양"
	},
	"2047": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#컨트롤-테이블"
	},
	"2048": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#컨트롤-테이블-데이터-주소"
	},
	"2049": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#영역-eeprom-ram"
	},
	"2050": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#크기"
	},
	"2051": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#접근권한"
	},
	"2052": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#초기값"
	},
	"2053": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 24 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 190 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#eeprom-영역"
	},
	"2054": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#ram-영역"
	},
	"2055": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#컨트롤-테이블-설명"
	},
	"2056": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#model-number-0"
	},
	"2057": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#firmware-version-2"
	},
	"2058": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#id-3"
	},
	"2059": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#baud-rate-4"
	},
	"2060": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#return-delay-time-5"
	},
	"2061": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#cwccw-angle-limit6-8"
	},
	"2062": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#temperature-limit-11"
	},
	"2063": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#minmax-voltage-limit-12-13"
	},
	"2064": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#max-torque-14"
	},
	"2065": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#status-return-level-16"
	},
	"2066": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#alarm-led17-shutdown18"
	},
	"2067": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#torque-enable-24"
	},
	"2068": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#led-25"
	},
	"2069": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#compliance-margin-26-27"
	},
	"2070": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#compliance-slope-28-29"
	},
	"2071": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#goal-position-30"
	},
	"2072": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#moving-speed-32"
	},
	"2073": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#torque-limit-34"
	},
	"2074": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#present-position-36"
	},
	"2075": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#present-speed-38"
	},
	"2076": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#present-load-40"
	},
	"2077": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#present-voltage-42"
	},
	"2078": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#present-temperature-43"
	},
	"2079": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#registered-instruction-44"
	},
	"2080": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#moving-46"
	},
	"2081": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#lock-47"
	},
	"2082": {
		"product": "RX-24F",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#punch-48"
	},
	"2083": {
		"product": "RX-24F",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "FR07 B1 Option Frame FR07 H1 Option Frame FR07 S1 Option Frame FR07 B101 Option Frame FR07 F101 FR07 X101 Option Frame FR07 H101 Option Frame FR07 S101 Option Frame HN07 N1 Horn HN07 I1 Horn HN07 T1 Horn HN07 N101 Horn HN07 I101 Horn HN07 T101 Horn 기구결합 아래는 옵션 프레임과 혼을 이용한 결합구조의 예입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#조립-예시"
	},
	"2084": {
		"product": "RX-24F",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#유지보수"
	},
	"2085": {
		"product": "RX-24F",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#혼과-베어링-교체"
	},
	"2086": {
		"product": "RX-24F",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#혼과-베어링-교체"
	},
	"2087": {
		"product": "RX-24F",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#혼과-베어링-교체"
	},
	"2088": {
		"product": "RX-24F",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#참고자료"
	},
	"2089": {
		"product": "RX-24F",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#커넥터-정보"
	},
	"2090": {
		"product": "RX-24F",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#도면"
	},
	"2091": {
		"product": "RX-24F",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#통신-회로"
	},
	"2092": {
		"product": "RX-24F",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#ttl-통신"
	},
	"2093": {
		"product": "RX-24F",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-24f/#rs485-통신"
	},
	"2094": {
		"product": "RX-28",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 최소 제어각 29 모터 Coreless Maxon 기어비 193 정지 토크 18 5V 9A 무부하 속도 85rpm 18 5V 동작 모드 관절 모드 300 바퀴 모드 무한 회전 동작 온도 80 사용 전압 12 18 5V 권장 전압 14 8V 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 통신 속도 7343 bps Mbps 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Engineering Plastic Body 대기 전류 50mA 주의 Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#주요-사양"
	},
	"2095": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#컨트롤-테이블"
	},
	"2096": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#컨트롤-테이블-데이터-주소"
	},
	"2097": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#영역-eeprom-ram"
	},
	"2098": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#크기"
	},
	"2099": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#접근권한"
	},
	"2100": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#초기값"
	},
	"2101": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 28 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 190 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED LED Alarm 36 18 Shutdown 알람용 LED 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#eeprom-영역"
	},
	"2102": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#ram-영역"
	},
	"2103": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#컨트롤-테이블-설명"
	},
	"2104": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#model-number-0"
	},
	"2105": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#firmware-version-2"
	},
	"2106": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#id-3"
	},
	"2107": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#baud-rate-4"
	},
	"2108": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#return-delay-time-5"
	},
	"2109": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#cwccw-angle-limit6-8"
	},
	"2110": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#temperature-limit-11"
	},
	"2111": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#minmax-voltage-limit-12-13"
	},
	"2112": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#max-torque-14"
	},
	"2113": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#status-return-level-16"
	},
	"2114": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#alarm-led17-shutdown18"
	},
	"2115": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#torque-enable-24"
	},
	"2116": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#led-25"
	},
	"2117": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#compliance-margin-26-27"
	},
	"2118": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#compliance-slope-28-29"
	},
	"2119": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#goal-position-30"
	},
	"2120": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#moving-speed-32"
	},
	"2121": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#torque-limit-34"
	},
	"2122": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#present-position-36"
	},
	"2123": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#present-speed-38"
	},
	"2124": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#present-load-40"
	},
	"2125": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#present-voltage-42"
	},
	"2126": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#present-temperature-43"
	},
	"2127": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#registered-instruction-44"
	},
	"2128": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#moving-46"
	},
	"2129": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#lock-47"
	},
	"2130": {
		"product": "RX-28",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#punch-48"
	},
	"2131": {
		"product": "RX-28",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "FR07 B1 Option Frame FR07 H1 Option Frame FR07 S1 Option Frame FR07 B101 Option Frame FR07 F101 FR07 X101 Option Frame FR07 H101 Option Frame FR07 S101 Option Frame HN07 N1 Horn HN07 I1 Horn HN07 T1 Horn HN07 N101 Horn HN07 I101 Horn HN07 T101 Horn 기구결합 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#조립-예시"
	},
	"2132": {
		"product": "RX-28",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#유지보수"
	},
	"2133": {
		"product": "RX-28",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#혼과-베어링-교체"
	},
	"2134": {
		"product": "RX-28",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#혼과-베어링-교체"
	},
	"2135": {
		"product": "RX-28",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#혼과-베어링-교체"
	},
	"2136": {
		"product": "RX-28",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#참고자료"
	},
	"2137": {
		"product": "RX-28",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#커넥터-정보"
	},
	"2138": {
		"product": "RX-28",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#도면"
	},
	"2139": {
		"product": "RX-28",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#통신-회로"
	},
	"2140": {
		"product": "RX-28",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#ttl-통신"
	},
	"2141": {
		"product": "RX-28",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-28/#rs485-통신"
	},
	"2142": {
		"product": "RX-64",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 125g 크기 40 2mm 61 1mm 41mm 최소 제어각 29 모터 Coreless Maxon 기어비 200 정지 토크 18 5V 6A 무부하 속도 64rpm 18 5V 동작 모드 관절 모드 300 바퀴 모드 무한 회전 동작 온도 80 사용 전압 12 18 5V Recommended 14 8V 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multi Drop Bus Daisy Chain Type Connector ID 254 ID 253 통신 속도 7343 bps Mbps 피드백 Position Temperature Load Input Voltage 등 재질 Full Metal Gear Engineering Plastic Body 대기 전류 50mA 주의 Stall Torque 는 순간적으로 낼수있는 최대정지토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 Stall Torque의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#주요-사양"
	},
	"2143": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#컨트롤-테이블"
	},
	"2144": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#컨트롤-테이블-데이터-주소"
	},
	"2145": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 24 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#영역-eeprom-ram"
	},
	"2146": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#크기"
	},
	"2147": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#접근권한"
	},
	"2148": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#초기값"
	},
	"2149": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 Model Number 모델 번호의 바이트 64 Firmware Version 펌웨어 버전 정보 ID 다이나믹셀 ID Baud Rate 다이나믹셀 통신 속도 34 Return Delay Time 응답 지연 시간 250 CW Angle Limit 시계 방향 한계 각도 값의 바이트 CCW Angle Limit 반시계 방향 한계 각도 값의 바이트 1023 11 Temperature Limit 내부 한계 온도 80 12 Min Voltage Limit 최저 한계 전압 60 13 Max Voltage Limit 최고 한계 전압 190 14 Max Torque 토크 한계 값의 바이트 1023 16 Status Return Level 응답 레벨 17 Alarm LED 알람용 LED 기능 36 18 Shutdown 알람용 셧 다운 Shut down 기능 36 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#eeprom-영역"
	},
	"2150": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 초기값 24 Torque Enable 토크 켜기 25 LED LED Off 26 CW Compliance Margin CW Compliance Margin 27 CCW Compliance Margin CCW Compliance Margin 28 CW Compliance Slope CW Compliance Slope 32 29 CCW Compliance Slope CCW Compliance Slope 32 30 Goal Position 목표 위치 값의 바이트 32 Moving Speed 목표 속도 값의 바이트 34 Torque Limit 토크 한계 값의 바이트 ADD 14 amp 15 36 Present Position 현재 위치 값의 바이트 38 Present Speed 현재 속도 값의 바이트 40 Present Load 현재 하중 값의 바이트 42 Present Voltage 현재 전압 43 Present Temperature 현재 온도 44 Registered Instruction의 등록 여부 46 Moving 움직임 유무 47 Lock EEPROM 잠금 48 Punch Punch 값의 바이트 32 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#ram-영역"
	},
	"2151": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#컨트롤-테이블-설명"
	},
	"2152": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#model-number-0"
	},
	"2153": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#firmware-version-2"
	},
	"2154": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#id-3"
	},
	"2155": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#baud-rate-4"
	},
	"2156": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#return-delay-time-5"
	},
	"2157": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 CW와 CCW의 값에 따라 다음의 2가지 동작 모드를 설정할 수 있습니다 동작 방식 CW CCW 바퀴 모드 둘 다 일때 관절 모드 둘 다 이 아닐떄 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#cwccw-angle-limit6-8"
	},
	"2158": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (11)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#temperature-limit-11"
	},
	"2159": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit (12, 13)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 단위 범위 상세설명 약 50 250 25 상한과 하한 각각 50 250 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 120이면 12 입니다 Present Voltage 42 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Address 17 과 Shutdown Address 18 의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#minmax-voltage-limit-12-13"
	},
	"2160": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque (14)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#max-torque-14"
	},
	"2161": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#status-return-level-16"
	},
	"2162": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Alarm LED(17), Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재 상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 항목 설명 Bit Bit Instruction Error 정의되지 않은 Instruction이 전송된 경우 또는 reg write명령없이 Action명령이 전달된 경우 Bit Overload Error 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 Bit CheckSum Error 전송된 Instruction Packet의 ChecklSum이 맞지 않을 경우 Bit Range Error 해당 Address의 값의 범위를 벗어난 값을 Instruction Packet으로 보내는 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Angle Limit Error 적용한 Goal Position이 설정한 CW CCW Angle Limit 범위를 벗어난 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#alarm-led17-shutdown18"
	},
	"2163": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#torque-enable-24"
	},
	"2164": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (25)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 MX 106 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#led-25"
	},
	"2165": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Margin (26, 27)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치와 현재 위치의 오차를 의미합니다 값의 범위는 255이며 단위는 Goal Position Address 30 31 과 같습니다 이 값이 클수록 유격이 많이 생기는 효과가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#compliance-margin-26-27"
	},
	"2166": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Compliance Slope (28, 29)",
		"content": "CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 Compliance Slope는 총 단계로 설정할 수 있으며 값이 높을 수록 유연성이 좋아집니다 Data 대표값은 실제로 사용되는 값입니다 즉 25로 설정되어도 대표값 16으로 내부에서는 사용됩니다 단계 데이터 값 데이터 대표값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance는 모터의 제어의 유연성을 설정하는 것입니다 아래 그림은 위치와 모터의 출력 관계를 나타냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#compliance-slope-28-29"
	},
	"2167": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#goal-position-30"
	},
	"2168": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed (32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 0으로 설정하면 속도 제어를 하지 않고 모터의 최대 rpm을 사용한다는 의미입니다 023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 참고 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 047 0x7FF 까지 사용되며 단위는 약 입니다 023 범위의 값을 사용하면 CCW방향으로 회전하며 0으로 설정하면 정지합니다 024 047 범위의 값을 사용하면 CW방향으로 회전하며 024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#moving-speed-32"
	},
	"2169": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit (34)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#torque-limit-34"
	},
	"2170": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (36)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 장치를 정면에서 바라본 그림입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#present-position-36"
	},
	"2171": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed (38)",
		"content": "현재 이동하는 속도입니다 이 값은 047 0x7FF 까지 사용됩니다 023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 024 047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#present-speed-38"
	},
	"2172": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load (40)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#present-load-40"
	},
	"2173": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage (42)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100 0x64 이면 10 입니다 만약 Present Voltage 42 값이 범위를 벗어나게 되면 Status Packet의 Voltage Range Error Bit Bit0 이 이 되며 Alarm Address 17 이 로 설정되고 Alarm Shutdown Address 18 의 0번 비트가 1로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#present-voltage-42"
	},
	"2174": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (43)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#present-temperature-43"
	},
	"2175": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (44)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#registered-instruction-44"
	},
	"2176": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (46)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#moving-46"
	},
	"2177": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock (47)",
		"content": "값 설명 EEPROM 영역을 수정할 수 있습니다 EEPROM 영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#lock-47"
	},
	"2178": {
		"product": "RX-64",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch (48)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#punch-48"
	},
	"2179": {
		"product": "RX-64",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "FR05 B1 Option Frame FR05 H1 Option Frame FR05 S1 Option Frame FR05 S2 Option Frame FR05 B101 Option Frame FR05 F101 FR05 X101 Option Frame FR05 H101 Option Frame FR05 S101 Option Frame HN05 N1 Horn HN05 I1 Horn HN05 T1 Horn HN05 N101 Horn HN05 I101 Horn HN05 T101 Horn 기구결합 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#조립-예시"
	},
	"2180": {
		"product": "RX-64",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#유지보수"
	},
	"2181": {
		"product": "RX-64",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#혼과-베어링-교체"
	},
	"2182": {
		"product": "RX-64",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "혼 조립하기",
		"content": "혼을 끼워넣기 전에 혼 와셔를 넣어주어야 합니다 아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 이때 혼 와셔가 중심에서 벗어나지 않도록 하고 조립이 끝나면 볼트로 혼을 고정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#혼과-베어링-교체"
	},
	"2183": {
		"product": "RX-64",
		"header1": "유지보수",
		"header2": "혼과 베어링 교체",
		"header3": "베어링 조립하기",
		"content": "기존 다이나믹셀에서 사용하던 베어링을 새 다이나믹셀에 조립해야 할 경우 아래 방법을 따릅니다 베어링은 쇼핑몰에서 별도로 구매할 수 있습니다 베어링은 혼과는 달리 구동축에 연결되지 않기 때문에 자유롭게 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#혼과-베어링-교체"
	},
	"2184": {
		"product": "RX-64",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#참고자료"
	},
	"2185": {
		"product": "RX-64",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 핀 번호 GND VDD DATA DATA 다이어그램 하우징 MOLEX 50 37 5043 PCB 헤더 MOLEX 22 03 5045 Crimp 터미널 MOLEX 80 70 1039 Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#커넥터-정보"
	},
	"2186": {
		"product": "RX-64",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#도면"
	},
	"2187": {
		"product": "RX-64",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#통신-회로"
	},
	"2188": {
		"product": "RX-64",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#ttl-통신"
	},
	"2189": {
		"product": "RX-64",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/rx/rx-64/#rs485-통신"
	},
	"2190": {
		"product": "2XL430-W250",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5601 모터 Cored 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 동작 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 PWM 제어 모드 Voltage Control Mode 무게 98 크기 36 46 36 mm 기어비 257 정지 토크 Nm 11 Nm 12 무부하 속도 47 rev min 57 rev min 11 61 rev min 12 동작 온도 72 사용 전압 12 권장 전압 11 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Engineering Plastic 대기 전류 49 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 72 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#주요-사양"
	},
	"2191": {
		"product": "2XL430-W250",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#성능-그래프"
	},
	"2192": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#컨트롤-테이블"
	},
	"2193": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#컨트롤-테이블-데이터-주소"
	},
	"2194": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#영역-eeprom-ram"
	},
	"2195": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#크기"
	},
	"2196": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#접근권한"
	},
	"2197": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#초기값"
	},
	"2198": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 090 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 72 100 32 Max Voltage Limit 140 60 140 34 Min Voltage Limit 65 60 140 36 PWM Limit 885 885 113 44 Velocity Limit 260 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#eeprom-영역"
	},
	"2199": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 000 16 383 78 Velocity Gain 100 16 383 80 Position Gain 000 16 383 82 Position Gain 16 383 84 Position Gain 640 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Load 000 000 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#ram-영역"
	},
	"2200": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 2XL430은 두 개의 모터가 각각 별도의 컨트롤 테이블을 갖고 있습니다 하지만 통신모듈은 하나이기 때문에 두 모터의 Baudrate 와 Protocol Version 13 은 항상 동시에 변경되며 변경 시에는 두 모터의 Torque Enable 64 의 값을 모두 으로 설정해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#컨트롤-테이블-설명"
	},
	"2201": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#model-number0"
	},
	"2202": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#firmware-version6"
	},
	"2203": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 주의 2XL430의 두 개의 모터에는 서로 다른 ID를 부여해야 합니다 만약 서로 같은 ID로 설정하려고 하면 Status packet에 Data Limit Error 0x06 가 발생하며 설정이 되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#id7"
	},
	"2204": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 주의 2XL430은 두 개의 모터를 서로 다른 Baud rate로 설정할 수 없습니다 한 모터의 Baud rate를 변경하면 나머지 하나도 동시에 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#baud-rate8"
	},
	"2205": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#return-delay-time9"
	},
	"2206": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#drive-mode10"
	},
	"2207": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작모드 설명 속도제어 모드 360 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일하며 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 PWM Limit 36 으로 초기화 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#operating-mode11"
	},
	"2208": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#secondaryshadow-id-12"
	},
	"2209": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 주의 2XL430은 두 개의 모터를 서로 다른 Protocol version으로 설정할 수 없습니다 한 모터의 Protocol version을 변경하면 나머지 하나도 동시에 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#protocol-version13"
	},
	"2210": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#homing-offset20"
	},
	"2211": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#moving-threshold24"
	},
	"2212": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#temperature-limit31"
	},
	"2213": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Voltage Range Error Bit 0x01 와 Hardware Error Bit 0x80 이 설정됩니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 값 설명 약 1V 60 140 14 0V ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#minmax-voltage-limit32-34"
	},
	"2214": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#pwm-limit36"
	},
	"2215": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#velocity-limit44"
	},
	"2216": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드에서는 적용되지 않습니다 Unit Value Range 088 095 rotation 주의 1회전 내에서 제어하는 위치 제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#minmax-position-limit48-52"
	},
	"2217": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#shutdown63"
	},
	"2218": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#torque-enable64"
	},
	"2219": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#led65"
	},
	"2220": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#status-return-level68"
	},
	"2221": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#registered-instruction69"
	},
	"2222": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#hardware-error-status70"
	},
	"2223": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음과 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 KVP로 표기하고 Control Table의 Gain은 KVP TBL 로 표기합니다 구분 제어기 Gain Control Table 관계 범위 비고 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Load 126 에 표기됩니다 주의 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 아래의 사이트를 참고하세요 PID Controller wikipedia ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#velocity-pi-gain76-78"
	},
	"2224": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 KPP로 표기하고 Control Table의 Gain은 KPP TBL 로 표기합니다 구분 제어기 Gain Control Table 관계 범위 비고 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Load 126 에 표기됩니다 주의 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 주의 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 아래의 사이트를 참고바랍니다 PID Controller Feed Forward ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#velocity-pi-gain76-78"
	},
	"2225": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#bus-watchdog98"
	},
	"2226": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#goal-pwm100"
	},
	"2227": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#goal-velocity104"
	},
	"2228": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#profile-acceleration108"
	},
	"2229": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#profile-velocity112"
	},
	"2230": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#goal-position116"
	},
	"2231": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#realtime-tick120"
	},
	"2232": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#moving122"
	},
	"2233": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#moving-status123"
	},
	"2234": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#present-pwm124"
	},
	"2235": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load(126)",
		"content": "현재 적용되는 하중을 의미합니다 Present Load 126 의 값이 500 인 경우 CCW 방향으로 50 의 하중이 감지되었다는 의미입니다 단위 범위 상세 설명 000 000 양수 CCW 방향의 하중 음수 CW 방향의 하중 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#present-load126"
	},
	"2236": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#present-velocity128"
	},
	"2237": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#present-position132"
	},
	"2238": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#velocity-trajectory136"
	},
	"2239": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#position-trajectory140"
	},
	"2240": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#present-input-voltage144"
	},
	"2241": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#present-temperature146"
	},
	"2242": {
		"product": "2XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#indirect-address"
	},
	"2243": {
		"product": "2XL430-W250",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#조립-예시"
	},
	"2244": {
		"product": "2XL430-W250",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 케이블 2개를 모두 중공형으로 조립하면 케이블이 손상됩니다 한개만 중공형으로 사용해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#배선-예시"
	},
	"2245": {
		"product": "2XL430-W250",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#옵션프레임-조립"
	},
	"2246": {
		"product": "2XL430-W250",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#참고자료"
	},
	"2247": {
		"product": "2XL430-W250",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#퀵스타트"
	},
	"2248": {
		"product": "2XL430-W250",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀번호 GND VDD DATA 다이어그램 하우징 JST EHR 03 PCB 헤더 JST B3B EH Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#커넥터-정보"
	},
	"2249": {
		"product": "2XL430-W250",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#통신-회로"
	},
	"2250": {
		"product": "2XL430-W250",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#ttl-통신"
	},
	"2251": {
		"product": "2XL430-W250",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 2XL430 pdf 다운로드 2XL430 dwg 다운로드 2XL430 stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/2xl430-w250/#도면"
	},
	"2252": {
		"product": "다이나믹셀 X",
		"header1": "다이나믹셀 X",
		"header2": "",
		"header3": "",
		"content": "ockquote 다이나믹셀 시리즈 라인업 전면 중간 케이스를 알루미늄으로 제작하여 방열 기능 극대화 방열 성능 개선을 통한 제품 수명 연장 외형 디자인 단순화로 사용성 개선 케이스에 볼트체결용 탭이 있어 너트 사용 없앰 중공형 설계로 배선 꼬임 및 피로하중 최소화 케이블 커버를 채택하여 케이블 이탈 방지 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/#다이나믹셀-x"
	},
	"2253": {
		"product": "다이나믹셀 X",
		"header1": "다이나믹셀 X",
		"header2": "[XH 모델]",
		"header3": "",
		"content": "XH430 W210 XH430 W350 XH430 V210 XH430 V350 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/#다이나믹셀-x"
	},
	"2254": {
		"product": "다이나믹셀 X",
		"header1": "다이나믹셀 X",
		"header2": "[XM 모델]",
		"header3": "",
		"content": "XM430 W210 XM430 W350 XM540 W150 XM540 W270 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/#다이나믹셀-x"
	},
	"2255": {
		"product": "다이나믹셀 X",
		"header1": "다이나믹셀 X",
		"header2": "[XL 모델]",
		"header3": "",
		"content": "XL320 XL430 W250 2XL430 W250 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/#다이나믹셀-x"
	},
	"2256": {
		"product": "XC430-W240",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5601 모터 Coreless 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 동작 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 PWM 제어 모드 Voltage Control Mode 무게 64 크기 28 46 34 mm 기어비 245 22 정지 토크 TBD TBD TBD 11 TBD Nm 12 무부하 속도 TBD TBD 11 71 rev min 12 동작 온도 80 사용 전압 12 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 TTL Level Multidrop Bus ID 253 ID 252 피드백 Position Velocity Load Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Engineering Plastic Body 대기 전류 45 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#주요-사양"
	},
	"2257": {
		"product": "XC430-W240",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#성능-그래프"
	},
	"2258": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#컨트롤-테이블"
	},
	"2259": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#컨트롤-테이블-데이터-주소"
	},
	"2260": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#영역-eeprom-ram"
	},
	"2261": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#크기"
	},
	"2262": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#접근권한"
	},
	"2263": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#초기값"
	},
	"2264": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 080 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 140 65 140 34 Min Voltage Limit 65 65 140 36 PWM Limit 885 885 113 44 Velocity Limit 306 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#eeprom-영역"
	},
	"2265": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 700 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Load 000 000 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#ram-영역"
	},
	"2266": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#컨트롤-테이블-설명"
	},
	"2267": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#model-number0"
	},
	"2268": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#firmware-version6"
	},
	"2269": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#id7"
	},
	"2270": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#baud-rate8"
	},
	"2271": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#return-delay-time9"
	},
	"2272": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#drive-mode10"
	},
	"2273": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작모드 설명 속도제어 모드 360 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일하며 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 PWM Limit 36 으로 초기화 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#operating-mode11"
	},
	"2274": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#secondaryshadow-id-12"
	},
	"2275": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#protocol-version13"
	},
	"2276": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#homing-offset20"
	},
	"2277": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#moving-threshold24"
	},
	"2278": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#temperature-limit31"
	},
	"2279": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Voltage Range Error Bit 0x01 와 Hardware Error Bit 0x80 이 설정됩니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 값 설명 약 1V 65 140 14 0V ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#minmax-voltage-limit32-34"
	},
	"2280": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#pwm-limit36"
	},
	"2281": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#velocity-limit44"
	},
	"2282": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드에서는 적용되지 않습니다 Unit Value Range 088 095 rotation 주의 1회전 내에서 제어하는 위치 제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#minmax-position-limit48-52"
	},
	"2283": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#shutdown63"
	},
	"2284": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#torque-enable64"
	},
	"2285": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#led65"
	},
	"2286": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#status-return-level68"
	},
	"2287": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#registered-instruction69"
	},
	"2288": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#hardware-error-status70"
	},
	"2289": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음과 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 KVP로 표기하고 Control Table의 Gain은 KVP TBL 로 표기합니다 구분 제어기 Gain Control Table 관계 범위 비고 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Load 126 에 표기됩니다 주의 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 아래의 사이트를 참고하세요 PID Controller wikipedia ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#velocity-pi-gain76-78"
	},
	"2290": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 KPP로 표기하고 Control Table의 Gain은 KPP TBL 로 표기합니다 구분 제어기 Gain Control Table 관계 범위 비고 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Load 126 에 표기됩니다 주의 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 주의 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 아래의 사이트를 참고바랍니다 PID Controller Feed Forward ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#velocity-pi-gain76-78"
	},
	"2291": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#bus-watchdog98"
	},
	"2292": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#goal-pwm100"
	},
	"2293": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#goal-velocity104"
	},
	"2294": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#profile-acceleration108"
	},
	"2295": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#profile-velocity112"
	},
	"2296": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#goal-position116"
	},
	"2297": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#realtime-tick120"
	},
	"2298": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#moving122"
	},
	"2299": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#moving-status123"
	},
	"2300": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#present-pwm124"
	},
	"2301": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load(126)",
		"content": "현재 적용되는 하중을 의미합니다 Present Load 126 의 값이 500 인 경우 CCW 방향으로 50 의 하중이 감지되었다는 의미입니다 단위 범위 상세 설명 000 000 양수 CCW 방향의 하중 음수 CW 방향의 하중 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#present-load126"
	},
	"2302": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#present-velocity128"
	},
	"2303": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#present-position132"
	},
	"2304": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#velocity-trajectory136"
	},
	"2305": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#position-trajectory140"
	},
	"2306": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#present-input-voltage144"
	},
	"2307": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#present-temperature146"
	},
	"2308": {
		"product": "XC430-W240",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#indirect-address"
	},
	"2309": {
		"product": "XC430-W240",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#조립-예시"
	},
	"2310": {
		"product": "XC430-W240",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 케이블 2개를 모두 중공형으로 조립하면 케이블이 손상됩니다 한개만 중공형으로 사용해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#배선-예시"
	},
	"2311": {
		"product": "XC430-W240",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#옵션프레임-조립"
	},
	"2312": {
		"product": "XC430-W240",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#유지보수"
	},
	"2313": {
		"product": "XC430-W240",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#혼과-기어-교체"
	},
	"2314": {
		"product": "XC430-W240",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#혼과-기어-교체"
	},
	"2315": {
		"product": "XC430-W240",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#혼과-기어-교체"
	},
	"2316": {
		"product": "XC430-W240",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#참고자료"
	},
	"2317": {
		"product": "XC430-W240",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#퀵스타트"
	},
	"2318": {
		"product": "XC430-W240",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀번호 GND VDD DATA 다이어그램 하우징 JST EHR 03 PCB 헤더 JST B3B EH Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#커넥터-정보"
	},
	"2319": {
		"product": "XC430-W240",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 XL 430 pdf 다운로드 XL 430 dwg 다운로드 XL 430 stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xc430-w240/#도면"
	},
	"2320": {
		"product": "XH430-V210",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Maxon 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 82 크기 28 46 34 mm 기어비 212 정지 토크 Nm 24 무부하 속도 52 rev min 24 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 24 권장 전압 24 제어 명령 Digital Packet 프로토콜 타입 RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 36 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#주요-사양"
	},
	"2321": {
		"product": "XH430-V210",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#성능-그래프"
	},
	"2322": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#컨트롤-테이블"
	},
	"2323": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#컨트롤-테이블-데이터-주소"
	},
	"2324": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#영역-eeprom-ram"
	},
	"2325": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#크기"
	},
	"2326": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#접근권한"
	},
	"2327": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#초기값"
	},
	"2328": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 050 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 300 110 300 34 Min Voltage Limit 110 110 300 36 PWM Limit 885 885 113 38 Current Limit 689 689 34 mA 44 Velocity Limit 230 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#eeprom-영역"
	},
	"2329": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 800 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 34 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 34 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#ram-영역"
	},
	"2330": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#컨트롤-테이블-설명"
	},
	"2331": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#model-number0"
	},
	"2332": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#firmware-version6"
	},
	"2333": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#id7"
	},
	"2334": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#baud-rate8"
	},
	"2335": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#return-delay-time9"
	},
	"2336": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#drive-mode10"
	},
	"2337": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#operating-mode11"
	},
	"2338": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#secondaryshadow-id-12"
	},
	"2339": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#protocol-version13"
	},
	"2340": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#homing-offset20"
	},
	"2341": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#moving-threshold24"
	},
	"2342": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#temperature-limit31"
	},
	"2343": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 와 Hardware Error Bit 0x80 이 설정됩니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 110 300 11 30 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#minmax-voltage-limit32-34"
	},
	"2344": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#pwm-limit36"
	},
	"2345": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 약 34 mA 689 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#current-limit38"
	},
	"2346": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#velocity-limit44"
	},
	"2347": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#minmax-position-limit48-52"
	},
	"2348": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#shutdown63"
	},
	"2349": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#torque-enable64"
	},
	"2350": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#led65"
	},
	"2351": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#status-return-level68"
	},
	"2352": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#registered-instruction69"
	},
	"2353": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#hardware-error-status70"
	},
	"2354": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#velocity-pi-gain76-78"
	},
	"2355": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#velocity-pi-gain76-78"
	},
	"2356": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#bus-watchdog98"
	},
	"2357": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#goal-pwm100"
	},
	"2358": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 약 34 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#goal-current102"
	},
	"2359": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#goal-velocity104"
	},
	"2360": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#profile-acceleration108"
	},
	"2361": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#profile-velocity112"
	},
	"2362": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#goal-position116"
	},
	"2363": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#realtime-tick120"
	},
	"2364": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#moving122"
	},
	"2365": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#moving-status123"
	},
	"2366": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#present-pwm124"
	},
	"2367": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#present-current126"
	},
	"2368": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#present-velocity128"
	},
	"2369": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#present-position132"
	},
	"2370": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#velocity-trajectory136"
	},
	"2371": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#position-trajectory140"
	},
	"2372": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#present-input-voltage144"
	},
	"2373": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#present-temperature146"
	},
	"2374": {
		"product": "XH430-V210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#indirect-address"
	},
	"2375": {
		"product": "XH430-V210",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#조립-예시"
	},
	"2376": {
		"product": "XH430-V210",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#배선-예시"
	},
	"2377": {
		"product": "XH430-V210",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#옵션프레임-조립"
	},
	"2378": {
		"product": "XH430-V210",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#유지보수"
	},
	"2379": {
		"product": "XH430-V210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#혼과-기어-교체"
	},
	"2380": {
		"product": "XH430-V210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#혼과-기어-교체"
	},
	"2381": {
		"product": "XH430-V210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#혼과-기어-교체"
	},
	"2382": {
		"product": "XH430-V210",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#참고자료"
	},
	"2383": {
		"product": "XH430-V210",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#퀵스타트"
	},
	"2384": {
		"product": "XH430-V210",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 JST EHR 03 JST EHR 04 PCB 헤더 JST B3B EH JST B4B EH Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#커넥터-정보"
	},
	"2385": {
		"product": "XH430-V210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#통신-회로"
	},
	"2386": {
		"product": "XH430-V210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#ttl-통신"
	},
	"2387": {
		"product": "XH430-V210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#rs485-통신"
	},
	"2388": {
		"product": "XH430-V210",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 430 idle ref pdf 다운로드 430 idle ref dwg 다운로드 430 idle stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v210/#도면"
	},
	"2389": {
		"product": "XH430-V350",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Maxon 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 82 크기 28 46 34 mm 기어비 353 정지 토크 Nm 24 무부하 속도 31 rev min 24 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 24 권장 전압 24 제어 명령 Digital Packet 프로토콜 타입 RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 36 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#주요-사양"
	},
	"2390": {
		"product": "XH430-V350",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#성능-그래프"
	},
	"2391": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#컨트롤-테이블"
	},
	"2392": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#컨트롤-테이블-데이터-주소"
	},
	"2393": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#영역-eeprom-ram"
	},
	"2394": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#크기"
	},
	"2395": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#접근권한"
	},
	"2396": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#초기값"
	},
	"2397": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 040 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 300 110 300 34 Min Voltage Limit 110 110 300 36 PWM Limit 885 885 113 38 Current Limit 689 689 34 mA 44 Velocity Limit 135 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#eeprom-영역"
	},
	"2398": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 800 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 34 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 34 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#ram-영역"
	},
	"2399": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#컨트롤-테이블-설명"
	},
	"2400": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#model-number0"
	},
	"2401": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#firmware-version6"
	},
	"2402": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#id7"
	},
	"2403": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#baud-rate8"
	},
	"2404": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#return-delay-time9"
	},
	"2405": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#drive-mode10"
	},
	"2406": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#operating-mode11"
	},
	"2407": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#secondaryshadow-id-12"
	},
	"2408": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#protocol-version13"
	},
	"2409": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#homing-offset20"
	},
	"2410": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#moving-threshold24"
	},
	"2411": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#temperature-limit31"
	},
	"2412": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 와 Hardware Error Bit 0x80 이 설정됩니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 110 300 11 30 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#minmax-voltage-limit32-34"
	},
	"2413": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#pwm-limit36"
	},
	"2414": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 약 34 mA 689 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#current-limit38"
	},
	"2415": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#velocity-limit44"
	},
	"2416": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#minmax-position-limit48-52"
	},
	"2417": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#shutdown63"
	},
	"2418": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#torque-enable64"
	},
	"2419": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#led65"
	},
	"2420": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#status-return-level68"
	},
	"2421": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#registered-instruction69"
	},
	"2422": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#hardware-error-status70"
	},
	"2423": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#velocity-pi-gain76-78"
	},
	"2424": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#velocity-pi-gain76-78"
	},
	"2425": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#bus-watchdog98"
	},
	"2426": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#goal-pwm100"
	},
	"2427": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 약 34 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#goal-current102"
	},
	"2428": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#goal-velocity104"
	},
	"2429": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#profile-acceleration108"
	},
	"2430": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#profile-velocity112"
	},
	"2431": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#goal-position116"
	},
	"2432": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#realtime-tick120"
	},
	"2433": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#moving122"
	},
	"2434": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#moving-status123"
	},
	"2435": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#present-pwm124"
	},
	"2436": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#present-current126"
	},
	"2437": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#present-velocity128"
	},
	"2438": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#present-position132"
	},
	"2439": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#velocity-trajectory136"
	},
	"2440": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#position-trajectory140"
	},
	"2441": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#present-input-voltage144"
	},
	"2442": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#present-temperature146"
	},
	"2443": {
		"product": "XH430-V350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#indirect-address"
	},
	"2444": {
		"product": "XH430-V350",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#조립-예시"
	},
	"2445": {
		"product": "XH430-V350",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#배선-예시"
	},
	"2446": {
		"product": "XH430-V350",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#옵션프레임-조립"
	},
	"2447": {
		"product": "XH430-V350",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#유지보수"
	},
	"2448": {
		"product": "XH430-V350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#혼과-기어-교체"
	},
	"2449": {
		"product": "XH430-V350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#혼과-기어-교체"
	},
	"2450": {
		"product": "XH430-V350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#혼과-기어-교체"
	},
	"2451": {
		"product": "XH430-V350",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#참고자료"
	},
	"2452": {
		"product": "XH430-V350",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#퀵스타트"
	},
	"2453": {
		"product": "XH430-V350",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 JST EHR 03 JST EHR 04 PCB 헤더 JST B3B EH JST B4B EH Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#커넥터-정보"
	},
	"2454": {
		"product": "XH430-V350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#통신-회로"
	},
	"2455": {
		"product": "XH430-V350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#ttl-통신"
	},
	"2456": {
		"product": "XH430-V350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#rs485-통신"
	},
	"2457": {
		"product": "XH430-V350",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 430 idle ref pdf 다운로드 430 idle ref dwg 다운로드 430 idle stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-v350/#도면"
	},
	"2458": {
		"product": "XH430-W210",
		"header1": "스펙",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Maxon 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 82 크기 28 46 34 mm 기어비 212 정지 토크 11 12 14 무부하 속도 46 rev min 11 50 rev min 12 62 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 40 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#스펙"
	},
	"2459": {
		"product": "XH430-W210",
		"header1": "스펙",
		"header2": "성능 그래프",
		"header3": "",
		"content": "주의 스톨 토크와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 스톨 토크는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 스톨 토크 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 스톨 토크보다 적게 측정됩니다 WARNING 전원공급시 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2DYNAMIXEL을 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 Off 해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#성능-그래프"
	},
	"2460": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 Data의 집합체입니다 사용자는 Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 READ Instruction 장치의 상태를 파악할 수 있고 Data를 변경함으로써 WRITE Instruction 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블"
	},
	"2461": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Manual의 프로토콜을 참고해주세요 주의 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아를 참고하세요 Two complement ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-데이터-주소"
	},
	"2462": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "Area (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 기본값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-데이터-주소"
	},
	"2463": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "Size",
		"content": "Data의 Size는 용도에 따라 byte 로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-데이터-주소"
	},
	"2464": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "Access",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-데이터-주소"
	},
	"2465": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "Initial Value",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 기본값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 기본값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-데이터-주소"
	},
	"2466": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 010 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 160 95 160 34 Min Voltage Limit 95 95 160 36 PWM Limit 885 885 113 38 Current Limit 648 648 69 mA 44 Velocity Limit 210 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#eeprom-영역"
	},
	"2467": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 900 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 69 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 69 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#ram-영역"
	},
	"2468": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "Caution EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2469": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2470": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2471": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2472": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2473": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2474": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode (10, Available after Firmware version 38)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2475": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode (11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2476": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID (12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2477": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol version (13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2478": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset (20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2479": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold (24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2480": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit (31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2481": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Voltage Limit (32), Min Voltage Limit (34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2482": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit (36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#컨트롤-테이블-설명"
	},
	"2483": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 약 69 mA 648 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2484": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit (44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2485": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Position Limit (48), Min Position Limit (52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2486": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown (63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2487": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable (64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2488": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED (65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2489": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level (68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2490": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction (69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2491": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status (70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2492": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Gain (76), Velocity Gain (78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2493": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Gain (80), Position Gain (82), Position Gain (84)",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2494": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Feedforward 2nd Gain (88), Feedforward 1st Gain (90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2495": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog (98, Available after Firmware version 38)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2496": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM (100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#current-limit38"
	},
	"2497": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 약 69 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2498": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity (104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2499": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration (108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2500": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity (112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2501": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position (116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2502": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick (120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2503": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving (122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2504": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status (123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2505": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM (124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2506": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current (126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2507": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity (128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2508": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position (132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 주의 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2509": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory (136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2510": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory (140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2511": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage (144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2512": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature (144)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2513": {
		"product": "XH430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "**Indirect Address 28 (168, 170 220, 222), Indirect Address 29 56 (578, 580 630, 632)",
		"content": "Indirect Data 28 224 225 250 251 Indirect Data 29 56 634 635 660 661 Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제1 Size byte 인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제2 Size byte 인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Values Description Indirect Address Range 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 주의 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 주의 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#goal-current102"
	},
	"2514": {
		"product": "XH430-W210",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#조립-예시"
	},
	"2515": {
		"product": "XH430-W210",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#배선-예시"
	},
	"2516": {
		"product": "XH430-W210",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#옵션프레임-조립"
	},
	"2517": {
		"product": "XH430-W210",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#유지보수"
	},
	"2518": {
		"product": "XH430-W210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#혼과-기어-교체"
	},
	"2519": {
		"product": "XH430-W210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#혼과-기어-교체"
	},
	"2520": {
		"product": "XH430-W210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#혼과-기어-교체"
	},
	"2521": {
		"product": "XH430-W210",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#참고자료"
	},
	"2522": {
		"product": "XH430-W210",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#퀵스타트"
	},
	"2523": {
		"product": "XH430-W210",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 JST EHR 03 JST EHR 04 PCB 헤더 JST B3B EH JST B4B EH Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#커넥터-정보"
	},
	"2524": {
		"product": "XH430-W210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#통신-회로"
	},
	"2525": {
		"product": "XH430-W210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#ttl-통신"
	},
	"2526": {
		"product": "XH430-W210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#rs485-통신"
	},
	"2527": {
		"product": "XH430-W210",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 430 idle ref pdf 다운로드 430 idle ref dwg 다운로드 430 idle stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w210/#도면"
	},
	"2528": {
		"product": "XH430-W350",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Maxon 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 82 크기 28 46 34 mm 기어비 353 정지 토크 Nm 11 Nm 12 Nm 14 무부하 속도 27 rev min 11 30 rev min 12 37 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 40 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#주요-사양"
	},
	"2529": {
		"product": "XH430-W350",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#성능-그래프"
	},
	"2530": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#컨트롤-테이블"
	},
	"2531": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#컨트롤-테이블-데이터-주소"
	},
	"2532": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#영역-eeprom-ram"
	},
	"2533": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#크기"
	},
	"2534": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#접근권한"
	},
	"2535": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#초기값"
	},
	"2536": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 000 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 160 95 160 34 Min Voltage Limit 95 95 160 36 PWM Limit 885 885 113 38 Current Limit 648 648 69 mA 44 Velocity Limit 130 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#eeprom-영역"
	},
	"2537": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 900 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 69 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 69 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#ram-영역"
	},
	"2538": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#컨트롤-테이블-설명"
	},
	"2539": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#model-number0"
	},
	"2540": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#firmware-version6"
	},
	"2541": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#id7"
	},
	"2542": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#baud-rate8"
	},
	"2543": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#return-delay-time9"
	},
	"2544": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#drive-mode10"
	},
	"2545": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#operating-mode11"
	},
	"2546": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#secondaryshadow-id-12"
	},
	"2547": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#protocol-version13"
	},
	"2548": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#homing-offset20"
	},
	"2549": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#moving-threshold24"
	},
	"2550": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#temperature-limit31"
	},
	"2551": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#minmax-voltage-limit32-34"
	},
	"2552": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#pwm-limit36"
	},
	"2553": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 약 69 mA 648 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#current-limit38"
	},
	"2554": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#velocity-limit44"
	},
	"2555": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#minmax-position-limit48-52"
	},
	"2556": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#shutdown63"
	},
	"2557": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#torque-enable64"
	},
	"2558": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#led65"
	},
	"2559": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#status-return-level68"
	},
	"2560": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#registered-instruction69"
	},
	"2561": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#hardware-error-status70"
	},
	"2562": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#velocity-pi-gain76-78"
	},
	"2563": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#velocity-pi-gain76-78"
	},
	"2564": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#bus-watchdog98"
	},
	"2565": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#goal-pwm100"
	},
	"2566": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 약 69 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#goal-current102"
	},
	"2567": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#goal-velocity104"
	},
	"2568": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#profile-acceleration108"
	},
	"2569": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#profile-velocity112"
	},
	"2570": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#goal-position116"
	},
	"2571": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#realtime-tick120"
	},
	"2572": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#moving122"
	},
	"2573": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#moving-status123"
	},
	"2574": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#present-pwm124"
	},
	"2575": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#present-current126"
	},
	"2576": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#present-velocity128"
	},
	"2577": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#present-position132"
	},
	"2578": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#velocity-trajectory136"
	},
	"2579": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#position-trajectory140"
	},
	"2580": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#present-input-voltage144"
	},
	"2581": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#present-temperature146"
	},
	"2582": {
		"product": "XH430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#indirect-address"
	},
	"2583": {
		"product": "XH430-W350",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#조립-예시"
	},
	"2584": {
		"product": "XH430-W350",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#배선-예시"
	},
	"2585": {
		"product": "XH430-W350",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#옵션프레임-조립"
	},
	"2586": {
		"product": "XH430-W350",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#유지보수"
	},
	"2587": {
		"product": "XH430-W350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#혼과-기어-교체"
	},
	"2588": {
		"product": "XH430-W350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#혼과-기어-교체"
	},
	"2589": {
		"product": "XH430-W350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#혼과-기어-교체"
	},
	"2590": {
		"product": "XH430-W350",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#참고자료"
	},
	"2591": {
		"product": "XH430-W350",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#퀵스타트"
	},
	"2592": {
		"product": "XH430-W350",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 JST EHR 03 JST EHR 04 PCB 헤더 JST B3B EH JST B4B EH Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#커넥터-정보"
	},
	"2593": {
		"product": "XH430-W350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#통신-회로"
	},
	"2594": {
		"product": "XH430-W350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#ttl-통신"
	},
	"2595": {
		"product": "XH430-W350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#rs485-통신"
	},
	"2596": {
		"product": "XH430-W350",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 430 idle ref pdf Downlaod 430 idle ref dwg 다운로드 430 idle stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xh430-w350/#도면"
	},
	"2597": {
		"product": "XL-320",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 무게 16 크기 24 36 27 mm 최소 제어각 29 모터 Cored 기어비 238 스톨 토크 39 Nm 무부하 속도 114 rev min 18 동작 모드 관절 모드 300 바퀴 모드 무한 회전 동작 온도 70 사용 전압 권장 전압 제어 명령 Digital Packet 프로토콜 타입 Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 TTL Level Multidrop Bus Daisy Chain Type Connector ID 253 ID 252 통신 속도 343 bps Mbps 안전 장치 클러치 피드백 Position Temperature Load Input Voltage 등 재질 Engineering Plastic 주의 스톨 토크는 순간적으로 낼 수 있는 최대 정지 토크를 의미합니다 실제 구동을 위해 로봇을 설계하신다면 스톨 토크의 이하의 로드가 걸리도록 설계하셔야 안정적인 움직임이 가능합니다 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 70 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#주요-사양"
	},
	"2598": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#컨트롤-테이블"
	},
	"2599": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#컨트롤-테이블-데이터-주소"
	},
	"2600": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#영역-eeprom-ram"
	},
	"2601": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#크기"
	},
	"2602": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#접근권한"
	},
	"2603": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#초기값"
	},
	"2604": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Min Max Model Number 모델 번호 350 Firmware Version 펌웨어 버전 정보 ID 통신 ID 252 Baud Rate 통신 속도 Return Delay Time 응답 지연 시간 250 254 CW Angle Limit 시계 방향 한계 각도 값 1023 CCW Angle Limit 반시계 방향 한계 각도 값 1023 1023 11 Control Mode 제어 모드 12 Temperature Limit 내부 한계 온도 65 150 13 Min Voltage Limit 최저 한계 전압 60 50 250 14 Max Voltage Limit 최고 한계 전압 90 50 250 15 Max Torque 토크 한계 값 1023 1023 17 Status Return Level 응답 레벨 18 Shutdown 알람용 셧 다운 Shut down 기능 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#eeprom-영역"
	},
	"2605": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 의미 접근 기본값 Min Max 24 Torque Enable 토크 켜기 25 LED LED 값 27 Gain Derivative Gain 254 28 Gain Integral Gain 254 29 Gain Proportional Gain 32 254 30 Goal Position 목표 위치 값 1023 32 Moving Speed 목표 속도 값 2047 35 Torque Limit 목표 토크 값 1023 37 Present Position 현재 위치 값 39 Present Speed 현재 속도 값 41 Present Load 현재 하중 값 45 Present Voltage 현재 전압 46 Present Temperature 현재 온도 47 Registered Instruction의 등록 여부 49 Moving 움직임 유무 50 Hardware Error Stat 하드웨어 에러 상태 51 Punch Punch 값 32 1023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#ram-영역"
	},
	"2606": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#컨트롤-테이블-설명"
	},
	"2607": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number (0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#model-number-0"
	},
	"2608": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version (2)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#firmware-version-2"
	},
	"2609": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#id-3"
	},
	"2610": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 Baud Rate 600 bps 57 600 bps 115 200 bps Mbps 주의 UART는 Baudrate오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#baud-rate-4"
	},
	"2611": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#return-delay-time-5"
	},
	"2612": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "CW/CCW Angle Limit(6, 8)",
		"content": "동작이 허용되는 각도를 설정할 수 있습니다 값의 범위와 단위는 Goal Position Address 30 31 과 같습니다 CW Angle Limit Goal Position Address 30 31 의 최소 값 CCW Angle Limit Goal Position Address 30 31 의 최대 값 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2613": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Control Mode(11)",
		"content": "값 동작 방식 바퀴 모드 관절 모드 바퀴 모드는 모터가 무한 회전을 하여 바퀴형 구동 로봇에 쓸 수 있습니다 관절 모드는 특정 각도로 제어가 가능하여 다관절 로봇에 쓸 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2614": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(12)",
		"content": "동작 온도의 상한 값입니다 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2615": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(13, 14)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 50 160 0x32 0xFA 까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Alram LED Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2616": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max Torque(15)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Torque Limit Address 34 35 는 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2617": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(17)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2618": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(18)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 설정할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내 용 Bit Bit ERROR INPUT VOLTAGE 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 Bit ERROR OVER HEATING 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit ERROR OVERLOAD 모터의 최대 출력으로 제어할 수 없는 하중이 지속적으로 적용되는 경우 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error와 Overheating Error가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 발생하면 LED를 깜박이고 Torque Limit의 값을 으로 만들어서 모터 출력이 가 되도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2619": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(24)",
		"content": "값 상세 설명 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2620": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(25)",
		"content": "XL 320의 LED는 아래의 표와 같이 동작합니다 활성화된 비트 10진수 값 출력 색상 없음 꺼짐 빨강 초록 파랑 노랑 청록 보라 하양 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 적색 점멸 초기화 4회 적색 점멸 알람 적색 점멸 부트 모드 적색 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2621": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PID Gains(27, 28, 29)",
		"content": "MX 시리즈는 대표적 제어기법인 PID Controller를 이용합니다 Gain 은 Propotional Gain값 입니다 Gain 은 Integral Gain값 입니다 Gain 은 Derivative Gain값 입니다 값의 범위는 254 입니다 sub sub Gain sub sub Gain 000 048 sub sub Gain 000 relationship between Compliance Slop PID Slope Gain 128 16 64 32 32 64 16 128 gain larger back lash weaker amount output near goal position At some extent like combined concept margine slope does exactly match previous concept compliance So obvious see difference terms motion Explanation PID required brief explanation general PID refer website link below http en wikipedia org wiki PID controller ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2622": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(30)",
		"content": "이동 시키고자 하는 곳의 위치 값입니다 023 0x3FF 까지 사용 가능하며 단위는 29 입니다 CW CCW Angle Limit의 벗어난 값을 사용하게 되면 Status Packet 중 ERROR의 Angle Limit Error Bit Bit1 가 로 설정되어 반환되고 Alarm LED Shutdown의 플래그 flag 중 Angle Limit Error가 설정되어 있다면 기능이 발휘됩니다 ockquote 위 그림은 다이나믹셀을 정면에서 보았을 때의 그림입니다 참고 바퀴 모드로 설정되어 있는 경우 이 값은 사용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2623": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Speed(32)",
		"content": "이동하는 속도를 나타내며 이 값의 범위와 단위는 동작 모드에 따라 다릅니다 관절 모드 Goal Position으로 이동하는 속도입니다 1023 0x3FF 까지 사용되며 단위는 약 111 rev min 입니다 으로 설정하면 속도 제어를 하지 않고 모터의 최대 속도를 사용한다는 의미입니다 1023의 경우 약 114 rev min 이 됩니다 예를 들어 300으로 설정된 경우 약 33 rev min 입니다 바퀴 모드 목표 방향으로 이동하는 속도입니다 2047 0x7FF 까지 사용되며 단위는 약 입니다 1023 범위의 값을 사용하면 CCW 방향으로 회전하며 0으로 설정하면 정지합니다 1024 2047 범위의 값을 사용하면 CW 방향으로 회전하며 1024으로 설정하면 정지합니다 즉 10번째 bit가 방향을 제어하는 direction bit가 됩니다 바퀴 모드는 속도 제어를 하지 않고 출력 제어만 가능합니다 예를 들어 512로 설정된 경우 최대 출력 대비 약 50 로 제어한다는 의미입니다 주의 해당 모델의 최대 속도를 확인하시기 바랍니다 최대 속도 이상을 설정해도 모터는 그 이상의 속도를 낼 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2624": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Limit(35)",
		"content": "모터의 최대 출력 제한 값입니다 023 0x3FF 까지 사용 가능하며 단위는 약 입니다 예를 들어 값이 512이면 약 50 이고 최대 출력 대비 50 만 사용하겠다는 의미입니다 전원이 켜지면 Max Torque Address 14 15 의 값을 초기 값으로 사용합니다 참고 Alarm Shutdown의 기능이 발휘되면 이 값이 0이 되어 모터의 힘이 없어지게 됩니다 Alarm Shutdown조건이 해제되고 이 값을 0이 아닌 값으로 바꾸면 다시 모터의 출력이 발휘되어 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2625": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(37)",
		"content": "장치의 현재 위치 값입니다 값의 범위는 023 0x3FF 이며 단위는 29 입니다 ockquote 위 그림은 해당 모델의 전면이 기준입니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 주의 바퀴 모드로 설정되어 있는 경우 이 값을 회전량 또는 움직인 거리를 측정하는 용도로 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2626": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Speed(39)",
		"content": "현재 이동하는 속도입니다 이 값은 2047 0x7FF 까지 사용됩니다 1023 범위의 값이면 CCW 방향으로 회전한다는 의미입니다 1024 2047 범위의 값이면 CW 방향으로 회전한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 0과 1024는 같습니다 이 값의 단위는 동작 모드에 따라 다릅니다 관절 모드 단위는 약 111 rev min 입니다 예를 들어 300으로 설정된 경우 CCW방향 약 33 rev min 으로 이동 중이라는 의미입니다 바퀴 모드 단위는 약 입니다 예를 들어 512로 설정된 경우 CCW 방향 최대 출력 대비 약 50 로 제어 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2627": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load(41)",
		"content": "현재 적용되는 하중을 의미합니다 이 값의 범위는 047이며 단위는 약 입니다 023 범위의 값은 CCW 방향으로 하중이 작용한다는 의미입니다 024 047 범위의 값은 CW 방향으로 하중이 작용한다는 의미입니다 즉 10번째 bit가 방향을 제어하는 direction bit가 되며 024는 0과 같습니다 예를 들어 값이 512이면 CCW 방향으로 최대 출력 대비 약 50 로 하중이 감지된다는 의미입니다 Bit 15 11 10 값 하중 방향 데이터 하중 비율 참고 CCW 하중 하중 방향 비트 Bit 10 CW 하중 하중 방향 비트 Bit 10 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확 할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2628": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Voltage(45)",
		"content": "현재 공급되고 있는 전압입니다 이 값의 단위는 입니다 예를 들어 값이 100이면 10 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2629": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(46)",
		"content": "내부의 온도이며 이 값의 단위는 섭씨 온도입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2630": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(47)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2631": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(49)",
		"content": "값 설명 Goal position 명령 수행을 완료했습니다 Goal position 명령을 수행중입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2632": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(50)",
		"content": "Present hardware error staus Alarm shutdown error value ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2633": {
		"product": "XL-320",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Punch(51)",
		"content": "구동시에 모터에 공급되는 최소 전류량 입니다 초기값은 0x00이며 최고 0x3FF까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#cwccw-angle-limit6-8"
	},
	"2634": {
		"product": "XL-320",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#참고자료"
	},
	"2635": {
		"product": "XL-320",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀 번 GND VDD DATA 다이어그램 하우징 MOLEX 51065 0300 PCB 헤더 MOLEX 53253 0370 Crimp 터미널 MOLEX 50212 8000 Wire Gauge 24 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#커넥터-정보"
	},
	"2636": {
		"product": "XL-320",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#통신-회로"
	},
	"2637": {
		"product": "XL-320",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#ttl-통신"
	},
	"2638": {
		"product": "XL-320",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 XL 320 pdf 다운로드 XL 320 dwg 다운로드 XL 320 stp 다운로드 XL 320 iges 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl320/#도면"
	},
	"2639": {
		"product": "XL430-W250",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5601 모터 Cored 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 동작 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 PWM 제어 모드 Voltage Control Mode 무게 57 크기 28 46 34 mm 기어비 258 정지 토크 Nm 11 Nm 12 무부하 속도 47 rev min 57 rev min 11 61 rev min 12 동작 온도 72 사용 전압 12 권장 전압 11 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Engineering Plastic 대기 전류 52 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 72 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#주요-사양"
	},
	"2640": {
		"product": "XL430-W250",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#성능-그래프"
	},
	"2641": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#컨트롤-테이블"
	},
	"2642": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#컨트롤-테이블-데이터-주소"
	},
	"2643": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#영역-eeprom-ram"
	},
	"2644": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#크기"
	},
	"2645": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#접근권한"
	},
	"2646": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#초기값"
	},
	"2647": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 060 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 72 100 32 Max Voltage Limit 140 60 140 34 Min Voltage Limit 60 60 140 36 PWM Limit 885 885 113 44 Velocity Limit 265 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#eeprom-영역"
	},
	"2648": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 000 16 383 78 Velocity Gain 100 16 383 80 Position Gain 000 16 383 82 Position Gain 16 383 84 Position Gain 640 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Load 000 000 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#ram-영역"
	},
	"2649": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#컨트롤-테이블-설명"
	},
	"2650": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#model-number0"
	},
	"2651": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#firmware-version6"
	},
	"2652": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#id7"
	},
	"2653": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#baud-rate8"
	},
	"2654": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#return-delay-time9"
	},
	"2655": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#drive-mode10"
	},
	"2656": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작모드 설명 속도제어 모드 360 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일하며 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 PWM Limit 36 으로 초기화 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#operating-mode11"
	},
	"2657": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#secondaryshadow-id-12"
	},
	"2658": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#protocol-version13"
	},
	"2659": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#homing-offset20"
	},
	"2660": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#moving-threshold24"
	},
	"2661": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#temperature-limit31"
	},
	"2662": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Voltage Range Error Bit 0x01 와 Hardware Error Bit 0x80 이 설정됩니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 값 설명 약 1V 60 140 14 0V ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#minmax-voltage-limit32-34"
	},
	"2663": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#pwm-limit36"
	},
	"2664": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#velocity-limit44"
	},
	"2665": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드에서는 적용되지 않습니다 Unit Value Range 088 095 rotation 주의 1회전 내에서 제어하는 위치 제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#minmax-position-limit48-52"
	},
	"2666": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#shutdown63"
	},
	"2667": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#torque-enable64"
	},
	"2668": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#led65"
	},
	"2669": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#status-return-level68"
	},
	"2670": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#registered-instruction69"
	},
	"2671": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#hardware-error-status70"
	},
	"2672": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음과 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 KVP로 표기하고 Control Table의 Gain은 KVP TBL 로 표기합니다 구분 제어기 Gain Control Table 관계 범위 비고 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Load 126 에 표기됩니다 주의 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 아래의 사이트를 참고하세요 PID Controller wikipedia ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#velocity-pi-gain76-78"
	},
	"2673": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 KPP로 표기하고 Control Table의 Gain은 KPP TBL 로 표기합니다 구분 제어기 Gain Control Table 관계 범위 비고 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Load 126 에 표기됩니다 주의 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 주의 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 아래의 사이트를 참고바랍니다 PID Controller Feed Forward ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#velocity-pi-gain76-78"
	},
	"2674": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#bus-watchdog98"
	},
	"2675": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#goal-pwm100"
	},
	"2676": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#goal-velocity104"
	},
	"2677": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#profile-acceleration108"
	},
	"2678": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#profile-velocity112"
	},
	"2679": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#goal-position116"
	},
	"2680": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#realtime-tick120"
	},
	"2681": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#moving122"
	},
	"2682": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#moving-status123"
	},
	"2683": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#present-pwm124"
	},
	"2684": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Load(126)",
		"content": "현재 적용되는 하중을 의미합니다 Present Load 126 의 값이 500 인 경우 CCW 방향으로 50 의 하중이 감지되었다는 의미입니다 단위 범위 상세 설명 000 000 양수 CCW 방향의 하중 음수 CW 방향의 하중 참고 현재하중은 토크센서 등을 이용하여 측정된 값이 아니라 내부 출력 값을 기반으로 유추된 값 입니다 따라서 무게나 토크를 측정하는 용도로는 부정확할 수 있습니다 해당 관절에 가해지는 힘의 방향과 크기를 예측하는 용도로 사용하시기를 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#present-load126"
	},
	"2685": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#present-velocity128"
	},
	"2686": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#present-position132"
	},
	"2687": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#velocity-trajectory136"
	},
	"2688": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#position-trajectory140"
	},
	"2689": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#present-input-voltage144"
	},
	"2690": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#present-temperature146"
	},
	"2691": {
		"product": "XL430-W250",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#indirect-address"
	},
	"2692": {
		"product": "XL430-W250",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#조립-예시"
	},
	"2693": {
		"product": "XL430-W250",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "ockquote 신형 XL430 W250 2018년 3분기 출시 ockquote 구형 XL430 W250 이 제품은 더이상 판매되지 않습니다 주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 케이블 2개를 모두 중공형으로 조립하면 케이블이 손상됩니다 한개만 중공형으로 사용해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#배선-예시"
	},
	"2694": {
		"product": "XL430-W250",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#옵션프레임-조립"
	},
	"2695": {
		"product": "XL430-W250",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "신형 XL430-W250",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#옵션프레임-조립"
	},
	"2696": {
		"product": "XL430-W250",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "구형 XL430-W250",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#옵션프레임-조립"
	},
	"2697": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#참고자료"
	},
	"2698": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#퀵스타트"
	},
	"2699": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL 핀번호 GND VDD DATA 다이어그램 하우징 JST EHR 03 PCB 헤더 JST B3B EH Wire Gauge 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#커넥터-정보"
	},
	"2700": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#통신-회로"
	},
	"2701": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#ttl-통신"
	},
	"2702": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#도면"
	},
	"2703": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "신형 XL430-W250",
		"content": "다운로드 New XL 430 pdf 다운로드 New XL 430 dwg 다운로드 New XL 430 stp ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#도면"
	},
	"2704": {
		"product": "XL430-W250",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "구형 XL430-W250",
		"content": "다운로드 XL 430 pdf 다운로드 XL 430 dwg 다운로드 XL 430 stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xl430-w250/#도면"
	},
	"2705": {
		"product": "XM430-W210",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 82 크기 28 46 34 mm 기어비 212 정지 토크 11 Nm 12 Nm 14 무부하 속도 70 rev min 11 77 rev min 12 95 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 40 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#주요-사양"
	},
	"2706": {
		"product": "XM430-W210",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#성능-그래프"
	},
	"2707": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#컨트롤-테이블"
	},
	"2708": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#컨트롤-테이블-데이터-주소"
	},
	"2709": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#영역-eeprom-ram"
	},
	"2710": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#크기"
	},
	"2711": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#접근권한"
	},
	"2712": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#초기값"
	},
	"2713": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 030 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 160 95 160 34 Min Voltage Limit 95 95 160 36 PWM Limit 885 885 113 38 Current Limit 193 193 69 mA 44 Velocity Limit 330 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#eeprom-영역"
	},
	"2714": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 800 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 69 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 69 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#ram-영역"
	},
	"2715": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#컨트롤-테이블-설명"
	},
	"2716": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#model-number0"
	},
	"2717": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#firmware-version6"
	},
	"2718": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#id7"
	},
	"2719": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#baud-rate8"
	},
	"2720": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#return-delay-time9"
	},
	"2721": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#drive-mode10"
	},
	"2722": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#operating-mode11"
	},
	"2723": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#secondaryshadow-id-12"
	},
	"2724": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#protocol-version13"
	},
	"2725": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#homing-offset20"
	},
	"2726": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#moving-threshold24"
	},
	"2727": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#temperature-limit31"
	},
	"2728": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#minmax-voltage-limit32-34"
	},
	"2729": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#pwm-limit36"
	},
	"2730": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 약 69 mA 193 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#current-limit38"
	},
	"2731": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#velocity-limit44"
	},
	"2732": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#minmax-position-limit48-52"
	},
	"2733": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#shutdown63"
	},
	"2734": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#torque-enable64"
	},
	"2735": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#led65"
	},
	"2736": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#status-return-level68"
	},
	"2737": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#registered-instruction69"
	},
	"2738": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "value indicates hardware error status 장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#hardware-error-status70"
	},
	"2739": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#velocity-pi-gain76-78"
	},
	"2740": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#velocity-pi-gain76-78"
	},
	"2741": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#bus-watchdog98"
	},
	"2742": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#goal-pwm100"
	},
	"2743": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 약 69 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#goal-current102"
	},
	"2744": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#goal-velocity104"
	},
	"2745": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#profile-acceleration108"
	},
	"2746": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#profile-velocity112"
	},
	"2747": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#goal-position116"
	},
	"2748": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#realtime-tick120"
	},
	"2749": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#moving122"
	},
	"2750": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#moving-status123"
	},
	"2751": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#present-pwm124"
	},
	"2752": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#present-current126"
	},
	"2753": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#present-velocity128"
	},
	"2754": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#present-position132"
	},
	"2755": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#velocity-trajectory136"
	},
	"2756": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#position-trajectory140"
	},
	"2757": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#present-input-voltage144"
	},
	"2758": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#present-temperature146"
	},
	"2759": {
		"product": "XM430-W210",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#indirect-address"
	},
	"2760": {
		"product": "XM430-W210",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#조립-예시"
	},
	"2761": {
		"product": "XM430-W210",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#배선-예시"
	},
	"2762": {
		"product": "XM430-W210",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#옵션프레임-조립"
	},
	"2763": {
		"product": "XM430-W210",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#유지보수"
	},
	"2764": {
		"product": "XM430-W210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#혼과-기어-교체"
	},
	"2765": {
		"product": "XM430-W210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#혼과-기어-교체"
	},
	"2766": {
		"product": "XM430-W210",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#혼과-기어-교체"
	},
	"2767": {
		"product": "XM430-W210",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#참고자료"
	},
	"2768": {
		"product": "XM430-W210",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#퀵스타트"
	},
	"2769": {
		"product": "XM430-W210",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 JST EHR 03 JST EHR 04 PCB 헤더 JST B3B EH JST B4B EH Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#커넥터-정보"
	},
	"2770": {
		"product": "XM430-W210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#통신-회로"
	},
	"2771": {
		"product": "XM430-W210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#ttl-통신"
	},
	"2772": {
		"product": "XM430-W210",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#rs485-통신"
	},
	"2773": {
		"product": "XM430-W210",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 430 idle ref pdf 다운로드 430 idle ref dwg 다운로드 430 idle stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w210/#도면"
	},
	"2774": {
		"product": "XM430-W350",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 82 크기 28 46 34 mm 기어비 353 정지 토크 11 Nm 12 Nm 14 무부하 속도 43 rev min 11 46 rev min 12 57 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 40 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#주요-사양"
	},
	"2775": {
		"product": "XM430-W350",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#성능-그래프"
	},
	"2776": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#컨트롤-테이블"
	},
	"2777": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#컨트롤-테이블-데이터-주소"
	},
	"2778": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#영역-eeprom-ram"
	},
	"2779": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#크기"
	},
	"2780": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#접근권한"
	},
	"2781": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#초기값"
	},
	"2782": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 020 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 160 95 160 34 Min Voltage Limit 95 95 160 36 PWM Limit 885 885 113 38 Current Limit 193 193 69 mA 44 Velocity Limit 200 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#eeprom-영역"
	},
	"2783": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 800 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 69 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 69 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#ram-영역"
	},
	"2784": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/address 기능 설명"
	},
	"2785": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#model-number0"
	},
	"2786": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#firmware-version6"
	},
	"2787": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#id7"
	},
	"2788": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#baud-rate8"
	},
	"2789": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#return-delay-time9"
	},
	"2790": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 펌웨어 38 이상에서 지원합니다 Bit 항목 설명 Bit 0x80 사용하지 않음 항상 Bit 0x40 사용하지 않음 항상 Bit 0x20 사용하지 않음 항상 Bit 0x10 사용하지 않음 항상 Bit 0x08 사용하지 않음 항상 Bit 0x04 Profile configureation Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 사용하지 않음 항상 Bit 0x01 Direction rotation 일반 모드 반시계방향 양수 시계방향 음수 역방향 모드 반시계방향 양수 시계방향 양수 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#drive-mode10"
	},
	"2791": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#operating-mode11"
	},
	"2792": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#secondaryshadow-id-12"
	},
	"2793": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#protocol-version13"
	},
	"2794": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#homing-offset20"
	},
	"2795": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#moving-threshold24"
	},
	"2796": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#temperature-limit31"
	},
	"2797": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#minmax-voltage-limit32-34"
	},
	"2798": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#pwm-limit36"
	},
	"2799": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 69 mA 193 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#current-limit38"
	},
	"2800": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#velocity-limit44"
	},
	"2801": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#minmax-position-limit48-52"
	},
	"2802": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#shutdown63"
	},
	"2803": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#torque-enable64"
	},
	"2804": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#led65"
	},
	"2805": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#status-return-level68"
	},
	"2806": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#registered-instruction69"
	},
	"2807": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#hardware-error-status70"
	},
	"2808": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#velocity-pi-gain76-78"
	},
	"2809": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#velocity-pi-gain76-78"
	},
	"2810": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#bus-watchdog98"
	},
	"2811": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#goal-pwm100"
	},
	"2812": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 69 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#goal-current102"
	},
	"2813": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#goal-velocity104"
	},
	"2814": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#profile-acceleration108"
	},
	"2815": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#profile-velocity112"
	},
	"2816": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#goal-position116"
	},
	"2817": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#realtime-tick120"
	},
	"2818": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#moving122"
	},
	"2819": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#moving-status123"
	},
	"2820": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#present-pwm124"
	},
	"2821": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#present-current126"
	},
	"2822": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#present-velocity128"
	},
	"2823": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#present-position132"
	},
	"2824": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#velocity-trajectory136"
	},
	"2825": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#position-trajectory140"
	},
	"2826": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#present-input-voltage144"
	},
	"2827": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#present-temperature146"
	},
	"2828": {
		"product": "XM430-W350",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#indirect-address"
	},
	"2829": {
		"product": "XM430-W350",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#조립-예시"
	},
	"2830": {
		"product": "XM430-W350",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#배선-예시"
	},
	"2831": {
		"product": "XM430-W350",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#옵션프레임-조립"
	},
	"2832": {
		"product": "XM430-W350",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#유지보수"
	},
	"2833": {
		"product": "XM430-W350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#혼과-기어-교체"
	},
	"2834": {
		"product": "XM430-W350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#혼과-기어-교체"
	},
	"2835": {
		"product": "XM430-W350",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#혼과-기어-교체"
	},
	"2836": {
		"product": "XM430-W350",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#참고자료"
	},
	"2837": {
		"product": "XM430-W350",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#퀵스타트"
	},
	"2838": {
		"product": "XM430-W350",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 핀번호 GND VDD DATA GND VDD DATA DATA 다이어그램 하우징 JST EHR 03 JST EHR 04 PCB 헤더 JST B3B EH JST B4B EH Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 Wire Gauge 21 AWG 21 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#커넥터-정보"
	},
	"2839": {
		"product": "XM430-W350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#통신-회로"
	},
	"2840": {
		"product": "XM430-W350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#ttl-통신"
	},
	"2841": {
		"product": "XM430-W350",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#rs485-통신"
	},
	"2842": {
		"product": "XM430-W350",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 430 idle ref pdf 다운로드 430 idle ref dwg 다운로드 430 idle stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm430-w350/#도면"
	},
	"2843": {
		"product": "XM540-W150-T/R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 165 크기 33 58 44 mm 기어비 152 정지 토크 11 Nm 12 Nm 14 무부하 속도 50 rev min 11 53 rev min 12 66 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 40 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#주요-사양"
	},
	"2844": {
		"product": "XM540-W150-T/R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#성능-그래프"
	},
	"2845": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#컨트롤-테이블"
	},
	"2846": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#컨트롤-테이블-데이터-주소"
	},
	"2847": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#영역-eeprom-ram"
	},
	"2848": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#크기"
	},
	"2849": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#접근권한"
	},
	"2850": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#초기값"
	},
	"2851": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 130 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 160 95 160 34 Min Voltage Limit 95 95 160 36 PWM Limit 885 885 113 38 Current Limit 047 047 69 mA 44 Velocity Limit 230 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#eeprom-영역"
	},
	"2852": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 800 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 69 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 69 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 152 External Port Data 154 External Port Data 156 External Port Data 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#ram-영역"
	},
	"2853": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#컨트롤-테이블-설명"
	},
	"2854": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#model-number0"
	},
	"2855": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#firmware-version6"
	},
	"2856": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#id7"
	},
	"2857": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#baud-rate8"
	},
	"2858": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#return-delay-time9"
	},
	"2859": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 Bit 명칭 설명 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x04 Profile configuration Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 Master Slave Configuration Dual Joint Master mode Master Dynamixel로 동작합니다 Slave mode Slave Dynamixel로 동작합니다 Bit 0x01 Direction Rotation Normal Mode CCW Positive CW Negative Reverse Mode CCW Negative CW Positive 장치의 드라이브 모드를 설정합니다 펌웨어 v38 부터 지원 Bit 명칭 상세설명 Bit 미사용 항상 Bit Master Slave Setting Dual Joint Master Mode 마스터 장치로 동작합니다 Slave Mode 슬레이브 장치로 동작합니다 Bit Direction Rotation Normal Mode CCW Positive CW Negative Reverse Mode CCW Negative CW Positive 참고 Direction rotation의 Reverse mode 를 설정하면 Dynamixel의 회전 방향이 변경됩니다 따라서 Position Velocity Current PWM의 방향이 모두 변경됩니다 좌우 대칭적인 구조의 관절이나 바퀴 구동 시스템을 구성할 때 편리하게 사용할 수 있습니다 Master Slave configuration Dual joint 은 2개의 Dynamixel을 1개의 Dynamixel처럼 동시에 제어하기 위한 방법입니다 Master Dynamixel과 Slave Dynamixel은 동기화 케이블로 연결되어야 합니다 Slave Dynamixel은 동기화 케이블을 통해 전달된 Master Dynamixel의 PWM 신호에 의해서 직접 제어됩니다 따라서 Slave Dynamixel의 Goal Position Goal Velocity Goal Current Goal PWM은 무시됩니다 동기화 케이블 상세설명 일반 모드용 Slave Dynamixel은 Master Dynamixel의 PWM 신호에 의해서 제어됩니다 즉 Master Slave Dynamixel의 회전방향은 동일합니다 리버스 모드용 Twisted Slave Dynamixel은 Master Dynamixel의 반전된 PWM 신호에 의해서 제어됩니다 즉 Master Slave Dynamixel의 회전방향은 서로 반대방향이 됩니다 참고 Master와 Slave가 하드웨어적으로 연결되어있지않으면 로드차이에 의해 조금씩 다르게 구동됩니다 아래와 같이 프레임으로 연결하신후 듀얼모드를 사용해주세요 배선은 커넥터 정보를 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#drive-mode10"
	},
	"2860": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#operating-mode11"
	},
	"2861": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#secondaryshadow-id-12"
	},
	"2862": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#protocol-version13"
	},
	"2863": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#homing-offset20"
	},
	"2864": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#moving-threshold24"
	},
	"2865": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#temperature-limit31"
	},
	"2866": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#minmax-voltage-limit32-34"
	},
	"2867": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#pwm-limit36"
	},
	"2868": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 약 69 mA 047 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#current-limit38"
	},
	"2869": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#velocity-limit44"
	},
	"2870": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#minmax-position-limit48-52"
	},
	"2871": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode 1,2,3(56,57,58)",
		"content": "장치는 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode에 의해서 결정되고 External Port의 신호는 External Port Data 152 157 에 의해서 제어됩니다 자세한 사항은 External Port Data 152 157 을 참고하세요 External Port Mode 명칭 설명 AI Analogue Input External Port 신호를 12 bit Digital로 변환 DO PP Digital Output Push Pull External Port를 또는3 로 출력 DI PU Digital Input Pull Up External Port 신호를 또는 의 Digital 신호로 변경 External Port에 신호가 연결되어 있지 않을 경우 초기값 DI PD Digital Input Pull Down External Port 신호를 또는 의 Digital 신호로 변경 External Port에 신호가 연결되어 있지 않을 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#external-port-mode-123565758"
	},
	"2872": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#shutdown63"
	},
	"2873": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#torque-enable64"
	},
	"2874": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#led65"
	},
	"2875": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#status-return-level68"
	},
	"2876": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#registered-instruction69"
	},
	"2877": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#hardware-error-status70"
	},
	"2878": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#velocity-pi-gain76-78"
	},
	"2879": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#velocity-pi-gain76-78"
	},
	"2880": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#bus-watchdog98"
	},
	"2881": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#goal-pwm100"
	},
	"2882": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 약 69 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#goal-current102"
	},
	"2883": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#goal-velocity104"
	},
	"2884": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#profile-acceleration108"
	},
	"2885": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#profile-velocity112"
	},
	"2886": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#goal-position116"
	},
	"2887": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#realtime-tick120"
	},
	"2888": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#moving122"
	},
	"2889": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#moving-status123"
	},
	"2890": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#present-pwm124"
	},
	"2891": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 Goal Current 102 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#present-current126"
	},
	"2892": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#present-velocity128"
	},
	"2893": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#present-position132"
	},
	"2894": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#velocity-trajectory136"
	},
	"2895": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#position-trajectory140"
	},
	"2896": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#present-input-voltage144"
	},
	"2897": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#present-temperature146"
	},
	"2898": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Data 1,2,3",
		"content": "External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 External Port Mode Access 상세 전기적 특성 Common mA ESD HBM kV AI Read External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12Bit 095 DO PP Write External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max DI PU DI PD Read External Port의 입력이 External Port의 입력이 Input level VIH min Input level VIL max Pull Up Down 40 typ ESD HBM ESD Electrostatic Discharge Voltage human body model 주의 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 장치가 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생되지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제는 전원이 꺼진 상태에서 진행해주십시오 External Port의 GND ext 핀과 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#external-port-data-123"
	},
	"2899": {
		"product": "XM540-W150-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#indirect-address"
	},
	"2900": {
		"product": "XM540-W150-T/R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#조립-예시"
	},
	"2901": {
		"product": "XM540-W150-T/R",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#배선-예시"
	},
	"2902": {
		"product": "XM540-W150-T/R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#옵션프레임-조립"
	},
	"2903": {
		"product": "XM540-W150-T/R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#유지보수"
	},
	"2904": {
		"product": "XM540-W150-T/R",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#혼과-기어-교체"
	},
	"2905": {
		"product": "XM540-W150-T/R",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#혼과-기어-교체"
	},
	"2906": {
		"product": "XM540-W150-T/R",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#혼과-기어-교체"
	},
	"2907": {
		"product": "XM540-W150-T/R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#참고자료"
	},
	"2908": {
		"product": "XM540-W150-T/R",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#퀵스타트"
	},
	"2909": {
		"product": "XM540-W150-T/R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 외부포트 Dual Joint 핀 번호 GND VDD DATA GND VDD DATA DATA GND VDD PORT PORT PORT PWM1 PWM2 ENABLE 다이어그램 하우징 JST EHR 03 JST EHR 04 MOLEX 51021 0500 MOLEX 51021 0300 PCB 헤더 JST B3B EH JST B4B EH MOLEX 53047 0510 MOLEX 53398 0371 Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 MOLEX 50079 8100 MOLEX 50058 8000 Wire Gauge 21 AWG 21 AWG 26 AWG 26 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#커넥터-정보"
	},
	"2910": {
		"product": "XM540-W150-T/R",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#통신-회로"
	},
	"2911": {
		"product": "XM540-W150-T/R",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#ttl-통신"
	},
	"2912": {
		"product": "XM540-W150-T/R",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#rs485-통신"
	},
	"2913": {
		"product": "XM540-W150-T/R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 540 pdf 다운로드 540 dwg 다운로드 dummy X540 std stp 다운로드 dummy X540 idel stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w150/#도면"
	},
	"2914": {
		"product": "XM540-W270-T/R",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 내용 MCU ST CORTEX M3 STM32F103C8 72 Mhz 32Bit 위치 센서 Contactless absolute encoder 12Bit 360 Maker ams www ams com Part No AS5045 모터 Coreless 통신속도 600 bps Mbps 제어 알고리즘 PID control 해상도 4096 pulse rev 백래쉬 15 arcmin 25 동작 모드 전류 제어 모드 속도 제어 모드 위치 제어 모드 360 확장 위치 제어 모드 멀티턴 전류기반 위치 제어 모드 PWM 제어 모드 Voltage Control Mode 무게 165 크기 33 58 44 mm 기어비 272 정지 토크 10 Nm 11 10 Nm 12 12 Nm 14 무부하 속도 28 rev min 11 30 rev min 12 37 rev min 14 반경방향 하중 40 혼으로부터 10 mm 축방향 하중 20 동작 온도 80 사용 전압 10 14 권장 전압 12 제어 명령 Digital Packet 프로토콜 타입 TTL Half Duplex Asynchronous Serial Communication 8bit 1stop No Parity RS485 Asynchronous Serial Communication 8bit 1stop No Parity 통신 연결 RS485 TTL Multidrop Bus ID 253 ID 252 피드백 Position Velocity Current Realtime tick Trajectory Temperature Input Voltage 재질 Full Metal Gear Metal Front Middle Engineering Plastic Back 대기 전류 40 mA 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 80 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#주요-사양"
	},
	"2915": {
		"product": "XM540-W270-T/R",
		"header1": "주요 사양",
		"header2": "성능 그래프",
		"header3": "",
		"content": "참고 Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다 Stall torque는 순간적인 최대토크를 측정하는 방식으로 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다 Performance Graph는 Curve라고도 불리며 부하 load 를 점진적으로 증가시키면서 측정됩니다 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다 CAUTION 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel 통한 전원공급을 권장드립니다 전원이 꺼진 상태에서 장치와 전원을 연결하시고 스위치로 ON OFF를 해주세요 PRO PRO 의 경우 반드시 전원포트를 통해 24V 전원을 공급해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#성능-그래프"
	},
	"2916": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#컨트롤-테이블"
	},
	"2917": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#컨트롤-테이블-데이터-주소"
	},
	"2918": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#영역-eeprom-ram"
	},
	"2919": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#크기"
	},
	"2920": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#접근권한"
	},
	"2921": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#초기값"
	},
	"2922": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 120 Model Information Firmware Version ID 253 Baud Rate Return Delay Time 250 254 sec 10 Drive Mode 11 Operating Mode 16 12 Secondary Shadow ID 255 252 13 Protocol Version 20 Homing Offset 044 479 044 479 pulse 24 Moving Threshold 10 023 229 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 160 95 160 34 Min Voltage Limit 95 95 160 36 PWM Limit 885 885 113 38 Current Limit 047 047 69 mA 44 Velocity Limit 128 023 229 rev min 48 Max Position Limit 095 095 pulse 52 Min Position Limit 095 pulse 56 External Port Mode 57 External Port Mode 58 External Port Mode 63 Shutdown 52 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#eeprom-영역"
	},
	"2923": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 64 Torque Enable 65 LED 68 Status Return Level 69 Registered Instruction 70 Hardware Error Status 76 Velocity Gain 920 16 383 78 Velocity Gain 100 16 383 80 Position Gain 16 383 82 Position Gain 16 383 84 Position Gain 800 16 383 88 Feedforward 2nd Gain 16 383 90 Feedforward 1st Gain 16 383 98 Bus Watchdog 127 20 sec 100 Goal PWM PWM Limit 36 PWM Limit 36 102 Goal Current Current Limit 38 Current Limit 38 69 mA 104 Goal Velocity Velocity Limit 44 Velocity Limit 44 229 rev min 108 Profile Acceleration 32 767 32 737 214 577 rev min ms 112 Profile Velocity 32 767 229 rev min 116 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 120 Realtime Tick 32 767 msec 122 Moving 123 Moving Status 124 Present PWM 126 Present Current 69 mA 128 Present Velocity 229 rev min 132 Present Position pulse 136 Velocity Trajectory 229 rev min 140 Position Trajectory pulse 144 Present Input Voltage 146 Present Temperature 152 External Port Data 154 External Port Data 156 External Port Data 168 Indirect Address 224 64 661 170 Indirect Address 225 64 661 172 Indirect Address 226 64 661 218 Indirect Address 26 249 64 661 220 Indirect Address 27 250 64 661 222 Indirect Address 28 251 64 661 224 Indirect Data 255 225 Indirect Data 255 226 Indirect Data 255 249 Indirect Data 26 255 250 Indirect Data 27 255 251 Indirect Data 28 255 578 Indirect Address 29 634 64 661 580 Indirect Address 30 635 64 661 582 Indirect Address 31 636 64 661 628 Indirect Address 54 659 64 661 630 Indirect Address 55 660 64 661 632 Indirect Address 56 661 64 661 634 Indirect Data 29 255 635 Indirect Data 30 255 636 Indirect Data 31 255 659 Indirect Data 54 255 660 Indirect Data 55 255 661 Indirect Data 56 255 주의 Address가 256보다 큰 경우 프로토콜 0으로 접근할 수 없습니다 따라서 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#ram-영역"
	},
	"2924": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#address 기능 설명"
	},
	"2925": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#model-number0"
	},
	"2926": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#firmware-version6"
	},
	"2927": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#id7"
	},
	"2928": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 오차율 5M 000 4M 000 3M 000 2M 000 1M 000 115 200 000 Default 57 600 000 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#baud-rate8"
	},
	"2929": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#return-delay-time9"
	},
	"2930": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Drive Mode(10)",
		"content": "Dynamixel의 드라이브 모드를 설정합니다 Bit 명칭 설명 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x08 미사용 항상 Bit 0x04 Profile configuration Velocity based Profile 속도를 기준으로 Profile 생성 Time based Profile Time based Profile 시간을 기준으로 Profile 생성 자세한 사항은 Profile Velocity 112 를 참고하세요 Bit 0x02 Master Slave Configuration Dual Joint Master mode Master Dynamixel로 동작합니다 Slave mode Slave Dynamixel로 동작합니다 Bit 0x01 Direction Rotation Normal Mode CCW Positive CW Negative Reverse Mode CCW Negative CW Positive 장치의 드라이브 모드를 설정합니다 펌웨어 v38 부터 지원 Bit 명칭 상세설명 Bit 미사용 항상 Bit Master Slave Setting Dual Joint Master Mode 마스터 장치로 동작합니다 Slave Mode 슬레이브 장치로 동작합니다 Bit Direction Rotation Normal Mode CCW Positive CW Negative Reverse Mode CCW Negative CW Positive 참고 Direction rotation의 Reverse mode 를 설정하면 Dynamixel의 회전 방향이 변경됩니다 따라서 Position Velocity Current PWM의 방향이 모두 변경됩니다 좌우 대칭적인 구조의 관절이나 바퀴 구동 시스템을 구성할 때 편리하게 사용할 수 있습니다 Master Slave configuration Dual joint 은 2개의 Dynamixel을 1개의 Dynamixel처럼 동시에 제어하기 위한 방법입니다 Master Dynamixel과 Slave Dynamixel은 동기화 케이블로 연결되어야 합니다 Slave Dynamixel은 동기화 케이블을 통해 전달된 Master Dynamixel의 PWM 신호에 의해서 직접 제어됩니다 따라서 Slave Dynamixel의 Goal Position Goal Velocity Goal Current Goal PWM은 무시됩니다 동기화 케이블 상세설명 일반 모드용 Slave Dynamixel은 Master Dynamixel의 PWM 신호에 의해서 제어됩니다 즉 Master Slave Dynamixel의 회전방향은 동일합니다 리버스 모드용 Twisted Slave Dynamixel은 Master Dynamixel의 반전된 PWM 신호에 의해서 제어됩니다 즉 Master Slave Dynamixel의 회전방향은 서로 반대방향이 됩니다 참고 Master와 Slave가 하드웨어적으로 연결되어있지않으면 로드차이에 의해 조금씩 다르게 구동됩니다 아래와 같이 프레임으로 연결하신후 듀얼모드를 사용해주세요 배선은 커넥터 정보를 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#drive-mode10"
	},
	"2931": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 세부 설명 전류제어 모드 전류 제어 모드 속도와 위치는 제어하지 않고 전류 토크 를 제어합니다 지령된 전류 토크 만 제어하는 시스템이나 그리퍼 또는 상위 제어기 위치 속도 등 를 별도로 구성할 경우에 유용합니다 속도제어 모드 속도를 제어하는 모드 입니다 기존제품의 바퀴 모드 무한회전 과 동일합니다 바퀴형태의 로봇에 유용합니다 초기값 위치제어 모드 위치를 제어하는 모드 입니다 기존제품의 관절 모드와 동일합니다 Max Position Limit 48 Min Position Limit 52 에 의해서 동작 범위가 제한됩니다 1회전 내에서 구동하는 다관절 로봇에 유용합니다 확장 위치제어 모드 Multi turn 위치를 제어하는 모드 입니다 기존제품의 다중 회전 모드와 동일합니다 동작 범위는 총 512회전 256 256 rev 입니다 다수의 회전 멀티턴 이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다 전류기반 위치제어 모드 위치와 전류 토크 를 제어합니다 동작 범위는 총 512회전 256 256 rev 입니다 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다 16 PWM 제어 모드 Voltage Control Mode PWM 출력을 직접 제어합니다 Voltage Control Mode 참고 제어 모드가 변경될 때 제어기의Gain PID Feedforward 은 제어 모드에 적합하게 초기화 됩니다 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다 Profile Velocity 112 Profile Acceleration 108 으로 초기화 Goal PWM 100 Goal Current 102 PWM Limit 36 Current Limit 38 으로 초기화 전류기반 위치 제어 모드 별도의 Position Gain PID 과 PWM Limit 36 값으로 재설정 됩니다 변경된 Position Gain PID 과 PWM Limit 36 값은 컨트롤테이블을 통해서 확인할 수 있습니다 참고 PWM이란 Pulse Width Modulation 펄스 폭 변조 의 약자로 펄스의 폭 PWM Duty 을 변경시키는 변조방식을 뜻합니다 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다 따라서 PWM 제어 모드는 Goal PWM 100 을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다 PWM 모드는 다이나믹셀 AX RX 시리즈의 바퀴모드와 유사합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#operating-mode11"
	},
	"2932": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Secondary(Shadow) ID(12)",
		"content": "Dynamixel의 Secondary ID를 설정합니다 Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED 65 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED 65 을 전송합니다 5개의 장치는 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED 65 을 전송합니다 5개의 장치는 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#secondaryshadow-id-12"
	},
	"2933": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Protocol Version(13)",
		"content": "장치의 프로토콜 버전 을 설정할 수 있습니다 프로토콜 버전을 선택하더라도 프로토콜 0과 동일한 컨트롤 테이블이 사용됩니다 함께 사용할 장치의 프로토콜 버전에 맞춰서 설정하세요 값 프로토콜 버전 호환되는 장치 AX 시리즈 DX 시리즈 RX 시리즈 EX 시리즈 MX 시리즈 펌웨어 v39 미만 초기값 MX 28 64 106 펌웨어 v39 이상 시리즈 Pro 시리즈 참고 프로토콜 0은 프로토콜 0의 문제점을 대폭 개선한 버전입니다 프로토콜 0을 사용할 경우 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다 매뉴얼에서는 프로토콜 0을 기준으로 설명합니다 프로토콜에 대한 자세한 사항은 Protocol Protocol 을 참고해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#protocol-version13"
	},
	"2934": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Homing Offset(20)",
		"content": "점의 위치를 조절 할 수 있습니다 이 값은 Present Position 132 에 더해지게 됩니다 Present Position 132 실제 위치 Homing Offset 20 이 됩니다 단위 범위 설명 약 088 044 479 044 479 255 255 rev 096 분해능 참고 1회전 내에서 제어하는 위치제어 모드 관절 모드 의 경우 Homing Offset 20 은 1024 1024 범위보다 클 경우 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#homing-offset20"
	},
	"2935": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 움직임 유무를 나타내는 Moving 122 이 이 되고 적으면 이 됩니다 값 설명 단위 약 229 rev min 속도 관련 Data의 단위는 모두 동일함 범위 023 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#moving-threshold24"
	},
	"2936": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 장치의 현재 내부온도를 나타내는 Present Temperature 146 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 70 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 100 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#temperature-limit31"
	},
	"2937": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Min/Max Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 장치에 현재 인가된 전압을 나타내는 Present Input Voltage 144 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 70 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Hardware Error Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 64 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 상세 설명 약 95 160 16 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#minmax-voltage-limit32-34"
	},
	"2938": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 100 에는 PWM Limit 36 보다 큰 값을 쓸 수 없습니다 PWM Limit 36 은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 885 100 885 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#pwm-limit36"
	},
	"2939": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Current Limit(38)",
		"content": "전류 토크 출력의 한계 값입니다 Goal Current 102 에는 Current Limit 38 보다 큰 값을 쓸 수 없습니다 Current Limit 38 은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써 전류 출력을 낮추면 장치의 토크가 감소합니다 자세한 사항은 Position PID Gain 80 84 을 참고하세요 단위 범위 약 69 mA 047 주의 Current Limit 38 은 장치 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#current-limit38"
	},
	"2940": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Velocity Limit(44)",
		"content": "Goal Velocity 104 의 한계 값입니다 자세한 설명은 Goal Velocity 104 을 참고하세요 단위 범위 229 rev min 023 참고 펌웨어 42부터 Velocity Limit의 기본값이 감소되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#velocity-limit44"
	},
	"2941": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Min/Max Position Limit(48, 52)",
		"content": "위치 제어 모드 관절 모드 에서 목표 위치의 제한 값으로써 1회전 095 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 116 은 이 값보다 클 수 없습니다 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다 단위 범위 088 095 회전 참고 Max Position Limit 48 와 Min Position Limit 52 는 1회전 내에서 제어하는 위치제어 모드 관절 모드 에서만 적용 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#minmax-position-limit48-52"
	},
	"2942": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "External Port Mode 1,2,3(56,57,58)",
		"content": "장치는 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode에 의해서 결정되고 External Port의 신호는 External Port Data 152 157 에 의해서 제어됩니다 자세한 사항은 External Port Data 152 157 을 참고하세요 External Port Mode 명칭 설명 AI Analogue Input External Port 신호를 12 bit Digital로 변환 DO PP Digital Output Push Pull External Port를 또는3 로 출력 DI PU Digital Input Pull Up External Port 신호를 또는 의 Digital 신호로 변경 External Port에 신호가 연결되어 있지 않을 경우 초기값 DI PD Digital Input Pull Down External Port 신호를 또는 의 Digital 신호로 변경 External Port에 신호가 연결되어 있지 않을 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#external-port-mode-123565758"
	},
	"2943": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Shutdown(63)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#shutdown63"
	},
	"2944": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Torque Enable(64)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#torque-enable64"
	},
	"2945": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "LED(65)",
		"content": "LED를 ON OFF 합니다 값 설명 초기값 LED를 Off 시킵니다 LED를 시킵니다 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 공장 초기화 4회 점멸 알람 점멸 슬레이브 모드 X540 3회 점멸 부트 모드 점등 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#led65"
	},
	"2946": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Status Return Level(68)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#status-return-level68"
	},
	"2947": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Registered Instruction(69)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#registered-instruction69"
	},
	"2948": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Hardware Error Status(70)",
		"content": "하드웨어의 에러 상태를 나타냅니다 자세한 사항은 Shutdown 63 을 참고하세요 장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 64 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Hardware Error Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 70 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 64 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받았거나 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않는 경우 Bit OverHeating Error default 내부 온도가 설정된 동작온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작전압 범위를 벗어난 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 주의 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 펌웨어 버전 41 이상 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#hardware-error-status70"
	},
	"2949": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Velocity PI Gain(76, 78)",
		"content": "속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Velocity Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 상세 설명 Velocity Gain 76 TBL 65 536 16 383 Gain Velocity Gain 78 TBL 128 16 383 Gain 다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Velocity 104 에 등록됩니다 Goal Velocity 104 는 Profile Acceleration 108 에 의해서 목표 속도 궤적으로 변경됩니다 목표 속도 궤적은 Velocity Trajectory 136 에 표기됩니다 PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain이고 는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다 PID 제어기에 대한 자세한 설명은 위키피디아의 PID Controller 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#velocity-pi-gain76-78"
	},
	"2950": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Position PID Gain(80, 82, 84), Feedforward 1st/2nd Gains(88, 90)",
		"content": "위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 Control Table의 Gain과 장치 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다 하기의 상수에는 샘플링타임이 포함되어 있습니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 변환 수식 범위 설명 Position Gain 80 TBL 16 16 383 Gain Position Gain 82 TBL 65 536 16 383 Gain Position Gain 84 TBL 128 16 383 Gain Feedforward 2nd Gain 88 FF2nd FF2nd TBL 16 383 Feedforward Acceleration Gain Feedforward 1st Gain 90 FF1st FF1st TBL 16 383 Feedforward Velocity Gain 다음은 위치 제어 모드 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Goal Position은 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 Position Trajectory 140 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 PWM 제어 모드의 경우 PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 이를 통해 모터의 전압을 직접 제어할 수 있습니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 다음은 전류기반 위치제어기 전류기반 위치 제어 모드 의 블록다이어그램입니다 기본적인 내용은 위치제어기와 동일하므로 위치제어기와의 차이점만 설명합니다 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기하였습니다 Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다 Goal Current 102 는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 100 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 132 Present Velocity 128 Present PWM 124 Present Current 126 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 PID Controller 와 Feed Forward 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#velocity-pi-gain76-78"
	},
	"2951": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Bus Watchdog(98)",
		"content": "Bus Watchdog 98 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 TTL 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 64 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 98 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 98 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 100 Goal Current 102 Goal Velocity 104 Goal Position 116 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 98 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 64 를 로 변경 합니다 Goal Velocity 104 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 98 의 값을 100 000 msec 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 정지합니다 정지할 때 Profile Acceleration 108 과 Profile Velocity 112 는 으로 적용됩니다 Bus Watchdog 98 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 104 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 98 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 104 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#bus-watchdog98"
	},
	"2952": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal PWM(100)",
		"content": "PWM 제어 모드의 경우 PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM 100 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 100 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 상세 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 885 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#goal-pwm100"
	},
	"2953": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal Current(102)",
		"content": "전류 제어 모드의 경우 Goal Current 102 를 통해 목표 전류를 설정할 수 있습니다 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다 이 값은 Current Limit 38 보다 클 수 없습니다 단위 범위 약 69 mA Current Limit 38 Current Limit 38 주의 높은 전류를 장시간 사용할 경우 모터가 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#goal-current102"
	},
	"2954": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal Velocity(104)",
		"content": "속도 제어 모드의 경우 Goal Velocity 104 를 통해 목표 속도를 설정할 수 있습니다 이 값은 Velocity Limit 44 보다 클 수 없습니다 현재 Goal Velocity 104 는 목표 속도로만 사용되고 속도 제한 값으로는 사용되지 않습니다 단위 범위 229 rev min Velocity Limit 44 Velocity Limit 44 참고 장치의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다 매뉴얼에서는 권장전압을 기준으로 설명합니다 참고 Profile Acceleration 108 과 Goal Velocity 104 를 동시에 변경할 경우 변경된 Profile Acceleration 108 이 적용되어 Goal Velocity 104 가 수행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#goal-velocity104"
	},
	"2955": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Profile Acceleration(108)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Acceleration 108 은 Profile의 가속시간을 설정합니다 Profile Acceleration 108 은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 Velocity based Profile 상세 비고 단위 214 577 rev min Profile의 가속도를 설정합니다 범위 32767 인 경우 무한대 가속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 가속시간을 설정합니다 범위 32737 인 경우 가속시간이 msec 무한대 가속도 를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#profile-acceleration108"
	},
	"2956": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Profile Velocity(112)",
		"content": "Drive Mode 10 에서 Velocity based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 최대 속도를 설정합니다 Drive Mode 10 에서 Time based Profile이 선택된 경우 Profile Velocity 112 는 Profile의 총 시간 도달시간 을 설정합니다 Profile Velocity 112 는 위치 제어 모드와 확장 위치 제어 보드에서만 가능합니다 참고로 속도 제어 모드에서는 Profile Velocity 112 는 적용되지 않고 Profile Acceleration 108 만 적용됩니다 Velocity based Profile 상세 비고 단위 229 rev min Profile의 속도를 설정합니다 범위 32767 인 경우 무한대 속도를 뜻합니다 Time based Profile 상세 비고 단위 msec Profile의 도달시간을 설정합니다 범위 32737 인 경우 무한대 속도를 뜻합니다 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 50 로 제한되어 적용됩니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 112 와 Profile Acceleration 108 의 조합에 의해서 결정됩니다 장치의 Profile은 Goal Position 116 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 116 로 이동하는 중에 새로운 Goal Position 116 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서 Goal Position 116 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 116 에 등록됩니다 Velocity based Profile의 경우 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 112 Profile Acceleration 108 그리고 총 이동거리 Pos 목표위치와 현재위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 123 에 표기됩니다 Moving Status 123 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 136 와 Position Trajectory 140 에 표기됩니다 조건 프로파일 형태 Profile Velocity 112 프로파일 미사용 Step 명령 Profile Velocity 112 amp Profile Acceleration 108 사각 프로파일 Profile Velocity 112 amp Profile Acceleration 108 사다리꼴 프로파일 참고 속도 제어 모드에서는 Profile Acceleration 108 만 적용됩니다 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 Velocity based Profile 64 Goal Velocity 104 Profile Acceleration 108 Time based Profile Profile Acceleration 108 참고 Time based Profile이 선택된 경우 Profile Velocity 112 로 Profile 총 시간 을 Profile Acceleration 108 로 가속시간 을 ms 단위로 설정할 수 있습니다 이때 Profile Acceleration 108 이 Profile Velocity 112 의 50 를 넘을 경우 Profile Acceleration 108 은 Profile Velocity 112 의 50 로 제한되어 적용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#profile-velocity112"
	},
	"2957": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Goal Position(116)",
		"content": "Goal Position 116 을 통해 목표위치를 설정할 수 있습니다 모든 장치는 Horn을 정면에서 바라봤을 때 CCW Counter Clockwise 방향이 증가 방향이고 CW Clockwise 방향이 감소 방향입니다 Goal Position 116 에 도달하는 방식은 장치가 제공하는 4가지 형태의 Profile에 따라 달라집니다 Profile에 대한 자세한 내용은 Profile Velocity 112 를 참고하세요 동작모드 범위 상세 위치제어 모드 Min Position Limit 52 Max Position Limit 48 초기값 095 확장 위치제어 모드 048 575 048 575 256 256 rev 전류기반 위치제어 모드 048 575 048 575 256 256 rev 각도 환산 계수 설명 088 각도값 rev 095 참고 Profile Velocity 112 와 Profile Acceleration 108 은 새로운 명령값이 업데이트 되는 시점에 적용됩니다 위치 제어 모드의 경우 Goal Position 116 이 업데이트되면 Profile Velocity 112 와 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 속도 제어 모드의 경우 Goal Velocity 104 가 업데이트되면 Profile Acceleration 108 에 의해서 프로파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#goal-position116"
	},
	"2958": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Realtime Tick(120)",
		"content": "장치의 시간을 나타내는 지수입니다 단위 범위 상세 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#realtime-tick120"
	},
	"2959": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Moving(122)",
		"content": "움직임의 유무를 나타냅니다 Present Velocity 128 의 절대값이 Moving Threshold 24 보다 크면 Moving 122 이 이 되고 적으면 이 됩니다 단 Profile 진행 중 즉 Goal Position 116 명령을 수행하는 중에는 Present Velocity 128 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지 되었거나 Profile 진행 중인 경우 Goal Position 116 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#moving122"
	},
	"2960": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Moving Status(123)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Following Error Bit 0x08 과 Position Bit 0x01 은 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x20 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 삼각 속도 프로파일 Triangle Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 Following Error 장치가 목표위치 궤적을 추종하지 못하는 경우 Bit 0x04 미사용 Bit 0x02 Profile Ongoing Goal Position 116 명령에 따라 Profile 진행 중인 경우 Bit 0x01 Position 장치가 목표위치에 도달 경우 참고 삼각 속도 프로파일은 사각 속도 프로파일 입력 조건에서 프로파일 속도 112 에 도달 하지 못할 때 셋 되어집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#moving-status123"
	},
	"2961": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present PWM(124)",
		"content": "현재 PWM 값입니다 자세한 사항은 Goal PWM 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#present-pwm124"
	},
	"2962": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Current(126)",
		"content": "현재 전류 값입니다 자세한 사항은 Goal Current 102 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#present-current126"
	},
	"2963": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Velocity(128)",
		"content": "현재 속도 값입니다 자세한 사항은 Goal Velocity 104 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#present-velocity128"
	},
	"2964": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Position(132)",
		"content": "현재 위치 값입니다 자세한 사항은 Goal Position 116 을 참고하세요 참고 Present Position 132 은 Torque OFF 상태일 경우 Operating Mode 11 와 상관없이 byte 147 483 648 147 483 647 의 범위를 연속적으로 표현합니다 Present Position 132 의 값이 초기화되는 시점은 다음과 같습니다 Operating Mode 11 가 위치 제어 모드로 변경되는 시점에 rev 095 범위로 초기화 위치 제어 모드에서 Torque ON으로 변경되는 시점에 rev 095 범위로 초기화 Homing Offset 20 에 의해 초기화 되는 값은 변경될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#present-position132"
	},
	"2965": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Velocity Trajectory(136)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다 자세한 사항은 Profile Velocity 112 를 참고하세요 속도 제어 모드 Profile이 종료되면 Velocity Trajectory 136 은 Goal Velocity 104 와 동일해 집니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드 Position Trajectory 140 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 136 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#velocity-trajectory136"
	},
	"2966": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Position Trajectory(140)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 위치 제어 모드 확장 위치 제어 모드 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 112 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#position-trajectory140"
	},
	"2967": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Input Voltage(144)",
		"content": "현재 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#present-input-voltage144"
	},
	"2968": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Present Temperature(146)",
		"content": "현재 내부온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#present-temperature146"
	},
	"2969": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "External Port Data 1,2,3",
		"content": "External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 External Port Mode Access 상세 전기적 특성 Common mA ESD HBM kV AI Read External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12Bit 095 DO PP Write External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max DI PU DI PD Read External Port의 입력이 External Port의 입력이 Input level VIH min Input level VIL max Pull Up Down 40 typ ESD HBM ESD Electrostatic Discharge Voltage human body model 주의 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 장치가 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생되지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제는 전원이 꺼진 상태에서 진행해주십시오 External Port의 GND ext 핀과 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#external-port-data-123"
	},
	"2970": {
		"product": "XM540-W270-T/R",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다 Indirect Address로 설정할 수 있는 Address는 RAM 영역 Address 64 661 으로 한정 됩니다 Indirect Address에 특정 Address를 설정하면 Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다 동일한 속성이란 Size Byte 길이 값의 범위 그리고 Access 읽기 전용 속성 읽기 쓰기 속성 를 모두 포함합니다 즉 Indirect Address 168 에 65 LED의 Address 를 설정하면 Indirect Data 224 은 LED 65 와 동일한 기능을 수행하게 됩니다 예제 byte인 LED 65 를 Indirect Data 224 로 사용할 경우 Indirect Address 168 LED의 주소 65 로 변경 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 켜집니다 Indirect Data 224 를 로 변경 LED 65 역시 로 변경되면서 LED가 꺼집니다 예제 byte인 Goal Position 116 을 Indirect Data 225 로 사용할 경우 byte 모두 변경 해야함 Indirect Address 170 Goal Position의 첫 번째 주소 116 으로 변경 Indirect Address 172 Goal Position의 두 번째 주소 117 으로 변경 Indirect Address 174 Goal Position의 세 번째 주소 118 으로 변경 Indirect Address 176 Goal Position의 네 번째 주소 119 으로 변경 Indirect Data 2에서 byte 값을 1024 변경 Goal Position 116 역시 1024 로 변경되고 장치가 구동됩니다 Indirect Address 범위 설명 64 661 Indirection Address는 EEPROM 영역을 지정할 수 없습니다 참고 byte 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 예제 와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다 참고 Indirect Address 29 56과 Indirect Data 29 56은 프로토콜 0으로만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#indirect-address"
	},
	"2971": {
		"product": "XM540-W270-T/R",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#조립-예시"
	},
	"2972": {
		"product": "XM540-W270-T/R",
		"header1": "조립 예시",
		"header2": "배선 예시",
		"header3": "",
		"content": "주의 중공형 케이블 조립시 주의사항 케이블이 꼬이지 않도록 정리하여 조립합니다 케이블이 꼬인 상태에서 케이스를 조립하면 케이스에 눌린 케이블로 인해 통신이 불안정해질 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#배선-예시"
	},
	"2973": {
		"product": "XM540-W270-T/R",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#옵션프레임-조립"
	},
	"2974": {
		"product": "XM540-W270-T/R",
		"header1": "유지보수",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#유지보수"
	},
	"2975": {
		"product": "XM540-W270-T/R",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "",
		"content": "혼은 다이나믹셀 정면의 출력축에 부착되어 있으며 베어링은 후면에 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#혼과-기어-교체"
	},
	"2976": {
		"product": "XM540-W270-T/R",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "혼 조립하기",
		"content": "아래 그림과 같이 혼과 기어의 마킹 위치에 맞추어 혼을 조립합니다 혼을 끼워넣을 때 혼의 중심부를 밀면서 조립합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#혼과-기어-교체"
	},
	"2977": {
		"product": "XM540-W270-T/R",
		"header1": "유지보수",
		"header2": "혼과 기어 교체",
		"header3": "기어 교체하기",
		"content": "기어가 손상되거나 오랜 사용으로 닳게 되면 교체해야 합니다 아래 동영상을 참조해서 교체하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#혼과-기어-교체"
	},
	"2978": {
		"product": "XM540-W270-T/R",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "주의 호환성 가이드 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#참고자료"
	},
	"2979": {
		"product": "XM540-W270-T/R",
		"header1": "참고자료",
		"header2": "퀵스타트",
		"header3": "",
		"content": "준비사항 다이나믹셀 전원공급 장치 SMPS2Dynamixel 또는 제어기 윈도우 혹은 OSX 가 설치된 PC PC와 다이나믹셀 연결 U2D2 또는 USB2Dynamixel Micro USB cable 로보플러스 매니저 다이나믹셀의 설정을 변경하기 위해서는 로보플러스 매니저 또는 로보플러스 매니저 이 설치되어 있어야 합니다 Dynamixel SDK 또는 Dynamixel Workbench 를 이용할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#퀵스타트"
	},
	"2980": {
		"product": "XM540-W270-T/R",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 TTL RS 485 외부포트 Dual Joint 핀 번호 GND VDD DATA GND VDD DATA DATA GND VDD PORT PORT PORT PWM1 PWM2 ENABLE 다이어그램 하우징 JST EHR 03 JST EHR 04 MOLEX 51021 0500 MOLEX 51021 0300 PCB 헤더 JST B3B EH JST B4B EH MOLEX 53047 0510 MOLEX 53398 0371 Crimp 터미널 JST SHE 001T P0 JST SHE 001T P0 MOLEX 50079 8100 MOLEX 50058 8000 Wire Gauge 21 AWG 21 AWG 26 AWG 26 AWG 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#커넥터-정보"
	},
	"2981": {
		"product": "XM540-W270-T/R",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "",
		"content": "다이나믹셀을 제어하기 위해서는 제어기의 UART 신호를 Half duplex type으로 변환시켜 주어야 합니다 다음은 그 권장 회로도입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#통신-회로"
	},
	"2982": {
		"product": "XM540-W270-T/R",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "TTL 통신",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#ttl-통신"
	},
	"2983": {
		"product": "XM540-W270-T/R",
		"header1": "참고자료",
		"header2": "통신 회로",
		"header3": "RS-485 통신",
		"content": "전원은 Pin1 Pin2 를 통하여 다이나믹셀로 공급됩니다 Dynamixel 전용 Controller에는 위의 회로가 내장되어 있습니다 위의 회로도에서 TTL Level의 TxD와 RxD는 DIRECTION 485의 Level에 따라 다음과 같이 Data 신호의 방향이 결정됩니다 DIRECTION485 Level High인 경우 TxD의 신호가 로 출력 DIRECTION485 Level Low인 경우 의 신호가 RxD로 입력 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#rs485-통신"
	},
	"2984": {
		"product": "XM540-W270-T/R",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 540 pdf 다운로드 540 dwg 다운로드 dummy X540 std stp 다운로드 dummy X540 idel stp 더 많은 2D 3D 도면자료와 각종 소프트웨어 등 유용한 자료는 로보티즈 다운로드 센터 에서 제공됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/dxl/x/xm540-w270/#도면"
	},
	"2985": {
		"product": "바이올로이드 초급",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "바이올로이드 초급은 4자유도 로봇까지 제작 가능한 키트입니다 처음 로봇을 접하는 분들께 권장해드립니다 로봇 제작 원리 학습 바이올로이드 초급을 활용하여 14단계의 예제 로봇들을 조립해보고 작동해보면서 로봇 제작의 기본원리를 학습할 수 있습니다 1자유도의 간단한 차단바에서부터 4자유도의 자동차 보행로봇 등을 직접 제작하고 예제프로그램을 편집해 봄으로서 프로그래밍에 대한 이해도를 높일 수 있습니다 바이올로이드 초급에서 추가로 AX 12 를 4개 더 구매하시면 8자유도의 중급레벨 로봇을 제작하실 수 있습니다 또한 바이올로이드 초급에서 추가로 AX 12 14개와 종합키트용 프레임 세트를 구매하시면 중급레벨과 18자유도의 고급레벨 로봇도 제작하실 수 있습니다 기본 예제 로봇 이외에 나만의 로봇을 구상하여 조립하고 프로그램하면 세상 어디에도 없는 나만의 독창적인 로봇을 만들 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#개요"
	},
	"2986": {
		"product": "바이올로이드 초급",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#시작하기"
	},
	"2987": {
		"product": "바이올로이드 초급",
		"header1": "시작하기",
		"header2": "부품 목록",
		"header3": "",
		"content": "CM AX 12A AX S1 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#부품-목록"
	},
	"2988": {
		"product": "바이올로이드 초급",
		"header1": "시작하기",
		"header2": "로보플러스 사용준비",
		"header3": "",
		"content": "CM 는 기본적으로 BIOLOID 학습서에 나와 있는 것과 같이 기존의 바이올로이드 소프트웨어 행동제어 프로그래머 모션 편집기 등 를 지원하도록 되어 있습니다 따라서 CM 에 로보플러스 RoboPlus 소프트웨어를 사용하고자 하는 경우에는 로보플러스를 지원하는 펌웨어로 변경이 필요합니다 단 로보플러스를 지원하는 펌웨어로 변경하게 되면 기존의 바이올로이드 소프트웨어들은 더 이상 사용하실 수 없습니다 새롭게 업그레이드 되어 선보인 로보플러스는 로보티즈의 제품을 제어할 수 있는 통합 프로그래밍 소프트웨어입니다 따라서 CM 5를 기반으로 만든 로봇도 로보플러스로 프로그래밍하여 제어할 수 있습니다 방법은 다음과 같습니다 자료실 에 있는 최신 버전의 RoboPlus를 다운받아 설치합니다 설치 후 바탕화면의 RoboPlus를 실행합니다 RoboPlus Manager를 선택합니다 CM 5를 다운로드케이블을 이용하여 PC와 연결합니다 RoboPlus Manager 상단의 아이콘 중 제어기 복구 를 눌러서 펌웨어 마법사를 실행합니다 제어기 연결 포트 선택합니다 사용자가 제어기가 연결된 포트를 수동으로 설정해 주어야 합니다 포트가 사용중이면 제어기를 인식할 수 없으니 다른 프로그램을 종료하고 진행하십시오 제어기가 연결된 포트를 선택하고 찾기 버튼을 누르십시오 제어기 전원을 껐다 켭니다 제어기를 찾기 위해 복구할 제어기의 전원을 껐다가 켜십시오 제어기 정보를 확인합니다 제어기를 찾으면 현재 제어기의 정보와 다운로드 할 펌웨어 정보가 나옵니다 모델명이 사용자가 연결한 제어기가 맞는지 확인하십시오 제어기 정보의 버전은 펌웨어 버전이 아니고 부트로더 Boot Loader 의 버전입니다 펌웨어 재설치를 시작합니다 다음 버튼을 누르면 펌웨어 복구를 시작합니다 완료될 때까지 전원이 꺼지거나 케이블이 빠지지 않도록 주의하십시오 제어기 펌웨어 재설치 결과를 확인합니다 간단하게 상기의 절차를 실행하면 CM 5도 로보플러스로 프로그래밍 할 수 있게 됩니다 강력한 기능으로 업그레이드된 로보플러스로 내 로봇을 더욱 빛나게 만들어 보세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#로보플러스-사용준비"
	},
	"2989": {
		"product": "바이올로이드 초급",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "",
		"content": "프로그램을 실행하기 전에 반드시 해당 로봇에 맞는 태스크 코드와 모션이 다운로드 되어야 합니다 전원을 인가합니다 충전이 안되었을 경우 POWER LED가 점등되지 않습니다 충전하기를 참조하십시오 MODE 버튼을 눌러서 PLAY 에 LED 가 깜빡이도록 합니다 MODE 버튼을 누르면 LED 가 이동합니다 START 버튼을 누르면 프로그램이 실행됩니다 프로그램이 실행되면 LED 는 깜빡거리지 않고 계속 켜져 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#작동하기"
	},
	"2990": {
		"product": "바이올로이드 초급",
		"header1": "시작하기",
		"header2": "충전하기(CM-5)",
		"header3": "",
		"content": "로봇을 SMPS 를 연결하지 않고 동작시키기 위해서는 배터리를 사용해야 합니다 배터리가 방전되었을 경우에는 아래 순서에 따라 충전하여 사용하십시오 CM 에 SMPS 를 연결합니다 CM 의 전원스위치를 켠 후 버튼을 누릅니다 주의 CM 가 충전 중일 때는 전원 LED 가 깜빡거립니다 전원 LED 가 깜빡거리는 속도는 충전이 얼마나 남았는지 확인하는 지표입니다 충전이 다 되어 갈수록 LED 의 깜빡거리는 속도는 점점 빨라집니다 충전이 다 되면 약 2초에 한 번씩만 깜빡입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#충전하기cm-5"
	},
	"2991": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#튜토리얼"
	},
	"2992": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "",
		"content": "학습 목표 화면에 1과 2를 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#화면-출력하기"
	},
	"2993": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 작성",
		"content": "로보플러스 태스크 프로그램 실행 아래 그림에서와 같이 윈도우에서 시작 모든 프로그램 ROBOTIS RoboPlus Software RoboPlus Task 를 선택하면 로보플러스 태스크 가 실행됩니다 로보플러스 태스크 초기 화면 제어기 선택 빈 줄을 선택한 후 더블클릭 하거나 Enter 키를 누르면 제어기 선택 대화창이 나타납니다 자신의 제어기를 선택한 후 확인 버튼을 누릅니다 프로그램 시작 만들기 제어기 선택 창에 이어서 뜨는 명령어 종류 선택 창에서 프로그램 시작 을 선택하면 RoboPlus Task 에 프로그램 시작 이 만들어 집니다 무조건 반복 명령어 입력 숫자를 반복하여 화면에 출력하기 위하여 무조건 반복 명령어를 사용합니다 명령줄 만들기 프로그램 시작의 와 사이 구간의 빈 줄을 더블클릭 하거나 선택 후 Enter 키를 누르면 명령어 종류 선택 창이 뜹니다 명령어 종류 중 반복문 무조건 반복 을 선택합니다 로드 명령어 입력 화면에 출력할 값을 화면 출력 으로 입력하기 위해 로드 명령어를 사용합니다 무조건 반복의 와 사이 구간의 빈 줄에 실행문 로드 값 입력하기 를 선택하여 입력합니다 숫자 을 화면 출력 으로 로드 로드 명령어의 파라미터 중 좌측 파라미터 를 선택합니다 파라미터에 대한 설명 좌측 파라미터는 우측 파라미터 값을 입력할 곳입니다 좌측 파라미터 를 더블클릭 하거나 클릭 후 Enter 키를 누르면 아래와 같은 파라미터 선택 창 이 뜹니다 제어기 화면 출력 을 선택하고 확인 버튼을 누릅니다 같은 방법으로 우측 파라미터 에는 상수 숫자 을 입력합니다 로드 명령어의 파라미터를 모두 입력한 화면은 아래와 같습니다 숫자 를 화면 출력 후 줄 바꿈 으로 로드 화면 출력 아래의 무조건 반복의 구간 끝 를 선택하고 스페이스 Space 키를 눌러 빈 줄을 추가한 후 위 에서와 동일한 방법으로 로드 명령어를 추가하고 이번에는 제어기 화면 출력 후 줄 바꿈 에 상수 숫자 를 로드합니다 최종 완성된 태스크 코드는 아래와 같습니다 태스크 코드 저장 하기 Ctrl 를 누르거나 도구 모음의 저장 버튼을 눌러 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#화면-출력하기"
	},
	"2994": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 다운로드",
		"content": "태스크 코드 작성 에서 작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#화면-출력하기"
	},
	"2995": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "실행 및 결과 확인",
		"content": "프로그램 출력용 모니터 창 띄우기 프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 띄워야 합니다 프로그램 출력용 모니터 창을 띄우는 방법은 아래와 같이 여러 가지가 있습니다 프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭 도구 모음에서 프로그램 출력 보기 버튼을 클릭 프로그램 메뉴의 프로그램 출력 보기 메뉴 선택 혹은 단축키 F5 프로그램 실행하기 제어기 전원 스위치를 켜면 모드 LED 가 깜빡이고 있는 대기 상태가 됩니다 이 때 모드 MODE 버튼을 눌러 모드 LED 가 PLAY 에 위치하도록 한 후 시작 START 버튼을 누르면 다운로드 한 태스크 코드가 실행됩니다 프로그램 출력용 모니터에 숫자 과 가 출력되는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#화면-출력하기"
	},
	"2996": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "",
		"content": "학습 목표 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 AUX LED 가 꺼지게 합니다 START 버튼을 누르면 종료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/버튼과-led"
	},
	"2997": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 작성",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/버튼과-led"
	},
	"2998": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 다운로드",
		"content": "작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/버튼과-led"
	},
	"2999": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "실행 및 결과 확인",
		"content": "제어기에 다운받은 프로그램을 실행하고 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 LED 가 꺼지는 것을 확인합니다 START 버튼을 눌러 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/버튼과-led"
	},
	"3000": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "",
		"content": "학습 목표 근처로 접근하는 물체를 공격하는 오리를 만들어 보겠습니다 조립서의 11 공격하는 오리를 참조하여 하드웨어를 완성하십시오 주의 로봇에 전원이 인가되면 로봇 근처에 얼굴을 가져가지 마십시오 오리의 공격으로 부상 당할 위험이 있습니다 공격하는 오리의 행동 패턴은 아래와 같습니다 물체가 감지되지 않으면 ID 관절은 중앙에 ID ID 관절은 접어서 공격을 준비합니다 물체가 좌우에서 감지되면 ID 관절을 움직여서 오리의 주둥이를 물체가 감지되는 방향으로 회전시킵니다 정면에서 물체가 감지되면 ID ID 관절을 쭉 펴서 공격합니다 공격한 후에는 번 상태로 돌아갑니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#공격하는-오리"
	},
	"3001": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "태스크 코드 작성",
		"content": "모터 이동 속도 기본값 입력 및 초기 행동 호출 왼쪽에서 물체가 감지되면 왼쪽으로 주둥이를 회전 AX S1 의 왼쪽 거리센서에 물체가 감지되면 ID 의 관절에 현재 위치 값에서 20을 더한 위치 값을 목표 위치로 입력하여 왼쪽으로 회전하도록 합니다 그런데 위치가 지나치게 돌아가는 것을 방지하기 위해 현재 위치 값이 812 보다 작은 경우에만 움직이도록 작성합니다 오른쪽에서 물체가 감지되면 오른쪽으로 주둥이를 회전 AX S1 의 오른쪽 거리센서에 물체가 감지되면 ID 의 관절에 현재 위치 값에서 20을 뺀 위치 값을 목표 위치로 입력하여 오른쪽으로 회전하도록 합니다 그런데 위치가 지나치게 돌아가는 것을 방지하기 위해 현재 위치 값이 212 보다 큰 경우에만 움직이도록 작성합니다 전방에 물체 감지 시 공격 AX S1 의 중앙 거리센서에 물체가 감지되면 부리공격을 호출하여 공격합니다 초기 행동 만들기 초기 행동은 ID 관절에 적절한 목표 위치 값 512 을 넣어 주둥이를 가운데로 이동한 뒤 부리 공격을 한 번 호출 하여 초기 자세를 잡도록 구성합니다 공격 행동 만들기 ID ID 관절의 적절한 목표 위치 값을 입력시켜 공격 동작과 고개 들기 준비 동작 동작을 만듭니다 각 동작이 끝날 때까지 행동제어 프로그램의 진행을 잠시 중단시킬 수 있는 움직임대기 함수도 프로그래밍 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#공격하는-오리"
	},
	"3002": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 Download 다운로드 방법 태스크 코드 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#공격하는-오리"
	},
	"3003": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "동작 확인",
		"content": "다운로드한 태스크 코드를 PLAY 시킵니다 물체를 오리에 접근시키면서 접근하는 물체를 공격하는지 확인하십시오 오리가 동작하는 동안은 얼굴을 가까이 하지 마십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#공격하는-오리"
	},
	"3004": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "장애물 감지 자동차",
		"header3": "",
		"content": "장애물을 피하며 주행하는 지능형 자동차를 만들어 보겠습니다 조립서의 장애물 감지 차를 참조하여 하드웨어를 완성하십시오 각 방향의 물체 감지 유무에 따른 장애물 감지차의 행동 패턴은 아래와 같습니다 왼쪽 정면 오른쪽 행돈 패턴 전진 우회전 후진 우회전 좌회전 전진 좌회전 정지 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#장애물-감지-자동차"
	},
	"3005": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "장애물 감지 자동차",
		"header3": "다이나믹셀 모드 설정",
		"content": "AX 12 를 장애물 감지차의 바퀴로 사용하기 위해 바퀴 모드 무한 회전 모드 로 변경합니다 변경 방법은 로보플러스 매니저 를 사용하여 AX 12 의 CW 위치 제한 값과 CCW 위치 제한 값을 모두 으로 설정하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#장애물-감지-자동차"
	},
	"3006": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "장애물 감지 자동차",
		"header3": "태스크 코드 작성",
		"content": "모터 이동 속도 기본 값 변수로 저장 물체 감지 판단을 위해 물체 감지 기준 값과 물체 감지 유무 를 사용합니다 이를 위해 물체 감지 기준 값을 설정합니다 물체 감지 유무 값 장애물 감지 방향 에 따라 적절한 동작 함수를 호출합니다 정지 전진 후진 우회전 좌회전 동작을 만듭니다 각 모터의 이동 속도는 처음에 설정한 속도 값인 이동속도 변수에 방향을 나타내는 CW 과 CCW 을 합해서 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#장애물-감지-자동차"
	},
	"3007": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "장애물 감지 자동차",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 Download 다운로드 방법 태스크 코드 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#장애물-감지-자동차"
	},
	"3008": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "장애물 감지 자동차",
		"header3": "동작 확인",
		"content": "다운로드한 태스크 코드를 PLAY 시킵니다 장애물을 피하며 주행하는지 확인하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#장애물-감지-자동차"
	},
	"3009": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "",
		"content": "평상시에는 앞으로 걷고 장애물을 감지하면 회피하여 움직이는 보행 드로이드를 만들어 보도록 하겠습니다 보행 드로이드는 걷기 장애물 회피하기 등의 동작을 할 때 여러가지 포즈를 사용하기 때문에 이를 모션으로 저장하여 사용하는 것이 편리합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-1모션-만들기"
	},
	"3010": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "모션 정하기",
		"content": "보행 드로이드의 주변 상황이나 동작 상태에 따른 행동 양식입니다 상황 행동 처음 실행할 때 기본자세로 정지 장애물이 없는 경우 앞으로 걷기 장애물을 발견한 경우 정지 후 뒤로 걷기 뒤로 걸어간 후 왼쪽으로 방향 바꾸기 왼쪽으로 방향을 바꾸어도 장애물이 감지될 때 왼쪽으로 방향 바꾸기 중복되는 동작을 제외하고 다음과 같이 4가지 모션을 만들어야 하며 이를 이용하여 장애물을 회피하면서 걷는 동작을 할 수 있습니다 정지 앞으로 걷기 뒤로 걷기 왼쪽으로 방향 바꾸기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-1모션-만들기"
	},
	"3011": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "모션 만들기",
		"content": "RoboPlus Motion을 실행하고 제어기와 연결합니다 로봇 연결하기 참조 정지 상태 모션을 만들기 위해 1번 페이지에 이름을 입력하고 스탭을 추가합니다 ID 4의 관절값을 512로 설정하고 오른쪽 방향의 화살표를 누르면 값이 로봇에 적용되며 설정된 포즈를 직접 확인할 수 있습니다 사용자가 관절값을 직접 입력하는 방법입니다 실행 시간을 조절합니다 가장 빠른 시간인 072초로 설정하였습니다 앞으로 걷기 모션을 만들기 위해 12번 페이지에 이름을 입력하고 스탭을 추가합니다 토크 오프 버튼을 눌러 로봇의 모든 관절의 토크를 끕니다 다음과 같이 관절값이 모두 꺼짐으로 설정되는 것을 확인할 수 있습니다 사용자가 로봇의 포즈를 설정 해 줍니다 다음 그림은 보행 드로이드의 걷기 시작하는 포즈입니다 위와 같이 로봇의 포즈를 설정하고 토크 온 버튼을 누르면 현재 로봇의 관절값이 로봇의 포즈에 자동으로 입력됩니다 왼쪽 화살표 버튼을 누르면 현재 입력된 로봇의 관절을 스텝의 포즈로 읽어올 수 있습니다 사용자가 관절값을 로봇으로부터 읽어오는 방법입니다 5번부터 반복하여 각각의 스텝에 앞으로 걷는 포즈를 추가합니다 포즈 추가가 완료되면 멈춤시간과 실행시간을 적절하게 조절합니다 모션 실행 버튼을 누르면 현재 페이지의 스텝을 연속적으로 실행합니다 로봇이 잘 움직이는지 확인합니다 지금까지와 같은 방법으로 페이지 13에 뒤로 걷기 페이지 15에 왼쪽으로 돌기 모션을 추가합니다 로봇에 현재까지 작업한 내용을 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-1모션-만들기"
	},
	"3012": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "다운로드",
		"content": "예제 모션 파일 download 다운로드 방법 모션 파일 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-1모션-만들기"
	},
	"3013": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-2태스크-코드"
	},
	"3014": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "동작 개요",
		"content": "각 상황에 따른 보행 드로이드의 행동 패턴은 아래와 같습니다 상황 행동 처음 실행할 때 기본자세로 정지 장애물이 없는 경우 앞으로 걷기 장애물을 발견한 경우 정지 후 뒤로 걷기 뒤로 걸어간 후 왼쪽으로 방향 바꾸기 왼쪽으로 방향을 바꾸어도 장애물이 감지될 때 왼쪽으로 방향 바꾸기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-2태스크-코드"
	},
	"3015": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "모션 실행 방법",
		"content": "RoboPlus Motion 에서 작성한 모션을 CM 에 저장한 후 이 모션을 사용하기 위해서는 태스크 코드에서 CM 의 모션을 실행하도록 해야 합니다 아래 두 개의 파라미터를 이용하여 로봇의 모션을 실행시킬 수 있습니다 모션을 실행하기 위해서는 로드 명령어를 사용해야 합니다 로드 명령어를 선택하면 두 개의 파라미터가 생성됩니다 좌측의 파라미터에는 제어기 모션 의 모션 페이지를 선택하고 우측 파라미터에는 원하는 모션이 들어 있는 모션 페이지 번호를 입력합니다 아래와 같이 태스크 코드를 작성하여 CM 에 다운로드 하고 실행시키면 5번 페이지에 저장된 모션이 실행됩니다 비 동기식 모션 실행 로봇의 모션 상태를 확인하지 않고 다음 작업을 시키는 모션 제어 방식입니다 코드를 이해하는 것이 매우 직관적이어서 초보자들에게 적합합니다 하지만 모션 실행 중에 중복 실행을 시킬 위험이 있어서 원하는 대로 조종이 잘 되지 않을 수 있습니다 동기식 모션 실행 로봇의 모션 상태를 확인하여 실행이 완료된 후에 다음 작업을 시키는 모션 제어 방식입니다 멀티 태스크 Multi Task 에 대한 개념이 필요하기 때문에 중급자 이상에게 적합합니다 무한 반복 모션의 경우 모션 상태 확인시 계속 기다릴 수 있으므로 태스크 코드를 잘 작성해야 합니다 무한 반복 모션 보행과 같이 규칙적으로 반복되는 모션은 무한 반복 모션으로 만드는 것이 효과적입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-2태스크-코드"
	},
	"3016": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "태스크 코드 작성",
		"content": "처음 실행될 때 준비자세를 호출합니다 장애물이 없는 경우 전진하기를 호출합니다 만약 중앙 거리센서에 물체가 감지되는 경우 정지 후 뒤로 걸어가서 좌회전합니다 만약 좌회전 해도 중앙 거리센서에 물체가 감지되는 경우 감지되지 않을 때까지 좌회전합니다 준비 자세 모션이 저장된 번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 전진 모션이 저장된 12번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 후진 모션이 저장된 13번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 좌회전 모션이 저장된 15번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 모션 상태 파라미터 값을 체크하여 모션이 동작중인 동안에는 대기하는 함수를 작성합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-2태스크-코드"
	},
	"3017": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 download 다운로드 방법 태스크 코드 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-2태스크-코드"
	},
	"3018": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "동작 확인",
		"content": "다운로드 한 태스크 코드를 PLAY 시킵니다 보행 경로 상에 장애물을 설치해 놓고 보행 드로이드가 장애물을 피해서 보행하는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-2태스크-코드"
	},
	"3019": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "",
		"content": "앞서 제작한 보행 드로이드에 우회전 하는 모션을 추가한 후 RC 100 을 이용하여 무선 조종 지그비 통신 을 해 보도록 하겠습니다 우회전 하는 모션은 보행 드로이드 제작 모션만들기 를 참고하여 모션 14번 페이지에 추가로 만들어 주시면 됩니다 지그비 통신을 위해 CM 와 RC 100 에 각각 ZIG 100 모듈을 장착합니다 장착 방법은 CM 와 RC 100 설명 페이지를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-3무선-조종"
	},
	"3020": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "동작 개요",
		"content": "RC 100 의 버튼을 누름에 따라 보행 드로이드가 전진 좌회전 후진 우회전 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-3무선-조종"
	},
	"3021": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "태스크 코드 작성",
		"content": "앞서 보행 드로이드 제작 태스크 코드 에서 작성한 태스크 코드를 기반으로 새로운 무선 데이터가 들어올 때까지 대기하다가 무선 데이터가 들어오면 받은 무선 데이터를 받은데이터 변수에 저장합니다 받은데이터에 RC 100 의 키에 대한 값만 amp 비트 연산을 통해 걸러냅니다 각 버튼 중 눌린 버튼에 따라 전진 후진 좌회전 우회전 하도록 조건문을 구성합니다 RC 100 의 버튼을 누르고 있다가 떼는 순간에는 준비자세를 호출하여 줍니다 우회전 모션이 저장된 14번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-3무선-조종"
	},
	"3022": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 Download 완성된 모션 파일 Download 다운로드 방법 태스크 코드 다운로드 모션 파일 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-3무선-조종"
	},
	"3023": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "동작 확인",
		"content": "다운로드한 태스크 코드를 PLAY 시킵니다 RC 100 을 이용하여 전진 후진 좌회전 우회전으로 조종하면서 원하는 방향으로 이동하는지 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#보행-드로이드-제작-3무선-조종"
	},
	"3024": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "",
		"content": "구 행동제어 프로그래머로 작성한 프로그램 bpg 을 신 로보플러스 태스크 용 태스크 코드 tsk 로 바꾸는 방법에 대한 설명입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#bpg를-tsk로-변환"
	},
	"3025": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "로보플러스 태스크로 .bpg 파일 열기",
		"content": "파일 열기로 bpg 열기 메뉴 파일 열기 또는 단축키 Ctrl 또는 도구 모음 중 열기 버튼 눌러 파일 선택 끌어 놓기 Drag amp Drop 로 bpg 열기 bpg 파일을 끌어다가 로보플러스 태스크 위에 던져 놓으면 됩니다 ockquote bpg 파일을 열었을 경우 뜨는 알림창 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#bpg를-tsk로-변환"
	},
	"3026": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "로보플러스 태스크의 명령어를 행동제어 프로그래머 1.0 문법으로 표기",
		"content": "로보플러스 태스크 명령어의 사용법과 행동제어 프로그래머 사용법을 숙지 후 아래 내용을 확인하세요 프로그램 시작 프로그램 시작의 자세한 사용법은 여기를 참고하세요 기존의 시작 과 동일 프로그램 시작의 구간 끝 는 기존의 종료 와 동일 로보플러스 태스크 행동제어 프로그래머 프로그램 강제 종료 프로그램 강제 종료의 자세한 사용법은 여기를 참고하세요 기존의 종료 명령어의 인식표로 점프하는 코드와 동일 로보플러스 태스크 행동제어 프로그래머 구간 시작 과 구간 끝 구간 시작 끝의 자세한 사용법은 여기를 참고하세요 새로 추가 됨 기존 행동제어 프로그래머 에서는 없던 개념 주석이나 메모 주석의 자세한 사용법은 여기를 참고하세요 기존의 설명 에 해당 됨 동작에 아무런 영향을 미치지 않음 로보플러스 태스크 행동제어 프로그래머 계산 산술 연산 및 비트 연산 계산의 자세한 사용법은 여기를 참고하세요 기존의 계산 과 동일 로보플러스 태스크 행동제어 프로그래머 로드 값 입력하기 로드의 자세한 사용법은 여기를 참고하세요 기존의 로드 LOAD 와 동일 로보플러스 태스크 행동제어 프로그래머 레이블 점프할 위치 레이블의 자세한 사용법은 여기를 참고하세요 기존의 인식표 에 해당 됨 단 행동제어 프로그래머 에서와 같이 호출 할 수는 없음 점프만 가능 로보플러스 태스크 행동제어 프로그래머 점프 goto 점프의 자세한 사용법은 여기를 참고하세요 기존의 점프 JUMP 와 동일 로보플러스 태스크 행동제어 프로그래머 만약 아니면 만약 else 아니면 else 만약 아니면 만약 아니면의 자세한 사용법은 여기를 참고하세요 기존의 만약 IF 아니면 만약 ELSE IF 아니면 ELSE 과 동일 로보플러스 태스크 행동제어 프로그래머 기존의 그리고 AND 후에 또한 만약 CONT IF 이 오는 경우는 amp amp 로 바뀌었음 기존의 또는 OR 후에 또한 만약 CONT IF 이 오는 경우는 로 바뀌었음 로보플러스 태스크 행동제어 프로그래머 무조건 반복 무조건 반복의 자세한 사용법은 여기를 참고하세요 인식표와 점프 JUMP 를 사용하여 특정 구간을 무조건 반복해 실행하는 코드와 동일합니다 로보플러스 태스크 행동제어 프로그래머 조건 반복 조건 조건 반복의 자세한 사용법은 여기를 참고하세요 인식표와 점프 JUMP 를 사용하여 조건에 따라 특정 구간을 반복해 실행하는 코드와 동일합니다 로보플러스 태스크 행동제어 프로그래머 횟수 반복 횟수만큼 반복의 자세한 사용법은 여기를 참고하세요 변수를 사용하여 지정된 횟수만큼 특정 구간을 반복해 실행하는 코드와 동일합니다 로보플러스 태스크 행동제어 프로그래머 반복 끝내기 break 반복 끝내기의 자세한 사용법은 여기를 참고하세요 반복되는 구문의 바로 다음 인식표로 점프하는 코드와 동일하게 사용됩니다 로보플러스 태스크 행동제어 프로그래머 조건 대기 실행문 없는 조건 반복 조건 대기의 자세한 사용법은 여기를 참고하세요 조건이 참 일 경우 자신의 인식표로 점프하는 코드와 동일하게 사용됩니다 로보플러스 태스크 행동제어 프로그래머 콜백 callback 콜백의 자세한 사용법은 여기를 참고하세요 새로 추가 됨 기존 행동제어 프로그래머 에서는 없던 개념 함수 만들기 함수 호출 함수 만들기 함수 호출의 자세한 사용법은 여기를 참고하세요 함수는 기존의 인식표와 복귀 RETURN 로 이루어진 서브루틴과 같습니다 로보플러스 태스크 에서 함수는 프로그램 시작이 소유하는 구간 와 로 묶인 부분 밖에 위치해야 합니다 로보플러스 태스크 행동제어 프로그래머 함수 강제 종료 return 함수 강제 종료의 자세한 사용법은 여기를 참고하세요 기존의 복귀 RETURN 의 인식표로 점프 JUMP 하는 코드와 동일 로보플러스 태스크 행동제어 프로그래머 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#bpg를-tsk로-변환"
	},
	"3027": {
		"product": "바이올로이드 초급",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "동영상",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#bpg를-tsk로-변환"
	},
	"3028": {
		"product": "바이올로이드 초급",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#다운로드"
	},
	"3029": {
		"product": "바이올로이드 초급",
		"header1": "다운로드",
		"header2": "태스크 코드 다운로드",
		"header3": "",
		"content": "바이올로이드 초급 종합 키트에서 사용되는 제어기인 CM 에 로보플러스 프로그램을 사용하기 위해서는 반드시 펌웨어 업데이트가 필요합니다 펌웨어 업데이트 방법은 로보프러스 매니저의 펌웨어 업데이트를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#태스크-코드-다운로드"
	},
	"3030": {
		"product": "바이올로이드 초급",
		"header1": "다운로드",
		"header2": "태스크 코드 다운로드",
		"header3": "태스크 코드 다운로드 준비",
		"content": "다운로드 할 태스크 코드 파일 tsk 을 RoboPlus Task에서 불러 옵니다 태스크 코드 파일을 더블클릭하여 열 수 있습니다 RoboPlus Task 의 파일 열기 기능으로 열 수 있습니다 마우스를 이용하여 파일을 RoboPlus Task 위로 드래그 앤 드롭 Drag amp Drop 을 통해 열 수 있습니다 USB2Dynamixel 을 이용하여 PC 와 제어기를 연결합니다 제어기의 전원을 켭니다 전원을 켜는 방법은 각 제어기 정보를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#태스크-코드-다운로드"
	},
	"3031": {
		"product": "바이올로이드 초급",
		"header1": "다운로드",
		"header2": "태스크 코드 다운로드",
		"header3": "태스크 코드 다운로드",
		"content": "PC 와 제어기가 연결되어야 합니다 태스크 코드를 다운로드하기 위해서는 PC 와 제어기가 연결되어야 합니다 연결 방법은 각 제어기 정보를 참고하세요 사용할 통신 포트를 선택해야 합니다 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다 RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다 PC 와 제어기가 연결되어 있는지 확인합니다 연결 방법은 각 제어기 정보를 참고하세요 제어기의 전원이 켜져 있는지 확인합니다 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다 다운로드 메뉴를 선택합니다 만약 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다 룰 체크 에러 메시지 확인 다운로드를 진행합니다 만약 다운로드에 실패했다면 처음부터 다시 시도합니다 태스크 코드 Task Code 를 실행합니다 로봇의 동작을 실행 합니다 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다 태스크 코드 실행 방법은 각 제어기 정보를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#태스크-코드-다운로드"
	},
	"3032": {
		"product": "바이올로이드 초급",
		"header1": "다운로드",
		"header2": "모션 파일 다운로드",
		"header3": "",
		"content": "특정 파일 모션을 로봇 모션으로 바꿀 수 있습니다 다운로드 할 파일 모션을 엽니다 로봇을 연결합니다 다운로드 버튼을 누르고 완료되기를 기다립니다 파일 모션의 내용이 로봇 모션에 옮겨진 것을 확인합니다 로보플러스 프로그램 다운로드 CM 510 530 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#모션-파일-다운로드"
	},
	"3033": {
		"product": "바이올로이드 초급",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "",
		"content": "관절 수 4개 이하의 로봇들입니다 초급 키트나 종합키트로 만들 수 있습니다 조립 방법 및 작동 방법은 초급키트와 종합키트의 조립서를 참고하세요 Robot Description 차단바 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 동작방법 CM 의 버튼을 누르면 차단바가 열립니다 CM 의 버튼을 누르면 차단바가 닫힙니다 다목적 계기판 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 동작방법 CM 의 버튼을 누르고 있으면 게이지 Gauge 의 속도가 점점 빨라집니다 CM 의 버튼을 누르고 있으면 게이지 Gauge 의 속도가 점점 느려집니다 소음 측정기 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 AX S1 ID 100 동작방법 센서에 감지된 소리의 크기만큼 게이지 Gauge 가 움직입니다 큰 소리가 날수록 게이지 Gauge 가 더 많이 움직여 소리의 크기를 측정할 수 있습니다 악어입 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 AX S1 ID 100 동작방법 센서의 전방에 손을 대면 입을 벌리고 손을 떼면 입을 다뭅니다 만약 입을 다물 때 입 사이에 물체가 있으면 다시 입을 벌립니다 10초 동안 물체가 감지되지 않으면 멜로디 소리를 냅니다 팬틸트 장치 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID 관절모드 동작방법 CM 의 버튼을 누르면 틸트 위 아래 관절이 위로 움직입니다 CM 의 버튼을 누르면 틸트 위 아래 관절이 아래로 움직입니다 CM 의 버튼을 누르면 팬 좌 우 관절이 우로 움직입니다 CM 의 버튼을 누르면 팬 좌 우 관절이 좌로 움직입니다 차량 출입 통제기 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID 관절모드 AX S1 ID 100 동작방법 센서에 물체가 감지되면 차단바가 수직으로 열립니다 센서에 물체가 감지되고 동시에 차단바가 밀리면 차단바가 수평으로 열립니다 센서에 물체가 감지되지 않으면 차단바가 닫힙니다 멜로디 차 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX S1 ID 100 동작방법 CM 의 버튼을 누르면 멜로디 소리를 내며 일정 거리를 앞으로 갑니다 CM 의 버튼을 누르면 멜로디 소리를 내며 일정 거리를 뒤로 갑니다 CM 의 버튼을 누르면 멜로디 소리를 내며 우회전 합니다 CM 의 버튼을 누르면 멜로디 소리를 내며 좌회전 합니다 로봇팔 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID 관절모드 동작방법 CM 의 버튼을 누르면 로봇 팔이 오른쪽으로 회전합니다 CM 의 버튼을 누르면 로봇 팔이 왼쪽으로 회전합니다 CM 의 버튼을 누르면 로봇 팔의 팔꿈치가 펴집니다 CM 의 버튼을 누르면 로봇 팔의 팔꿈치가 굽혀집니다 CM 의 시작 버튼과 버튼을 동시에 누르면 로봇 팔의 손목이 펴집니다 CM 의 시작 버튼과 버튼을 동시에 누르면 로봇 팔의 손목이 굽혀집니다 장애물 감지차 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX S1 ID 100 동작방법 주행 경로 상에 장애물을 설치해 놓고 장애물 감지차를 작동시킵니다 스스로 장애물을 인식하고 피해가면서 주행을 합니다 10 인사하는 펭귄 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 관절모드 AX S1 ID 100 동작방법 손을 머리의 전방에 대면 인사를 합니다 손을 머리의 오른쪽에 대면 오른손을 듭니다 손을 머리의 왼쪽에 대면 왼손을 듭니다 11 공격하는 오리 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID 관절모드 AX S1 ID 100 동작방법 머리의 전방에 손을 대면 부리로 공격을 합니다 머리의 오른쪽에 손을 대면 머리를 오른쪽으로 돌립니다 머리의 왼쪽에 손을 대면 머리를 왼쪽으로 돌립니다 12 낭떠러지 감지차 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX S1 ID 100 동작방법 주행 경로 상에 낭떠러지 장애물을 설치해 놓고 낭떠러지 감지차를 작동시킵니다 스스로 낭떠러지와 장애물을 인식하고 피해가면서 주행을 합니다 13 박수치는 펭귄 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 관절모드 AX S1 ID 100 동작방법 손을 머리 전방에 대면 인사를 합니다 박수를 치면 그 횟수만큼 따라서 박수를 칩니다 14 보행 드로이드 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 관절모드 AX S1 ID 100 동작방법 보행 경로 상에 장애물을 설치해 놓고 보행 드로이드를 작동시킵니다 스스로 장애물을 인식하고 피해가면서 두 발로 보행을 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#예제"
	},
	"3034": {
		"product": "바이올로이드 초급",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#참고자료"
	},
	"3035": {
		"product": "바이올로이드 초급",
		"header1": "참고자료",
		"header2": "퓨즈 교체하기(CM-5)",
		"header3": "",
		"content": "CM 내부에는 과전류가 흘러서 회로가 망가지는 것을 막기 위한 퓨즈 Fuse 가 있습니다 퓨즈가 끊어지면 다음과 같은 증상이 나타납니다 CM 5가 SMPS로만 전원이 켜집니다 충전을 하기 위해 U버튼을 눌러도 LED가 깜박거리지 않습니다 참고 CM 에 사용되는 퓨즈는 일반 전파상에서 쉽게 구할 수 있습니다 퓨즈의 용량 220V 5A ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#퓨즈-교체하기cm-5"
	},
	"3036": {
		"product": "바이올로이드 초급",
		"header1": "참고자료",
		"header2": "다이나믹셀 관리하기",
		"header3": "",
		"content": "로봇 관절로 사용되는 다이나믹셀은 매우 많은 기능들을 내장하고 있습니다 여기서는 로봇을 만들면서 다이나믹셀의 설정을 바꾸는 방법에 대해 설명합니다 ID바꾸기 다이나믹셀의 ID는 다음과 같이 변경할 수 있습니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 ID를 바꾸려는 다이나믹셀을 클릭합니다 컨트롤 테이블의 ID 열을 클릭합니다 ID 목록 콤보박스를 클릭하면 현재 바꿀 수 있는 다이나믹셀의 ID를 볼 수 있습니다 바꾸고자 하는 ID를 선택하고 적용 버튼을 누르십시오 ID변경시 유의사항 RoboPlus Motion과 로보플러스 태스크에서 사용하기 위해서는 ID의 범위를 다음과 같은 범위 내로 설정해야 합니다 액츄에이터는 25 사이의 ID로 설정해야 합니다 AX S1은 100 109 사이의 ID로 설정해야 합니다 동작 모드 변경 다이나믹셀은 아래와 같은 가지 모드로 동작할 수 있습니다 바퀴 모드 일반 모터와 같이 360도 회전하는 모드 무한 회전 모드 관절 모드 일반적인 서보 모터와 같이 0도 300도 사이의 정해진 각도로 움직이는 모드 모드 변경 방법은 아래와 같이 RoboPlus Manager 를 통해 변경할 수 있으며 한 번 모드를 설정하면 전원을 차단해도 설정값이 유지됩니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 모드를 변경하려는 다이나믹셀을 클릭하고 컨트롤 테이블의 CW CCW 위치 제한 열을 클릭합니다 바퀴 모드를 설정하려면 CW CCW 위치 제한 컨트롤 테이블의 값을 모두 0으로 변경하면 됩니다 다음과 같이 바퀴 모드 버튼을 클릭하여 쉽게 설정할 수도 있습니다 다시 관절 모드로 설정하려면 CW CCW 위치 제한 컨트롤 테이블 값을 이외의 값으로 설정하면 됩니다 관절 모드 초기값은 CW 위치 제한 CCW 위치 제한 1023입니다 문제 해결 RoboPlus Manager에서 다이나믹셀을 찾을 수 없는 경우가 발생합니다 이런 경우는 다음과 같이 시도해보세요 다이나믹셀을 1개만 연결해서 ID가 중복되는지 확인해보세요 1개만 연결했을 때 왼쪽 리스트에 다이나믹셀이 보이면 ID가 중복될 가능성이 큽니다 ID 변경하기를 통해 ID를 바꿔 주시기 바랍니다 만약 다음 그림과 같이 리스트에서 다이나믹셀을 확인할 수 없다면 상세 검색 버튼을 누르시기 바랍니다 상세 검색 기능은 다이나믹셀의 통신 속도가 1Mbps로 설정되어 있지 않은 경우 속도를 1Mbps로 재설정하며 제어기에서 인식할 수 있도록 해 줍니다 위와 같은 방법으로도 문제가 해결되지 않는다면 다이나믹셀이 고장이 났을 가능성이 높습니다 구입처에 S를 의뢰하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#다이나믹셀-관리하기"
	},
	"3037": {
		"product": "바이올로이드 초급",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#지그비-무선-조종"
	},
	"3038": {
		"product": "바이올로이드 초급",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210과 사용법이 동일 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#지그비-무선-조종"
	},
	"3039": {
		"product": "바이올로이드 초급",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 RC 100 에 ZIG 100 모듈을 장착한 모습 CM 100 에 ZIG 110 모듈을 장착한 모습 CM 510 에 ZIG 110 모듈을 장착한 모습 CM 에 ZIG 100 모듈을 장착한 모습 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#지그비-무선-조종"
	},
	"3040": {
		"product": "바이올로이드 초급",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "여러 대의 로봇 조종하기",
		"content": "사용자가 댄스나 공연데모를 할 때 여러 대의 로봇에 동시에 명령을 주는 방법입니다 ZIGBEE 모듈의 Broadcast 모드를 이용 하는것으로 로봇에게 동시에 명령을 줄 수 있습니다 바이올로이드 초급 종합 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 제어기를 사용하는 경우에는 제어기와 ZIG 100모듈을 연결합니다 로보플러스 매니저를 통해서 ZIG 100 모듈의 상대 로봇 무선 ID를 65535로 설정 합니다 Broadcast 채널을 따로 맞추지 않아도 통신이 가능합니다 RC 100을 이용해 직접 명령을 주거나 Zig2Serial을 이용해 PC에서 명령을 줄 수 있습니다 장치 채널 기본값습 채널 변경가능여부 CM 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 CM 5에 장착한 ZIG 100모듈의 경우에는 채널 변경이 불가능 합니다 따라서 사용자는 모두 채널 1번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능하므로 모든 채널을 일치시켜야 합니다 바이올로이드 프리미엄키트 CM 700 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 510 CM 700 제어기를 사용하는 경우에는 제어기와 ZIG 110 모듈을 연결합니다 로보플러스 매니저를 통해서 상대 로봇 무선 ID를 65535로 설정 합니다 제어기와 연결된 Zig 110의 경우에는 Broadcast 채널이 4번으로 되어 있기 때문에 Zig2Serial RC 100을 채널 4번으로 맞추셔야 합니다 RC 100 채널 바꾸는 방법 링크가기 Zig2Serial 채널 바꾸는 방법 링크가기 장치 채널 기본값습 채널 변경가능여부 CM 510 CM 530 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 제어기에 연결한 ZIG 110은 채널 변경이 불가능합니다 따라서 사용자는 모두 채널 4번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능 하므로 모든 채널을 일치 시켜야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/beginner/#여러-대의-로봇-조종하기"
	},
	"3041": {
		"product": "바이올로이드 종합",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "바이올로이드 종합은 18자유도 로봇까지 제작할 수 있는 키트로서 바이올로이드 초급의 내용을 포함하고 있으며 총 26가지 로봇의 예제가 제공됩니다 로봇 제작원리 학습 바이올로이드 종합을 활용하여 26단계의 예제 로봇들을 조립해보고 작동해보면서 로봇 제작의 기본원리를 학습할 수 있습니다 1자유도의 간단한 차단바에서부터 18자유도의 거미로봇 휴머노이드까지 직접 제작하고 예제프로그램을 편집해 봄으로서 프로그래밍에 대한 이해도를 높일 수 있습니다 기본 예제 로봇 이외에 나만의 로봇을 구상하여 조립하고 프로그램하면 세상 어디에도 없는 나만의 독창적인 로봇을 만들 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#개요"
	},
	"3042": {
		"product": "바이올로이드 종합",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#시작하기"
	},
	"3043": {
		"product": "바이올로이드 종합",
		"header1": "시작하기",
		"header2": "부품 목록",
		"header3": "",
		"content": "CM AX 12A AX S1 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#부품-목록"
	},
	"3044": {
		"product": "바이올로이드 종합",
		"header1": "시작하기",
		"header2": "로보플러스 사용준비",
		"header3": "",
		"content": "CM 는 기본적으로 BIOLOID 학습서에 나와 있는 것과 같이 기존의 바이올로이드 소프트웨어 행동제어 프로그래머 모션 편집기 등 를 지원하도록 되어 있습니다 따라서 CM 에 로보플러스 RoboPlus 소프트웨어를 사용하고자 하는 경우에는 로보플러스를 지원하는 펌웨어로 변경이 필요합니다 단 로보플러스를 지원하는 펌웨어로 변경하게 되면 기존의 바이올로이드 소프트웨어들은 더 이상 사용하실 수 없습니다 새롭게 업그레이드 되어 선보인 로보플러스는 로보티즈의 제품을 제어할 수 있는 통합 프로그래밍 소프트웨어입니다 따라서 CM 5를 기반으로 만든 로봇도 로보플러스로 프로그래밍하여 제어할 수 있습니다 방법은 다음과 같습니다 자료실 에 있는 최신 버전의 RoboPlus를 다운받아 설치합니다 설치 후 바탕화면의 RoboPlus를 실행합니다 RoboPlus Manager를 선택합니다 CM 5를 다운로드케이블을 이용하여 PC와 연결합니다 RoboPlus Manager 상단의 아이콘 중 제어기 복구 를 눌러서 펌웨어 마법사를 실행합니다 제어기 연결 포트 선택합니다 사용자가 제어기가 연결된 포트를 수동으로 설정해 주어야 합니다 포트가 사용중이면 제어기를 인식할 수 없으니 다른 프로그램을 종료하고 진행하십시오 제어기가 연결된 포트를 선택하고 찾기 버튼을 누르십시오 제어기 전원을 껐다 켭니다 제어기를 찾기 위해 복구할 제어기의 전원을 껐다가 켜십시오 제어기 정보를 확인합니다 제어기를 찾으면 현재 제어기의 정보와 다운로드 할 펌웨어 정보가 나옵니다 모델명이 사용자가 연결한 제어기가 맞는지 확인하십시오 제어기 정보의 버전은 펌웨어 버전이 아니고 부트로더 Boot Loader 의 버전입니다 펌웨어 재설치를 시작합니다 다음 버튼을 누르면 펌웨어 복구를 시작합니다 완료될 때까지 전원이 꺼지거나 케이블이 빠지지 않도록 주의하십시오 제어기 펌웨어 재설치 결과를 확인합니다 간단하게 상기의 절차를 실행하면 CM 5도 로보플러스로 프로그래밍 할 수 있게 됩니다 강력한 기능으로 업그레이드된 로보플러스로 내 로봇을 더욱 빛나게 만들어 보세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#로보플러스-사용준비"
	},
	"3045": {
		"product": "바이올로이드 종합",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "",
		"content": "프로그램을 실행하기 전에 반드시 해당 로봇에 맞는 태스크 코드와 모션이 다운로드 되어야 합니다 전원을 인가합니다 충전이 안되었을 경우 POWER LED가 점등되지 않습니다 충전하기를 참조하십시오 MODE 버튼을 눌러서 PLAY 에 LED 가 깜빡이도록 합니다 MODE 버튼을 누르면 LED 가 이동합니다 START 버튼을 누르면 프로그램이 실행됩니다 프로그램이 실행되면 LED 는 깜빡거리지 않고 계속 켜져 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#작동하기"
	},
	"3046": {
		"product": "바이올로이드 종합",
		"header1": "시작하기",
		"header2": "충전하기(CM-5)",
		"header3": "",
		"content": "로봇을 SMPS 를 연결하지 않고 동작시키기 위해서는 배터리를 사용해야 합니다 배터리가 방전되었을 경우에는 아래 순서에 따라 충전하여 사용하십시오 CM 에 SMPS 를 연결합니다 CM 의 전원스위치를 켠 후 버튼을 누릅니다 주의 CM 가 충전 중일 때는 전원 LED 가 깜빡거립니다 전원 LED 가 깜빡거리는 속도는 충전이 얼마나 남았는지 확인하는 지표입니다 충전이 다 되어 갈수록 LED 의 깜빡거리는 속도는 점점 빨라집니다 충전이 다 되면 약 2초에 한 번씩만 깜빡입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#충전하기cm-5"
	},
	"3047": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#튜토리얼"
	},
	"3048": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "",
		"content": "학습 목표 화면에 1과 2를 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#화면-출력하기"
	},
	"3049": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 작성",
		"content": "로보플러스 태스크 프로그램 실행 아래 그림에서와 같이 윈도우에서 시작 모든 프로그램 ROBOTIS RoboPlus Software RoboPlus Task 를 선택하면 로보플러스 태스크 가 실행됩니다 로보플러스 태스크 초기 화면 제어기 선택 빈 줄을 선택한 후 더블클릭 하거나 Enter 키를 누르면 제어기 선택 대화창이 나타납니다 자신의 제어기를 선택한 후 확인 버튼을 누릅니다 프로그램 시작 만들기 제어기 선택 창에 이어서 뜨는 명령어 종류 선택 창에서 프로그램 시작 을 선택하면 RoboPlus Task 에 프로그램 시작 이 만들어 집니다 무조건 반복 명령어 입력 숫자를 반복하여 화면에 출력하기 위하여 무조건 반복 명령어를 사용합니다 명령줄 만들기 프로그램 시작의 와 사이 구간의 빈 줄을 더블클릭 하거나 선택 후 Enter 키를 누르면 명령어 종류 선택 창이 뜹니다 명령어 종류 중 반복문 무조건 반복 을 선택합니다 로드 명령어 입력 화면에 출력할 값을 화면 출력 으로 입력하기 위해 로드 명령어를 사용합니다 무조건 반복의 와 사이 구간의 빈 줄에 실행문 로드 값 입력하기 를 선택하여 입력합니다 숫자 을 화면 출력 으로 로드 로드 명령어의 파라미터 중 좌측 파라미터 를 선택합니다 파라미터에 대한 설명 좌측 파라미터는 우측 파라미터 값을 입력할 곳입니다 좌측 파라미터 를 더블클릭 하거나 클릭 후 Enter 키를 누르면 아래와 같은 파라미터 선택 창 이 뜹니다 제어기 화면 출력 을 선택하고 확인 버튼을 누릅니다 같은 방법으로 우측 파라미터 에는 상수 숫자 을 입력합니다 로드 명령어의 파라미터를 모두 입력한 화면은 아래와 같습니다 숫자 를 화면 출력 후 줄 바꿈 으로 로드 화면 출력 아래의 무조건 반복의 구간 끝 를 선택하고 스페이스 Space 키를 눌러 빈 줄을 추가한 후 위 에서와 동일한 방법으로 로드 명령어를 추가하고 이번에는 제어기 화면 출력 후 줄 바꿈 에 상수 숫자 를 로드합니다 최종 완성된 태스크 코드는 아래와 같습니다 태스크 코드 저장 하기 Ctrl 를 누르거나 도구 모음의 저장 버튼을 눌러 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#화면-출력하기"
	},
	"3050": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 다운로드",
		"content": "태스크 코드 작성 에서 작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#화면-출력하기"
	},
	"3051": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "실행 및 결과 확인",
		"content": "프로그램 출력용 모니터 창 띄우기 프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 띄워야 합니다 프로그램 출력용 모니터 창을 띄우는 방법은 아래와 같이 여러 가지가 있습니다 프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭 도구 모음에서 프로그램 출력 보기 버튼을 클릭 프로그램 메뉴의 프로그램 출력 보기 메뉴 선택 혹은 단축키 F5 프로그램 실행하기 제어기 전원 스위치를 켜면 모드 LED 가 깜빡이고 있는 대기 상태가 됩니다 이 때 모드 MODE 버튼을 눌러 모드 LED 가 PLAY 에 위치하도록 한 후 시작 START 버튼을 누르면 다운로드 한 태스크 코드가 실행됩니다 프로그램 출력용 모니터에 숫자 과 가 출력되는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#화면-출력하기"
	},
	"3052": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "",
		"content": "학습 목표 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 AUX LED 가 꺼지게 합니다 START 버튼을 누르면 종료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#버튼과-led"
	},
	"3053": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 작성",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#버튼과-led"
	},
	"3054": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 다운로드",
		"content": "작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#버튼과-led"
	},
	"3055": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "실행 및 결과 확인",
		"content": "제어기에 다운받은 프로그램을 실행하고 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 LED 가 꺼지는 것을 확인합니다 START 버튼을 눌러 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#버튼과-led"
	},
	"3056": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "",
		"content": "학습 목표 근처로 접근하는 물체를 공격하는 오리를 만들어 보겠습니다 조립서의 11 공격하는 오리를 참조하여 하드웨어를 완성하십시오 주의 로봇에 전원이 인가되면 로봇 근처에 얼굴을 가져가지 마십시오 오리의 공격으로 부상 당할 위험이 있습니다 공격하는 오리의 행동 패턴은 아래와 같습니다 물체가 감지되지 않으면 ID 관절은 중앙에 ID ID 관절은 접어서 공격을 준비합니다 물체가 좌우에서 감지되면 ID 관절을 움직여서 오리의 주둥이를 물체가 감지되는 방향으로 회전시킵니다 정면에서 물체가 감지되면 ID ID 관절을 쭉 펴서 공격합니다 공격한 후에는 번 상태로 돌아갑니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#공격하는-오리"
	},
	"3057": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "태스크 코드 작성",
		"content": "모터 이동 속도 기본값 입력 및 초기 행동 호출 왼쪽에서 물체가 감지되면 왼쪽으로 주둥이를 회전 AX S1 의 왼쪽 거리센서에 물체가 감지되면 ID 의 관절에 현재 위치 값에서 20을 더한 위치 값을 목표 위치로 입력하여 왼쪽으로 회전하도록 합니다 그런데 위치가 지나치게 돌아가는 것을 방지하기 위해 현재 위치 값이 812 보다 작은 경우에만 움직이도록 작성합니다 오른쪽에서 물체가 감지되면 오른쪽으로 주둥이를 회전 AX S1 의 오른쪽 거리센서에 물체가 감지되면 ID 의 관절에 현재 위치 값에서 20을 뺀 위치 값을 목표 위치로 입력하여 오른쪽으로 회전하도록 합니다 그런데 위치가 지나치게 돌아가는 것을 방지하기 위해 현재 위치 값이 212 보다 큰 경우에만 움직이도록 작성합니다 전방에 물체 감지 시 공격 AX S1 의 중앙 거리센서에 물체가 감지되면 부리공격을 호출하여 공격합니다 초기 행동 만들기 초기 행동은 ID 관절에 적절한 목표 위치 값 512 을 넣어 주둥이를 가운데로 이동한 뒤 부리 공격을 한 번 호출 하여 초기 자세를 잡도록 구성합니다 공격 행동 만들기 ID ID 관절의 적절한 목표 위치 값을 입력시켜 공격 동작과 고개 들기 준비 동작 동작을 만듭니다 각 동작이 끝날 때까지 행동제어 프로그램의 진행을 잠시 중단시킬 수 있는 움직임대기 함수도 프로그래밍 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#공격하는-오리"
	},
	"3058": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 Download 다운로드 방법 태스크 코드 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#공격하는-오리"
	},
	"3059": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "공격하는 오리",
		"header3": "동작 확인",
		"content": "다운로드한 태스크 코드를 PLAY 시킵니다 물체를 오리에 접근시키면서 접근하는 물체를 공격하는지 확인하십시오 오리가 동작하는 동안은 얼굴을 가까이 하지 마십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#공격하는-오리"
	},
	"3060": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "장애물 감지차",
		"header3": "",
		"content": "장애물을 피하며 주행하는 지능형 자동차를 만들어 보겠습니다 조립서의 장애물 감지 차를 참조하여 하드웨어를 완성하십시오 각 방향의 물체 감지 유무에 따른 장애물 감지차의 행동 패턴은 아래와 같습니다 왼쪽 정면 오른쪽 행돈 패턴 전진 우회전 후진 우회전 좌회전 전진 좌회전 정지 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#장애물-감지차"
	},
	"3061": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "장애물 감지차",
		"header3": "다이나믹셀 모드 설정",
		"content": "AX 12 를 장애물 감지차의 바퀴로 사용하기 위해 바퀴 모드 무한 회전 모드 로 변경합니다 변경 방법은 로보플러스 매니저 를 사용하여 AX 12 의 CW 위치 제한 값과 CCW 위치 제한 값을 모두 으로 설정하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#장애물-감지차"
	},
	"3062": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "장애물 감지차",
		"header3": "태스크 코드 작성",
		"content": "모터 이동 속도 기본 값 변수로 저장 물체 감지 판단을 위해 물체 감지 기준 값과 물체 감지 유무 를 사용합니다 이를 위해 물체 감지 기준 값을 설정합니다 물체 감지 유무 값 장애물 감지 방향 에 따라 적절한 동작 함수를 호출합니다 정지 전진 후진 우회전 좌회전 동작을 만듭니다 각 모터의 이동 속도는 처음에 설정한 속도 값인 이동속도 변수에 방향을 나타내는 CW 과 CCW 을 합해서 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#장애물-감지차"
	},
	"3063": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "장애물 감지차",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 Download 다운로드 방법 태스크 코드 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#장애물-감지차"
	},
	"3064": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "장애물 감지차",
		"header3": "동작 확인",
		"content": "다운로드한 태스크 코드를 PLAY 시킵니다 장애물을 피하며 주행하는지 확인하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#장애물-감지차"
	},
	"3065": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "",
		"content": "평상시에는 앞으로 걷고 장애물을 감지하면 회피하여 움직이는 보행 드로이드를 만들어 보도록 하겠습니다 보행 드로이드는 걷기 장애물 회피하기 등의 동작을 할 때 여러가지 포즈를 사용하기 때문에 이를 모션으로 저장하여 사용하는 것이 편리합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-1모션-만들기"
	},
	"3066": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "모션 정하기",
		"content": "보행 드로이드의 주변 상황이나 동작 상태에 따른 행동 양식입니다 상황 행동 처음 실행할 때 기본자세로 정지 장애물이 없는 경우 앞으로 걷기 장애물을 발견한 경우 정지 후 뒤로 걷기 뒤로 걸어간 후 왼쪽으로 방향 바꾸기 왼쪽으로 방향을 바꾸어도 장애물이 감지될 때 왼쪽으로 방향 바꾸기 중복되는 동작을 제외하고 다음과 같이 4가지 모션을 만들어야 하며 이를 이용하여 장애물을 회피하면서 걷는 동작을 할 수 있습니다 정지 앞으로 걷기 뒤로 걷기 왼쪽으로 방향 바꾸기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-1모션-만들기"
	},
	"3067": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "모션 만들기",
		"content": "RoboPlus Motion을 실행하고 제어기와 연결합니다 로봇 연결하기 참조 정지 상태 모션을 만들기 위해 1번 페이지에 이름을 입력하고 스탭을 추가합니다 ID 4의 관절값을 512로 설정하고 오른쪽 방향의 화살표를 누르면 값이 로봇에 적용되며 설정된 포즈를 직접 확인할 수 있습니다 사용자가 관절값을 직접 입력하는 방법입니다 실행 시간을 조절합니다 가장 빠른 시간인 072초로 설정하였습니다 앞으로 걷기 모션을 만들기 위해 12번 페이지에 이름을 입력하고 스탭을 추가합니다 토크 오프 버튼을 눌러 로봇의 모든 관절의 토크를 끕니다 다음과 같이 관절값이 모두 꺼짐으로 설정되는 것을 확인할 수 있습니다 사용자가 로봇의 포즈를 설정 해 줍니다 다음 그림은 보행 드로이드의 걷기 시작하는 포즈입니다 위와 같이 로봇의 포즈를 설정하고 토크 온 버튼을 누르면 현재 로봇의 관절값이 로봇의 포즈에 자동으로 입력됩니다 왼쪽 화살표 버튼을 누르면 현재 입력된 로봇의 관절을 스텝의 포즈로 읽어올 수 있습니다 사용자가 관절값을 로봇으로부터 읽어오는 방법입니다 5번부터 반복하여 각각의 스텝에 앞으로 걷는 포즈를 추가합니다 포즈 추가가 완료되면 멈춤시간과 실행시간을 적절하게 조절합니다 모션 실행 버튼을 누르면 현재 페이지의 스텝을 연속적으로 실행합니다 로봇이 잘 움직이는지 확인합니다 지금까지와 같은 방법으로 페이지 13에 뒤로 걷기 페이지 15에 왼쪽으로 돌기 모션을 추가합니다 로봇에 현재까지 작업한 내용을 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-1모션-만들기"
	},
	"3068": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 1(모션 만들기)",
		"header3": "다운로드",
		"content": "예제 모션 파일 download 다운로드 방법 모션 파일 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-1모션-만들기"
	},
	"3069": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-2태스크-코드"
	},
	"3070": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "동작 개요",
		"content": "각 상황에 따른 보행 드로이드의 행동 패턴은 아래와 같습니다 상황 행동 처음 실행할 때 기본자세로 정지 장애물이 없는 경우 앞으로 걷기 장애물을 발견한 경우 정지 후 뒤로 걷기 뒤로 걸어간 후 왼쪽으로 방향 바꾸기 왼쪽으로 방향을 바꾸어도 장애물이 감지될 때 왼쪽으로 방향 바꾸기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-2태스크-코드"
	},
	"3071": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "모션 실행 방법",
		"content": "RoboPlus Motion 에서 작성한 모션을 CM 에 저장한 후 이 모션을 사용하기 위해서는 태스크 코드에서 CM 의 모션을 실행하도록 해야 합니다 아래 두 개의 파라미터를 이용하여 로봇의 모션을 실행시킬 수 있습니다 모션을 실행하기 위해서는 로드 명령어를 사용해야 합니다 로드 명령어를 선택하면 두 개의 파라미터가 생성됩니다 좌측의 파라미터에는 제어기 모션 의 모션 페이지를 선택하고 우측 파라미터에는 원하는 모션이 들어 있는 모션 페이지 번호를 입력합니다 아래와 같이 태스크 코드를 작성하여 CM 에 다운로드 하고 실행시키면 5번 페이지에 저장된 모션이 실행됩니다 비 동기식 모션 실행 로봇의 모션 상태를 확인하지 않고 다음 작업을 시키는 모션 제어 방식입니다 코드를 이해하는 것이 매우 직관적이어서 초보자들에게 적합합니다 하지만 모션 실행 중에 중복 실행을 시킬 위험이 있어서 원하는 대로 조종이 잘 되지 않을 수 있습니다 동기식 모션 실행 로봇의 모션 상태를 확인하여 실행이 완료된 후에 다음 작업을 시키는 모션 제어 방식입니다 멀티 태스크 Multi Task 에 대한 개념이 필요하기 때문에 중급자 이상에게 적합합니다 무한 반복 모션의 경우 모션 상태 확인시 계속 기다릴 수 있으므로 태스크 코드를 잘 작성해야 합니다 무한 반복 모션 보행과 같이 규칙적으로 반복되는 모션은 무한 반복 모션으로 만드는 것이 효과적입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-2태스크-코드"
	},
	"3072": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "태스크 코드 작성",
		"content": "처음 실행될 때 준비자세를 호출합니다 장애물이 없는 경우 전진하기를 호출합니다 만약 중앙 거리센서에 물체가 감지되는 경우 정지 후 뒤로 걸어가서 좌회전합니다 만약 좌회전 해도 중앙 거리센서에 물체가 감지되는 경우 감지되지 않을 때까지 좌회전합니다 준비 자세 모션이 저장된 번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 전진 모션이 저장된 12번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 후진 모션이 저장된 13번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 좌회전 모션이 저장된 15번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 모션 상태 파라미터 값을 체크하여 모션이 동작중인 동안에는 대기하는 함수를 작성합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-2태스크-코드"
	},
	"3073": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 download 다운로드 방법 태스크 코드 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-2태스크-코드"
	},
	"3074": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 2(태스크 코드)",
		"header3": "동작 확인",
		"content": "다운로드 한 태스크 코드를 PLAY 시킵니다 보행 경로 상에 장애물을 설치해 놓고 보행 드로이드가 장애물을 피해서 보행하는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-2태스크-코드"
	},
	"3075": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "",
		"content": "앞서 제작한 보행 드로이드에 우회전 하는 모션을 추가한 후 RC 100 을 이용하여 무선 조종 지그비 통신 을 해 보도록 하겠습니다 우회전 하는 모션은 보행 드로이드 제작 모션만들기 를 참고하여 모션 14번 페이지에 추가로 만들어 주시면 됩니다 지그비 통신을 위해 CM 와 RC 100 에 각각 ZIG 100 모듈을 장착합니다 장착 방법은 CM 와 RC 100 설명 페이지를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-3무선-조종"
	},
	"3076": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "동작 개요",
		"content": "RC 100 의 버튼을 누름에 따라 보행 드로이드가 전진 좌회전 후진 우회전 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-3무선-조종"
	},
	"3077": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "태스크 코드 작성",
		"content": "앞서 보행 드로이드 제작 태스크 코드 에서 작성한 태스크 코드를 기반으로 새로운 무선 데이터가 들어올 때까지 대기하다가 무선 데이터가 들어오면 받은 무선 데이터를 받은데이터 변수에 저장합니다 받은데이터에 RC 100 의 키에 대한 값만 amp 비트 연산을 통해 걸러냅니다 각 버튼 중 눌린 버튼에 따라 전진 후진 좌회전 우회전 하도록 조건문을 구성합니다 RC 100 의 버튼을 누르고 있다가 떼는 순간에는 준비자세를 호출하여 줍니다 우회전 모션이 저장된 14번 페이지의 모션을 실행하는 함수를 작성합니다 모션을 실행시킨 후 모션이 완료될 때까지 기다리기 위해 모션대기용 함수를 호출합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-3무선-조종"
	},
	"3078": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "다운로드",
		"content": "완성된 태스크 코드 Download 완성된 모션 파일 Download 다운로드 방법 태스크 코드 다운로드 모션 파일 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-3무선-조종"
	},
	"3079": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": "보행 드로이드 제작 3(무선 조종)",
		"header3": "동작 확인",
		"content": "다운로드한 태스크 코드를 PLAY 시킵니다 RC 100 을 이용하여 전진 후진 좌회전 우회전으로 조종하면서 원하는 방향으로 이동하는지 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#보행-드로이드-제작-3무선-조종"
	},
	"3080": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "",
		"content": "구 행동제어 프로그래머로 작성한 프로그램 bpg 을 신 로보플러스 태스크 용 태스크 코드 tsk 로 바꾸는 방법에 대한 설명입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#bpg를-tsk로-변환"
	},
	"3081": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "로보플러스 태스크로 .bpg 파일 열기",
		"content": "파일 열기로 bpg 열기 메뉴 파일 열기 또는 단축키 Ctrl 또는 도구 모음 중 열기 버튼 눌러 파일 선택 끌어 놓기 Drag amp Drop 로 bpg 열기 bpg 파일을 끌어다가 로보플러스 태스크 위에 던져 놓으면 됩니다 ockquote bpg 파일을 열었을 경우 뜨는 알림창 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#bpg를-tsk로-변환"
	},
	"3082": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "로보플러스 태스크의 명령어를 행동제어 프로그래머 1.0 문법으로 표기",
		"content": "로보플러스 태스크 명령어의 사용법과 행동제어 프로그래머 사용법을 숙지 후 아래 내용을 확인하세요 프로그램 시작 프로그램 시작의 자세한 사용법은 여기를 참고하세요 기존의 시작 과 동일 프로그램 시작의 구간 끝 는 기존의 종료 와 동일 로보플러스 태스크 행동제어 프로그래머 프로그램 강제 종료 프로그램 강제 종료의 자세한 사용법은 여기를 참고하세요 기존의 종료 명령어의 인식표로 점프하는 코드와 동일 로보플러스 태스크 행동제어 프로그래머 구간 시작 과 구간 끝 구간 시작 끝의 자세한 사용법은 여기를 참고하세요 새로 추가 됨 기존 행동제어 프로그래머 에서는 없던 개념 주석이나 메모 주석의 자세한 사용법은 여기를 참고하세요 기존의 설명 에 해당 됨 동작에 아무런 영향을 미치지 않음 로보플러스 태스크 행동제어 프로그래머 계산 산술 연산 및 비트 연산 계산의 자세한 사용법은 여기를 참고하세요 기존의 계산 과 동일 로보플러스 태스크 행동제어 프로그래머 로드 값 입력하기 로드의 자세한 사용법은 여기를 참고하세요 기존의 로드 LOAD 와 동일 로보플러스 태스크 행동제어 프로그래머 레이블 점프할 위치 레이블의 자세한 사용법은 여기를 참고하세요 기존의 인식표 에 해당 됨 단 행동제어 프로그래머 에서와 같이 호출 할 수는 없음 점프만 가능 로보플러스 태스크 행동제어 프로그래머 점프 goto 점프의 자세한 사용법은 여기를 참고하세요 기존의 점프 JUMP 와 동일 로보플러스 태스크 행동제어 프로그래머 만약 아니면 만약 else 아니면 else 만약 아니면 만약 아니면의 자세한 사용법은 여기를 참고하세요 기존의 만약 IF 아니면 만약 ELSE IF 아니면 ELSE 과 동일 로보플러스 태스크 행동제어 프로그래머 기존의 그리고 AND 후에 또한 만약 CONT IF 이 오는 경우는 amp amp 로 바뀌었음 기존의 또는 OR 후에 또한 만약 CONT IF 이 오는 경우는 로 바뀌었음 로보플러스 태스크 행동제어 프로그래머 무조건 반복 무조건 반복의 자세한 사용법은 여기를 참고하세요 인식표와 점프 JUMP 를 사용하여 특정 구간을 무조건 반복해 실행하는 코드와 동일합니다 로보플러스 태스크 행동제어 프로그래머 조건 반복 조건 조건 반복의 자세한 사용법은 여기를 참고하세요 인식표와 점프 JUMP 를 사용하여 조건에 따라 특정 구간을 반복해 실행하는 코드와 동일합니다 로보플러스 태스크 행동제어 프로그래머 횟수 반복 횟수만큼 반복의 자세한 사용법은 여기를 참고하세요 변수를 사용하여 지정된 횟수만큼 특정 구간을 반복해 실행하는 코드와 동일합니다 로보플러스 태스크 행동제어 프로그래머 반복 끝내기 break 반복 끝내기의 자세한 사용법은 여기를 참고하세요 반복되는 구문의 바로 다음 인식표로 점프하는 코드와 동일하게 사용됩니다 로보플러스 태스크 행동제어 프로그래머 조건 대기 실행문 없는 조건 반복 조건 대기의 자세한 사용법은 여기를 참고하세요 조건이 참 일 경우 자신의 인식표로 점프하는 코드와 동일하게 사용됩니다 로보플러스 태스크 행동제어 프로그래머 콜백 callback 콜백의 자세한 사용법은 여기를 참고하세요 새로 추가 됨 기존 행동제어 프로그래머 에서는 없던 개념 함수 만들기 함수 호출 함수 만들기 함수 호출의 자세한 사용법은 여기를 참고하세요 함수는 기존의 인식표와 복귀 RETURN 로 이루어진 서브루틴과 같습니다 로보플러스 태스크 에서 함수는 프로그램 시작이 소유하는 구간 와 로 묶인 부분 밖에 위치해야 합니다 로보플러스 태스크 행동제어 프로그래머 함수 강제 종료 return 함수 강제 종료의 자세한 사용법은 여기를 참고하세요 기존의 복귀 RETURN 의 인식표로 점프 JUMP 하는 코드와 동일 로보플러스 태스크 행동제어 프로그래머 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#bpg를-tsk로-변환"
	},
	"3083": {
		"product": "바이올로이드 종합",
		"header1": "튜토리얼",
		"header2": ".bpg를 .tsk로 변환",
		"header3": "동영상",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#bpg를-tsk로-변환"
	},
	"3084": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#다운로드"
	},
	"3085": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "태스크 코드 다운로드",
		"header3": "",
		"content": "바이올로이드 초급 종합 키트에서 사용되는 제어기인 CM 에 로보플러스 프로그램을 사용하기 위해서는 반드시 펌웨어 업데이트가 필요합니다 펌웨어 업데이트 방법은 로보프러스 매니저의 펌웨어 업데이트를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#태스크-코드-다운로드"
	},
	"3086": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "태스크 코드 다운로드",
		"header3": "태스크 코드 다운로드 준비",
		"content": "다운로드 할 태스크 코드 파일 tsk 을 RoboPlus Task에서 불러 옵니다 태스크 코드 파일을 더블클릭하여 열 수 있습니다 RoboPlus Task 의 파일 열기 기능으로 열 수 있습니다 마우스를 이용하여 파일을 RoboPlus Task 위로 드래그 앤 드롭 Drag amp Drop 을 통해 열 수 있습니다 USB2Dynamixel 을 이용하여 PC 와 제어기를 연결합니다 제어기의 전원을 켭니다 전원을 켜는 방법은 각 제어기 정보를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#태스크-코드-다운로드"
	},
	"3087": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "태스크 코드 다운로드",
		"header3": "태스크 코드 다운로드",
		"content": "PC 와 제어기가 연결되어야 합니다 태스크 코드를 다운로드하기 위해서는 PC 와 제어기가 연결되어야 합니다 연결 방법은 각 제어기 정보를 참고하세요 사용할 통신 포트를 선택해야 합니다 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다 RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다 PC 와 제어기가 연결되어 있는지 확인합니다 연결 방법은 각 제어기 정보를 참고하세요 제어기의 전원이 켜져 있는지 확인합니다 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다 다운로드 메뉴를 선택합니다 만약 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다 룰 체크 에러 메시지 확인 다운로드를 진행합니다 만약 다운로드에 실패했다면 처음부터 다시 시도합니다 태스크 코드 Task Code 를 실행합니다 로봇의 동작을 실행 합니다 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다 태스크 코드 실행 방법은 각 제어기 정보를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#태스크-코드-다운로드"
	},
	"3088": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "모션 파일 다운로드",
		"header3": "",
		"content": "특정 파일 모션을 로봇 모션으로 바꿀 수 있습니다 다운로드 할 파일 모션을 엽니다 로봇을 연결합니다 다운로드 버튼을 누르고 완료되기를 기다립니다 파일 모션의 내용이 로봇 모션에 옮겨진 것을 확인합니다 로보플러스 프로그램 다운로드 CM 510 530 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#모션-파일-다운로드"
	},
	"3089": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#예제"
	},
	"3090": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "초급 레벨",
		"content": "관절 수 4개 이하의 로봇들입니다 초급 키트나 종합키트로 만들 수 있습니다 조립 방법 및 작동 방법은 초급키트와 종합키트의 조립서를 참고하세요 Robot Description 차단바 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 동작방법 CM 의 버튼을 누르면 차단바가 열립니다 CM 의 버튼을 누르면 차단바가 닫힙니다 다목적 계기판 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 동작방법 CM 의 버튼을 누르고 있으면 게이지 Gauge 의 속도가 점점 빨라집니다 CM 의 버튼을 누르고 있으면 게이지 Gauge 의 속도가 점점 느려집니다 소음 측정기 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 AX S1 ID 100 동작방법 센서에 감지된 소리의 크기만큼 게이지 Gauge 가 움직입니다 큰 소리가 날수록 게이지 Gauge 가 더 많이 움직여 소리의 크기를 측정할 수 있습니다 악어입 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID 관절모드 AX S1 ID 100 동작방법 센서의 전방에 손을 대면 입을 벌리고 손을 떼면 입을 다뭅니다 만약 입을 다물 때 입 사이에 물체가 있으면 다시 입을 벌립니다 10초 동안 물체가 감지되지 않으면 멜로디 소리를 냅니다 팬틸트 장치 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID 관절모드 동작방법 CM 의 버튼을 누르면 틸트 위 아래 관절이 위로 움직입니다 CM 의 버튼을 누르면 틸트 위 아래 관절이 아래로 움직입니다 CM 의 버튼을 누르면 팬 좌 우 관절이 우로 움직입니다 CM 의 버튼을 누르면 팬 좌 우 관절이 좌로 움직입니다 차량 출입 통제기 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID 관절모드 AX S1 ID 100 동작방법 센서에 물체가 감지되면 차단바가 수직으로 열립니다 센서에 물체가 감지되고 동시에 차단바가 밀리면 차단바가 수평으로 열립니다 센서에 물체가 감지되지 않으면 차단바가 닫힙니다 멜로디 차 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX S1 ID 100 동작방법 CM 의 버튼을 누르면 멜로디 소리를 내며 일정 거리를 앞으로 갑니다 CM 의 버튼을 누르면 멜로디 소리를 내며 일정 거리를 뒤로 갑니다 CM 의 버튼을 누르면 멜로디 소리를 내며 우회전 합니다 CM 의 버튼을 누르면 멜로디 소리를 내며 좌회전 합니다 로봇팔 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID 관절모드 동작방법 CM 의 버튼을 누르면 로봇 팔이 오른쪽으로 회전합니다 CM 의 버튼을 누르면 로봇 팔이 왼쪽으로 회전합니다 CM 의 버튼을 누르면 로봇 팔의 팔꿈치가 펴집니다 CM 의 버튼을 누르면 로봇 팔의 팔꿈치가 굽혀집니다 CM 의 시작 버튼과 버튼을 동시에 누르면 로봇 팔의 손목이 펴집니다 CM 의 시작 버튼과 버튼을 동시에 누르면 로봇 팔의 손목이 굽혀집니다 장애물 감지차 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX S1 ID 100 동작방법 주행 경로 상에 장애물을 설치해 놓고 장애물 감지차를 작동시킵니다 스스로 장애물을 인식하고 피해가면서 주행을 합니다 10 인사하는 펭귄 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 관절모드 AX S1 ID 100 동작방법 손을 머리의 전방에 대면 인사를 합니다 손을 머리의 오른쪽에 대면 오른손을 듭니다 손을 머리의 왼쪽에 대면 왼손을 듭니다 11 공격하는 오리 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID 관절모드 AX S1 ID 100 동작방법 머리의 전방에 손을 대면 부리로 공격을 합니다 머리의 오른쪽에 손을 대면 머리를 오른쪽으로 돌립니다 머리의 왼쪽에 손을 대면 머리를 왼쪽으로 돌립니다 12 낭떠러지 감지차 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX S1 ID 100 동작방법 주행 경로 상에 낭떠러지 장애물을 설치해 놓고 낭떠러지 감지차를 작동시킵니다 스스로 낭떠러지와 장애물을 인식하고 피해가면서 주행을 합니다 13 박수치는 펭귄 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 관절모드 AX S1 ID 100 동작방법 손을 머리 전방에 대면 인사를 합니다 박수를 치면 그 횟수만큼 따라서 박수를 칩니다 14 보행 드로이드 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 관절모드 AX S1 ID 100 동작방법 보행 경로 상에 장애물을 설치해 놓고 보행 드로이드를 작동시킵니다 스스로 장애물을 인식하고 피해가면서 두 발로 보행을 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#초급-레벨"
	},
	"3091": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "중급 레벨",
		"content": "관절 수 8개 이하의 로봇들입니다 바이올로이드 초급에 4개의 AX 12A 를 추가로 구입하거나 바이올로이드 종합으로 만들 수 있습니다 조립 방법 및 작동 방법은 바이올로이드 종합의 조립서를 참고하세요 Robot Description 집게 탐사차 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX 12 ID ID ID 관절모드 AX S1 ID 100 동작방법 주행 경로 상에 여러 크기의 장애물을 설치해 놓고 집게 탐사차를 작동시킵니다 장애물이 너무 크면 피해서 주행하는 것을 확인합니다 장애물이 적당한 크기면 들어서 옆으로 치워 놓고 주행하는 것을 확인합니다 포크레인 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID 바퀴모드 AX 12 ID ID ID ID 관절모드 AX S1 ID 100 동작방법 주행 경로 상에 장애물을 설치해 놓고 포크레인을 작동시킵니다 센서에 장애물이 감지되면 감지된 방향으로 회전한 후 로봇 팔로 굴삭 작업을 하는 것을 확인합니다 로봇 꽃 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID ID ID ID 관절모드 AX S1 ID 100 동작방법 밝은 곳에서는 꽃 잎을 펴고 춤추듯이 천천히 움직입니다 주위가 어두워지면 꽃잎을 오므립니다 아기 사슴 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID ID ID ID 관절모드 AX S1 ID 100 동작방법 아무 변화가 없을 때 아기 사슴은 앉아서 두리번거립니다 얼굴에 물체를 대면 그 물체를 계속 쫓아옵니다 거북이 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID ID ID ID ID 관절모드 AX S1 ID 100 동작방법 보행 경로 상에 장애물을 설치해 놓고 거북이를 작동시킵니다 거북이가 기어가다가 전방에 장애물을 만나면 피해가는 것을 확인합니다 거미 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID ID ID ID ID 관절모드 AX S1 ID 100 동작방법 보행 중에 머리 앞에 물체가 감지되면 공격합니다 보행 중에 머리 위에 물체가 감지되면 죽은 척 합니다 거웍 GerWalk 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID ID ID ID 관절모드 AX S1 ID 100 동작방법 보행 경로 상에 장애물을 설치해 놓고 거웍을 작동시킵니다 보행 중 전방에 장애물을 감지해서 피해갑니다 배틀 드로이드 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID ID ID ID ID ID 관절모드 AX S1 ID 100 동작방법 보행 경로 상에 장애물을 설치해 놓고 배틀 드로이드를 작동시킵니다 보행 중에 장애물을 만나면 양 팔로 공격합니다 배틀 드로이드가 넘어졌을 때 박수를 3번 이상 치면 스스로 일어납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#중급-레벨"
	},
	"3092": {
		"product": "바이올로이드 종합",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "고급 레벨",
		"content": "관절 수 18개 이하의 로봇들입니다 바이올로이드 종합으로 만들 수 있습니다 바이올로이드 초급의 경우 프레임세트와 14개의 AX 12 를 추가로 구매하면 만들 수 있습니다 조립 방법 및 작동 방법은 바이올로이드 종합의 조립서를 참고하세요 Robot Description 공룡 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID 15 관절모드 AX S1 ID 100 동작방법 보행 경로 상에 장애물을 설치해 놓고 공룡 로봇을 작동시킵니다 공룡 로봇이 장애물을 공격하는 것을 확인합니다 장애물이 없어지면 계속 걸어 갑니다 강아지 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID ID 17 관절모드 AX S1 ID 100 동작방법 주행 경로 상에 장애물을 설치해 놓고 강아지를 작동시킵니다 소리가 나면 장애물을 피해가면서 보행하는 것을 확인합니다 입을 만져주면 재롱을 부립니다 일정 시간이 지나도록 아무 변화가 없으면 앉아서 잠을 잡니다 킹 스파이더 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID 18 관절모드 AX S1 ID 100 동작방법 보행 중 장애물을 만나면 피해서 돌아다닙니다 전방에 가까운 곳에서 물체가 감지되면 공격합니다 위쪽에서 물체가 접근하면 몸을 움츠립니다 일정 시간 동안 아무 변화가 없으면 잠을 잡니다 휴머노이드 조립확인 태스크 코드 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download 동영상 다이나믹셀 설정값 AX 12 ID ID 18 관절모드 AX S1 ID 100 동작방법 CM 의 시작 버튼을 누르고 박수를 치면 춤을 추기 시작합니다 CM 의 버튼을 누르고 박수를 치면 따라 치고 전방에 물체가 감지되면 인사를 합니다 CM 의 버튼을 누르면 공격 자세를 취하다가 물체가 감지되면 공격을 합니다 CM 의 버튼을 누르면 스스로 장애물을 피하면서 걸어갑니다 로봇이 누웠을 때 박수를 3번 이상 치면 스스로 일어납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#고급-레벨"
	},
	"3093": {
		"product": "바이올로이드 종합",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#참고자료"
	},
	"3094": {
		"product": "바이올로이드 종합",
		"header1": "참고자료",
		"header2": "퓨즈 교체하기(CM-5)",
		"header3": "",
		"content": "CM 내부에는 과전류가 흘러서 회로가 망가지는 것을 막기 위한 퓨즈 Fuse 가 있습니다 퓨즈가 끊어지면 다음과 같은 증상이 나타납니다 CM 5가 SMPS로만 전원이 켜집니다 충전을 하기 위해 U버튼을 눌러도 LED가 깜박거리지 않습니다 참고 CM 에 사용되는 퓨즈는 일반 전파상에서 쉽게 구할 수 있습니다 퓨즈의 용량 220V 5A ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#퓨즈-교체하기cm-5"
	},
	"3095": {
		"product": "바이올로이드 종합",
		"header1": "참고자료",
		"header2": "다이나믹셀 관리하기",
		"header3": "",
		"content": "로봇 관절로 사용되는 다이나믹셀은 매우 많은 기능들을 내장하고 있습니다 여기서는 로봇을 만들면서 다이나믹셀의 설정을 바꾸는 방법에 대해 설명합니다 ID바꾸기 다이나믹셀의 ID는 다음과 같이 변경할 수 있습니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 ID를 바꾸려는 다이나믹셀을 클릭합니다 컨트롤 테이블의 ID 열을 클릭합니다 ID 목록 콤보박스를 클릭하면 현재 바꿀 수 있는 다이나믹셀의 ID를 볼 수 있습니다 바꾸고자 하는 ID를 선택하고 적용 버튼을 누르십시오 ID변경시 유의사항 RoboPlus Motion과 로보플러스 태스크에서 사용하기 위해서는 ID의 범위를 다음과 같은 범위 내로 설정해야 합니다 액츄에이터는 25 사이의 ID로 설정해야 합니다 AX S1은 100 109 사이의 ID로 설정해야 합니다 동작 모드 변경 다이나믹셀은 아래와 같은 가지 모드로 동작할 수 있습니다 바퀴 모드 일반 모터와 같이 360도 회전하는 모드 무한 회전 모드 관절 모드 일반적인 서보 모터와 같이 0도 300도 사이의 정해진 각도로 움직이는 모드 모드 변경 방법은 아래와 같이 RoboPlus Manager 를 통해 변경할 수 있으며 한 번 모드를 설정하면 전원을 차단해도 설정값이 유지됩니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 모드를 변경하려는 다이나믹셀을 클릭하고 컨트롤 테이블의 CW CCW 위치 제한 열을 클릭합니다 바퀴 모드를 설정하려면 CW CCW 위치 제한 컨트롤 테이블의 값을 모두 0으로 변경하면 됩니다 다음과 같이 바퀴 모드 버튼을 클릭하여 쉽게 설정할 수도 있습니다 다시 관절 모드로 설정하려면 CW CCW 위치 제한 컨트롤 테이블 값을 이외의 값으로 설정하면 됩니다 관절 모드 초기값은 CW 위치 제한 CCW 위치 제한 1023입니다 문제 해결 RoboPlus Manager에서 다이나믹셀을 찾을 수 없는 경우가 발생합니다 이런 경우는 다음과 같이 시도해보세요 다이나믹셀을 1개만 연결해서 ID가 중복되는지 확인해보세요 1개만 연결했을 때 왼쪽 리스트에 다이나믹셀이 보이면 ID가 중복될 가능성이 큽니다 ID 변경하기를 통해 ID를 바꿔 주시기 바랍니다 만약 다음 그림과 같이 리스트에서 다이나믹셀을 확인할 수 없다면 상세 검색 버튼을 누르시기 바랍니다 상세 검색 기능은 다이나믹셀의 통신 속도가 1Mbps로 설정되어 있지 않은 경우 속도를 1Mbps로 재설정하며 제어기에서 인식할 수 있도록 해 줍니다 위와 같은 방법으로도 문제가 해결되지 않는다면 다이나믹셀이 고장이 났을 가능성이 높습니다 구입처에 S를 의뢰하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#다이나믹셀-관리하기"
	},
	"3096": {
		"product": "바이올로이드 종합",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#지그비-무선-조종"
	},
	"3097": {
		"product": "바이올로이드 종합",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210과 사용법이 동일 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#지그비-무선-조종"
	},
	"3098": {
		"product": "바이올로이드 종합",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 RC 100 에 ZIG 100 모듈을 장착한 모습 CM 100 에 ZIG 110 모듈을 장착한 모습 CM 510 에 ZIG 110 모듈을 장착한 모습 CM 에 ZIG 100 모듈을 장착한 모습 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#지그비-무선-조종"
	},
	"3099": {
		"product": "바이올로이드 종합",
		"header1": "참고자료",
		"header2": "여러 대의 로봇 조종하기",
		"header3": "",
		"content": "사용자가 댄스나 공연데모를 할 때 여러 대의 로봇에 동시에 명령을 주는 방법입니다 ZIGBEE 모듈의 Broadcast 모드를 이용 하는것으로 로봇에게 동시에 명령을 줄 수 있습니다 바이올로이드 초급 종합 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 제어기를 사용하는 경우에는 제어기와 ZIG 100모듈을 연결합니다 로보플러스 매니저를 통해서 ZIG 100 모듈의 상대 로봇 무선 ID를 65535로 설정 합니다 Broadcast 채널을 따로 맞추지 않아도 통신이 가능합니다 RC 100을 이용해 직접 명령을 주거나 Zig2Serial을 이용해 PC에서 명령을 줄 수 있습니다 장치 채널 기본값습 채널 변경가능여부 CM 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 CM 5에 장착한 ZIG 100모듈의 경우에는 채널 변경이 불가능 합니다 따라서 사용자는 모두 채널 1번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능하므로 모든 채널을 일치시켜야 합니다 바이올로이드 프리미엄키트 CM 700 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 510 CM 700 제어기를 사용하는 경우에는 제어기와 ZIG 110 모듈을 연결합니다 로보플러스 매니저를 통해서 상대 로봇 무선 ID를 65535로 설정 합니다 제어기와 연결된 Zig 110의 경우에는 Broadcast 채널이 4번으로 되어 있기 때문에 Zig2Serial RC 100을 채널 4번으로 맞추셔야 합니다 RC 100 채널 바꾸는 방법 링크가기 Zig2Serial 채널 바꾸는 방법 링크가기 장치 채널 기본값습 채널 변경가능여부 CM 510 CM 530 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 제어기에 연결한 ZIG 110은 채널 변경이 불가능합니다 따라서 사용자는 모두 채널 4번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능 하므로 모든 채널을 일치 시켜야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/comprehensive/#여러-대의-로봇-조종하기"
	},
	"3100": {
		"product": "로보티즈 GP",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "고성능 다이나믹셀 AX 18F 하체 가 장착된 최고 성능의 휴머노이드 초경량 고강도의 알루미늄 프레임 적용 이동 중 방향전환과 고속 보행 등 뛰어난 운동 성능 보유 휴머노이드 격투 축구 및 다양한 기본 모션 제공 자이로 센서를 기반으로 한 자세 보정 기능 미션 수행이 가능한 그리퍼 세트 및 센서 기본 포함 무선 리모컨 포함 지그비 기본 내장 업그레이드된 전용 프로그래밍 소프트웨어 로보플러스 제공 디지털 패킷통신 제어 및 Daisy Chain 방식의 간단한 배선 정리 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#개요"
	},
	"3101": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#시작하기"
	},
	"3102": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "부품 목록",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#부품-목록"
	},
	"3103": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#작동하기"
	},
	"3104": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "프로그램 다운로드",
		"content": "제어기에는 최초 출하시 프로그램이 기본적으로 탑재되어 있습니다 기본 프로그램 페이지에서 동작시키고자 하는 타입에 맞는 태스크 코드와 모션 파일을 로봇에 다운로드 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#작동하기"
	},
	"3105": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "로봇 켜기",
		"content": "전원 스위치를 켜면 LED 가 깜빡이며 로봇이 켜집니다 MODE 버튼을 눌러 PLAY 에서 LED 가 깜빡이도록 합니다 MODE 버튼을 누를 때마다 LED 가 이동합니다 START 버튼을 누릅니다 PLAY 에서 LED 가 깜빡이지 않고 계속 켜져 있는지 확인하세요 LED 가 켜지지 않으면 전원 케이블이 제대로 연결되어 있는지 확인합니다 이상이 없으면 배터리를 충전하세요 충전하기 참조 로봇의 전원이 켜지지 않습니다 배터리가 제대로 연결되어 있나요 배터리가 충전되어 있나요 퓨즈가 끊어지진 않았나요 퓨즈 교체하기 를 참조하세요 배터리 잔량을 확인하고 싶어요 CM 530 의 전원을 켠 후 버튼을 누르면 LED 가 켜지는 갯수로 배터리 잔량을 확인할 수 있습니다 로봇 작동 중 경고음 삐리삐리 소리가 연속해서 들립니다 배터리를 거의 소모하였습니다 즉시 배터리를 충전하세요 충전하기 참조 충전하지 않고 계속 로봇을 작동시키면 잠시 후 로봇의 전원이 갑자기 꺼지면서 로봇에 충격이 갈 수 있으므로 주의하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#작동하기"
	},
	"3106": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "로봇의 기본 자세 확인하기(올바르게 조립되었는지 확인)",
		"content": "로봇이 아래와 같이 기본 자세를 취합니다 팔과 다리의 각도를 확인합니다 만약 그림과 다르다면 아래 로봇 작동하기의 조립 확인 모드에서 로봇의 조립 상태를 확인하세요 케이블이 다리 바깥으로 연결되었는지 확인하세요 참고 로봇에 손상을 줄 정도로 심각하게 조립이 잘못 되었을 경우 경고음이 울립니다 이와 동시에 문제가 있는 모터의 힘이 풀리며 LED 가 켜집니다 이는 로봇의 손상을 막기 위한 안전장치가 작동하는 것입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#작동하기"
	},
	"3107": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "로봇 조종하기",
		"content": "로봇을 켜고 PLAY 모드를 실행 한 후 버튼을 누르면 다음 모드가 실행 됩니다 축구 모드 격투 모드 퍼포먼스 모드 참고 기본적으로 로봇은 리모컨 RC 100 으로 조종합니다 모드 선택없이 리모컨으로 동작시키면 축구 모드가 자동선택 됩니다 리모컨 RC 100 작동 방법 POWER MODE 버튼을 1초 이상 누르면 전원이 켜집니다 리모컨의 버튼을 눌러 로봇을 조종합니다 보행 방향 버튼 Buttons Motion Buttons Motion 앞으로 가기 뒤로 가기 왼쪽으로 회전 오른쪽으로 회전 전진하며 왼쪽으로 회전 전진하며 오른쪽으로 회전 좌 이동 빠른 좌 이동 좌 이동하며 앞으로 좌 이동하며 뒤로 우 이동 빠른 우 이동 우 이동하며 앞으로 우 이동하며 앞으로 우 이동 하며 뒤로 기본 키 키 Buttons Motion Buttons Motion 앞으로 일어나기 뒤로 일어나기 축구 모드 모드변환 격투 모드 모드변환 퍼포먼스 모드 모드변환 축구 모드 슛 키 키 Buttons Motion Buttons Motion 왼발 전방 슛 오른발 전방 슛 왼발 후방 슛 오른발 후방 슛 왼발 좌슛 오른발 좌슛 왼발 우슛 오른발 우슛 수비 키 키 Buttons Motion Buttons Motion 막기 준비 제자리 막기 좌측 공 막기 우측 공 막기 격투 모드 공격 및 방어 키 키 Buttons Motion Buttons Motion 전방공격 방어자세 좌공격 우공격 상몸던지기공격 하몸던지기공격 좌강공격 우강공격 퍼포먼스 모드 퍼포먼스 키 키 Buttons Motion Buttons Motion 인사 물구나무 박수 2번 옆구르기 박수 337 팔굽혀펴기 조종모드에서 제어기에 IR수신기를 장착하고 RC 100으로 조종할 때 제어기의 Aux 버튼을 눌러 다음과 같이 리모콘의 채널을 설정할 수 있습니다 채널을 바꾸면 RC 100의 채널도 같이 바꿔 주어야 합니다 RC 100의 채널 변경은 RC 100의 채널 변경 방법 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#작동하기"
	},
	"3108": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "CM-510 IR 채널 설정 (Start U, L, D, )",
		"content": "Buttons Motion Start RC 100 채널 1로 설정 Start RC 100 채널 2로 설정 Start RC 100 채널 3로 설정 Start RC 100 채널 4로 설정 리모컨 조종이 잘 되지 않습니다 리모컨 조종 모드로 설정하세요 조립서를 보고 적외선 수신기가 제대로 연결되었는지 확인하세요 리모컨의 전원이 켜져 있는지 확인하세요 만약 전원이 켜지지 않는다면 배터리를 교체해 주세요 적외선 수신기를 향해 리모컨을 조종하세요 주위에 로봇을 조종하는 사람이 있지 않나요 무선 혼선이 생길 수 있습니다 여러 대의 로봇으로 축구 경기나 로봇 격투를 하고 싶어요 여러 대의 로봇을 혼선 없이 안정적으로 조종하려면 지그비 무선 모듈 ZIG 110 세트 을 장착해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#작동하기"
	},
	"3109": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "충전하기",
		"header3": "",
		"content": "STEM 키트는 리튬폴리머로도 작동할 수 있으며 쇼핑몰 http www robotis com shop 에서 별도로 구매합니다 로봇 작동 중 배터리 경고음이 울리면 배터리를 충전합니다 충전이 시작되면 충전기의 붉은색 LED가 깜빡입니다 충전이 완료되면 녹색 LED가 켜집니다 배터리 분리 충전기 연결 충전 충전중 붉은색 LED 충전완료 녹색 LED SMPS 를 로봇에 직접 연결하면 외부 전원으로 로봇을 구동할 수도 있습니다 배터리에는 충전용 커넥터와 로봇 작동용 커넥터가 연결되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#충전하기"
	},
	"3110": {
		"product": "로보티즈 GP",
		"header1": "시작하기",
		"header2": "충전하기",
		"header3": "충전 시간",
		"content": "완전 방전시 충전 시간 1시간 1시간 30분 완전 방전 상태에서 너무 오랜시간 충전하지 않으면 충전지의 수명이 급격히 짧아질 수 있습니다 충전지의 상태에 따라 충전 시간이 다를 수 있습니다 충전 및 동작 시간이 너무 짧다면 충전지의 수명이 다 되었을 수 있습니다 보관시 주의사항 배터리를 충전기나 로봇에 연결된 상태로 보관하지 마세요 오랫동안 사용 안할시 절반정도 충전된 상태로 보관해 주세요 온도나 습도가 높은 곳에 보관하지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#충전하기"
	},
	"3111": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#튜토리얼"
	},
	"3112": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "",
		"content": "학습 목표 화면에 1과 2를 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#화면-출력하기"
	},
	"3113": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 작성",
		"content": "로보플러스 태스크 프로그램 실행 아래 그림에서와 같이 윈도우에서 시작 모든 프로그램 ROBOTIS RoboPlus Software RoboPlus Task 를 선택하면 로보플러스 태스크 가 실행됩니다 로보플러스 태스크 초기 화면 제어기 선택 빈 줄을 선택한 후 더블클릭 하거나 Enter 키를 누르면 제어기 선택 대화창이 나타납니다 자신의 제어기를 선택한 후 확인 버튼을 누릅니다 프로그램 시작 만들기 제어기 선택 창에 이어서 뜨는 명령어 종류 선택 창에서 프로그램 시작 을 선택하면 RoboPlus Task 에 프로그램 시작 이 만들어 집니다 무조건 반복 명령어 입력 숫자를 반복하여 화면에 출력하기 위하여 무조건 반복 명령어를 사용합니다 명령줄 만들기 프로그램 시작의 와 사이 구간의 빈 줄을 더블클릭 하거나 선택 후 Enter 키를 누르면 명령어 종류 선택 창이 뜹니다 명령어 종류 중 반복문 무조건 반복 을 선택합니다 로드 명령어 입력 화면에 출력할 값을 화면 출력 으로 입력하기 위해 로드 명령어를 사용합니다 무조건 반복의 와 사이 구간의 빈 줄에 실행문 로드 값 입력하기 를 선택하여 입력합니다 숫자 을 화면 출력 으로 로드 로드 명령어의 파라미터 중 좌측 파라미터 를 선택합니다 파라미터에 대한 설명 좌측 파라미터는 우측 파라미터 값을 입력할 곳입니다 좌측 파라미터 를 더블클릭 하거나 클릭 후 Enter 키를 누르면 아래와 같은 파라미터 선택 창 이 뜹니다 제어기 화면 출력 을 선택하고 확인 버튼을 누릅니다 같은 방법으로 우측 파라미터 에는 상수 숫자 을 입력합니다 로드 명령어의 파라미터를 모두 입력한 화면은 아래와 같습니다 숫자 를 화면 출력 후 줄 바꿈 으로 로드 화면 출력 아래의 무조건 반복의 구간 끝 를 선택하고 스페이스 Space 키를 눌러 빈 줄을 추가한 후 위 에서와 동일한 방법으로 로드 명령어를 추가하고 이번에는 제어기 화면 출력 후 줄 바꿈 에 상수 숫자 를 로드합니다 최종 완성된 태스크 코드는 아래와 같습니다 태스크 코드 저장 하기 Ctrl 를 누르거나 도구 모음의 저장 버튼을 눌러 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#화면-출력하기"
	},
	"3114": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 다운로드",
		"content": "태스크 코드 작성 에서 작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#화면-출력하기"
	},
	"3115": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "실행 및 결과 확인",
		"content": "프로그램 출력용 모니터 창 띄우기 프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 띄워야 합니다 프로그램 출력용 모니터 창을 띄우는 방법은 아래와 같이 여러 가지가 있습니다 프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭 도구 모음에서 프로그램 출력 보기 버튼을 클릭 프로그램 메뉴의 프로그램 출력 보기 메뉴 선택 혹은 단축키 F5 프로그램 실행하기 제어기 전원 스위치를 켜면 모드 LED 가 깜빡이고 있는 대기 상태가 됩니다 이 때 모드 MODE 버튼을 눌러 모드 LED 가 PLAY 에 위치하도록 한 후 시작 START 버튼을 누르면 다운로드 한 태스크 코드가 실행됩니다 프로그램 출력용 모니터에 숫자 과 가 출력되는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#화면-출력하기"
	},
	"3116": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "",
		"content": "학습 목표 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 AUX LED 가 꺼지게 합니다 START 버튼을 누르면 종료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#버튼과-led"
	},
	"3117": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 작성",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#버튼과-led"
	},
	"3118": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 다운로드",
		"content": "작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#버튼과-led"
	},
	"3119": {
		"product": "로보티즈 GP",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "실행 및 결과 확인",
		"content": "제어기에 다운받은 프로그램을 실행하고 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 LED 가 꺼지는 것을 확인합니다 START 버튼을 눌러 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#버튼과-led"
	},
	"3120": {
		"product": "로보티즈 GP",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#다운로드"
	},
	"3121": {
		"product": "로보티즈 GP",
		"header1": "다운로드",
		"header2": "기본 프로그램",
		"header3": "",
		"content": "파일 종류 다운로드 휴머노이드 기본 태스크 코드 Download 휴머노이드 기본 모션 파일 Download 조립서 PDF 파일 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#기본-프로그램"
	},
	"3122": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#참고자료"
	},
	"3123": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "퓨즈 교체하기",
		"header3": "",
		"content": "CM 510 530 에는 과전류가 흘러서 회로가 망가지는 것을 방지하기 위한 퓨즈 Fuse 가 있습니다 만약 CM 510 530 이 배터리로는 전원이 켜지지 않고 SMPS로만 전원이 켜진다면 퓨즈가 끊어진 것이니 교체해 주어야 합니다 CM 510 CM530 의 퓨즈 사이즈는 아래와 같으며 용량은 125V 5A 10A 사이의 제품을 사용하시면 됩니다 퓨즈의 교체 방법 CM 510 530 뒷면의 퓨즈를 확인한다 핀셋 등으로 퓨즈를 새 것으로 교체한다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#퓨즈-교체하기"
	},
	"3124": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "다이나믹셀 관리하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#다이나믹셀-관리하기"
	},
	"3125": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#참고자료"
	},
	"3126": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "퓨즈 교체하기",
		"header3": "",
		"content": "CM 510 530 에는 과전류가 흘러서 회로가 망가지는 것을 방지하기 위한 퓨즈 Fuse 가 있습니다 만약 CM 510 530 이 배터리로는 전원이 켜지지 않고 SMPS로만 전원이 켜진다면 퓨즈가 끊어진 것이니 교체해 주어야 합니다 CM 510 CM530 의 퓨즈 사이즈는 아래와 같으며 용량은 125V 5A 10A 사이의 제품을 사용하시면 됩니다 퓨즈의 교체 방법 CM 510 530 뒷면의 퓨즈를 확인한다 핀셋 등으로 퓨즈를 새 것으로 교체한다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#퓨즈-교체하기"
	},
	"3127": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "다이나믹셀 관리하기",
		"header3": "",
		"content": "로봇 관절로 사용되는 다이나믹셀은 매우 많은 기능들을 내장하고 있습니다 여기서는 로봇을 만들면서 다이나믹셀의 설정을 바꾸는 방법에 대해 설명합니다 ID바꾸기 다이나믹셀의 ID는 다음과 같이 변경할 수 있습니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 ID를 바꾸려는 다이나믹셀을 클릭합니다 컨트롤 테이블의 ID 열을 클릭합니다 ID 목록 콤보박스를 클릭하면 현재 바꿀 수 있는 다이나믹셀의 ID를 볼 수 있습니다 바꾸고자 하는 ID를 선택하고 적용 버튼을 누르십시오 ID변경시 유의사항 RoboPlus Motion과 로보플러스 태스크에서 사용하기 위해서는 ID의 범위를 다음과 같은 범위 내로 설정해야 합니다 액츄에이터는 25 사이의 ID로 설정해야 합니다 AX S1은 100 109 사이의 ID로 설정해야 합니다 동작 모드 변경 다이나믹셀은 아래와 같은 가지 모드로 동작할 수 있습니다 바퀴 모드 일반 모터와 같이 360도 회전하는 모드 무한 회전 모드 관절 모드 일반적인 서보 모터와 같이 0도 300도 사이의 정해진 각도로 움직이는 모드 모드 변경 방법은 아래와 같이 RoboPlus Manager 를 통해 변경할 수 있으며 한 번 모드를 설정하면 전원을 차단해도 설정값이 유지됩니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 모드를 변경하려는 다이나믹셀을 클릭하고 컨트롤 테이블의 CW CCW 위치 제한 열을 클릭합니다 바퀴 모드를 설정하려면 CW CCW 위치 제한 컨트롤 테이블의 값을 모두 0으로 변경하면 됩니다 다음과 같이 바퀴 모드 버튼을 클릭하여 쉽게 설정할 수도 있습니다 다시 관절 모드로 설정하려면 CW CCW 위치 제한 컨트롤 테이블 값을 이외의 값으로 설정하면 됩니다 관절 모드 초기값은 CW 위치 제한 CCW 위치 제한 1023입니다 문제 해결 RoboPlus Manager에서 다이나믹셀을 찾을 수 없는 경우가 발생합니다 이런 경우는 다음과 같이 시도해보세요 다이나믹셀을 1개만 연결해서 ID가 중복되는지 확인해보세요 1개만 연결했을 때 왼쪽 리스트에 다이나믹셀이 보이면 ID가 중복될 가능성이 큽니다 ID 변경하기를 통해 ID를 바꿔 주시기 바랍니다 만약 다음 그림과 같이 리스트에서 다이나믹셀을 확인할 수 없다면 상세 검색 버튼을 누르시기 바랍니다 상세 검색 기능은 다이나믹셀의 통신 속도가 1Mbps로 설정되어 있지 않은 경우 속도를 1Mbps로 재설정하며 제어기에서 인식할 수 있도록 해 줍니다 위와 같은 방법으로도 문제가 해결되지 않는다면 다이나믹셀이 고장이 났을 가능성이 높습니다 구입처에 S를 의뢰하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#다이나믹셀-관리하기"
	},
	"3128": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210과 사용법이 동일 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#지그비-무선-조종"
	},
	"3129": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 RC 100 에 ZIG 100 모듈을 장착한 모습 CM 100 에 ZIG 110 모듈을 장착한 모습 CM 510 에 ZIG 110 모듈을 장착한 모습 CM 에 ZIG 100 모듈을 장착한 모습 ZIG 110A Set 장착 방법 GP ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#지그비-무선-조종"
	},
	"3130": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "여러 대의 로봇 조종하기",
		"header3": "",
		"content": "사용자가 댄스나 공연데모를 할 때 여러 대의 로봇에 동시에 명령을 주는 방법입니다 ZIGBEE 모듈의 Broadcast 모드를 이용 하는것으로 로봇에게 동시에 명령을 줄 수 있습니다 바이올로이드 초급 종합 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 제어기를 사용하는 경우에는 제어기와 ZIG 100모듈을 연결합니다 로보플러스 매니저를 통해서 ZIG 100 모듈의 상대 로봇 무선 ID를 65535로 설정 합니다 Broadcast 채널을 따로 맞추지 않아도 통신이 가능합니다 RC 100을 이용해 직접 명령을 주거나 Zig2Serial을 이용해 PC에서 명령을 줄 수 있습니다 장치 채널 기본값습 채널 변경가능여부 CM 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 CM 5에 장착한 ZIG 100모듈의 경우에는 채널 변경이 불가능 합니다 따라서 사용자는 모두 채널 1번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능하므로 모든 채널을 일치시켜야 합니다 바이올로이드 프리미엄키트 CM 700 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 510 CM 700 제어기를 사용하는 경우에는 제어기와 ZIG 110 모듈을 연결합니다 로보플러스 매니저를 통해서 상대 로봇 무선 ID를 65535로 설정 합니다 제어기와 연결된 Zig 110의 경우에는 Broadcast 채널이 4번으로 되어 있기 때문에 Zig2Serial RC 100을 채널 4번으로 맞추셔야 합니다 RC 100 채널 바꾸는 방법 링크가기 Zig2Serial 채널 바꾸는 방법 링크가기 장치 채널 기본값습 채널 변경가능여부 CM 510 CM 530 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 제어기에 연결한 ZIG 110은 채널 변경이 불가능합니다 따라서 사용자는 모두 채널 4번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능 하므로 모든 채널을 일치 시켜야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#여러-대의-로봇-조종하기"
	},
	"3131": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "센서 추가하기",
		"header3": "",
		"content": "바이올로이드 프리미엄 혹은 로보티즈 GP 에서는 CM 510의 센서연결부를 통해 적외선센서 접촉 센서 절대 거리 센서 를 추가로 달 수 있습니다 각 센서에 대한 자세한 정보는 위의 텍스트에 각 센서에 대한 이름을 클릭하시면 해당 페이지로 이동하여 보실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#센서-추가하기"
	},
	"3132": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "센서 추가하기",
		"header3": "적외선 센서",
		"content": "적외선 센서 활용방안 적외선 센서는 로봇의 앞에 장애물을 감지 할 수 있습니다 로봇이 보행이나 이동 할 때 앞에 있는 물체를 감지 하기 하는 용도 등으로 활용 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#센서-추가하기"
	},
	"3133": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "센서 추가하기",
		"header3": "접촉 센서",
		"content": "접촉 센서 활용 방안 접촉 센서는 물체와 로봇이 접촉하는 것을 감지 하는 센서 입니다 예를 들어 사람이 로봇의 접촉 센서를 누르게 되면 로봇에 어떤 행동을 하게 하는 등의 용도 등으로 활용 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#센서-추가하기"
	},
	"3134": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "센서 추가하기",
		"header3": "절대 거리 센서(DMS)",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#센서-추가하기"
	},
	"3135": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "사용자 센서 제작",
		"header3": "",
		"content": "CM 510 CM 530에서는 ADC포트와 OUT포트를 이용하여 간단히 제어가 가능한 사용자 센서를 제작할 수 있습니다 주의 만약 잘못된 회로를 구성하여 CM 510의 외부 포트에 사용자 장치를 연결하면 회로가 손상될 수 있으므로 회로에 대한 지식을 먼저 습득하시기 바랍니다 notice warning CM 510의 외부 포트 핀 구성은 다음과 같습니다 OUT 5V 출력 가능 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND NC 사용하지 않음 CM 530의 외부 포트 핀 구성은 다음과 같습니다 OUT1 3V 출력 가능 최대 허용 전류 3A 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND OUT2 3V 출력 가능 최대 허용 전류 3A 참고 외부센서 사용시 5핀케이블을 사용해 주세요 5핀 케이블 은 로보티즈 쇼핑몰에서 구매하실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#사용자-센서-제작"
	},
	"3136": {
		"product": "로보티즈 GP",
		"header1": "참고자료",
		"header2": "사용자 센서 제작",
		"header3": "사용자 장치 제어",
		"content": "외부 출력 제어 다음과 같은 LED 회로를 구성한다면 1번 핀을 제어하여 LED를 껐다 켤 수 있는 장치를 만들 수 있습니다 제어기종류 및 LED의 종류에 따라 저항의 크기를 조정해야 합니다 먼저 로드 계산 등의 쓰기 가능 파라미터에 사용자 장치를 선택하고 장치가 연결된 포트를 설정합니다 이 후 읽기 가능 파라미터에 포트 값 상수를 이용하여 High신호를 설정합니다 위와 같은 코드가 실행되면 PORT3에 연결된 장치의 OUT 포트에 신호가 발생하게 되며 연결된 LED가 켜집니다 ADC값 읽어오기 로봇에서 센서로 사용되는 IR센서 거리센서 등 여러가지 장치들은 대부분 아날로그 출력을 지원합니다 이러한 센서들을 외부포트를 지원하는 제어기에 연결하여 이용할 수 있습니다 물론 센서는 사용자가 직접 회로를 제작하여 이용할 수 있으며 시중에서 판매하는 것을 이용할 수도 있습니다 다음 그림은 Tilt센서입니다 5V입력을 받으며 센서의 기울어짐에 따라 그 값을 아날로그 신호로 출력합니다 Tilt센서의 왼쪽 핀은 5V 입력핀 가운데 핀은 아날로그 신호 출력핀 오른쪽은 그라운드핀입니다 CM 510의 외부 포트에 서로 매칭되는 핀을 연결하여 주면 바로 사용할 수 있습니다 CM 510의 외부 포트 핀 정보를 참고하여 다음과 같이 연결하면 됩니 다 다음 예제와 같이 센서의 아날로그 출력값을 읽어와 로봇의 동작에 응용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/gp/#사용자-센서-제작"
	},
	"3137": {
		"product": "바이올로이드",
		"header1": "바이올로이드 초급키트",
		"header2": "",
		"header3": "",
		"content": "초급 레벨 로봇 예제 다운받으러 가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/#바이올로이드-초급키트"
	},
	"3138": {
		"product": "바이올로이드",
		"header1": "바이올로이드 종합키트",
		"header2": "",
		"header3": "",
		"content": "초급 레벨 로봇 예제 다운받으러 가기 중급 레벨 로봇 예제 다운받으러 가기 고급 레벨 로봇 예제 다운받으러 가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/#바이올로이드-종합키트"
	},
	"3139": {
		"product": "바이올로이드",
		"header1": "로보티즈 STEM",
		"header2": "",
		"header3": "",
		"content": "로보티즈 STEM Level 로봇 예제 다운받으러 가기 로보티즈 STEM Level 로봇 예제 다운받으러 가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/#로보티즈-stem"
	},
	"3140": {
		"product": "바이올로이드",
		"header1": "로보티즈 프리미엄",
		"header2": "",
		"header3": "",
		"content": "로보티즈 프리미엄 기본 예제 다운 받으러가기 초급 레벨 로봇 예제 다운받으러 가기 중급 레벨 로봇 예제 다운받으러 가기 고급 레벨 로봇 예제 다운받으러 가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/#로보티즈-프리미엄"
	},
	"3141": {
		"product": "바이올로이드",
		"header1": "로보티즈 GP",
		"header2": "",
		"header3": "",
		"content": "로보티즈 GP 기본 예제 다운 받으러가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/#로보티즈-gp"
	},
	"3142": {
		"product": "로보티즈 프리미엄",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "우수한 보행 성능의 휴머노이드 예제 보행 중 스스로 자세 보정 자이로 센서 절대 거리 센서 적외선 센서 등 다양한 센서 탑재 무선 리모컨 포함 적외선 통신 기본 내장 지그비 추가 가능 업그레이드 된 전용 프로그래밍 소프트웨어 로보플러스 제공 특수 디자인 된 반투명의 휴머노이드 전용 스킨 디지털 패킷 통신 Daisy Chain 으로 간단한 배선 정리 만능 결합 구조로 다양한 형태의 로봇을 손쉽게 제작 가능 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#개요"
	},
	"3143": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#시작하기"
	},
	"3144": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "부품 목록",
		"header3": "",
		"content": "CM 510 AX 12A 거리 센서 적외선 센서 자이로 센서 USB2Dynamixel ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#부품-목록"
	},
	"3145": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#작동하기"
	},
	"3146": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "프로그램 다운로드",
		"content": "제어기에는 최초 출하 시 타입 에 맞는 프로그램이 기본적으로 탑재되어 있습니다 기본 프로그램 항목에서 동작시키고자 하는 타입에 맞는 태스크 코드와 모션 파일을 로봇에 다운로드 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#작동하기"
	},
	"3147": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "로봇 켜기",
		"content": "전원 스위치를 켜면 LED 가 깜빡이며 로봇이 켜집니다 MODE 버튼을 눌러 PLAY 에서 LED 가 깜빡이도록 합니다 MODE 버튼을 누를 때마다 LED 가 이동합니다 START 버튼을 누릅니다 PLAY 에서 LED 가 깜빡이지 않고 계속 켜져 있는지 확인하세요 LED 가 켜지지 않으면 전원 케이블이 제대로 연결되어 있는지 확인합니다 이상이 없으면 배터리를 충전하세요 충전하기 참조 로봇의 전원이 켜지지 않습니다 배터리가 제대로 연결되어 있나요 배터리가 충전되어 있나요 퓨즈가 끊어지진 않았나요 퓨즈 교체하기 를 참조하세요 배터리 잔량을 확인하고 싶어요 CM 530 의 전원을 켠 후 버튼을 누르면 LED 가 켜지는 갯수로 배터리 잔량을 확인할 수 있습니다 로봇 작동 중 경고음 삐리삐리 소리가 연속해서 들립니다 배터리를 거의 소모하였습니다 즉시 배터리를 충전하세요 충전하기 참조 충전하지 않고 계속 로봇을 작동시키면 잠시 후 로봇의 전원이 갑자기 꺼지면서 로봇에 충격이 갈 수 있으므로 주의하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#작동하기"
	},
	"3148": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "조립 확인하기",
		"content": "로봇이 아래와 같이 기본 자세를 취합니다 각 타입 별 기본 자세와 멜로디를 확인하세요 기본 자세를 취한 후 1초간 안정된 상태로 로봇을 유지시킵니다 ockquote 이는 보행 시 자세 보정을 위해 자이로 센서의 기준값을 설정하는 것입니다 팔과 다리의 각도를 확인합니다 만약 그림과 다르다면 아래 로봇 작동하기의 조립 확인 모드에서 로봇의 조립 상태를 확인하세요 케이블이 다리 바깥으로 연결되었는지 확인하세요 로봇에 손상을 줄 정도로 심각하게 조립이 잘못되었을 경우 경고음이 울립니다 이와 동시에 문제가 있는 모터의 힘이 풀리며 LED가 켜집니다 이는 로봇의 손상을 막기위한 안전장치가 작동하는 것입니다 로봇의 기본 자세가 이상하고 동작이 비정상적입니다 기본 자세가 이상할 경우 ockquote 조립 확인 모드로 들어가서 각 관절별로 조립 상태를 확인합니다 자율 주행 모드에서 장애물을 인식하지 못할 경우 ockquote 절대 거리 센서의 케이블이 제대로 연결되어 있는지 확인합니다 로봇이 보행 중 쉽게 넘어지거나 걸음걸이가 불안합니다 로봇의 자세를 감지하는 자이로 센서가 제대로 동작하지 않습니다 ockquote 조립서를 보고 자이로 센서가 올바르게 조립되었는지 확인합니다 경고음이 울리며 일부 모터의 LED 가 켜지고 토크가 풀려 있습니다 모터의 프레임을 정해진 위치에 올바로 조립하지 않았거나 로봇의 관절이 제대로 움직이지 못할 때 로봇의 심각한 손상을 방지하기 위해 안전장치가 작동하는 것입니다 ockquote LED 가 켜진 모터를 찾아 조립서를 보고 제대로 조립되었는지 확인합니다 전선이나 다른 물체가 관절에 끼어 있지 않은지 살펴봅니다 조립 확인 모드를 참고하세요 로봇이 기본 자세를 취할 때 로봇의 타입과 해당 멜로디가 일치하지 않습니다 ockquote 모터의 ID 10번을 정해진 위치에 제대로 조립했는지 배선이 빠져 있지 않은지 확인하세요 로봇 타입 도 도레 도레미 도레미 반복 TYPE 올바르게 조립 됨 ID 10의 배선을 확인 ID 8의 배선을 확인 일부 모터의 케이블이 빠져 있습니다 조립서를 보고 배선을 다시 확인하세요 TYPE 올바르게 조립 됨 ID 10번 모터를 연결해야 할 곳에 8이 잘못 연결됨 일부 모터의 케이블이 빠져 있습니다 조립서를 보고 배선을 다시 확인하세요 TYPE ID 8번 모터를 연결해야 할 곳에 10이 잘못 연결 됨 올바르게 조립 됨 일부 모터의 케이블이 빠져 있습니다 조립서를 보고 배선을 다시 확인하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#작동하기"
	},
	"3149": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "로봇 조종하기",
		"content": "로봇을 켜고 PLAY 모드를 실행 한 후 버튼을 누르면 다음 모드가 실행 됩니다 리모콘 조종 모드 데모 모드 자율 보행 모드 조립 확인 모드 참고 모드를 선택하지 않고 리모컨 RC 100 버튼을 누르면 리모컨 조종 모드로 동작합니다 리모콘 조종 모드 리모컨 RC 100 으로 로봇을 조종할 수 있습니다 리모컨 RC 100 작동 방법 POWER MODE 버튼을 1초 이상 누르면 전원이 켜집니다 리모컨의 버튼을 눌러 로봇을 조종합니다 보행 방향 버튼 자세 바꿈 방향 버튼 데모 동작 방향 버튼 축구 동작 방향 버튼 격투 동작 방향 버튼 보행 방향 버튼 Buttons Motion 앞으로 가기 뒤로 가기 왼쪽으로 회전 오른쪽으로 회전 전진하며 왼쪽으로 회전 왼쪽 옆걸음 전진하며 오른쪽으로 회전 오른쪽 옆걸음 자세 바꿈 방향 버튼 Buttons Motion 엎드려 일어나기 등을 보이고 넘어졌을 때 누워 일어나기 가슴을 보이고 넘어졌을 때 팔굽혀 펴기 물구나무 서기 데모 동작 방향 버튼 Buttons Motion 가슴 치기 머리 긁기 두 손 올려 환호하기 허리 숙여 인사하기 축구 동작 방향 버튼 Buttons Motion 오른쪽 막기 눌렀다가 떼면 동작 원위치 왼쪽 막기 눌렀다가 떼면 동작 원위치 왼발 슛 오른발 슛 격투 동작 방향 버튼 Buttons Motion 전방 공격 방어 눌렀다가 떼면 동작 원위치 왼쪽 공격 오른쪽 공격 로봇의 관절 동작 범위에 따라 동작이 제한될 수 있습니다 CM 510 IR 채널 설정 Start 조종모드에서 CM 510에 IR수신기를 장착하고 RC 100으로 조종할 때 제어기의 Aux 버튼을 눌러 다음과 같이 리모콘의 채널을 설정할 수 있습니다 채널을 바꾸면 RC 100의 채널도 같이 바꿔 주어야 합니다 RC 100의 채널 변경은 RC 100의 채널 변경 방법을 참고하세요 Buttons Motion Start RC 100 채널 1로 설정 Start RC 100 채널 3로 설정 Start RC 100 채널 2로 설정 Start RC 100 채널 4로 설정 일정 시간 동안 로봇을 조종하지 않으면 로봇은 앉은 자세에서 대기합니다 리모컨으로 로봇을 조종함 앉아서 리모컨 신호를 기다림 리모컨 조종이 잘 되지 않습니다 리모컨 조종 모드로 설정하세요 조립서를 보고 적외선 수신기가 제대로 연결되었는지 확인하세요 리모컨의 전원이 켜져 있는지 확인하세요 만약 전원이 켜지지 않는다면 배터리를 교체해 주세요 적외선 수신기를 향해 리모컨을 조종하세요 주위에 로봇을 조종하는 사람이 있지 않나요 무선 혼선이 생길 수 있습니다 여러 대의 로봇으로 축구 경기나 로봇 격투를 하고 싶어요 여러 대의 로봇을 혼선 없이 안정적으로 조종하려면 블루투스 무선 모듈 BT 410 세트 또는 지그비 무선 모듈 ZIG 110 세트 을 장착해야 합니다 BT 410 세트 및 ZIG 110 세트 현재단종 는 로보티즈 쇼핑몰 에서 별도로 구매하실 수 있습니다 장착 방법은 각 제어기 설명페이지와 리모컨 RC 100 설명 페이지를 확인하세요 데모 모드 박수를 쳐 주면 로봇은 그 횟수만큼 박수를 따라 칩니다 DMS센서에 물체가 감지되면 인사를 합니다 일정시간 소리나 물체가 감지되지 않으면 로봇은 스스로 움직이며 여러 가지 동작을 보여줍니다 박수를 따라 침 다양한 동작을 보여 줌 자율 보행 모드 로봇이 장애물을 피하며 걸어갑니다 절대 거리 센서에 물체가 감지되면 보행을 멈추고 물체가 감지되지 않을 때 까지 왼쪽으로 회전합니다 보행중 넘어지면 넘어진 방향을 감지하여 스스로 일어납니다 조립 확인 모드 조립 확인 모드에서는 로봇이 제대로 조립되었는지 확인할 수 있습니다 모터를 하나씩 선택하여 로봇의 기본 자세와 비교하세요 조립 확인 모드를 실행하면 모든 모터의 힘이 풀립니다 버튼을 눌러 모터를 하나씩 선택합니다 이 때 선택된 모터는 LED 가 켜지며 기본 위치로 돌아갑니다 ID 를 씩 증가시킴 ID 를 씩 감소시킴 LED 가 켜진 모터의 ID 와 조립서의 ID 를 비교하세요 ockquote 해당 ID 의 모터가 로봇에 존재하지 않을 경우 경고음이 울립니다 실제로 모터가 멈춰있는 위치와 기본 자세에 해당하는 관절의 모습을 서로 비교하세요 ockquote LED는 켜져 있지만 모터에 힘이 풀려 있다면 모터의 조립 상태나 주변의 케이블 등을 다시 살펴보세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#작동하기"
	},
	"3150": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "충전하기",
		"header3": "",
		"content": "STEM 키트는 리튬폴리머로도 작동할 수 있으며 쇼핑몰 http www robotis com shop 에서 별도로 구매합니다 로봇 작동 중 배터리 경고음이 울리면 배터리를 충전합니다 충전이 시작되면 충전기의 붉은색 LED가 깜빡입니다 충전이 완료되면 녹색 LED가 켜집니다 배터리 분리 충전기 연결 충전 충전중 붉은색 LED 충전완료 녹색 LED SMPS 를 로봇에 직접 연결하면 외부 전원으로 로봇을 구동할 수도 있습니다 배터리에는 충전용 커넥터와 로봇 작동용 커넥터가 연결되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#충전하기"
	},
	"3151": {
		"product": "로보티즈 프리미엄",
		"header1": "시작하기",
		"header2": "충전하기",
		"header3": "충전 시간",
		"content": "완전 방전시 충전 시간 1시간 1시간 30분 완전 방전 상태에서 너무 오랜시간 충전하지 않으면 충전지의 수명이 급격히 짧아질 수 있습니다 충전지의 상태에 따라 충전 시간이 다를 수 있습니다 충전 및 동작 시간이 너무 짧다면 충전지의 수명이 다 되었을 수 있습니다 보관시 주의사항 배터리를 충전기나 로봇에 연결된 상태로 보관하지 마세요 오랫동안 사용 안할시 절반정도 충전된 상태로 보관해 주세요 온도나 습도가 높은 곳에 보관하지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#충전하기"
	},
	"3152": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#튜토리얼"
	},
	"3153": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "",
		"content": "학습 목표 화면에 1과 2를 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#화면-출력하기"
	},
	"3154": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 작성",
		"content": "로보플러스 태스크 프로그램 실행 아래 그림에서와 같이 윈도우에서 시작 모든 프로그램 ROBOTIS RoboPlus Software RoboPlus Task 를 선택하면 로보플러스 태스크 가 실행됩니다 로보플러스 태스크 초기 화면 제어기 선택 빈 줄을 선택한 후 더블클릭 하거나 Enter 키를 누르면 제어기 선택 대화창이 나타납니다 자신의 제어기를 선택한 후 확인 버튼을 누릅니다 프로그램 시작 만들기 제어기 선택 창에 이어서 뜨는 명령어 종류 선택 창에서 프로그램 시작 을 선택하면 RoboPlus Task 에 프로그램 시작 이 만들어 집니다 무조건 반복 명령어 입력 숫자를 반복하여 화면에 출력하기 위하여 무조건 반복 명령어를 사용합니다 명령줄 만들기 프로그램 시작의 와 사이 구간의 빈 줄을 더블클릭 하거나 선택 후 Enter 키를 누르면 명령어 종류 선택 창이 뜹니다 명령어 종류 중 반복문 무조건 반복 을 선택합니다 로드 명령어 입력 화면에 출력할 값을 화면 출력 으로 입력하기 위해 로드 명령어를 사용합니다 무조건 반복의 와 사이 구간의 빈 줄에 실행문 로드 값 입력하기 를 선택하여 입력합니다 숫자 을 화면 출력 으로 로드 로드 명령어의 파라미터 중 좌측 파라미터 를 선택합니다 파라미터에 대한 설명 좌측 파라미터는 우측 파라미터 값을 입력할 곳입니다 좌측 파라미터 를 더블클릭 하거나 클릭 후 Enter 키를 누르면 아래와 같은 파라미터 선택 창 이 뜹니다 제어기 화면 출력 을 선택하고 확인 버튼을 누릅니다 같은 방법으로 우측 파라미터 에는 상수 숫자 을 입력합니다 로드 명령어의 파라미터를 모두 입력한 화면은 아래와 같습니다 숫자 를 화면 출력 후 줄 바꿈 으로 로드 화면 출력 아래의 무조건 반복의 구간 끝 를 선택하고 스페이스 Space 키를 눌러 빈 줄을 추가한 후 위 에서와 동일한 방법으로 로드 명령어를 추가하고 이번에는 제어기 화면 출력 후 줄 바꿈 에 상수 숫자 를 로드합니다 최종 완성된 태스크 코드는 아래와 같습니다 태스크 코드 저장 하기 Ctrl 를 누르거나 도구 모음의 저장 버튼을 눌러 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#화면-출력하기"
	},
	"3155": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 다운로드",
		"content": "태스크 코드 작성 에서 작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#화면-출력하기"
	},
	"3156": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "화면 출력하기",
		"header3": "실행 및 결과 확인",
		"content": "프로그램 출력용 모니터 창 띄우기 프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 띄워야 합니다 프로그램 출력용 모니터 창을 띄우는 방법은 아래와 같이 여러 가지가 있습니다 프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭 도구 모음에서 프로그램 출력 보기 버튼을 클릭 프로그램 메뉴의 프로그램 출력 보기 메뉴 선택 혹은 단축키 F5 프로그램 실행하기 제어기 전원 스위치를 켜면 모드 LED 가 깜빡이고 있는 대기 상태가 됩니다 이 때 모드 MODE 버튼을 눌러 모드 LED 가 PLAY 에 위치하도록 한 후 시작 START 버튼을 누르면 다운로드 한 태스크 코드가 실행됩니다 프로그램 출력용 모니터에 숫자 과 가 출력되는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#화면-출력하기"
	},
	"3157": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "",
		"content": "학습 목표 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 AUX LED 가 꺼지게 합니다 START 버튼을 누르면 종료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#버튼과-led"
	},
	"3158": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 작성",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#버튼과-led"
	},
	"3159": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "태스크 코드 다운로드",
		"content": "작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#버튼과-led"
	},
	"3160": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "버튼과 LED",
		"header3": "실행 및 결과 확인",
		"content": "제어기에 다운받은 프로그램을 실행하고 버튼을 누르면 AUX LED 가 켜지고 버튼을 누르면 LED 가 꺼지는 것을 확인합니다 START 버튼을 눌러 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#버튼과-led"
	},
	"3161": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "보행 머신",
		"header3": "",
		"content": "보행 머신 의 사용 방법을 알아 봅시다 보행 머신이란 특정 패턴으로 만들어진 보행 모션 파일과 이 모션 파일에 들어있는 보행 모션들 간의 연결을 부드럽게 이어주는 역할을 하는 태스크 코드를 합쳐서 부르는 말입니다 다운로드 보행 모션 파일 BIO PRM WalkingMachineExam KR mtn 다운로드 태스크 코드 BIO PRM WalkingMachineExam KR tsk 보행 머신을 사용하여 보행 모션 간의 전환을 부드럽게 이어주는 방법에 대해 알아 봅시다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#보행-머신"
	},
	"3162": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "보행 머신",
		"header3": "보행 모션 파일 살펴보기",
		"content": "보행 모션 파일 보행 머신에서 사용되는 보행 모션 파일은 31 페이지부터 224 페이지 사이에 보행에 필요한 모션들이 모여 있습니다 몇 개의 모션 페이지들이 모여서 연속적으로 반복 실행되면서 하나의 보행 패턴 전진 후진 등 을 형성하도록 되어 있으며 각 페이지는 다른 보행 패턴의 모션 페이지로 전환하기 용이하도록 맞춰서 만들어져 있습니다 보행 모션 파일에 작성되어 있는 보행 패턴 보행 머신에 사용되는 보행 모션 파일에는 다음과 같은 16가지 보행 패턴이 포함되어 있습니다 전진 후진 제자리 좌회전 제자리 우회전 왼쪽 옆걸음 오른쪽 옆걸음 전진하며 좌회전 전진하며 우회전 후진하며 좌회전 후진하며 우회전 좌로 회피 우로 회피 좌측 대각선 전진 우측 대각선 전진 좌측 대각선 후진 우측 대각선 후진 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#보행-머신"
	},
	"3163": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "보행 머신",
		"header3": "보행 머신 태스크 코드 살펴보기",
		"content": "보행 머신 태스크 코드에는 보행초기화 함수와 보행실행 함수가 포함되어 있으며 이 두 가지 함수를 사용하여 리모컨으로 로봇을 조종하는 예제가 들어 있습니다 보행초기화 함수 보행초기화 함수는 보행 머신을 사용하기 전에 각종 변수값을 초기화 하고 로봇을 초기 자세로 만들어 주는 함수입니다 보행실행 함수 보행실행 함수는 보행 명령에 따른 보행 패턴을 실행시켜주고 각 보행 패턴 사이의 전환을 매끄럽게 연결시켜 주는 함수입니다 보행명령 번호 번호 보행 패턴 번호 보행 패턴 번호 보행 패턴 번호 보행 패턴 전진 후진 제자리 좌회전 제자리 우회전 왼쪽 옆걸음 오른쪽 옆걸음 전진하며 좌회전 전진하며 우회전 후진하며 좌회전 10 후진하며 우회전 11 좌로 회피 12 우로 회피 13 좌측 대각선 전진 14 우측 대각선 전진 15 좌측 대각선 후진 16 우측 대각선 후진 프로그램 시작 리모컨으로 보행 조종 시 보행초기화 함수와 보행실행 함수를 사용하여 각 보행 패턴간의 전환을 이어주는 방법에 대해 간단한 프로그램 시작 예제를 작성해 봅시다 먼저 보행초기화 함수를 호출하여 변수를 초기화 하고 로봇을 초기 자세로 만들어 줍니다 보행명령 이라는 변수에 16 에 해당하는 보행 패턴 번호를 선택하여 입력하고 보행실행 함수를 호출하면 선택한 보행 패턴이 실행됩니다 보행명령 변수에 다른 보행 패턴 번호를 입력하고 다시 보행실행 함수를 호출하면 자동적으로 최대한 자연스럽게 보행 패턴의 전환이 이루어 집니다 보행머신의 태스크 코드 파일에는 위와 같은 방식으로 16 가지의 보행 패턴을 리모컨으로 조종하기 위한 예제 코드가 들어가 있습니다 프로그램 시작 함수를 적절히 수정하여 본인에게 맞는 보행 조종 알고리즘을 만들어 보세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#보행-머신"
	},
	"3164": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "자이로 센서를 이용한 보정",
		"header3": "",
		"content": "선행 학습 보행 머신 본 학습에 사용된 태스크 코드는 보행 머신 에서 사용된 태스크 코드에 자이로 센서 관련 코드를 추가한 것으로 선행 학습 부분을 먼저 학습 후 보시면 이해하기가 더 쉽습니다 학습 목표 자이로 센서를 이용하여 휴머노이드의 자세를 보정하는 방법을 알아봅시다 각속도 초당 각도의 변화량 를 검출할 수 있는 자이로 센서 Gyro Sensor 를 이용하여 로봇이 기울어져 특정 방향으로 각속도가 가해지게 되면 그 반대 방향으로 서보모터 값을 보정하여 자세를 바로 잡는 방법에 대하여 알아봅시다 Downlaod 태스크 코드 BIO PRM GyroSensorExam KR tsk ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#자이로-센서를-이용한-보정"
	},
	"3165": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "자이로 센서를 이용한 보정",
		"header3": "준비 사항",
		"content": "자이로 센서는 x축 센서 값이 CM 510 CM 530 의 3번 포트에 y축 센서 값이 4번 포트에 연결되어 있어야 합니다 그 외의 경우 태스크 코드를 자신의 로봇에 맞게 수정하여 사용하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#자이로-센서를-이용한-보정"
	},
	"3166": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "자이로 센서를 이용한 보정",
		"header3": "개념 정리",
		"content": "콜백 Callback 함수 콜백 Callback 함수 를 이용하여 구합니다 콜백 함수는 메인 프로그램 루틴과는 독립적으로 동작하는 함수로 일정 시간마다 스스로 실행되는 함수입니다 따라서 일정 시간마다 자이로 센서 값을 이용하여 보정 값을 계산한 후 그 값으로 자세를 보정하도록 콜백 함수를 작성해 주면 메인 프로그램 루틴과 상관 없이 로봇은 자이로 센서를 이용하여 스스로 자세를 보정하게 됩니다 관절 오프셋 관절 오프셋 을 이용하여 로봇에 적용합니다 관절 오프셋은 모션 실행 시 특정 관절의 관절 위치 값에 오프셋을 주는 파라미터입니다 즉 관절 오프셋이 설정된 관절은 모션 파일에 지정된 위치값 관절 오프셋 값으로 모션이 실행되게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#자이로-센서를-이용한-보정"
	},
	"3167": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "자이로 센서를 이용한 보정",
		"header3": "태스크 코드 살펴 보기",
		"content": "자이로초기화 함수 호출 관절 오프셋 적용을 위한 밸런스페이지 실행 관절 오프셋이 적용되기 위해서는 모션이 실행되어야 합니다 따라서 아무런 모션도 실행되고 있지 않은 상태에서는 자이로 센서에 의한 보정 값이 관절 오프셋에 입력되어도 적용이 되지 않기 때문에 밸런스페이지를 만들어서 아무런 모션도 실행되지 않을 때 실행하여 관절 오프셋이 항상 적용되도록 합니다 자이로초기화 함수 자이로초기화 함수에는 약 128초 주기로 10번의 자이로 센서 값을 읽어와서 그 평균 값을 자이로 센서 기준값으로 저장합니다 약 250 정도가 일반적인 기준값 임 만약 자이로 센서 값이 230 보다 작거나 270 보다 큰 경우에는 자이로 센서가 없는 것으로 간주하고 보정을 사용하지 않도록 설정합니다 자이로 센서가 없거나 초기화 중 로봇이 많이 흔들린 경우 콜백 함수에서 보정값 계산 일정 주기로 자동 실행되는 콜백 함수에서 현재 자이로 센서 값을 읽어와서 기준값과 비교하여 변동량을 계산한 후 그 값에 따라 보정 값을 계산합니다 이 때 자이로보정사용 변수가 FALSE 이면 보정을 사용하지 않습니다 따라서 메인 루틴에서 자이로 보정을 사용하지 않으려는 곳에 자이로보정사용 변수를 FALSE 로 설정하면 됩니다 계산된 보정 값을 관절 오프셋에 적용하여 로봇의 자세를 보정합니다 앞 뒤 기울어짐을 보정하기 위해서는 무릎과 발목의 13 14 15 16 번 관절을 사용하고 좌 우 기울어짐을 보정하기 위해서는 발목과 허리의 10 17 18 번 관절을 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#자이로-센서를-이용한-보정"
	},
	"3168": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "자이로 센서를 이용한 보정",
		"header3": "보정 테스트",
		"content": "태스크 코드를 로봇에 다운로드하고 실행합니다 자이로 초기화를 위해 태스크 코드 실행 후 약 5초 이상 평평한 곳에 로봇을 세워 두어야 합니다 만약 자이로 초기화 시 급격한 흔들림이 있거나 자이로 센서가 연결되어 있지 않으면 자이로 보정을 하지 않습니다 가만히 서 있는 상태에서 충격을 받아 자세가 흐트러지면 보정을 시도하는지 확인하세요 경사면 등에서 자이로를 이용한 보정을 하지 않을 때와 보정을 할 때 각각 어떻게 다른지 확인하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#자이로-센서를-이용한-보정"
	},
	"3169": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "사용자 모션 추가(모션 만들기)",
		"header3": "",
		"content": "선행 학습 보행 머신 본 학습은 보행 머신 에서 사용된 모션 파일에 몇 가지 모션을 추가하는 방법에 대해 학습합니다 따라서 선행 학습 부분을 먼저 학습 후 보시면 이해하기가 더 쉽습니다 학습 목표 RoboPlus Motion 을 사용하여 모션 추가하기 RoboPlus Motion 프로그램을 사용하여 아래와 같은 가지 모션을 추가하는 방법을 학습해 봅시다 모션 페이지 번호 동작 설명 모션 페이지 번호 동작 설명 14 오른쪽 공 막기 27 엎드려 일어나기 16 왼쪽 공 막기 28 누워 일어나기 다운로드 모션 파일 BIO PRM UserMotionExam KR mtn ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-모션-추가모션-만들기"
	},
	"3170": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "사용자 모션 추가(모션 만들기)",
		"header3": "“오른쪽 공 막기” 모션 만들기",
		"content": "RoboPlus Motion 을 실행하고 제어기와 연결합니다 로봇 연결하기 참조 14번 페이지에 공 막기 모션을 추가하기 위해 이름을 입력하고 스텝을 추가합니다 로봇의 모든 모터가 꺼져 있는 상태에서 로봇의 포즈를 설정해 줍니다 다음은 오른쪽 공 막기 포즈입니다 위와 같이 로봇의 포즈를 설정하고 토크 온 버튼을 누르면 현재 로봇의 관절 값이 에 자동으로 입력됩니다 왼쪽 화살표 버튼을 누르면 현재 입력된 로봇의 관절 값을 로 읽어올 수 있습니다 멈춤 시간과 실행 시간을 조절합니다 스텝 멈춤 실행 시간의 자세한 정보는 여기를 참조하세요 막기 포즈를 유지하기 위하여 NEXT 페이지를 자기 자신으로 지정하여 무한 반복 모션으로 만듭니다 무한 반복 모션을 빠져나올 때 적절한 모션을 취하도록 하기 위해 EXIT 페이지도 지정해 줍니다 EXIT 페이지로 지정한 15번 페이지에 기본 자세로 돌아가기 위한 모션을 만들어 줍니다 위의 오른쪽 공 막기 포즈와 같이 15번 모션 페이지에 스텝 개를 추가하여 각각 아래와 같은 포즈를 추가합니다 추가 설정 반복 횟수 재생 배속 등 각 페이지의 반복 횟수나 전체 속도 등을 추가로 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-모션-추가모션-만들기"
	},
	"3171": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "사용자 모션 추가(모션 만들기)",
		"header3": "“왼쪽 공 막기” 모션 만들기",
		"content": "위 STEP 에서 만든 것과 동일한 방법으로 16 17번 모션 페이지에 반대 방향인 왼쪽 공 막기 모션을 만들어 줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-모션-추가모션-만들기"
	},
	"3172": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "사용자 모션 추가(모션 만들기)",
		"header3": "“엎드려 일어나기”와 “누워 일어나기” 모션 만들기",
		"content": "27 28번 모션 페이지에 아래와 같이 스텝을 추가하여 엎드려 일어나기 와 누워 일어나기 모션을 만들어 줍니다 엎드려 일어나기 누워 일어나기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-모션-추가모션-만들기"
	},
	"3173": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "사용자 모션 추가(모션 만들기)",
		"header3": "저장하기",
		"content": "저장 명령으로 로봇에 현재까지 작업한 내용을 저장합니다 또는 다른 이름으로 저장 을 통해 PC 에 mtn 파일로 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-모션-추가모션-만들기"
	},
	"3174": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "사용자 모션 추가(태스크 코드)",
		"header3": "",
		"content": "선행 학습 자이로 센서를 이용한 보정 사용자 모션 추가 모션 만들기 학습 목표 사용자가 추가한 모션을 실행하는 태스크 코드를 작성해 봅시다 앞서 사용자 모션 추가하기1 모션만들기 에서 추가한 모션을 리모컨 RC 100 으로 실행하는 방법에 대해 학습해 봅시다 다운로드 모션 파일 BIO PRM UserMotionExam KR mtn 다운로드 태스크 코드 BIO PRM UserMotionExam KR tsk ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-모션-추가태스크-코드"
	},
	"3175": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "사용자 모션 추가(태스크 코드)",
		"header3": "태스크 코드 살펴보기",
		"content": "자이로 센서를 이용한 보정 에서 작성한 태스크 코드에 사용자 모션을 실행하는 코드를 추가한 태스크 코드입니다 보행명령 에 0번을 실행하여 로봇을 정지 상태로 만듭니다 사용자가 추가한 모션의 경우 자이로 센서가 수평을 유지해야 하는 모션이 아니라면 자이로 센서에 의한 보정을 꺼 놓아야 오프셋에 의한 모션의 변형이 일어나지 않습니다 따라서 자이로보정사용 을 FALSE 로 만들어 줍니다 그 후 EXIT페이지실행후모션종료대기 함수를 호출하여 로봇이 완전히 멈출 때까지 기다립니다 모션 페이지 27 과 28 에 추가한 모션은 일어나기 모션으로 한 번만 실행되는 모션입니다 따라서 리모컨 버튼 값에 따라 지정된 모션 페이지를 실행시키고 모션이 종료될 때까지 기다립니다 모션 페이지 14 와 16 에 추가한 모션은 공 막기 모션으로 무한 반복 모션입니다 따라서 모션을 중지하기 위해서는 EXIT 페이지의 실행이 필요합니다 조건 대기 명령어를 통해 동일한 버튼을 계속 누르고 있는 것이 아닐 경우 EXIT페이지실행후모션종료대기 함수를 호출하여 EXIT 페이지를 실행하며 모션을 종료합니다 모션 페이지 파라미터에 대한 자세한 설명은 여기를 참고하세요 사용자 모션의 실행이 완료되었으면 자이로보정사용 변수를 TRUE 로 변경하여 다시 자이로 보정을 사용하도록 복구해 줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-모션-추가태스크-코드"
	},
	"3176": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "그리퍼 제어",
		"header3": "",
		"content": "선행 학습 사용자 모션 추가 모션 만들기 사용자 모션 추가 태스크 코드 본 학습에 앞서 선행 학습에 해당하는 부분을 먼저 학습하시면 이해하기가 더 쉽습니다 학습 목표 모션과 별개로 그리퍼를 제어하는 방법을 학습해 봅시다 로봇에 그리퍼를 달게 되면 모션에 관계 없이 그리퍼를 달아 놓은 팔은 고정시킬 필요가 있습니다 이럴 경우 기존의 모션에서 팔을 고정시키도록 수정하지 않고 특정 관절들만 모션 데이터에 의한 제어가 되지 않도록 하여 모션과 별개로 태스크 코드에서 그리퍼를 제어하는 방법에 대해 학습해 봅시다 본 학습에서는 그리퍼에 개의 다이나믹셀이 사용되므로 휴머노이드 타입에 그리퍼를 달아 사용합니다 다운로드 태스크 코드 BIO PRM GripperExam KR tsk 다운로드 B타입 모션 파일 BIO PRM HumanoidTypeB KR mtn ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-제어"
	},
	"3177": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "그리퍼 제어",
		"header3": "배경 지식",
		"content": "모션과 그리퍼를 별도 제어하기 위한 제어 우선순위 설정 일반적인 제어 우선 순위 일반적으로 다이나믹셀의 제어에 대한 우선 순위는 모션 데이터에 의한 제어가 우선 순위가 가장 높으며 다음으로 태스크 코드에 의한 제어입니다 따라서 일반적인 경우 모션이 실행되면 태스크 코드에 의해 일부 다이나믹셀만 별도 제어하는 것은 불가능합니다 제어 우선 순위 변경 그리퍼와 같이 모션 실행 시 일부 모터 그리퍼를 포함한 팔 전체 만 모션과 상관없이 태스크 코드를 이용하여 제어하려면 다음과 같은 두 가지 방법이 있습니다 모션 데이터에서 해당 관절의 ID 를 사용 유무 체크를 해제 하는 방법 해당 관절의 관절 오프셋 파라미터의 값을 1024 로 설정하는 방법 1번 방법의 경우 전체 페이지에서 해당 관절을 사용하지 않도록 하는 것으로 해당 관절을 필요로 하는 모션이 있을 경우 모션 데이터에 의해 해당 관절을 제어할 방법이 없으므로 필요에 따라 특정 관절에 대한 모션 데이터 적용을 활성화 비활성화 할 수 있는 2번 방법을 사용하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-제어"
	},
	"3178": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "그리퍼 제어",
		"header3": "그리퍼 장착",
		"content": "로봇에 그리퍼를 장착하는 방법은 유용한 정보의 그리퍼 장착 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-제어"
	},
	"3179": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "그리퍼 제어",
		"header3": "태스크 코드 작성",
		"content": "그리퍼 제어 초기화 그리퍼 제어를 위해 양 팔에 해당하는 관절들의 관절 오프셋 에 1024 를 입력하여 모션 재생 시 양 팔 관절은 모션 데이터에 의한 제어를 받지 않도록 설정합니다 그 외에 팔과 그리퍼의 움직임 속도 그리퍼의 잡는 힘과 유연성 등의 값을 초기화 해 주고 팔의 초기 자세를 잡아줍니다 콜백 함수 자이로 보정 수정 콜백 함수에서 자이로 보정 값 적용 등을 위해 관절 오프셋을 사용하는 경우 그리퍼에 사용된 관절에 관절 오프셋을 설정하지 않도록 합니다 STEP 에서 그리퍼 제어 초기화를 위해 관절 오프셋을 1024 로 변경해 놓았는데 이 값이 바뀌는 것을 막기 위함입니다 그리퍼 팔 제어 함수 그리퍼와 팔을 제어하는 함수를 아래와 같이 작성합니다 이 함수는 필요에 따라 모션 상태와 상관없이 호출하게 되면 그리퍼와 팔의 움직임을 제어합니다 왼팔과 그리퍼 역시 위와 동일한 방법으로 함수를 작성해 줍니다 리모컨으로 팔 및 그리퍼 제어 그리퍼 및 팔 제어 함수를 이용하여 리모컨으로 조종하는 코드를 추가합니다 아래 코드는 사용자 모션 추가 태스크 코드 부분을 참조하시면 도움이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-제어"
	},
	"3180": {
		"product": "로보티즈 프리미엄",
		"header1": "튜토리얼",
		"header2": "그리퍼 제어",
		"header3": "다운로드 및 결과 확인",
		"content": "STEP 에서 작성한 태스크 코드를 제어기에 다운로드 합니다 다운로드 방법 참조 조종기로 로봇의 모션을 조종할 때 그리퍼와 팔이 모션과 상관 없이 고정되는지 확인합니다 조종기로 그리퍼를 조종해 봅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-제어"
	},
	"3181": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#다운로드"
	},
	"3182": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "기본 프로그램",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#기본-프로그램"
	},
	"3183": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "기본 프로그램",
		"header3": "태스크 코드 다운로드 방법",
		"content": "로보티즈 초급 종합 키트에서 사용되는 제어기인 CM 에 RoboPlus 프로그램을 사용하기 위해서는 반드시 펌웨어 업데이트가 필요합니다 펌웨어 업데이트 방법은 RoboPlus Manager 의 펌웨어 업데이트를 참고하세요 태스크 코드 다운로드 준비 다운로드 할 태스크 코드 파일 tsk 을 RoboPlus Task에서 불러 옵니다 태스크 코드 파일을 더블클릭하여 열 수 있습니다 RoboPlus Task 의 파일 열기 기능으로 열 수 있습니다 마우스를 이용하여 파일을 RoboPlus Task 위로 드래그 앤 드롭 Drag amp Drop 을 통해 열 수 있습니다 USB2Dynamixel을 이용하여 PC 와 제어기를 연결합니다 제어기의 전원을 켭니다 전원을 켜는 방법은 각 제어기 정보를 참고하세요 태스크 코드 다운로드 PC와 제어기가 연결되어야 합니다 태스크 코드를 다운로드하기 위해서는 PC와 제어기가 연결되어야 합니다 연결 방법은 각 제어기 정보를 참고하세요 사용할 통신 포트를 선택해야 합니다 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다 RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다 PC와 제어기가 연결되어 있는지 확인합니다 연결 방법은 각 제어기 정보를 참고하세요 제어기의 전원이 켜져 있는지 확인합니다 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다 다운로드 메뉴를 선택합니다 만약 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다 룰 체크 에러 메시지 확인 다운로드를 진행합니다 만약 다운로드에 실패했다면 처음부터 다시 시도합니다 태스크 코드 Task Code 를 실행한뒤 로봇의 동작을 실행 합니다 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다 태스크 코드 실행 방법은 각 제어기 정보를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#태스크-코드-다운로드-방법"
	},
	"3184": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "기본 프로그램",
		"header3": "모션 파일 다운로드 방법",
		"content": "로보플러스 모션 0의 모션 다운로드 를 참고하세요 타입 파일 종류 다운로드 조립서 PDF 파일 Download 타입 휴머노이드 기본 태스크 코드 휴머노이드 기본 모션 파일 Download Download 타입 휴머노이드 기본 태스크 코드 휴머노이드 기본 모션 파일 Download Download 타입 휴머노이드 기본 태스크 코드 휴머노이드 기본 모션 파일 Download Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#모션-파일-다운로드-방법"
	},
	"3185": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "기본 프로그램",
		"header3": "휴머노이드 활용 예제",
		"content": "기본예제로 로보티즈 프리미엄에 제공되는 보행 속도의 2배 이상의 속도를 내는 보행 동작과 격투 경기용 동작이 포함되어 있습니다 보행 모션 페이지만 별도로 복사하여 사용하실 수도 있습니다 A타입에만 적용 가능하며 B와 C타입에 적용시에는 로보플러스 모션 에서 로봇의 양쪽 골반과 발목 관절의 옵셋을 수정하여 흐트러진 로봇의 무게중심을 수정하는 절차를 진행하셔야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#모션-파일-다운로드-방법"
	},
	"3186": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "기본 프로그램",
		"header3": "휴머노이드 격투",
		"content": "휴머노이드 격투 예제 파일 타입 파일 종류 다운로드 타입 휴머노이드 격투 태스크 파일 Download 타입 휴머노이드 격투 모션 파일 Download 로봇 조종하기 로봇을 작동하기 위한 키 정보 입니다 보행 방향 버튼 Buttons Motion Buttons Motion 앞으로 가기 전진하며 왼쪽으로 회전 왼쪽으로 회전 전진하며 오른쪽으로 회전 왼쪽 공격 좌 이동 오른쪽으로 회전 빠른 좌 이동 좌 이동하며 앞으로 빠른 우 이동 좌 이동하며 뒤로 우 이동하며 앞으로 우 이동 우 이동 하며 뒤로 공격 키 키 Buttons Motion Buttons Motion 왼쪽 대각선 공격 좌 공격 강 오른쪽 대각선 공격 우 공격 강 전 공격 전 공격 강 좌 공격 잡기 우 공격 잡기 양쪽 공격 잡기 잡기 기타 키 키 Buttons Motion Buttons Motion 토크 오프 토크 온 앞으로 일어나기 뒤로 일어나기 참고 와 은 같은 동작입니다 마찬가지로 D와 R은 같은 동작입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#휴머노이드-격투"
	},
	"3187": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "기본 프로그램",
		"header3": "휴머노이드 축구",
		"content": "타입 파일 종류 다운로드 타입 휴머노이드 축구 태스크 파일 Download 타입 휴머노이드 축구 모션 파일 Download 로봇 조종하기 로봇을 작동하기 위한 키 정보 입니다 보행 방향 버튼 Buttons Motion Buttons Motion 앞으로 가기 뒤로 가기 왼쪽으로 회전 오른쪽으로 회전 전진하며 왼쪽으로 회전 전진하며 오른쪽으로 회전 좌 이동 우 이동 빠른 좌 이동 빠른 우 이동 좌 이동하며 앞으로 우 이동하며 앞으로 좌 이동하며 뒤로 우 이동 하며 뒤로 공격 키 키 Buttons Motion Buttons Motion 앞으로 차기 왼발 뒤로 차기 왼쪽으로 차기 오른쪽으로 차기 앞으로 세게 차기 앞으로 세게 차기 앞으로 차기 오른발 뒤로 차기 왼쪽으로 차기 오른쪽으로 차기 수비 키 키 Buttons Motion Buttons Motion 막기 준비 전방 막기 좌측 공 막기 우측 공 막기 기타 키 키 Buttons Motion Buttons Motion 토크 오프 토크 온 앞으로 일어나기 뒤로 일어나기 가슴 치기 환호 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#휴머노이드-축구"
	},
	"3188": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#예제"
	},
	"3189": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "초급 응용 로봇",
		"content": "각 로봇의 조립서는 인터넷이 연결되어 있어야 다운로드 받으실 수 있습니다 Examples Description 차단바 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 다이나믹셀 설정 값 AX 12 ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 조건 대기 알고리즘 제어기의 버튼으로 다이나믹셀 위치 제어 동작 방법 제어기의 버튼을 누르면 차단바가 열립니다 제어기 의 버튼을 누르면 차단바가 닫힙니다 다목적 계기판 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 다이나믹셀 설정 값 AX 12 ID 관절모드 RoboPlus 문법 함수 호출 복귀 로드 계산 무조건 반복 만약 아니면 만약 알고리즘 제어기의 버튼으로 다이나믹셀 속도 제어 동작 방법 제어기의 버튼을 누르고 있으면 게이지의 속도가 점점 빨라집니다 제어기의 버튼을 누르고 있으면 게이지의 속도가 점점 느려집니다 악어 입 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AX 12 ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 아니면 만약 조건 대기 알고리즘 적외선 센서와 타이머 값에 따라 다이나믹셀 위치 및 버저 제어 동작 방법 센서의 전방에 손을 대면 입을 벌리고 손을 떼면 입을 다뭅니다 만약 입을 다물 때 입 사이에 물체가 있으면 다시 입을 벌립니다 10초 동안 물체가 감지되지 않으면 멜로디 소리를 냅니다 팬틸트 장치 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 계산 무조건 반복 만약 아니면 만약 조건 대기 알고리즘 제어기 버튼으로 팬틸트 제어 동작 방법 제어기의 버튼을 누르면 틸트 위 아래 관절이 위로 움직입니다 제어기의 버튼을 누르면 틸트 위 아래 관절이 아래로 움직입니다 제어기의 버튼을 누르면 팬 좌 우 관절이 우로 움직입니다 제어기의 버튼을 누르면 팬 좌 우 관절이 좌로 움직입니다 차량 출입 통제기 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 계산 무조건 반복 만약 아니면 만약 조건 대기 알고리즘 적외선 센서와 다이나믹셀 하중 값에 따라 다이나믹셀 위치 제어 동작 방법 센서에 물체가 감지되면 차단바가 수직으로 열립니다 센서에 물체가 감지되고 동시에 차단바가 밀리면 차단바가 수평으로 열립니다 센서에 물체가 감지되지 않으면 차단바가 닫힙니다 스마트카 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 바퀴모드 RoboPlus 문법 함수 호출 로드 계산 점프 레이블 무조건 반복 만약 아니면 만약 조건 대기 알고리즘 제어기의 버튼에 따라 모드 설정을 하고 버튼과 센서 값에 따라 다이나믹셀 회전 방향 제어 동작 방법 제어기의 스타트버튼과 U버튼을 누르면 조종모드로 됩니다 제어기의 스타트버튼과 D버튼을 누르면 자율모드로 됩니다 조종모드시 L버튼을 누르면 전진 R버튼을 누르면 후진 U버튼을 누르면 우회전 D버튼을 누르면 좌회전을 합니다 움직일때마다 멜로디가 나옵니다 자율모드시 전방센서가 감지되면 우회합니다 하단센서가 감지되면 낭떠러지를 피해 우회합니다 박수치는 꽃게 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 로드 계산 무조건 반복 만약 횟수만큼 반복 조건 대기 알고리즘 마이크 센서 소리 감지 횟수에 따라 다이나믹셀 위치 제어 동작 방법 로봇은 팔을 벌린채 대기합니다 소리감지시 감지 횟수 만큼 박수를 따라칩니다 공격하는 오리 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 조건 반복 조건 대기 알고리즘 센서 감지에 따라 다이나믹셀 제어 동작 방법 로봇은 좌우 이동을 반복하며 감시합니다 센서감지기 감지된 센서 방향쪽으로 따라가고 두개의 센서가 모두 감지시 공격을 합니다 거리측정기 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 거리 센서 다이나믹셀 설정 값 AX 12 ID 관절모드 RoboPlus 문법 함수 호출 로드 계산 무조건 반복 알고리즘 센서 감지 거리에 따라 다이나믹셀 위치 제어 동작 방법 센서의 감지거리에 따라 높이바가 움직입니다 10 라인트레이서 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 바퀴모드 RoboPlus 문법 함수 호출 로드 계산 무조건 반복 만약 아니면 만약 아니면 조건 대기 알고리즘 센서 감지 값에 따라 라인트레이서 제어 동작 방법 로봇은 검은색 라인을 따라 주행합니다 11 보행드로이드 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AAX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 조건 반복 조건 대기 알고리즘 적외선 센서 값에 따라 다양한 모션 제어 동작 방법 보행 경로 상에 장애물을 설치해 놓고 보행 드로이드를 작동시킵니다 장애물을 피해가면서 보행하는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#초급-응용-로봇"
	},
	"3190": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "중급 응용 로봇",
		"content": "각 로봇의 조립서는 인터넷이 연결되어 있어야 다운로드 받으실 수 있습니다 Examples Description 집게탐사차 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 거리 센서 다이나믹셀 설정 값 AX 12 ID ID 바퀴모드 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 복귀 로드 계산 무조건 반복 만약 아니면 조건 대기 반복 끝내기 알고리즘 적외선 센서와 거리 센서 값에 따라 장애물 인식 및 처리 동작 방법 제어기의 버튼을 누르면 차단바가 열립니다 주행 경로 상에 여러 크기의 장애물을 설치해 놓고 집게 탐사차를 작동시킵니다 장애물이 너무 크면 피해서 주행하는 것을 확인합니다 장애물이 적당한 크기면 들어서 옆으로 치워 놓고 주행하는 것을 확인합니다 포크레인 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 거리 센서 RoboPlus 문법 함수 호출 로드 계산 무조건 반복 만약 아니면 조건 대기 알고리즘 적외선 센서와 거리 센서 값에 따라 다이나믹셀 위치 제어 동작 방법 주행 경로 상에 장애물을 설치해 놓고 포크레인을 작동시킵니다 전방에 물체가 감지되면 굴삭 작업을 하는 것을 확인합니다 물체를 든 상태에서 센서에 장애물이 감지되면 감지된 방향으로 회전한 후 물체를 내려놓는 것을 확인합니다 로봇꽃 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 아니면 조건 대기 알고리즘 소리 감지 횟수에 따라 모션 제어 동작 방법 전원을 켜면 꽃잎을 펴고 춤추듯이 천천히 움직입니다 박수 소리가 한번나면 꽃입을 천천히 오므립니다 박수 소리가 여러번나면 꽃입을 빨리 오므립니다 아기사슴 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 아니면 만약 아니면 조건 대기 알고리즘 적외선 센서 값에 따라 물체 인식 동작 방법 아무 변화가 없을 때 아기 사슴은 앉아서 두리번거립니다 얼굴에 물체를 대면 그 물체를 계속 쫓아옵니다 거북이 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 거리 센서 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 아니면 만약 아니면 조건 대기 알고리즘 적외선 센서와 거리 센서 값에 따라 장애물 회피 동작 방법 보행 경로 상에 장애물을 설치해 놓고 거북이를 작동시킵니다 거북이가 기어가다가 전방에 장애물을 만나면 피해가는 것을 확인합니다 거웍 GerWalk Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 거리 센서 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 아니면 만약 아니면 조건 반복 알고리즘 적외선 센서와 거리 센서 값에 따라 새의 보행 패턴 제어 동작 방법 보행 경로 상에 장애물을 설치해 놓고 거웍을 작동시킵니다 보행 중 전방 및 좌우에 장애물이 감지되면 피해갑니다 배틀드로이드 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 변수 함수 호출 로드 계산 무조건 반복 만약 아니면 만약 아니면 조건 대기 알고리즘 적외선 센서 값에 따라 다이나믹셀 제어 동작 방법 보행 경로 상에 장애물을 설치해 놓고 배틀 드로이드를 작동시킵니다 보행 중에 장애물을 만나면 양 팔로 공격합니다 배틀 드로이드가 넘어졌을 때 전 후면을 구분하여 스스로 일어납니다 4족로봇 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 거리 센서 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 조건 대기 알고리즘 적외선 센서와 거리 센서 값에 따라 4족 보행 제어 동작 방법 보행 경로 상에 장애물을 설치해 놓고 4족로봇을 작동시킵니다 보행 중 전방에 장애물이 감지되면 피해갑니다 보행머신 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 적외선 센서 거리 센서 다이나믹셀 설정 값 AX 12 ID 11 ID 18 관절모드 RoboPlus 문법 함수 호출 로드 무조건 반복 만약 아니면 만약 아니면 조건 대기 조건 반복 알고리즘 적외선 센서와 거리 센서 값에 따라 2족 보행 제어 동작 방법 보행 경로 상에 장애물을 설치해 놓고 보행머신을 작동시킵니다 보행 중 전방 및 좌우에 장애물이 감지되면 피해갑니다 10 로봇팔 Download 조립서 Download 데모용 태스크 코드 Download Video 사용된 장치 CM 510 CM 530 AX 12 다이나믹셀 설정 값 AX 12 ID ID 관절모드 RoboPlus 문법 함수 호출 로드 계산 무조건 반복 만약 아니면 조건 반복 알고리즘 다이나믹셀간 위치값 통신 동작 방법 제어 모터를 움직이면 반응모터가 따라 움직이는지 확인 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#중급-응용-로봇"
	},
	"3191": {
		"product": "로보티즈 프리미엄",
		"header1": "다운로드",
		"header2": "예제",
		"header3": "고급 응용 로봇",
		"content": "각 로봇의 조립서는 인터넷이 연결되어 있어야 다운로드 받으실 수 있습니다 Examples Description 공룡 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 15 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 15 관절모드 RoboPlus 문법 함수 호출 복귀 로드 계산 무조건 반복 만약 아니면 조건 대기 반복 끝내기 알고리즘 적외선 센서 값에 따라 장애물 감지 및 모션 제어 동작 방법 보행 경로 상에 장애물을 설치해 놓고 공룡 로봇을 작동시킵니다 공룡 로봇이 장애물을 공격하는 것을 확인합니다 장애물이 너무 크면 피해서 주행하는 것을 확인합니다 장애물이 없어지면 계속 걸어 갑니다 강아지 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 17 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 17 관절모드 RoboPlus 문법 함수 호출 로드 레이블 점프 만약 아니면 만약 조건 대기 알고리즘 적외선 센서와 타이머 소리감지에 따라 4족 응용 모션 제어 동작 방법 보행 경로 상에 장애물을 설치해 놓고 강아지를 작동시킵니다 소리가 나면 장애물을 피해가면서 보행하는 것을 확인합니다 입을 만져주면 재롱을 부립니다 박수 소리 횟수에 따라 재롱이 달라집니다 일정 시간이 지나도록 아무 변화가 없으면 앉아서 잠을 잡니다 킹스파이더 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 18 적외선 센서 다이나믹셀 설정 값 AX 12 ID ID 18 관절모드 RoboPlus 문법 함수 호출 로드 레이블 점프 만약 조건 대기 알고리즘 적외선 센서와 타이머에 따라 6족 응용 모션 제어 동작 방법 보행 중 장애물을 만나면 피해서 돌아다닙니다 전방에 가까운 곳에서 물체가 감지되면 공격합니다 위쪽에서 물체가 접근하면 몸을 움츠립니다 일정 시간 동안 아무 변화가 없으면 잠을 잡니다 전갈 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 18 거리 센서 다이나믹셀 설정 값 AX 12 ID ID 18 관절모드 RoboPlus 문법 함수 호출 로드 레이블 점프 만약 아니면 만약 횟수만큼 반복 조건 대기 알고리즘 소리 감지 횟수와 거리 센서 값에 따라 6족 응용 모션 제어 동작 방법 시작하면 잠을 잡니다 박수를 치면 깨어납니다 센서에 손을 가까이 가져가면 꼬리로 위협합니다 센서에 손을 더 가까이 가져가면 공격합니다 도마뱀 Download 조립서 Download 데모용 태스크 코드 Download 데모용 모션 파일 Download Video 사용된 장치 CM 510 CM 530 AX 12 14 적외선 센서 거리 센서 다이나믹셀 설정 값 AX 12 ID ID 14 관절모드 RoboPlus 문법 함수 호출 로드 계산 무조건 반복 만약 아니면 만약 아니면 조건 대기 알고리즘 적외선 센서와 거리 센서 값에 따라 4족 장애물 회피 모션 제어 동작 방법 시작하면 기어가다가 전방에 장애물을 만나면 잠시 멈추었다가 피해갑니다 꼬리를 잡히면 도망가려 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#고급-응용-로봇"
	},
	"3192": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#참고자료"
	},
	"3193": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "퓨즈 교체하기",
		"header3": "",
		"content": "CM 510 530 에는 과전류가 흘러서 회로가 망가지는 것을 방지하기 위한 퓨즈 Fuse 가 있습니다 만약 CM 510 530 이 배터리로는 전원이 켜지지 않고 SMPS로만 전원이 켜진다면 퓨즈가 끊어진 것이니 교체해 주어야 합니다 CM 510 CM530 의 퓨즈 사이즈는 아래와 같으며 용량은 125V 5A 10A 사이의 제품을 사용하시면 됩니다 퓨즈의 교체 방법 CM 510 530 뒷면의 퓨즈를 확인한다 핀셋 등으로 퓨즈를 새 것으로 교체한다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#퓨즈-교체하기"
	},
	"3194": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "다이나믹셀 관리하기",
		"header3": "",
		"content": "로봇 관절로 사용되는 다이나믹셀은 매우 많은 기능들을 내장하고 있습니다 여기서는 로봇을 만들면서 다이나믹셀의 설정을 바꾸는 방법에 대해 설명합니다 ID바꾸기 다이나믹셀의 ID는 다음과 같이 변경할 수 있습니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 ID를 바꾸려는 다이나믹셀을 클릭합니다 컨트롤 테이블의 ID 열을 클릭합니다 ID 목록 콤보박스를 클릭하면 현재 바꿀 수 있는 다이나믹셀의 ID를 볼 수 있습니다 바꾸고자 하는 ID를 선택하고 적용 버튼을 누르십시오 ID변경시 유의사항 RoboPlus Motion과 로보플러스 태스크에서 사용하기 위해서는 ID의 범위를 다음과 같은 범위 내로 설정해야 합니다 액츄에이터는 25 사이의 ID로 설정해야 합니다 AX S1은 100 109 사이의 ID로 설정해야 합니다 동작 모드 변경 다이나믹셀은 아래와 같은 가지 모드로 동작할 수 있습니다 바퀴 모드 일반 모터와 같이 360도 회전하는 모드 무한 회전 모드 관절 모드 일반적인 서보 모터와 같이 0도 300도 사이의 정해진 각도로 움직이는 모드 모드 변경 방법은 아래와 같이 RoboPlus Manager 를 통해 변경할 수 있으며 한 번 모드를 설정하면 전원을 차단해도 설정값이 유지됩니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 모드를 변경하려는 다이나믹셀을 클릭하고 컨트롤 테이블의 CW CCW 위치 제한 열을 클릭합니다 바퀴 모드를 설정하려면 CW CCW 위치 제한 컨트롤 테이블의 값을 모두 0으로 변경하면 됩니다 다음과 같이 바퀴 모드 버튼을 클릭하여 쉽게 설정할 수도 있습니다 다시 관절 모드로 설정하려면 CW CCW 위치 제한 컨트롤 테이블 값을 이외의 값으로 설정하면 됩니다 관절 모드 초기값은 CW 위치 제한 CCW 위치 제한 1023입니다 문제 해결 RoboPlus Manager에서 다이나믹셀을 찾을 수 없는 경우가 발생합니다 이런 경우는 다음과 같이 시도해보세요 다이나믹셀을 1개만 연결해서 ID가 중복되는지 확인해보세요 1개만 연결했을 때 왼쪽 리스트에 다이나믹셀이 보이면 ID가 중복될 가능성이 큽니다 ID 변경하기를 통해 ID를 바꿔 주시기 바랍니다 만약 다음 그림과 같이 리스트에서 다이나믹셀을 확인할 수 없다면 상세 검색 버튼을 누르시기 바랍니다 상세 검색 기능은 다이나믹셀의 통신 속도가 1Mbps로 설정되어 있지 않은 경우 속도를 1Mbps로 재설정하며 제어기에서 인식할 수 있도록 해 줍니다 위와 같은 방법으로도 문제가 해결되지 않는다면 다이나믹셀이 고장이 났을 가능성이 높습니다 구입처에 S를 의뢰하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#다이나믹셀-관리하기"
	},
	"3195": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210과 사용법이 동일 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#지그비-무선-조종"
	},
	"3196": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 RC 100 에 ZIG 100 모듈을 장착한 모습 CM 100 에 ZIG 110 모듈을 장착한 모습 CM 510 에 ZIG 110 모듈을 장착한 모습 CM 에 ZIG 100 모듈을 장착한 모습 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#지그비-무선-조종"
	},
	"3197": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "여러 대의 로봇 조종하기",
		"header3": "",
		"content": "사용자가 댄스나 공연데모를 할 때 여러 대의 로봇에 동시에 명령을 주는 방법입니다 ZIGBEE 모듈의 Broadcast 모드를 이용 하는것으로 로봇에게 동시에 명령을 줄 수 있습니다 바이올로이드 초급 종합 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 제어기를 사용하는 경우에는 제어기와 ZIG 100모듈을 연결합니다 로보플러스 매니저를 통해서 ZIG 100 모듈의 상대 로봇 무선 ID를 65535로 설정 합니다 Broadcast 채널을 따로 맞추지 않아도 통신이 가능합니다 RC 100을 이용해 직접 명령을 주거나 Zig2Serial을 이용해 PC에서 명령을 줄 수 있습니다 장치 채널 기본값습 채널 변경가능여부 CM 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 CM 5에 장착한 ZIG 100모듈의 경우에는 채널 변경이 불가능 합니다 따라서 사용자는 모두 채널 1번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능하므로 모든 채널을 일치시켜야 합니다 바이올로이드 프리미엄키트 CM 700 Zig2Serial과 다수 로봇과의 통신 RC 100과 다수 로봇과의 통신 CM 510 CM 700 제어기를 사용하는 경우에는 제어기와 ZIG 110 모듈을 연결합니다 로보플러스 매니저를 통해서 상대 로봇 무선 ID를 65535로 설정 합니다 제어기와 연결된 Zig 110의 경우에는 Broadcast 채널이 4번으로 되어 있기 때문에 Zig2Serial RC 100을 채널 4번으로 맞추셔야 합니다 RC 100 채널 바꾸는 방법 링크가기 Zig2Serial 채널 바꾸는 방법 링크가기 장치 채널 기본값습 채널 변경가능여부 CM 510 CM 530 변경 불가 Zig2Serial 변경 가능 RC 100 변경 가능 제어기에 연결한 ZIG 110은 채널 변경이 불가능합니다 따라서 사용자는 모두 채널 4번에 맞추셔서 사용 해야 브로드캐스트 통신이 가능합니다 각 장치 간의 채널이 다르면 통신이 불가능 하므로 모든 채널을 일치 시켜야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#여러-대의-로봇-조종하기"
	},
	"3198": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "로봇 꾸미기",
		"header3": "",
		"content": "로보티즈 프리미엄에 새롭게 제공되는 반투명 스킨을 이용하여 나만의 휴머노이드를 꾸밀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#로봇-꾸미기"
	},
	"3199": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "로봇 꾸미기",
		"header3": "반투명 전용 스킨 꾸미기",
		"content": "전용 스킨 도색 샘플 가슴 부분 전용 스킨을 도색하여 꾸민 샘플 사진들 입니다 로봇 머리 부분 스킨 샘플 로봇 머리 부분을 도색하여 꾸민 샘플 사진 입니다 스킨 장착한 로봇 샘플 사용자가 직접 꾸민 스킨 로봇들의 샘플 사진들 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#로봇-꾸미기"
	},
	"3200": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "센서 추가하기",
		"header3": "",
		"content": "로보티즈 프리미엄 혹은 로보티즈 GP 에서는 CM 510의 센서연결부를 통해 적외선 센서 와 접촉 센서 를 추가로 달 수 있습니다 각 센서에 대한 자세한 정보는 위의 텍스트에 각 센서에 대한 이름을 클릭하시면 해당 페이지로 이동하여 보실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#센서-추가하기"
	},
	"3201": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "센서 추가하기",
		"header3": "적외선 센서",
		"content": "적외선 센서 활용방안 적외선 센서는 로봇의 앞에 장애물을 감지 할 수 있습니다 로봇이 보행이나 이동 할 때 앞에 있는 물체를 감지 하기 하는 용도 등으로 활용 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#센서-추가하기"
	},
	"3202": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "센서 추가하기",
		"header3": "접촉 센서",
		"content": "접촉 센서 활용 방안 접촉 센서는 물체와 로봇이 접촉하는 것을 감지 하는 센서 입니다 예를 들어 사람이 로봇의 접촉 센서를 누르게 되면 로봇에 어떤 행동을 하게 하는 등의 용도 등으로 활용 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#센서-추가하기"
	},
	"3203": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "사용자 센서 제작",
		"header3": "",
		"content": "CM 510 CM 530에서는 ADC포트와 OUT포트를 이용하여 간단히 제어가 가능한 사용자 센서를 제작할 수 있습니다 주의 만약 잘못된 회로를 구성하여 CM 510의 외부 포트에 사용자 장치를 연결하면 회로가 손상될 수 있으므로 회로에 대한 지식을 먼저 습득하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-센서-제작"
	},
	"3204": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "사용자 센서 제작",
		"header3": "핀 구성 정보",
		"content": "CM 510의 외부 포트 핀 구성은 다음과 같습니다 OUT 5V 출력 가능 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND NC 사용하지 않음 CM 530의 외부 포트 핀 구성은 다음과 같습니다 OUT1 3V 출력 가능 최대 허용 전류 3A 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND OUT2 3V 출력 가능 최대 허용 전류 3A 참고 외부센서 사용시 5핀케이블을 사용해 주세요 5핀 케이블은 로보티즈 쇼핑몰에서 구매하실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-센서-제작"
	},
	"3205": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "사용자 센서 제작",
		"header3": "사용자 장치 제어",
		"content": "외부 출력 제어 다음과 같은 LED 회로를 구성한다면 1번 핀을 제어하여 LED를 껐다 켤 수 있는 장치를 만들 수 있습니다 제어기종류 및 LED의 종류에 따라 저항의 크기를 조정해야 합니다 먼저 로드 계산 등의 쓰기 가능 파라미터에 사용자 장치를 선택하고 장치가 연결된 포트를 설정합니다 이 후 읽기 가능 파라미터에 포트 값 상수를 이용하여 High신호를 설정합니다 위와 같은 코드가 실행되면 PORT3에 연결된 장치의 OUT 포트에 신호가 발생하게 되며 연결된 LED가 켜집니다 ADC값 읽어오기 로봇에서 센서로 사용되는 IR센서 거리센서 등 여러가지 장치들은 대부분 아날로그 출력을 지원합니다 이러한 센서들을 외부포트를 지원하는 제어기에 연결하여 이용할 수 있습니다 물론 센서는 사용자가 직접 회로를 제작하여 이용할 수 있으며 시중에서 판매하는 것을 이용할 수도 있습니다 다음 그림은 Tilt센서입니다 5V입력을 받으며 센서의 기울어짐에 따라 그 값을 아날로그 신호로 출력합니다 Tilt센서의 왼쪽 핀은 5V 입력핀 가운데 핀은 아날로그 신호 출력핀 오른쪽은 그라운드핀입니다 CM 510의 외부 포트에 서로 매칭되는 핀을 연결하여 주면 바로 사용할 수 있습니다 CM 510의 외부 포트 핀 정보를 참고하여 다음과 같이 연결하면 됩니 다 다음 예제와 같이 센서의 아날로그 출력값을 읽어와 로봇의 동작에 응용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#사용자-센서-제작"
	},
	"3206": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "그리퍼 장착",
		"header3": "",
		"content": "휴머노이드 로봇을 사용자의 용도에 맞게 그리퍼를 달아서 사용할 수 있습니다 그리퍼는 로봇이 물건을 집거나 던지거나 할 때 유용하게 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-장착"
	},
	"3207": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "그리퍼 장착",
		"header3": "그리퍼 재료",
		"content": "로보티즈 프리미엄을 이용하여 휴머노이드 B타입과 C타입은 AX 12 가 2개의 여유가 생깁니다 이것을 이용하여 그리퍼를 제작 할 수 있습니다 그리퍼를 만들 수 있는 주요 프레임과 AX 12 의 사진입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-장착"
	},
	"3208": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "그리퍼 장착",
		"header3": "그리퍼 만들기",
		"content": "ockquote 프레임과 AX 12 를 이용하여 그리퍼를 만드는 사진입니다 두손에 장착 할 때에는 두 개를 만드세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-장착"
	},
	"3209": {
		"product": "로보티즈 프리미엄",
		"header1": "참고자료",
		"header2": "그리퍼 장착",
		"header3": "그리퍼 추가",
		"content": "그리퍼 로봇을 만들어 자신이 원하는 동작을 제어 할 수 있습니다 그리퍼 로봇을 제어하는 방법에 대한 자세한 내용은 그리퍼 제어를 통해 확인 할 수 있습니다 타입 로봇에 그리퍼를 장착한 모습입니다 그리퍼에 사용된 AX 12 의 ID는 오른쪽 9번 왼쪽 10번 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/premium/#그리퍼-장착"
	},
	"3210": {
		"product": "로보티즈 STEM 키트",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#개요"
	},
	"3211": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#시작하기"
	},
	"3212": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "Level 부품 목록",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#level-1-부품-목록"
	},
	"3213": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "Level 부품 목록",
		"header3": "",
		"content": "CM 530 AX 12W AX 12A 적외선센서어레이 적외선 센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#level-2-부품-목록"
	},
	"3214": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#작동하기"
	},
	"3215": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "프로그램 다운로드",
		"content": "STEM Level 예제 STEM Level 예제 페이지에서 동작시키고자 하는 예제 로봇에 맞는 태스크 코드와 모션 파일을 로봇에 다운로드 합니다 제어기에 태스크 코드 다운로드 하기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#작동하기"
	},
	"3216": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "로봇 켜기",
		"content": "전원 스위치를 켜면 LED 가 깜빡이며 로봇이 켜집니다 MODE 버튼을 눌러 PLAY 에서 LED 가 깜빡이도록 합니다 MODE 버튼을 누를 때마다 LED 가 이동합니다 START 버튼을 누릅니다 PLAY 에서 LED 가 깜빡이지 않고 계속 켜져 있는지 확인하세요 LED 가 켜지지 않으면 전원 케이블이 제대로 연결되어 있는지 확인합니다 이상이 없으면 배터리를 충전하세요 충전하기 참조 로봇의 전원이 켜지지 않습니다 배터리가 제대로 연결되어 있나요 배터리가 충전되어 있나요 퓨즈가 끊어지진 않았나요 퓨즈 교체하기 를 참조하세요 배터리 잔량을 확인하고 싶어요 CM 530 의 전원을 켠 후 버튼을 누르면 LED 가 켜지는 갯수로 배터리 잔량을 확인할 수 있습니다 로봇 작동 중 경고음 삐리삐리 소리가 연속해서 들립니다 배터리를 거의 소모하였습니다 즉시 배터리를 충전하세요 충전하기 참조 충전하지 않고 계속 로봇을 작동시키면 잠시 후 로봇의 전원이 갑자기 꺼지면서 로봇에 충격이 갈 수 있으므로 주의하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#작동하기"
	},
	"3217": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "작동하기",
		"header3": "조립 확인하기",
		"content": "조립 확인 모드에서는 로봇이 제대로 조립되었는지 확인할 수 있습니다 모터를 하나씩 선택하여 로봇의 기본 자세와 비교하세요 조립 확인 모드를 실행하려면 로봇켜기 의 2번 상태에서 제어기 버튼 를 누르면서 START 버튼을 누릅니다 ockquote 멜로디 멜로디1 가 울릴 때까지 버튼에서 손을 떼지 않고 있어야 합니다 버튼을 눌러 모터를 하나씩 선택합니다 이 때 선택된 모터는 LED 가 켜지며 기본 위치로 돌아갑니다 ockquote ID 를 씩 증가시킴 ID 를 씩 감소시킴 LED 가 켜진 모터의 ID 와 조립서의 ID 를 비교하세요 ockquote 해당 ID 의 모터가 로봇에 존재하지 않을 경우 경고음이 울립니다 실제로 모터가 멈춰있는 위치와 기본 자세에 해당하는 관절의 모습을 서로 비교하세요 ockquote LED 는 켜져 있지만 모터에 힘이 풀려 있다면 모터의 조립 상태나 주변의 케이블 등을 다시 살펴보세요 적외선 센서가 연결되어 있는 포트 번호를 비교하세요 ockquote 정해진 포트에 연결된 적외선 센서는 물체를 감지하면 해당 포트 번호 만큼 깜박 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#작동하기"
	},
	"3218": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "충전하기",
		"header3": "",
		"content": "STEM 키트는 리튬폴리머로도 작동할 수 있으며 쇼핑몰 http www robotis com shop 에서 별도로 구매합니다 로봇 작동 중 배터리 경고음이 울리면 배터리를 충전합니다 충전이 시작되면 충전기의 붉은색 LED가 깜빡입니다 충전이 완료되면 녹색 LED가 켜집니다 배터리 분리 충전기 연결 충전 충전중 붉은색 LED 충전완료 녹색 LED SMPS 를 로봇에 직접 연결하면 외부 전원으로 로봇을 구동할 수도 있습니다 배터리에는 충전용 커넥터와 로봇 작동용 커넥터가 연결되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#충전하기"
	},
	"3219": {
		"product": "로보티즈 STEM 키트",
		"header1": "시작하기",
		"header2": "충전하기",
		"header3": "충전 시간",
		"content": "완전 방전시 충전 시간 1시간 1시간 30분 완전 방전 상태에서 너무 오랜시간 충전하지 않으면 충전지의 수명이 급격히 짧아질 수 있습니다 충전지의 상태에 따라 충전 시간이 다를 수 있습니다 충전 및 동작 시간이 너무 짧다면 충전지의 수명이 다 되었을 수 있습니다 보관시 주의사항 배터리를 충전기나 로봇에 연결된 상태로 보관하지 마세요 오랫동안 사용 안할시 절반정도 충전된 상태로 보관해 주세요 온도나 습도가 높은 곳에 보관하지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#충전하기"
	},
	"3220": {
		"product": "로보티즈 STEM 키트",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#다운로드"
	},
	"3221": {
		"product": "로보티즈 STEM 키트",
		"header1": "다운로드",
		"header2": "STEM Level 예제",
		"header3": "",
		"content": "각 단원의 단계마다 동작이 다르므로 대표적인 동작에 대한 알고리즘을 기준으로 설명하였습니다 로봇 사진 설명 순차명령로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 알고리즘 제어기의 버튼으로 로봇의 이동 방향을 제어 동작방법 직진 좌회전 우회전 후진 명령을 순차적으로 입력하고 실행 START 버튼을 누르면 입력 순서에 따라 이동 딱정벌레로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 알고리즘 검은 선의 적외선 감지 값에 따라 로봇의 이동 방향을 제어 동작방법 검은 선으로 된 경기장에서 작동시키면 안에서만 이동하며 상대를 만나면 밀어내는 동작 수행 무한궤도로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 알고리즘 적외선 센서의 감지 시간으로 장애물을 감지하고 로봇의 이동 방향을 제어 동작방법 높이가 낮은 장애물은 넘어가고 높은 장애물은 적외선 센서로 감지하여 방향을 바꿔 이동하며 뒤집어 져도 정상적으로 주행 줄달음차 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 알고리즘 교차된 검은 선을 만나면 정해진 방향대로 로봇의 이동 방향을 제어 동작방법 적외선센서어레가 검은 선을 감지하는 부분에 따라 로봇을 직진 좌회전 우회전 하며 미션을 수행하며 지정한 경로대로 주행 악기로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 알고리즘 적외선센서어레이에 감지된 위치에 따라 다른 음계를 출력 동작방법 적외선센서어레이와 제어기 버튼을 사용하여 옥타브 음계를 출력할 수 있고 곡을 연주하거나 녹음 반복 재생이 가능 바이크로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID 바퀴모드 AX 12W ID 관절모드 알고리즘 검은 선을 따라 이동하며 장애물을 감지하면 회피하는 동작 제어 동작방법 양쪽 적외선 센서와 조향장치를 사용해 검은 선을 따라 이동하며 선 위의 장애물을 감지하면 회피하여 다시 주행 어보이더 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 알고리즘 오른쪽 적외선 센서를 사용해 일정거리를 유지하며 미로를 따라 이동하는 동작 제어 동작방법 로봇의 왼쪽 오른쪽 가운데에 있는 적외선 센서로 좌측 우측으로 이동하며 제시된 미로에서 다양한 미션을 수행하고 빠져 나오는 동작 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#stem-level-1-예제"
	},
	"3222": {
		"product": "로보티즈 STEM 키트",
		"header1": "다운로드",
		"header2": "STEM Level 예제",
		"header3": "",
		"content": "각 단원의 단계마다 동작이 다르므로 대표적인 동작에 대한 알고리즘을 기준으로 설명하였습니다 로봇 사진 설명 펜봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12A ID ID 바퀴모드 알고리즘 버튼 명령에 따라 입력된 이동 방향대로 로봇 제어 동작방법 그림을 그릴 수 있는 펜을 장착하고 종이 위에 올려 놓으면 제어기 버튼을 눌러 글자 가 어 를 그리는 동작 수행 집게탐사차 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12A ID ID 관절모드 알고리즘 미리 입력된 명령으로 경로를 이동하고 미션을 해결하도록 로봇 제어 동작방법 일정한 위치에 장애물 종류를 지정한 위치에 옮기는 로봇으로 START 를 출발하여 FINISH에 정해진 경로로 이동하는 동작 수행 10 포터로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 AX 12A ID ID 관절모드 알고리즘 이동 중 장애물을 감지하여 정해진 위치로 옮기도록 로봇 제어 동작방법 박스 위에 있는 장애물을 감지하여 옮기는 로봇으로 적외선 센서를 사용하여 지정한 위치로 이동하여 장애물을 위치시키는 동작 수행 11 쇠똥구리로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 AX 12A ID ID 관절모드 알고리즘 입력 받은 버튼 신호에 따라 집게와 로봇 제어 동작방법 리모컨을 사용해 직진 좌회전 우회전 후진 제자리좌회전 제자리우회전으로 로봇이 이동하고 집게 벌리기 오므리기 올리기 내리기 동작 수행 12 로봇팔 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12A ID ID 관절모드 알고리즘 적외선 센서에 감지되는 컵의 크기에 따라 지정된 위치로 옮기는 로봇 제어 동작방법 작은 컵 두개와 큰 컵 두 개를 지정된 위치로 옮겨 놓는 예제 로봇으로 감지 순서와 무관하게 지정된 위치로 옮겨 놓는 동작수행 13 뚜벅이 로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download 데모용 모션파일 Download Video 다이나믹셀 설정 값 AX 12A ID ID 관절모드 알고리즘 적외선 센서로 장애물의 위치를 감지하고 피하는 로봇 제어 동작방법 장애물이 왼쪽에 감지된 경우 오른쪽으로 오른쪽에 감지된 경우 왼쪽으로 이동하며 위에 손이 감지된 경우 빠른 속도로 이동하는 동작 수행 14 헥사포드 Download 기본단계 Download 응용단계 Download 실전단계 Download 데모용 모션파일 Download Video 다이나믹셀 설정 값 AX 12A ID ID 관절모드 알고리즘 적외선 센서로 장애물의 위치를 감지하고 피하는 로봇 제어 동작방법 장애물이 왼쪽에 감지된 경우 오른쪽으로 오른쪽에 감지된 경우 왼쪽으로 이동하며 위에 손이 감지된 경우 빠른 속도로 이동하는 동작 수행 15 펭귄로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download 데모용 모션파일 Download Video 다이나믹셀 설정 값 AX 12W ID ID 관절모드 AX 12A ID ID 관절모드 알고리즘 입력 받아 동작한 명령을 기억하여 순차적으로 다시 실행하는 로봇 제어 동작방법 임의대로 입력받은 왼팔 들기 오른팔 들기 인사하기 박수치기 행동을 순서대로 기억하였다가 다시 반복 동작 수행 16 캐논로봇 Download 기본단계 Download 응용단계 Download 실전단계 Download Video 다이나믹셀 설정 값 AX 12W ID ID 바퀴모드 AX 12A ID ID 관절모드 알고리즘 입력 받은 버튼 신호에 따라 집게와 발사장치 로봇 제어 동작방법 리모컨을 사용해 직진 좌회전 우회전 후진 제자리좌회전 제자리우회전으로 로봇이 이동하고 집게 벌리기 오므리기 올리기 내리기 발사하기 동작 수행 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#stem-level-2-예제"
	},
	"3223": {
		"product": "로보티즈 STEM 키트",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#참고자료"
	},
	"3224": {
		"product": "로보티즈 STEM 키트",
		"header1": "참고자료",
		"header2": "퓨즈 교체하기",
		"header3": "",
		"content": "CM 510 530 에는 과전류가 흘러서 회로가 망가지는 것을 방지하기 위한 퓨즈 Fuse 가 있습니다 만약 CM 510 530 이 배터리로는 전원이 켜지지 않고 SMPS로만 전원이 켜진다면 퓨즈가 끊어진 것이니 교체해 주어야 합니다 CM 510 CM530 의 퓨즈 사이즈는 아래와 같으며 용량은 125V 5A 10A 사이의 제품을 사용하시면 됩니다 퓨즈의 교체 방법 CM 510 530 뒷면의 퓨즈를 확인한다 핀셋 등으로 퓨즈를 새 것으로 교체한다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#퓨즈-교체하기"
	},
	"3225": {
		"product": "로보티즈 STEM 키트",
		"header1": "참고자료",
		"header2": "다이나믹셀 관리하기",
		"header3": "",
		"content": "로봇 관절로 사용되는 다이나믹셀은 매우 많은 기능들을 내장하고 있습니다 여기서는 로봇을 만들면서 다이나믹셀의 설정을 바꾸는 방법에 대해 설명합니다 ID바꾸기 다이나믹셀의 ID는 다음과 같이 변경할 수 있습니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 ID를 바꾸려는 다이나믹셀을 클릭합니다 컨트롤 테이블의 ID 열을 클릭합니다 ID 목록 콤보박스를 클릭하면 현재 바꿀 수 있는 다이나믹셀의 ID를 볼 수 있습니다 바꾸고자 하는 ID를 선택하고 적용 버튼을 누르십시오 ID변경시 유의사항 RoboPlus Motion과 로보플러스 태스크에서 사용하기 위해서는 ID의 범위를 다음과 같은 범위 내로 설정해야 합니다 액츄에이터는 25 사이의 ID로 설정해야 합니다 AX S1은 100 109 사이의 ID로 설정해야 합니다 동작 모드 변경 다이나믹셀은 아래와 같은 가지 모드로 동작할 수 있습니다 바퀴 모드 일반 모터와 같이 360도 회전하는 모드 무한 회전 모드 관절 모드 일반적인 서보 모터와 같이 0도 300도 사이의 정해진 각도로 움직이는 모드 모드 변경 방법은 아래와 같이 RoboPlus Manager 를 통해 변경할 수 있으며 한 번 모드를 설정하면 전원을 차단해도 설정값이 유지됩니다 제어기가 연결된 포트를 설정합니다 연결 버튼을 누릅니다 왼쪽에서 연결된 다이나믹셀의 리스트를 확인할 수 있습니다 모드를 변경하려는 다이나믹셀을 클릭하고 컨트롤 테이블의 CW CCW 위치 제한 열을 클릭합니다 바퀴 모드를 설정하려면 CW CCW 위치 제한 컨트롤 테이블의 값을 모두 0으로 변경하면 됩니다 다음과 같이 바퀴 모드 버튼을 클릭하여 쉽게 설정할 수도 있습니다 다시 관절 모드로 설정하려면 CW CCW 위치 제한 컨트롤 테이블 값을 이외의 값으로 설정하면 됩니다 관절 모드 초기값은 CW 위치 제한 CCW 위치 제한 1023입니다 문제 해결 RoboPlus Manager에서 다이나믹셀을 찾을 수 없는 경우가 발생합니다 이런 경우는 다음과 같이 시도해보세요 다이나믹셀을 1개만 연결해서 ID가 중복되는지 확인해보세요 1개만 연결했을 때 왼쪽 리스트에 다이나믹셀이 보이면 ID가 중복될 가능성이 큽니다 ID 변경하기를 통해 ID를 바꿔 주시기 바랍니다 만약 다음 그림과 같이 리스트에서 다이나믹셀을 확인할 수 없다면 상세 검색 버튼을 누르시기 바랍니다 상세 검색 기능은 다이나믹셀의 통신 속도가 1Mbps로 설정되어 있지 않은 경우 속도를 1Mbps로 재설정하며 제어기에서 인식할 수 있도록 해 줍니다 위와 같은 방법으로도 문제가 해결되지 않는다면 다이나믹셀이 고장이 났을 가능성이 높습니다 구입처에 S를 의뢰하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#다이나믹셀-관리하기"
	},
	"3226": {
		"product": "로보티즈 STEM 키트",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210과 사용법이 동일 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#지그비-무선-조종"
	},
	"3227": {
		"product": "로보티즈 STEM 키트",
		"header1": "참고자료",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 RC 100 에 ZIG 100 모듈을 장착한 모습 CM 100 에 ZIG 110 모듈을 장착한 모습 CM 510 에 ZIG 110 모듈을 장착한 모습 CM 에 ZIG 100 모듈을 장착한 모습 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/bioloid/stem/#지그비-무선-조종"
	},
	"3228": {
		"product": "자동차 로봇",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "초등학교 6학년 실과 교과에 사용되는 로봇입니다 4가지 모드로 동작시키며 로봇에 대해 학습합니다 소리센서 접촉센서 및 적외선 센서가 내장된 전용 제어기가 포함되어 있습니다 4가지 동작모드를 간편하게 선택할 수 있도록 MODE버튼과 LED가 부착되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#개요"
	},
	"3229": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#로봇-사용법"
	},
	"3230": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "소리센서 모드",
		"header3": "",
		"content": "소리의 횟수에 따라 동작해요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#소리센서-모드"
	},
	"3231": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "소리센서 모드",
		"header3": "설정 방법",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#소리센서-모드"
	},
	"3232": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "소리센서 모드",
		"header3": "동작 방법 박수를 1~3번 쳐서 로봇을 동작시킵니다.",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#소리센서-모드"
	},
	"3233": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "적외선센서 모드",
		"header3": "",
		"content": "검은 선을 따라가요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#적외선센서-모드"
	},
	"3234": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "적외선센서 모드",
		"header3": "설정방법",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#적외선센서-모드"
	},
	"3235": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "적외선센서 모드",
		"header3": "동작방법: 검은 선 위에 로봇을 올려놓으면 검은 선을 따라갑니다. 이때 방향은 상관없습니다.",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#적외선센서-모드"
	},
	"3236": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "적외선센서 모드",
		"header3": "적외선 값 조정(로봇이 검은 선을 이탈하는 경우)",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#적외선센서-모드"
	},
	"3237": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "접촉센서 모드",
		"header3": "",
		"content": "접촉센서에 물체가 닿으면 회전해요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#접촉센서-모드"
	},
	"3238": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "접촉센서 모드",
		"header3": "설정방법",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#접촉센서-모드"
	},
	"3239": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "접촉센서 모드",
		"header3": "동작방법: 접촉센서를 손으로 건드리거나 장애물을 설치하여 회전시킵니다.",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#접촉센서-모드"
	},
	"3240": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "동작센서 모드",
		"header3": "",
		"content": "손 동작에 따라 회전해요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#동작센서-모드"
	},
	"3241": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "동작센서 모드",
		"header3": "설정방법",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#동작센서-모드"
	},
	"3242": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "동작센서 모드",
		"header3": "동작방법: 적외선센서의 양쪽 끝 부분을 가려 회전시킵니다.",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#동작센서-모드"
	},
	"3243": {
		"product": "자동차 로봇",
		"header1": "로봇 사용법",
		"header2": "속력 바꾸기",
		"header3": "",
		"content": "바퀴로 이동하는 경우 기본 로봇 자동차 로봇 에는 저속 다리로 이동하는 경우 버그 로봇 에 는 고속으로 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#속력-바꾸기"
	},
	"3244": {
		"product": "자동차 로봇",
		"header1": "교육자료 다운로드",
		"header2": "",
		"header3": "",
		"content": "다운로드 ROBOTIS Scratch 다운로드 ROBOTCAR entry ",
		"url": "http://emanual.robotis.com/docs/kr/edu/car/#교육자료-다운로드"
	},
	"3245": {
		"product": "드림 1단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림 교육키트는 초보자가 쉽게 시작할 수 있도록 개발된 최적의 로봇 솔루션입니다 로보티즈 드림 1단계 는 로보티즈 드림의 기본 부품사용법 학습부터 시작하여 로봇의 동력과 전기 무게중심의 이해 힘의 변혼과 전달의 원리 2족 4족 보행 로봇의 기본 개념 학습 등 원리와 이론 학습 등 원리와 이론 학습에 중점을 둔 로봇 입문용 키트입니다 로보티즈 드림 교육키트 로봇 수업용 1단계에는 충전을 통해 반영구적으로 사용할 수 있는 리튬이온 전지가 포함되어 있습니다 제품에 포함되어 있는 USB케이블을 이용하여 충전이 가능하며 스마트기기 충전기로도 충전할 수 있습니다 보다 다양한 주변장치를 이용하여 로봇을 제작하고 로봇 프로그래밍을 하기 위해서는 드림 2단계를 구매하시면 됩니다 주의 드림 1단계는 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-1/#개요"
	},
	"3246": {
		"product": "드림 1단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-1/#부품-목록"
	},
	"3247": {
		"product": "드림 2단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림 2단계 는 로봇이란 무엇인지에 대한 기본 개념부터 로봇의 동력 센서의 활용 속도와 힘 보행과 주행 등 과학적 원리와 물리적 이론에 보다 쉽게 접근하고 실험을 통해 자연스럽게 개념과 원리를 습득하게 해 줍니다 비슷한 형태의 로봇을 반복적으로 분해 조립하는 단순 학습이 아닌 로봇을 움직일 수 있게 하는 원리를 이해하고 학습할 수 있습니다 로보티즈 드림 2단계는 총 12장의 교재와 예제 로봇이 결합되어 프로그래밍의 기본 학습과 센서의 활용 로봇의 제작 원리의 이해 문제 풀이 등의 과정을 제공합니다 12장에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 로보티즈 드림 2단계의 통합프로그램은 제어기 CM 150 에 내장되어있으며 사용자가 직접 프로그램 학습 및 다운로드를 하기 위해서는 로보티즈 드림 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다 보다 다양한 주변 장치를 이용하여 로봇을 제작 및 프로그래밍 하기 위해서는 로보티즈 드림 3단계를 구매하시면 됩니다 주의 드림 2단계는 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-2/#개요"
	},
	"3248": {
		"product": "드림 2단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "CM 150 감속모터 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-2/#부품-목록"
	},
	"3249": {
		"product": "드림 2단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림 2단계에 포함된 제어기 CM 150 에는 다운로드 없이 사용할 수 있는 통합 프로그램이 내장되어 있습니다 주의 만약 단 한번이라도 다운로드한 적이 있다면 통합 프로그램이 지워진 것이므로 USB 케이블을 이용해서 통합 프로그램을 다운로드해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-2/#작동하기"
	},
	"3250": {
		"product": "드림 2단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "제어기의 시작버튼을 연속으로 누르면 도 레 미와 같은 음계 소리가 나며 누른 횟수에 따라 내장된 프로그램을 선택할 수 있습니다 제어기 작동 시 자동꺼짐 타이머 의 기본 설정 값은 5분 입니다 자동꺼짐타이머 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-2/#작동방법"
	},
	"3251": {
		"product": "드림 2단계",
		"header1": "작동하기",
		"header2": "프로그램 선택방법",
		"header3": "",
		"content": "자세한 내용은 키트에 포함된 교재를 참고 하시기 바랍니다 시작버튼 누름횟수 교재 내용 로봇 이미지 도 1장 예제 코끼리 레 2장 예제 꽃과 반딧불 미 3장 예제 어보이더 파 4장 예제 물개 솔 5장 예제 장수풍뎅이 라 6장 예제 너구리 시 7장 예제 전갈 높은 도 8장 예제 강아지 높은 레 9장 예제 다람쥐 10 높은 미 10장 예제 들소 11 높은 파 11장 예제 악어 12 높은 솔 12장 예제 상상하세요 참고 USB케이블은 로보티즈 드림 1단계 구성품에 포함되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-2/#프로그램-선택방법"
	},
	"3252": {
		"product": "드림 2단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림 2단계 교안을 참고하세요 기본적으로 프로그램이 내장되어 있습니다 만일 프로그램을 직접 만들거나 다운로드 할 경우에 예제 태스크 코드의 다운로드 방법 을 참고하세요 다운로드시 필요한 USB 케이블 은 1단계 구성품에 포함되어 있습니다 2단계 통합 예제 프로그램 제품 구입 시 제어기 CM 150 에 기본으로 들어있는 프로그램입니다 통합 프로그램 사용법은 작동하기 를 참고하세요 DREAM L2 Total KR tsk 예제 프로그램 로봇 이미지 프로그램 1장 예제 코끼리 DREAM L2 Elephant KR tsk 2장 예제 꽃과 반딧불 DREAM L2 Fireflylight KR tsk 3장 예제 어보이더 DREAM L2 Avoider KR tsk 4장 예제 물개 DREAM L2 Seal KR tsk 5장 예제 장수풍뎅이 DREAM L2 Abeetle KR tsk 6장 예제 너구리 DREAM L2 Raccoon KR tsk 7장 예제 전갈 DREAM L2 Scorpion KR tsk 8장 예제 강아지 DREAM L2 Puppy KR tsk 9장 예제 다람쥐 DREAM L2 Squirrel KR tsk 10장 예제 들소 DREAM L2 Buffalo KR tsk 11장 예제 악어 DREAM L2 Crocodile KR tsk 12장 예제 상상하세요 DREAM L2 Distancesensor KR tsk ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-2/#교안예제"
	},
	"3253": {
		"product": "드림 3단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림 3단계 는 제어기를 통한 로봇의 제어 원리부터 서보모터의 제어 접촉센서와 적외선센서 LED 모듈의 제어 원리를 학습할 수 있습니다 로봇 프로그램의 순서도 개념을 이해하고 프로그래밍 기초 지식을 학습함으로써 실질적이고 기본적인 로봇 제작 및 프로그래밍을 살펴보는 단계입니다 제작한 로봇을 센서로 동작시키거나 게임을 할 수 있는 프로그램을 직접 체험해 봅니다 로보티즈 드림 3단계는 2단계 키트와 결합되어 총 12장의 교재와 예제 로봇이 결합되어 제어 프로그램과 센서들의 활용 원리의 이해 문제풀이 등의 과정을 제공합니다 12회에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 주의 교육키트 3단계는 2단계 키트의 부품들이 있어야 로봇을 제작할 수 있습니다 반드시 교육키트 1단계 2단계 를 먼저 구매하시기 바랍니다 로보티즈 드림 3단계에서 프로그램은 제어기 CM 150 에 사용자가 직접 프로그램 하거나 다운로드 해야 합니다 로보티즈 드림 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다 로봇을 제작하여 보다 다양한 형태로 제작하거나 로봇을 조종하기 위해서는 로보티즈 드림 4단계를 구매하시면 됩니다 주의 드림 3단계는 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-3/#개요"
	},
	"3254": {
		"product": "드림 3단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "서보 모터 적외선 센서 LED 모듈 접촉 센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-3/#부품-목록"
	},
	"3255": {
		"product": "드림 3단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림 3단계 교안을 참고하세요 예제 프로그램은 사용자가 직접 다운로드해야 합니다 프로그램을 다운로드 하거나 직접 만들 경우에 예제 태스크 코드의 다운로드 방법 을 참고하세요 다운로드시 필요한 USB 케이블 은 1단계 구성품에 포함되어 있습니다 예제 로봇 TASK Code 오르골 Download 로보청소기 Download 트럭 Download 범버카 Download 지게차 Download 전기기타 Download 청기백기 Download 크레인 Download 회전바구니 Download 10 바이킹 Download 11 두더지게임 Download 12 도깨비 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-3/#교안예제"
	},
	"3256": {
		"product": "드림 4단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림 4단계 는 리모컨를 통한 다양한 형태의 로봇 조종 원리를 학습할 수 있습니다 로봇 프로그램의 순서도 개념을 이해하고 프로그래밍 기초 지식을 학습함으로써 대회 출전을 위한 실질적인 로봇 제작 및 프로그래밍을 살펴보는 단계입니다 제작한 로봇으로 기록 경기를 하거나 게임을 할 수 있는 프로그램을 직접 체험해 봅니다 로보티즈 드림 4단계는 3단계 키트와 결합되어 총 12개의 예제 로봇을 만들 수 있습니다 또한 교재에는 12개의 예제 로봇을 만들 수 있는 조립서와 예제 로봇들의 제어 프로그램 부품들의 활용 원리의 이해 문제풀이 등의 과정을 제공합니다 12장에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 주의 교육키트 4단계는 3단계 키트의 부품들이 있어야 로봇을 제작할 수 있습니다 반드시 교육키트 1단계 2단계 3단계 를 먼저 구매하시기 바랍니다 보티즈 드림 4단계에서 프로그램은 제어기 CM 150 에 사용자가 직접 프로그램 하거나 다운로드 해야 합니다 로보티즈 드림 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다 주의 드림 4단계는 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-4/#개요"
	},
	"3257": {
		"product": "드림 4단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "BT 210 RC 100B ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-4/#부품-목록"
	},
	"3258": {
		"product": "드림 4단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림 4단계 교안을 참고하세요 예제 프로그램은 사용자가 직접 다운로드해야 합니다 프로그램을 다운로드 하거나 직접 만들 경우에 예제 태스크 코드의 다운로드 방법 을 참고하세요 다운로드시 필요한 USB 케이블 은 1단계 구성품에 포함되어 있습니다 예제 로봇 TASK Code 탱크 Download 로봇 기사 Download 전투로봇 Download 축구로봇 Download 굴삭기 Download 사다리차 Download 지게차 Download 권투로봇 Download 불도저 Download 10 드리블로봇 Download 11 탐사로봇 Download 12 운반로봇 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream1-4/#교안예제"
	},
	"3259": {
		"product": "드림 II 1단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림 교육키트 는 초보자가 쉽게 시작할 수 있도록 개발된 최적의 로봇 솔루션입니다 로보티즈 드림 1단계는 로보티즈 드림의 기본 부품사용법 학습부터 시작하여 로봇의 동력과 전기 무게중심의 이해 힘의 변환과 전달의 원리 2족 4족 보행 로봇의 기본 개념 등 원리와 이론 학습에 중점을 둔 로봇 입문용 키트입니다 로보티즈 드림 교육키트 로봇 수업용 1단계에는 충전을 통해 반영구적으로 사용할 수 있는 리튬이온 전지가 포함되어 있습니다 제품에 포함되어 있는 USB케이블을 이용하여 충전이 가능하며 스마트기기 충전기로도 충전할 수 있습니다 보다 다양한 주변장치를 이용하여 로봇을 제작하고 로봇 프로그래밍을 하기 위해서는 드림 2단계를 구매하시면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-1/#개요"
	},
	"3260": {
		"product": "드림 II 1단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-1/#부품-목록"
	},
	"3261": {
		"product": "드림 II 2단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림 2단계 는 로봇이란 무엇인지에 대한 기본 개념부터 로봇의 동력 센서의 활용 속도와 힘 보행과 주행 등 과학적 원리와 물리적 이론에 보다 쉽게 접근하고 실험을 통해 자연스럽게 개념과 원리를 습득하게 해 줍니다 비슷한 형태의 로봇을 반복적으로 분해 조립하는 단순 학습이 아닌 로봇을 움직일 수 있게 하는 원리를 이해하고 학습할 수 있습니다 로보티즈 드림 2단계는 총 12장의 교재와 예제 로봇이 결합되어 프로그래밍의 기본 학습과 센서의 활용 로봇의 제작 원리의 이해 문제 풀이 등의 과정을 제공합니다 12장에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 로보티즈 드림 2단계의 통합프로그램은 제어기 CM 150 에 내장되어있으며 사용자가 직접 프로그램 학습 및 다운로드를 하기 위해서는 로보티즈 드림 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다 보다 다양한 주변 장치를 이용하여 로봇을 제작 및 프로그래밍하기 위해서는 로보티즈 드림 3단계를 구매하시면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#개요"
	},
	"3262": {
		"product": "드림 II 2단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "CM 150 감속 모터 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#부품-목록"
	},
	"3263": {
		"product": "드림 II 2단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림II 2단계에 포함된 제어기 CM 150 에는 다운로드 없이 사용할 수 있는 통합 프로그램이 내장되어 있습니다 주의 만약 단 한번이라도 다운로드한 적이 있다면 통합 프로그램이 지워진 것이므로 USB 케이블을 이용해서 통합 프로그램을 다운로드해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#작동하기"
	},
	"3264": {
		"product": "드림 II 2단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "제어기의 시작버튼을 연속으로 누르면 도 레 미와 같은 음계 소리가 나며 누른 횟수에 따라 내장된 프로그램을 선택할 수 있습니다 제어기 작동 시 자동꺼짐 타이머 의 기본 설정 값은 5분 입니다 자동꺼짐타이머 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#작동방법"
	},
	"3265": {
		"product": "드림 II 2단계",
		"header1": "작동하기",
		"header2": "프로그램 선택 방법",
		"header3": "",
		"content": "자세한 내용은 키트에 포함된 교재를 참고하시기 바랍니다 시작 버튼 누름 횟수 교재내용 로봇 도 1장 예제 레 2장 예제 미 3장 예제 파 4장 예제 솔 5장 예제 라 6장 예제 시 7장 예제 높은 도 8장 예제 높은 레 9장 예제 10 높은 미 10장 예제 11 높은 파 11장 예제 12 높은 솔 12장 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#프로그램-선택-방법"
	},
	"3266": {
		"product": "드림 II 2단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림II 2단계 교안을 참고하세요 기본적으로 프로그램이 내장되어 있습니다 만일 프로그램을 직접 만들거나 다운로드 할 경우 예제 태스크 코드의 다운로드 방법 을 참고하세요 다운로드시 필요한 USB 케이블은 1단계 구성품에 포함되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#교안예제"
	},
	"3267": {
		"product": "드림 II 2단계",
		"header1": "교안예제",
		"header2": "통합 예제 프로그램",
		"header3": "",
		"content": "제품 구입 시 제어기 CM 150 에 기본으로 들어있는 프로그램입니다 통합 프로그램 사용법은 작동하기 를 참고하세요 다운로드 DREAM L2 Total KR tskx ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#통합-예제-프로그램"
	},
	"3268": {
		"product": "드림 II 2단계",
		"header1": "교안예제",
		"header2": "단원별 예제 프로그램",
		"header3": "",
		"content": "코끼리 Download 꽃과 반딧불 Download 어보이더 Download 물개 Download 장수풍뎅이 Download 너구리 Download 전갈 Download 강아지 Download 다람쥐 Download 10 들소 Download 11 악어 Download 12 상상하세요 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-2/#단원별-예제-프로그램"
	},
	"3269": {
		"product": "드림 II 3단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림II 3단계 는 적외선 수신기와 리모콘을 이용해 조종이 가능한 로봇 예제들로 구성되어 있습니다 또한 서보모터를 이용한 다양한 동작과 프로그램을 학습할 수 있습니다 로보티즈 드림II 3단계는 총 11장의 교재와 예제 로봇이 결합되어 프로그래밍의 응용 학습과 센서의 활용 서보모터와 센서의 이해 문제 풀이 등의 과정을 제공합니다 11장에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 또한 1장의 창작과정을 통해 스스로 학습할 수 있도록 안내 하고 있습니다 로보티즈 드림II 3단계의 프로그램은 사용자가 직접 프로그램 학습 및 다운로드를 해야합니다 다운로드를 위해서는 로보티즈 드림II 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다 보다 다양한 주변 장치를 이용하여 로봇을 제작 및 프로그래밍하기 위해서는 로보티즈 드림II 4단계를 구매하시면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-3/#개요"
	},
	"3270": {
		"product": "드림 II 3단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "서보 모터 RC 100B ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-3/#부품-목록"
	},
	"3271": {
		"product": "드림 II 3단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림II 3단계 교안을 참고하세요 예제 프로그램은 사용자가 직접 다운로드 해야 합니다 만일 프로그램을 직접 만들거나 다운로드 할 경우에 예제 태스크 코드의 다운로드 방법 을 참고하세요 다운로드시 필요한 USB 케이블은 1단계 구성품에 포함되어 있습니다 예제 로봇 TASK Code 보안로봇 Download 소리감지기 Download 사륜자동차 Download 저금통 Download 오뚝이 Download 다이얼금고 Download 오토바이 Download 대포 Download 비행기 Download 10 로봇팔 Download 11 스포츠카 Download 12 창작로봇 제공되지 않음 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-3/#교안예제"
	},
	"3272": {
		"product": "드림 II 4단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림II 4단계 는 제어기를 통한 로봇의 제어 원리부터 서보모터의 제어 접촉센서와 적외선 센서 LED 모듈의 제어 원리를 학습할 수 있습니다 로봇 프로그램의 순서도 개념을 이해하고 프로그래밍 기초 지식을 학습함으로써 실질적이고 기본적인 로봇제작 및 프로그래밍을 살펴보는 단계입니다 제작한 로봇을 센서로 동작시키거나 게임을 할 수 있는 프로그램을 직접 체험해 봅니다 로보티즈 드림II 4단계는 3단계 키트와 결합되어 총 12장의 교재와 예제 로봇이 결합되어 제어 프로그램과 센서들의 활용 원리의 이해 문제풀이 등의 과정을 제공합니다 12회에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 주의 교육키트 4단계는 3단계 키트의 부품들이 있어야 로봇을 제작할 수 있습니다 반드시 교육키트 1단계 2단계 3단계 를 먼저 구매하시기 바랍니다 로보티즈 드림II 4단계에서 프로그램은 제어기 CM 150 에 사용자가 직접 프로그램 하거나 다운로드 해야 합니다 로보티즈 드림II 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다 로봇을 제작하여 보다 다양한 형태로 제작하거나 로봇을 블루투스로 조종하기 위해서는 로보티즈 드림II 5단계를 구매하시면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-4/#개요"
	},
	"3273": {
		"product": "드림 II 4단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "서보 모터 적외선 센서 LED 모듈 접촉 센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-4/#부품-목록"
	},
	"3274": {
		"product": "드림 II 4단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림II 4단계 교안을 참고하세요 예제 프로그램은 사용자가 직접 다운로드 해야 합니다 만일 프로그램을 직접 만들거나 다운로드 할 경우에 예제 태스크 코드의 다운로드 방법 을 참고하세요 다운로드시 필요한 USB 케이블은 1단계 구성품에 포함되어 있습니다 예제 로봇 TASK Code 오르골 Download 로봇청소기 Download Download 트럭 Download Download 범퍼카 Download Download 집게차 Download Download 전기기타 Download 청기백기 Download 크레인 Download Download 회전바구니 Download 10 바이킹 Download 11 두더지게임 Download 12 도깨비 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-4/#교안예제"
	},
	"3275": {
		"product": "드림 II 5단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 드림II 5는 리모컨을 통한 다양한 형태의 로봇 조종 원리를 학습할 수 있습니다 로봇 프로그램의 순서도 개념을 이해하고 프로그래밍 기초 지식을 학습함으로써 대회 출전을 위한 실질적인 로봇 제작 및 프로그래밍을 살펴보는 단계입니다 제작한 로봇으로 기록 경기를 하거나 게임을 할 수 있는 프로그램을 직접 체험해 봅니다 로보티즈 드림II 5단계는 4단계 키트와 결합되어 총 12개의 예제 로봇을 만들 수 있습니다 또한 교재에는 12개의 예제 로봇을 만들 수 있는 조립서와 예제 로봇들의 제어 프로그램 부품들의 활용 원리의 이해 문제풀이 등의 과정을 제공합니다 12장에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 주의 교육키트 5단계는 4단계 키트의 부품들이 있어야 로봇을 제작할 수 있습니다 반드시 교육키트 1단계 2단계 3단계 4단계 를 먼저 구매하시기 바랍니다 로보티즈 드림II 5단계에서 프로그램은 제어기 CM 150 에 사용자가 직접 프로그램 하거나 다운로드 해야 합니다 로보티즈 드림II 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다 로봇을 보다 다양한 형태로 제작하거나 더 복잡한 로봇을 만들 때에는 로보티즈 스마트 교육키트를 이용해보세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-5/#개요"
	},
	"3276": {
		"product": "드림 II 5단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "BT 410 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-5/#부품-목록"
	},
	"3277": {
		"product": "드림 II 5단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림II 5단계 교안을 참고하세요 예제 프로그램은 사용자가 직접 다운로드 해야 합니다 만일 프로그램을 직접 만들거나 다운로드 할 경우에 예제 태스크 코드의 다운로드 방법 을 참고하세요 다운로드시 필요한 USB 케이블은 1단계 구성품에 포함되어 있습니다 예제 로봇 TASK Code 탱크 Download 로봇기사 Download 전투로봇 Download 축구로봇 Download 굴삭기 Download 사다리차 Download 지게차 Download 권투로봇 Download 불도저 Download 10 드리블로봇 Download 11 탐사로봇 Download 12 운반로봇 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/dream2-5/#교안예제"
	},
	"3278": {
		"product": "로보티즈 드림",
		"header1": "로보티즈 드림",
		"header2": "",
		"header3": "",
		"content": "1단계 2단계 3단계 4단계 교안 예제 교안 예제 교안 예제 주의 로보티즈 드림은 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/#로보티즈-드림"
	},
	"3279": {
		"product": "로보티즈 드림",
		"header1": "로보티즈 드림 II",
		"header2": "",
		"header3": "",
		"content": "1단계 2단계 3단계 4단계 5단계 교안 예제 교안 예제 교안 예제 교안 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/dream/#로보티즈-드림-ii"
	},
	"3280": {
		"product": "교육키트",
		"header1": "올로",
		"header2": "",
		"header3": "",
		"content": "버그 키트 2단계 교육키트 3단계 교육키트 4단계 교육키트 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#올로"
	},
	"3281": {
		"product": "교육키트",
		"header1": "드림 I",
		"header2": "",
		"header3": "",
		"content": "1단계 교육키트 2단계 교육키트 3단계 교육키트 4단계 교육키트 주의 로보티즈 드림 I은 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#드림-i"
	},
	"3282": {
		"product": "교육키트",
		"header1": "드림 II",
		"header2": "",
		"header3": "",
		"content": "1단계 교육키트 2단계 교육키트 3단계 교육키트 4단계 교육키트 5단계 교육키트 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#드림-ii"
	},
	"3283": {
		"product": "교육키트",
		"header1": "스마트 I",
		"header2": "",
		"header3": "",
		"content": "1단계 교육키트 2단계 교육키트 3단계 교육키트 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#스마트-i"
	},
	"3284": {
		"product": "교육키트",
		"header1": "스마트 II",
		"header2": "",
		"header3": "",
		"content": "1단계 교육키트 2단계 교육키트 3단계 교육키트 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#스마트-ii"
	},
	"3285": {
		"product": "교육키트",
		"header1": "스마트 III",
		"header2": "",
		"header3": "",
		"content": "1단계 교육키트 2단계 교육키트 3단계 교육키트 4단계 교육키트 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#스마트-iii"
	},
	"3286": {
		"product": "교육키트",
		"header1": "IoT",
		"header2": "",
		"header3": "",
		"content": "1단계 교육키트 2단계 교육키트 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#iot"
	},
	"3287": {
		"product": "교육키트",
		"header1": "자동차 로봇",
		"header2": "",
		"header3": "",
		"content": "자동차 로봇 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#자동차-로봇"
	},
	"3288": {
		"product": "교육키트",
		"header1": "바이올로이드",
		"header2": "",
		"header3": "",
		"content": "초급 종합 STEM 키트 프리미엄 GP ",
		"url": "http://emanual.robotis.com/docs/kr/edu/#바이올로이드"
	},
	"3289": {
		"product": "교육키트",
		"header1": "미니",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/#미니"
	},
	"3290": {
		"product": "로보티즈 IoT",
		"header1": "로보티즈 IoT",
		"header2": "",
		"header3": "",
		"content": "1단계 2단계 교안 예제 교안 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/#로보티즈-iot"
	},
	"3291": {
		"product": "IoT 1단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 IoT 1단계 는 스크래치 소프트웨어를 이용한 단순 프로그래밍 수업의 한계를 벗어나 제어기와 센서를 연결하여 양방향 입출력이 가능하도록 구현된 프로그램 교육용 솔루션입니다 로보티즈 IoT 1단계는 기초적인 스크래치 사용부터 하드웨어를 통한 예제별 프로그램 실전학습이 가능한 교육용 키트입니다 로보티즈 IoT 1단계는 예제보드를 이용하여 총 12차시로 구성된 교재를 통해 과학 수학 사회 등의 연계교과 수업을 할 수 있고 순서도를 통한 원리의 이해 코딩을 통한 프로그램학습 문제 풀이 등의 과정을 제공합니다 로보티즈 IoT 1단계에는 부저 및 마이크 등을 포함하여 다양한 기능을 이용할 수 있는 제어기와 적외선센서 서보모터 LED모듈 등이 포함되어 있습니다 로보티즈 IoT 1단계에서 프로그램 학습을 하기 위해서는 스크래치2 오프라인 에디터와 로보플러스 스크래치를 설치해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-1/#개요"
	},
	"3292": {
		"product": "IoT 1단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "OpenCM7 서보모터 적외선 센서 LED 모듈 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-1/#부품-목록"
	},
	"3293": {
		"product": "IoT 1단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 PC에 스크래치2 오프라인 에디터와 로보플러스 스크래치를 다운로드 받아서 설치해야 합니다 설치가 완료되면 로보티즈IOT 1단계 키트에 포함된 제어기 openCM7 에 microUSB를 연결하고 로보플러스 스크래치를 실행합니다 스크래치2 오프라인 에디터 스크래치 설치 및 예제 실행 방법 주의 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 PC의 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-1/#작동하기"
	},
	"3294": {
		"product": "IoT 1단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "스크래치를 실행하고 제어기의 버튼을 눌러 전원을 켜서 대기합니다 스크래치에서 해당 예제를 클릭하고 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 교안예제 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-1/#작동방법"
	},
	"3295": {
		"product": "IoT 1단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 실행 시 동작에 관한 내용은 교육키트 1단계 교안을 참고하세요 또한 예제의 실행 방법 을 참고하세요 다운로드시 필요한 USB 케이블 은 1단계 구성품에 포함되어 있습니다 이름 그림 TASK Code Hello 스크래치 실습 파일 Download 완성 파일 Download 박수로 켜는 전등 실습 파일 Download 완성 파일 Download 베이비 모니터 실습 파일 Download 완성 파일 Download 도둑감지 실습 파일 Download 완성 파일 Download 새 실습 파일 Download 완성 파일 Download DJ 실습 파일 Download 완성 파일 Download 달리기 경주 실습 파일 Download 완성 파일 Download 토끼와 거북이 실습 파일 Download 완성 파일 Download 자석 실습 파일 Download 완성 파일 Download 10 대포 게임 실습 파일 Download 완성 파일 Download 11 자동차 게임 실습 파일 Download 완성 파일 Download 12 알람시계 실습 파일 Download 완성 파일 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-1/#교안예제"
	},
	"3296": {
		"product": "IoT 2단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보티즈 IoT 2단계 는 일반적인 로봇의 형태를 벗어나 실생활에서 사용될 수 있는 사물인터넷 internet things 역할을 할 수 있는 장치를 구현한 교육용 솔루션입니다 로보티즈 IoT 2단계는 스마트기기로 코딩이 가능한 로보플러스 태스크2와 각종 센서를 활용하는 하드웨어를 통한 예제별 프로그램 실전학습이 가능한 DIY 교육용 키트입니다 로보티즈 IoT 2단계는 총 12차시로 구성된 교재를 통해 12가지의 사물인터넷 예제를 구현하여 생활 속 장치의 필요성 DIY의 제작 등의 수업을 할 수 있고 스마트기기로 코딩이 가능한 로보플러스 태스크로 순서도 작성 방법 코딩을 통한 프로그램학습 응용하기 등의 과정을 제공합니다 로보티즈 IoT 2단계에는 스마트 기기와 무선 통신이 가능한 블루투스 모듈이 포함되어 있습니다 또한 조도센서 동작감지센서 온습도센서 접촉센서 자석센서 감속모터 등이 포함되어 다양한 입출력 기능을 할 수 있습니다 로보티즈 IoT 2단계에서 프로그램 학습 및 다운로드를 하기 위해서는 로보플러스 IoT IoT 앱과 로보플러스 태스크2 task2 를 설치해야 합니다 로보플러스 IoT 앱 설치 및 예제 실행 IoT 앱 파라미터 사용법 바로가기 로보티즈 IoT 2단계 엔트리 교재 다운받기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-2/#개요"
	},
	"3297": {
		"product": "IoT 2단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "OpenCM7 서보모터 적외선 센서 LED 모듈 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-2/부품-목록"
	},
	"3298": {
		"product": "IoT 2단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 스마트 기기에 IoT 를 설치해야 합니다 설치가 완료되면 로보티즈IOT 1단계 키트에 포함된 제어기 openCM7 에 블루투스를 연결하고 IoT에서 Task2를 이용하여 프로그램을 코딩한 후 다운로드 받습니다 IoT 설치 및 실행 방법 바로가기 task2 설치 및 실행 방법 바로가기 주의 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-2/#작동하기"
	},
	"3299": {
		"product": "IoT 2단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "IoT를 실행하고 제어기의 버튼을 눌러 전원을 켜서 대기합니다 스크래치에서 해당 예제를 클릭하고 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 교안예제 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-2/#작동방법"
	},
	"3300": {
		"product": "IoT 2단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요 또한 예제의 실행 방법 을 참고하세요 다운로드시 필요한 USB 케이블은 1단계 구성품에 포함되어 있습니다 이름 그림 TASK Code Hello ROBOTIS 실습 파일 Download 완성 파일 Download 문자 알리미 실습 파일 Download 완성 파일 Download 스마트 선풍기 실습 파일 Download 완성 파일 Download 조명 실습 파일 Download 완성 파일 Download 도어락 실습 파일 Download 완성 파일 Download 스마트 휴지통 실습 파일 Download 완성 파일 Download 쥬크박스 실습 파일 Download 완성 파일 Download 화분 물주기 실습 파일 Download 완성 파일 Download 침입 감지기 실습 파일 Download 완성 파일 Download 10 카메라 리모컨 실습 파일 Download 완성 파일 Download 11 블라인드 실습 파일 Download 완성 파일 Download 12 약통 알람 실습 파일 Download 완성 파일 Download ",
		"url": "http://emanual.robotis.com/docs/kr/edu/iot/iot-2/#교안예제"
	},
	"3301": {
		"product": "ROBOTIS MINI",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "미려한프레임의 적용으로 굿디자인 선정 6mm 격자의 올로 프레임과 호환성 유지 소형 다이나믹셀 XL 320 적용으로 다양한 모션 가능 로보티즈 미니 전용 App 제공 터치 제스처 음성인식 메신저 사용자 편의를 위한 다양한 기능 지원 배터리 잔량체크 오프셋 설정 등 Task 및 Motion 연동 지원 컬러센서 LED 모듈 등 추가 장치 확장 가능 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#개요"
	},
	"3302": {
		"product": "ROBOTIS MINI",
		"header1": "개요",
		"header2": "주의사항",
		"header3": "",
		"content": "본 제품은 사용자가 스스로 조립해야 하므로 안전에 각별히 주의해야 하며 본인 부주의로 발생한 사고의 책임은 본인에게 있습니다 안전에 대한 주의사항 사용 전에 설명서를 충분히 읽으십시오 권장 공구만을 사용하며 특히 칼이나 드릴 같은 위험한 공구를 사용하지 마십시오 로봇이 동작할 때 절대로 만지거나 얼굴을 가까이 가져가지 마십시오 손가락이 로봇의 관절에 끼이지 않도록 유의하십시오 직사광선이나 고온상태에서 로봇을 보관하거나 작동하지 마십시오 방수 제품이 아니니 물기가 있는 곳에서 절대 동작시키지 마십시오 부품을 임의로 분해하거나 개조하여 사용하지 마십시오 로봇이나 부품이 유아나 어린이의 손에 닿지 않도록 유의하십시오 로봇이나 부품에 충격을 가하거나 날카로운 물체로 찌르지 마십시오 리튬이온전지의 금속부분을 머리핀 클립 등과 같은 금속물체와 연결하지 마십시오 리튬이온전지박스의 금속부분을 휘게 하거나 망가뜨리지 않게 유의하십시오 리튬이온전지에 납땜하거나 전자레인지와 같은 고압 용기에 넣지 마십시오 리튬이온전지를 물에 담그거나 닿게 하지 마십시오 조립 시 주의사항 나사를 조이는 드라이버는 반드시 지정된 사양의 드라이버 M2 size 를 사용하십시오 무리한 힘으로 나사를 돌리거나 부품을 끼우지 마십시오 책상이나 테이블에서 로봇을 동작시키면 바닥으로 떨어질 위험이 있으므로 반드시 바닥에서 동작시키십시오 낙하에 의한 파손 등은 본인 부주의로 인한 것이므로 무상 수리되지 않습니다 로봇 관절 다이나믹셀 XL 320 내부의 기어는 소모품입니다 오래 사용하거나 무리하게 사용하면 기어의 유격 backlash 이 커질 수 있습니다 사용 시 주의사항 리튬이온전지 충전 반드시 USB 케이블 커넥가 삽입된 충전용 케이스에 끼워서 충전해 주세요 처음 사용 시 리튬이온전지를 꼭 충전해 주세요 다이나믹셀 XL 320의 프레임 결합 다이나믹셀 XL 320에 프레임을 결합할 때에는 조립서에 표시된 혼의 위 아래 표시를 확인하고 결합합니다 리벳 사용 리벳은 볼트와 너트 없이 간편하게 플레이트를 결합할 수 있는 결합체입니다 처음 만들 때는 리벳이 조립되어 있지 않습니다 이럴 땐 핀홀을 먼저 꽂고 그 다음에 핀을 꽂으면됩니다 툴을 이용해서 조립된 리벳을 분리시킬 수 있습니다 툴로 핀을 잡은 후 위로 잡아 올리면 리벳이분리됩니다 툴로 뽑은 리벳은 핀과 핀홀이 따로 분리되지 않습니다 이것을 다시 사용하려면 핀홀 부분부터 눌러끼워야 합니다 툴을 이용하여 리벳을 끼울 수 있습니다 리벳을 툴에 끼운 상태로 플레이트 구멍에 넣고 핀을 누르면 됩니다 리튬이온전지의 배터리 잔량 체크 로보티즈 미니의 제어기 전원을 켜면 제어기가 배터리 잔량을 체크 합니다 제품 이상유무 확인 제품 사용 시 아래와 같은 상황이 발생하면 즉시 전원 스위치를 끄고 로보티즈 고객지원센터로 연락하시기 바랍니다 제품에서 연기가 날 경우 로보티즈 미니를 조립하고 관절 동작 테스트 를 실행할 때 로봇 관절 다이나믹셀 XL 320 의 LED가 깜박이지 않는 경우 로봇에 물이나 이물질이 들어간 경우 로봇에서 이상한 냄새가 나는 경우 로봇이 파손된 경우 고객지원센터 070 8671 2622 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#주의사항"
	},
	"3303": {
		"product": "ROBOTIS MINI",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#시작하기"
	},
	"3304": {
		"product": "ROBOTIS MINI",
		"header1": "시작하기",
		"header2": "부품 목록",
		"header3": "",
		"content": "OpenCM9 04 XL 320 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#부품-목록"
	},
	"3305": {
		"product": "ROBOTIS MINI",
		"header1": "시작하기",
		"header2": "준비하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#준비하기"
	},
	"3306": {
		"product": "ROBOTIS MINI",
		"header1": "시작하기",
		"header2": "준비하기",
		"header3": "로보티즈 미니 앱",
		"content": "로보티즈 미니는 스마트 기기를 사용하여 다양한 동작을 실행시킬 수 있는 전용 앱을 기본 제공하고 있습니다 로보티즈 미니 전용 앱에 대한 설치 및 설정 방법 동작 방법에 대해서는 로보티즈 미니 작동하기 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로보티즈-미니-앱"
	},
	"3307": {
		"product": "ROBOTIS MINI",
		"header1": "시작하기",
		"header2": "준비하기",
		"header3": "로보티즈 미니 연결하기",
		"content": "PC에 로보티즈 미니의 블루투스 장치 추가하기 블루투스를 통해 로보티즈 미니를 PC와 연결하려면 PC에 블루투스 장치가 있어야 합니다 내장된 블루투스 장치가 없을 경우 별도로 블루투스 동글을 구매하여 PC에 장착해야 합니다 블루투스 장치가 있을 경우 아래와 같이 로보티즈 미니의 블루투스 BT 210 를 PC에 등록합니다 등록 방법은 Windows 1을 기준으로 설명합니다 Windows 1에서 제어판을 열기 위해서는 데스크톱 모드에서 오른쪽 참 바 Charm bar 설정 제어판을 선택하면 됩니다 로봇에 블루투스 BT 210 를 연결하고 로봇의 전원을 켭니다 PC의 제어판에 하드웨어 및 소리 에서 장치 추가 를 선택합니다 검색된 장치 중에 로봇에 연결한 블루투스 BT 210 를 선택하고 다음 을 누릅니다 동일한 장치가 여러 개일 경우 확인하려는 장치를 마우스의 오른쪽을 클릭하여 속성 메뉴에 들어 갑니다 Bluetooth 탭의 고유 식별자 가 블루투스 BT 210 의 상단에 적힌 번호와 일치하는지 확인하세요 연결 옵션 중에 장치의 연결 코드 입력 을 선택합니다 연결코드 입력란에 0000 을 입력하고 다음 을 누릅니다 장치 추가가 완료되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로보티즈-미니-연결하기"
	},
	"3308": {
		"product": "ROBOTIS MINI",
		"header1": "시작하기",
		"header2": "준비하기",
		"header3": "연결 포트번호 확인하기",
		"content": "PC의 제어판에 하드웨어 및 소리 에서 장치 및 프린터 보기 를 선택합니다 앞에서 연결한 장치를 마우스의 오른쪽을 클릭하여 속성 메뉴를 선택합니다 하드웨어 탭에서 직렬 링크 COM 포트번호를 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#연결-포트번호-확인하기"
	},
	"3309": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로보티즈-미니-작동하기"
	},
	"3310": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설치",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#미니-앱-설치"
	},
	"3311": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설치",
		"header3": "소개 및 설치하기",
		"content": "로보티즈 미니는 스마트기기를 사용하여 다양한 동작을 실행시킬 수 있는 전용 앱을 기본 제공하고 있습니다 전용 앱을 사용할 수 있는 스마트기기의 사양은 아래와 같습니다 로보티즈 미니 앱 지원 사양 지원 OS 안드로이드 진저브레드 이상 하드웨어 사양 2GHz 듀얼코어 이상 RAM 1GB 이상 IOS에서 사용 하려면 BT 410을 별도로 구매해야 합니다 스마트 기기에서 Play 스토어를 실행합니다 Play 스토어는 안드로이드 마켓 앱입니다 Play 스토어에서 로보티즈 미니 또는 로보티즈 를 검색한 후 DARWIN MINI 앱을 선택하여 설치합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#소개-및-설치하기"
	},
	"3312": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설치",
		"header3": "블루투스 장치 연결 확인하기",
		"content": "제어기의 전원 스위치를 켰을 때 블루투스 BT 210 의 LED가 깜박이면 로봇과 블루투스가 정상적으로 연결된 것입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#블루투스-장치-연결-확인하기"
	},
	"3313": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설치",
		"header3": "블루투스를 통해 로봇과 앱 연결하기",
		"content": "로보티즈 미니 앱 실행 로봇의 전원을 켜고 스마트기기에서 로보티즈 미니 앱을 실행합니다 스마트기기의 블루투스가 꺼져 있는 경우 아래와 같이 사용 여부를 확인하는 창이 표시됩니다 허용 을 터치하여 스마트기기의 블루투스 기능을 활성화합니다 블루투스 BT 210 연결 확인 등록된 로봇 목록에서 로보티즈 미니에 연결된 블루투스 BT 210 윗면의 번호와 동일한 번호가 있는지 확인합니다 만약 동일한 번호가 없으면 새로운 로봇 검색 을 통해 찾아서 등록합니다 PIN 정보 입력 이때 장치와 연결 블루투스 페어링 을 위해서는 PIN 정보가 필요합니다 PIN은 0000 으로 설정되어 있습니다 0000 을 입력하고 확인 버튼을 누르면 로봇과 스마트기기가 연결되면서 왼쪽과 같은 화면이뜹니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#블루투스를-통해-로봇과-앱-연결하기"
	},
	"3314": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설치",
		"header3": "앱으로 조립 확인하기",
		"content": "화면의 오른쪽 위에 설정 메뉴에서 관절 동작 테스트 를 터치합니다 스마트기기가 로보티즈 미니와 연결되어 있으면 다음과 같이 화면에 로보티즈 미니의 모습이 나타납니다 블루투스 연결 상태와 각 관절에 이상이 없다면 각 ID를 터치했을 때 해당 관절이 약간 움직이고 LED가 빨강 녹색 파랑으로 차례대로 변하는 것을 확인할 수 있습니다 만약 터치한 ID와 동작하는 관절의 위치가 맞지 않는다면 조립이 잘못된 것이므로 ID를 변경하거나 올바른 위치에 다시 조립을 해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#앱으로-조립-확인하기"
	},
	"3315": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 사용하기",
		"header3": "",
		"content": "로보티즈 미니 앱은 스마트기기의 버튼 제스처 센서 음성 인식 메신저 기능을 이용하여 로보티즈 미니의 동작을 실행시킬 수 있는 기능을 제공합니다 버튼 화면의 버튼을 터치하여 로보티즈 미니를 동작시킬 수 있습니다 제스처 스마트기기를 쥔 손으로 특정 제스처를 취하여 로보티즈 미니를 동작시킬 수 있습니다 음성 인식 음성 인식 기능을 이용하여 로보티즈 미니를 동작시킬 수 있습니다 메신저 다른 스마트기기에서 메신저를 통해 로보티즈 미니와 연결된 스마트기기로 동작 명령을 보내어 로보티즈 미니를 동작시킬 수 있습니다 리모콘 격투게임이나 축구게임을 쉽게 할 수 있도록 스마트 기기의 화면을 가로방향의 리모콘 버튼으로 동작시킬 수 있습니다 실행 탭의 버튼 제스처 음성 각 탭의 하단에는 3개의 기본 버튼이 제공됩니다 각 버튼의 기능은 아래와 같습니다 모션정지 모션 호출 번호 0번을 호출하는 버튼으로 무한 반복 모션이나 실행시간이 긴 모션 실중에 이 버튼이 눌리면 현재 실행 중인 모션유닛까지만 실행하고 모션을 정지합니다 초기자세 모션 호출 번호 1번을 호출하는 버튼으로 기본 제공되는 모션 파일의 1번 모션은 초기자세 입니다 모션 파일의 1번 모션을 변경하면 변경된 모션이 호출됩니다 일어나기 모션 호출 번호 2번을 호출하는 버튼으로 기본 제공되는 모션 파일의 2번 모션은 일어나기 입니다 모션 파일의 2번 모션을 변경하면 변경된 모션이 호출됩니다 모션이 동작 중일 때에는 모션정지 외에 다른 모션을 실행하는 명령은 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#미니-앱-사용하기"
	},
	"3316": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 사용하기",
		"header3": "버튼으로 동작하기",
		"content": "버튼 탭에 등록된 버튼을 터치하면 해당 버튼에 할당된 동작을 실행할 수 있습니다 화면 상단의 편집 탭을 터치하면 버튼을 추가 수정 삭제하거나 위치를 변경할 수 있습니다 버튼 줄 편집하기 버튼 줄 추가 편집 탭에서 버튼 추가 를 터치하면 가장 위에 새로운 버튼을 한 줄 추가할 수 있습니다 버튼 줄 순서 바꾸기 순서를 바꾸려는 버튼 줄의 오른쪽 끝을 터치하여 아래위로 드래그하세요 버튼 줄 삭제 지우려는 버튼 줄의 오른쪽 끝을 터치하여 왼쪽으로 드래그하세요 버튼 수정하기 버튼 내용 수정 로 표시된 버튼을 터치하면 해당 버튼에 새로운 내용을 등록할 수 있습니다 이미 내용이 등록된 버튼을 터치하면 해당 버튼의 내용을 수정할 수 있습니다 모션 호출 번호는 로봇에 다운로드된 각 모션들에 할당된 호출 번호입니다 모션 호출 번호가 지정되지 않으면 버튼의 이름이 옅은 회색으로 표시됩니다 버튼 이름과 모션 호출 번호를 모두 삭제하면 해당 버튼이 실행 탭에 표시되지 않게 됩니다 모션 파일 설정을 이용하여 모션 호출 번호 입력하기 로보티즈 미니 앱의 설정 에서 모션 파일 설정 에 사용할 모션 파일을 지정해 두면 버튼 수정 화면에서 입력 창의 오른쪽 위에 목록 버튼이 보입니다 이 목록 을 터치하면 설정된 모션 파일 내의 모션 목록이 나타납니다 목록에서 원하는 모션을 선택하면 자동으로 버튼 이름과 모션 호출 번호가 입력됩니다 파일 설정 방법은 모션파일 설정 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#버튼으로-동작하기"
	},
	"3317": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 사용하기",
		"header3": "제스처로 동작하기",
		"content": "제스처 탭은 스마트기기의 가속도센서를 이용하는 기능으로 사용자가 스마트기기를 쥔 손으로 특정 제스처를 취하면 로보티즈 미니가 그에 맞는 동작을 취합니다 예를 들어 스마트기기를 쥔 손으로 를 그린다거나 X를 그리는 동작으로 로보티즈 미니를 걷거나 정지하게 할 수 있습니다 기본 등록된 제스처와 기울기는 오른손으로 스마트기기를 바닥과 수직이 되도록 잡은 상태를 기준으로 동작합니다 스마트기기를 쥔 손으로 미리 설정된 제스처를 취하여 로봇을 동작시킬 수 있습니다 화면 중앙의 버튼을 터치한 상태로 스마트기기를 기울여서 로봇을 동작시킬 수 있습니다 화면 아래의 있는 기본 버튼을 터치하면 버튼 탭으로 이동하지 않고도 버튼으로 로봇을 동작시킬 수 있습니다 화면 맨 아래의 기울기 를 터치하면 스마트기기를 기울이는 방향에 할당된 동작을 확인할 수 있습니다 화면 상단의 편집 탭을 터치하면 제스처를 추가 수정 삭제하거나 훈련 기능을 통해 인식 정확도를 높일 수 있습니다 또한 화면 아래의 버튼과 기울기 방향에 따른 동작도 수정할 수 있습니다 제스처 등록하기 제스처 추가 버튼을 터치하면 제스처 추가 창이 뜹니다 제스처의 이름 모션 호출 번호 제스처 동작 설명 등을 입력합니다 준비 버튼을 누른 후 스마트기기를 쥔 손을 일정 속도 이상으로 움직이며 제스처를 취합니다 움직임을 멈추면 짧은 진동과 함께 삐 소리가 나고 제스처 를 배웠습니다 라는 메시지가 표시되면서 확인 버튼이 활성화됩니다 확인 버튼을 터치하면 제스처 등록이 완료됩니다 ockquote 삐 소리가 나지 않는다면 미디어 볼륨 크기를 확인하시기 바랍니다 ockquote 제스처를 추가할 때도 설정에서 모션 프로젝트 파일을 지정해 두었다면 목록 버튼이 나타나서 쉽게 모션을 추가할 수 있습니다 제스처 수정하기 수정하려는 제스처의 수정 버튼을 터치합니다 등록할 때와 같은 방법으로 수정한 후 확인 버튼을 터치하면 됩니다 제스처 삭제하기 버튼 줄 삭제와 동일하게 삭제하려는 제스처의 오른쪽 끝을 터치하여 왼쪽으로 드래그하면 됩니다 버튼 수정하기 버튼 탭의 버튼 수정 방법과 동일하게 수정하면 됩니다 화면 아래의 버튼은 최대 3개 1줄 까지만 추가 및 편집이 가능합니다 기울기 편집하기 버튼 아래의 기울기 를 터치하면 기울이는 방향에 따라 실행할 동작을 변경할 수 있습니다 기울기 기능에서 사용될 기울기 방향은 미리 정해진 4가지 방향만 사용할 수 있습니다 4가지 방향의 버튼을 터치하면 버튼의 이름과 모션 호출 번호를 편집할 수 있습니다 미리 지정된 기울기의 방향은 아래 그림과 같이 오른손으로 스마트기기를 바닥과 수직이 되도록 잡은 자세로 앞 뒤 좌 우로 기울인 방향입니다 제스처 훈련 기능이란 등록된 제스처의 인식률을 높이기 위해 각 제스처 별로 훈련 기능을 사용할 수 있습니다 훈련하려는 제스처의 훈련 버튼을 터치합니다 준비 버튼을 터치한 후 훈련하려는 제스처의 동작을 더 크게 하거나 스마트기기의 방향이나 기울기를 다르게 하는 등의 방법으로 약간 변형하여 움직입니다 움직임을 멈추면 짧은 진동과 함께 삐 소리가 나고 제스처를 배웠습니다 라는 메시지가 표시됩니다 같은 방법으로 비슷한 동작을 약간씩 변형하며 반복 학습시킵니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#제스처로-동작하기"
	},
	"3318": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 사용하기",
		"header3": "음성 인식으로 동작하기",
		"content": "구글의 음성 인식 기능을 이용하여 로보티즈 미니를 동작시킬 수 있습니다 화면 중앙의 마이크 모양 버튼을 터치한 다음 등록된 명령얼르 말하면 됩니다 단 음성 인식 기능을 이용하기 위해서는 스마트기기가 인터넷에 연결되어 있어야 합니다 화면 상단의 편집 탭을 편집을 터치하면 음성명령을 추가 수정 삭제하거나 훈련 기능을 통해 정확도를 높일 수 있습니다 음성명령 추가하기 음성명령 추가 버튼을 터치하면 음성명령 추가 창이 뜹니다 음성 인식에 사용될 명령어와 모션 호출 번호를 입력하고 확인 버튼을 누르면 등록됩니다 음성명령 수정하기 수정하려는 체스처의 음성명령을 선택하여 수정 버튼을 터치합니다 새로운 음성명령이나 모션 호출 번호를 입력하고 확인 버튼을 터치합니다 음성명령 삭제하기 버튼 삭제와 동일하게 삭제하려는 명령의 오른쪽 끝을 터치하여 왼쪽으로 드래그합니다 음성인식 훈련 기능이란 등록된 음성명령의 인식률을 높이기 위해 각 명령어 별로 훈련 기능을 사용할 수 있습니다 훈련하려는 음성명령의 훈련 버튼을 터치합니다 스마트기기의 마이크에 해당 음성명령을 말합니다 음성 인식된 단어와 유사한 단어가 추천되어 나타납니다 확인 버튼을 터치하면 추천된 유사 단어가 해당 음성명령에 추가로 등록됩니다 주의 훈련 기능을 통해 추가된 유사 단어를 삭제하려면 해당 음성명령을 삭제하고 다시 등록해야 합니다 음성 인식 테스트 등록된 음성명령이 실제로 인식이 잘 되는지 확인하려면 실행 탭에서와 동일하게 화면 중앙의 마이크 모양의 버튼을 눌러 테스트할 수 있습니다 그러나 편집 탭에서는 음성 인식의 성공율을 테스트하기 위함이므로 명령어의 인식 여부만 알려 줄 뿐 실제로 로보티즈 미니에 동작 명령을 보내지는 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#음성-인식으로-동작하기"
	},
	"3319": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 사용하기",
		"header3": "메신저로 동작하기",
		"content": "로봇과 연결된 스마트기기에서 각종 메신저를 이용해 동작명령을 보내면 로봇을 동작시킬 수 있습니다 단 이 기능을 사용하기 위해서는 메신저로 명령을 받을 수 있도록 스마트기기가 인터넷에 연결되어 있어야 합니다 로보티즈 미니 앱이 실행중인 스마트기기에 각종 메신저를 통해 메시지가 들어오면 로보티즈 미니 앱에서 알림바에 표시되는 수신 메시지의 내용을 확인하여 음성명령에 등록된 명령어와 일치하는지 확인 후 일치할 경우 음성명령에 등록된 동작을 실행하게 됩니다 음성명령에 등록된 명령을 그대로 사용하므로 메신저를 이용한 명령어 편집은 필요 없습니다 주의 로보티즈 미니 앱이 알림바에 표시되는 메시지의 수신 내용을 확인할 수 있도록 접근성 설정을 켜 두어야 합니다 접근성 설정 방법은 로보티즈 미니 앱 설정을 참조 알림바에 메시지 수신 알람을 사용하지 않거나 메시지의 수신 내용 전체를 표시하지 않고 새 메시지 개 와 같이 표시하는 메신저에서도 동작하지 않을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#메신저로-동작하기"
	},
	"3320": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 사용하기",
		"header3": "리모콘 사용하기",
		"content": "리모콘 형태로 배치된 버튼을 이용하여 로보티즈 미니를 조종할 수 있습니다 화면 좌측의 버튼은 이동과 관련된 모션들이 설정되어 있습니다 이 버튼들에 설정된 모션은 모드와 상관없이 공통적으로 적용됩니다 화면 우측의 부터 까지의 버튼은 축구모드 공격 축구모드 수비 격투모드 에 따라 서로 다른 모션이 설정되어 있습니다 총 18 개의 모션을 각각의 모드에 따라 설정할 수 있으며 모션이 설정되어 있지 않은 경우 푸른색으로 표시됩니다 화면 상단의 버튼을 클릭하여 축구모드와 격투모드를 선택할 수 있습니다 축구모드 축구모드는 수비와 공격을 선택할 수 있습니다 초기 버튼 설정은 수비 시 왼쪽막기 오른쪽막기 막기1 막기2 가 설정되어 있으며 공격 시 왼발차기 오른발차기 왼발옆차기 오른발옆차기 가 설정되어 있습니다 격투모드 격투모드의 초기 버튼 설정은 왼쪽공격1 오른쪽공격 앞쪽공격 이 설정되어 있습니다 종료 리모콘 화면을 빠져나가기 위해서는 우측 상단의 버튼을 클릭합니다 실행 amp 편집 실행 모드에서 리모콘 탭을 실행하고 버튼을 클릭하면 로보티즈 미니를 조종할 수 있습니다 편집 모드에서 리모콘 탭을 실행하고 이미지 버튼을 클릭하면 모션 설정을 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#리모콘-사용하기"
	},
	"3321": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "",
		"content": "화면 오른쪽 상단의 설정 을 누르면 앱의 설정 화면으로 넘어갑니다 각 설정의 의미는 아래와 같습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#미니-앱-설정"
	},
	"3322": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "서버/클라이언트 설정",
		"content": "여러 대의 스마트기기로 하나의 로보티즈 미니를 조종할 경우에 설정합니다 서버 역할을 하는 스마트기기만 로보티즈 미니와 직접 연결되고 클라이언트 역할을 하는 다른 다수의 기기들은 서버에 연결되어 동작 명령을 서버 역할을 하는 기기로 보내고 서버 역할을 하는 기기는 클라이언트들에서 들어온 동작 명령을 연결된 로보티즈 미니로 전달합니다 서버 클라이언트 설정 기능을 사용하면 2대의 스마트기기에 한 대는 왼손 모션을 다른 한 대는 오른손 모션을 제스처 명령으로 넣어두고 각각 왼손과 오른손에 스마트기기를 하나씩 들고 양손으로 제스처를 취하며 로보티즈 미니를 조종하는 것과 같은 일을 할 수 있습니다 이 기능은 모바일 네트워크 3G 4G LTE 등 로는 사용할 수 없으며 서버와 클라이언트 역할을 하는 스마트기기들이 모두 동일한 네트워크에 접속되어 있어야 합니다 즉 모두 동일한 공유기에 접속되어 있거나 혹은 한 대가 휴대용 Wi Fi 핫스팟 기능을 켜고 다른 기기들이 무선랜으로 이 스마트기기에 접속되어 있어야 합니다 서버 클라이언트 설정하기 서버 역할을 하는 스마트기기만 로보티즈 미니 와 블루투스로 연결되므로 클라이언트로 설정된 스마트기기에서는 앱 실행 시 등록된 로봇 목록이 표시되지 않습니다 서버를 선택하면 현재 스마트기기의 IP Address가 표시됩니다 이 주소를 클라이언트 역할을 하는 다른 스마트기기에 입력하고 테스트 버튼을 누릅니다 정상적으로 설정된 경우 클라이언트 쪽의 테스트 버튼을 눌렀을 때 서버 쪽에서 테스트 메시지가 표시됩니다 ockquote 휴대용 Wi Fi 핫스팟 설정 방법 설정 방법은 기기마다 아래의 화면과 다를 수 있습니다 스마트기기 설정 메뉴의 무선 및 네트워크 설정 테더링 및 휴대용 핫스팟 휴대용 Wi Fi 핫스팟 체크를 통해 설정합니다 Wi Fi 핫스팟 설정 메뉴를 통해 다른 스마트기기에 표시되는 이름을 변경할 수 있습니다 이 기능을 통해 다른 스마트기기들이 연결되면 연결된 모든 스마트기기의 데이터 통신이 이 기기를 통해 이루어지므로 휴대용 핫스팟에 연결된 상태로 인터넷 연결 등 데이터를 많이 사용하게 될 경우 요금제에 따라 데이터 요금이 과다하게 청구될 수 있으니 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#서버클라이언트-설정"
	},
	"3323": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "모션 사운드 설정",
		"content": "모션 호출 번호에 사운드 파일을 설정해 두면 해당 모션 번호가 실행될 때 설정된 사운드가 함께 재생됩니다 이 기능은 댄스 모션 실행 시 자동으로 스마트기기로 음악을 재생시키는 등의 용도로 사용할 수 있습니다 사운드 추가 버튼을 터치한 후 모션 호출 번호와 사운드 파일을 선택하여 등록합니다 등록된 사운드 목록에서는 사운드 파일을 재생해 보거나 수정 및 삭제를 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#모션-사운드-설정"
	},
	"3324": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "모션파일 설정",
		"content": "버튼 제스처 음성명령 등을 추가할 때 입력하는 모션 호출 번호는 로보티즈 미니에 다운로드한모션그룹에 포함된 모션들에 대한 각각의 호출 번호를 의미합니다 명령 추가 시에 모션 편집 프로그램을 이용하여 모션 파일을 열고 로보티느 미니에 다운로드한 모션그룹에 속한 모션들에 대해 일일이 모션 이름과 모션 호출 번호를 확인하고 입력하는 것은 상당히 번거로운 일입니다 따라서 이를 보다 쉽게 입력할 수 있도록 하기 위해 해당 모션 파일을 모션 파일 설정 옵션에 등록합니다 로보티즈 미니에 제공되는 기본 모션 파일이 초깃값으로 지정되어 있습니다 이렇게 로보티즈 미니에 다운로드한 모션 파일을 지정해 두면 모션 호출 번호를 입력하는 창의 오른쪽 위에 목록 이라는 버튼이 보이게 되고 해당 버튼을 터치하면 지정한 모션 파일을 분석하여 포함된 모든 모션 호출 번호가 목록으로 나타납니다 그 중 하나의 모션을 선택하면 자동으로 모션 이름과 모션 호출 번호가 입력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#모션파일-설정"
	},
	"3325": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "접근성 설정",
		"content": "접근성 설정은 로보티즈 미니 동작하기 의 메신저로 동작하기 기능을 사용하기 위해 필요한 설정입니다 메신저로 수신한 메시지가 음성명령에 등록된 명령과 일치하는지 확인하려면 로보티즈 미니 앱이 메신저로 수신한 메시지의 내용에 접근할 수 있어야 합니다 접근성 설정을 활성화하면 메신저가 수신한 메시지의 내용을 알림바에 표시할 때 로보티즈 미니 앱도 그 내용을 받아볼 수 있게 됩니다 따라서 접근성 설정을 비활성화하면 메신저로 받은 메시지의 내용을 로보티즈 미니 앱이 받아볼 수 없게 되어 메신저로 로보티즈 미니를 동작시키는 기능을 사용할 수 없습니다 이 설정은 서버 클라이언트 설정 과 달리 메신저를 이용하기 때문에 로봇과 연결된 스마트기기가 다른 스마트기기와 동일 네트워크에 연결되어 있지 않더라도 인터넷만 연결가능하면 다른 스마트기기에서 로보티즈 미니를 동작시킬 수 있습니다 환경설정의 접근성 설정을 터치 할 때 나타나는 접근성의 서비스 항목에 표시되는 목록 중 DARWINMINI를 선택하여 사용할 수 있도록 설정을 변경합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#접근성-설정"
	},
	"3326": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "제스처 오차 범위 설정",
		"content": "제스처 기능을 이용할 때 동작을 인식하는 정확도를 조정하기 위한 설정입니다 오차 범위를 작게 설정할수록 정확한 동작을 해야 인식하며 크게 설정할수록 인식률은 높아지지만 다른 동작으로 인식될 확률도 높아집니다 제스처 기능에 대해서는 로보티즈 미니 동작하기를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#제스처-오차-범위-설정"
	},
	"3327": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "관절 동작 테스트",
		"content": "화면의 오른쪽 위에 설정 메뉴에서 관절 동작 테스트 를 터치합니다 스마트기기가 로보티즈 미니와 연결 되어 있으면 다음과 같이 화면에 로보티즈 미니의 모습이 나타납니다 블루투스 연결 상태와 각 관절에 이상이 없다면 각 ID를 터치했을 때 해당 관절이 약간 움직이고 LED가 빨강 녹색 파랑으로 차례대로 변하는 것을 확인할 수 있습니다 만약 터치한 ID와 동작하는 관절의 위치가 맞지 않는다면 조립이 잘못된 것이므로 ID를 변경하거나 올바른 위치에 다시 조립을 해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#관절-동작-테스트"
	},
	"3328": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "모션 오프셋",
		"content": "오프셋이란 기준값에 대한 차이를 의미합니다 같은 로봇이라도 조립상의 오차와 모터의 편차로 인해 자세의 차이가 조금씩 생길 수 있습니다 모션 오프셋에 이 차잇값을 설정해 두면 모션 실행 시에 차잇값 만큼을 항상 적용하여 보정할 수 있습니다 로보티즈 미니 초기 자세 모션 오프셋 메뉴로 들어가면 로보티즈 미니에 저장된 오프셋값을 읽어오며 로보티즈미니에 오프셋을 적용한 초기 자세로 만들어 줍니다 이때 로보티즈 미니가 취하는 초기 자세는 아래와 같습니다 만약 각 관절의 위치가 앞의 그림에서와 같이 일치하지 않고 삐뚤어져 있는 관절이 있다면 관절의 토크 ON OFF 기능을 이용하여 관절의 위치를 수정해 줍니다 주의 관절의 정확한 위치를 확인하기 위해서는 반드시 로보티즈 미니를 들고 확인하시기 바랍니다 바닥에 세워 둔 채로 확인할 경우 로봇 자체의 무게로 인해 다리나 허리 관절의 위치가 틀려질 수 있습니다 각 관절의 ID를 터치하게 되면 해당 관절의 토크가 OFF되면서 해당 관절을 임의대로 움직일 수 있게 됩니다 또한 화면에는 ID와 함께 해당 관절의 정위치를 표시하는 그림이 나타납니다 그림을 참고하여 직접 관절을 움직여서 정위치까지 움직이고 확인 버튼을 누르면 토크 ON 상태가 되면서 해당 관절의 현재 위칫값을 읽어서 자동으로 오프셋값을 계산하여 화면에 표시해 줍니다 이때 손으로 움직이는 것으로 정확한 위치를 잡기가 어려울 경우 해당 ID를 길게 터치하면 해당 액츄에이터가 토크 ON이 되어 슬라이드 바를 움직이거나 버튼을 이용하여 오프셋값을 세밀하게 조정할 수 있습니다 상단의 오프셋 초기화 버튼을 터치하면 모든 관절의 오프셋값이 이 됩니다 상단의 초기자세 버튼을 터치하면 현재 편집 중이던 오프셋값은 버리고 로보티즈 미니에 저장된 오프셋값을 다시 읽어와서 오프셋을 적용한 초기자세를 취하게 됩니다 변경한 오프셋을 로보티즈 미니에 적용하기 위해서는 제어기로 다운로드해야 합니다 오른쪽 위의 다운로드 버튼을 눌러 로보티즈 미니로 다운로드할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#모션-오프셋"
	},
	"3329": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "미니 앱 설정",
		"header3": "초기화",
		"content": "로보티즈 미니를 조종하기 위한 버튼 제스처 음성명령들을 초기화 상태로 되돌립니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#초기화"
	},
	"3330": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "로봇 프로그래밍",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로봇-프로그래밍"
	},
	"3331": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "로봇 프로그래밍",
		"header3": "로보플러스 태스크",
		"content": "어떤 일을 처리하기 위한 행동들의 집합을 태스크 Task 라고 합니다 로봇이 해야 할 태스크를 프로그래밍한 소스를 RoboPlus에서는 태스크 코드 Task Code 라고 합니다 로봇은 사용자가 작성한 태스크 코드에 따라 동작하게 되며 이러한 태스크 코드를 쉽게 작성할 수 있도록 도와주는 것이 로보플러스 태스크 프로그램입니다 로보플러스 태스크 다운로드 및 사용법 로보플러스 태스크 프로그램은 로보티즈 홈페이지의 다운로드 게시판에서 받으실 수 있습니다 또한 로보플러스 태스크의 자세한 사용법은 매뉴얼 에서 확인하실 수 있습니다 매뉴얼 로보플러스 태스크 사용법 로보플러스 태스크 다운로드 태스크 프로그래밍 예제 로보티즈 미니를 제어하는 프로그래밍 예제로 오른팔을 잡고 움직이면 왼팔이 똑같이 따라 움직이는 프로그램을 태스크로 작성하면 아래와 같습니다 작성된 예제 파일은 다운로드 에서 받으실 수 있습니다 태스크 코드 다운로드 작성한 태스크 코드를 로보티즈 미니에 다운로드합니다 다운로드를 하게 되면 제어기 내부에 태스크 코드를 저장하므로 한 번만 수행하면 됩니다 PC와 제어기가 연결되어야 합니다 앞에서 설명한 PC에 로보티즈 미니의 블루투스 장치 추가하기 를 통해 로보티즈 미니의 블루투스를 PC에 등록합니다 로보티즈 미니가 연결된 포트를 확인하고 해당 포트를 선택합니다 만약 통신 포트를 모른다면 자동 찾기 를 선택합니다 이때 로보플러스 태스크가 제어기를 찾지못하면 아래와 같은 에러 메시지가 나타납니다 안내에 따라 점검 후 다시 시도하세요 프로그램 다운로드 메뉴를 선택합니다 단축키 F6 만약 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다 프로그램 하단의 룰 체크 에러 메시지 확인 다운로드를 진행합니다 만약 다운로드에 실패했다면 처음부터 다시 시도합니다 로보티즈 미니의 제어기 전원을 껐다가 켜면 다운로드된 태스크 코드가 자동으로 실행됩니다 로봇이 프로그래밍한 대로 동작하는지 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로보플러스-태스크"
	},
	"3332": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 작동하기",
		"header2": "로봇 프로그래밍",
		"header3": "로보플러스 모션",
		"content": "모션 데이터란 로봇이 의미 있는 행동을 하기 위해 필요한 관절별 모터의 위치와 속도 데이터의 집합을 의미합니다 로봇이 움직이기 위해서는 모션 파일이 필요하며 로봇에 맞는 모션 파일을 다운로드해야 합니다 앞서 로보플러스 태스크를 이용하여 작성한 태스크 코드 Task Code 는 프로그램이고 모션 파일은 데이터입니다 태스크 코드로 로봇의 행동을 결정하고 그 결정에 따라 로봇이 일정한 동작을 하게 하기 위해서는 모션 데이터가 필요합니다 실제 로봇을 연결하거나 3D 로봇을 이용하여 로봇의 모션 데이터를 쉽게 만들 수 있도록 도와주는 것이 로보플러스 모션 프로그램입니다 로보플러스 모션 다운로드 및 사용법 로보플러스 모션 프로그램은 로보티즈 홈페이지의 다운로드 게시판에서 받으실 수 있습니다 또한 로보플러스 모션의 자세한 사용법은 매뉴얼 에서 확인하실 수 있습니다 로보티즈 홈페이지 다운로드 게시판 매뉴얼 로보플러스 모션 사용법 로보티즈 미니 기본 모션 파일 로보티즈 미니에 기본으로 제공되는 예제 모션 파일도 다운로드 에서 받으실 수 있습니다 예제 모션 파일을 로보플러스 모션 사용법 을 참고하여 수정해 보세요 모션 파일 다운로드 수정한 모션 파일을 로보티즈 미니 앱이나 태스크 코드에서 활용할 수 있도록 로봇에 다운로드합니다 모션 데이터도 다운로드를 하게 되면 태스크 코드와 마찬가지로 제어기 내부에 저장되므로 한 번만 수행하면 됩니다 PC와 제어기가 연결되어야 합니다 앞에서 설명한 PC에 로보티즈 미니의 블루투스 장치 추가하기 를 통해 로보티즈 미니의 블루투스 BT 210 를 PC에 등록합니다 프로그램 좌측 하단에 연결하기 버튼을 클릭합니다 사용할 포트를 선택하고 연결 버튼을 클릭합니다 만약 통신 포트를 모른다면 자동 연결 버튼을 클릭합니다 연결에 성공하면 왼쪽 하단에 연결된 포트와 전송 속도가 표시됩니다 모션 데이터 다운로드를 위해 상단의 마지막 탭인 모션 다운로드 탭으로 이동하여 로보티즈 미니에 다운로드할 모션그룹을 선택하고 모션그룹 다운로드 버튼을 클릭합니다 진행율이 표시되면서 다운로드가 진행되고 다운로드가 성공적으로 완료되면 하단의 로그 창에 다운로드 성공 메시지가 나타납니다 로보티즈 미니 앱이나 태스크 코드를 통해 수정한 모션을 실행하여 동작이 수정한 대로 이루어지는지확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로보플러스-모션"
	},
	"3333": {
		"product": "ROBOTIS MINI",
		"header1": "나만의 로보티즈 미니 꾸미기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#나만의-로보티즈-미니-꾸미기"
	},
	"3334": {
		"product": "ROBOTIS MINI",
		"header1": "나만의 로보티즈 미니 꾸미기",
		"header2": "추가 부품 장착하기",
		"header3": "",
		"content": "로보티즈 미니의 제어기인 OpenCM9 04 Type은 5핀 다목적 포트를 통해 다음과 같은 장치들을 추가 장착할 수 있습니다 추가부품 추가 장치 별매 로보티즈 쇼핑몰 각 포트 번호는 포트 상단에 흰색 숫자로 표시되어 있습니다 주의 LED모듈의 경우 번과 번 포트에 연결할 경우 주황색 LED가 켜지지 않으므로 번과 번 포트를 이용하세요 적외선센서는 번과 번 포트를 이용하세요 컬러센서는 번과 번 포트를 이용하세요 다양한 추가 장치 장착 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#추가-부품-장착하기"
	},
	"3335": {
		"product": "ROBOTIS MINI",
		"header1": "나만의 로보티즈 미니 꾸미기",
		"header2": "외형 꾸미기",
		"header3": "",
		"content": "꾸미기 스티커를 이용하여 다윈미니의 얼굴과 몸을 꾸며 보세요 빈 스티커에 그림을 직접 그려서 나만의 눈과 옷을 만들 수 있어요 꾸미기 스티커 이미지는 다운로드 에서 찾을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#외형-꾸미기"
	},
	"3336": {
		"product": "ROBOTIS MINI",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "다운로드 태스크 및 모션 예제 다운로드 다운로드 꾸미기 스티커 다운로드 다운로드 3D 프린터용 STL 파일 다운로드 설계용 STP 파일 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#다운로드"
	},
	"3337": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 관리하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로보티즈-미니-관리하기"
	},
	"3338": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 관리하기",
		"header2": "로보티즈 미니 제어기 펌웨어 업데이트",
		"header3": "",
		"content": "로보티즈 미니의 제어기 OpenCM9 04C 펌웨어를 복구하거나 업데이트 하려면 아래 순서대로 진행하시면 됩니다 먼저 로보티즈 미니 가슴 부분을 몸체와 분리하여 제어기를 분리 합니다 전원이 꺼진 상태에서 표시 된 부분의 사용자 버튼을 누릅니다 사용자 버튼이 눌린 상태에서 표시된 부분에 mini USB 케이블로 OpenCM9 04C와 PC를 연결합니다 표시된 부분에 녹색 LED가 켜지면 사용자 버튼에서 손을 뗍니다 RoboPlus를 실행합니다 버전이 낮을 경우 인터넷에 연결하여 자동업데이트가 실행됩니다 자동업데이트가 불가능 할 경우에는 로보티즈 다운로드 게시판에서 최신버전을 설치하도록 하세요 Manager 32 이상 버전 를 실행합니다 로보 플러스의 우측 상단 업데이트 버튼을 클릭하여 최신버전으로 업데이트 합니다 만약 업데이트 사항이 있다면 Manager를 종료하고 다시 실행하세요 상단 메뉴중 제어기 복구 버튼을 클릭합니다 다음 을 클릭합니다 OpenCM9 04C가 연결된 COM포트 번호를 선택하고 찾기 를 클릭합니다 제어기를 찾으면 다음 버튼을 클릭합니다 다음 버튼을 클릭합니다 다음 버튼을 클릭합니다 마침 버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#로보티즈-미니-제어기-펌웨어-업데이트"
	},
	"3339": {
		"product": "ROBOTIS MINI",
		"header1": "로보티즈 미니 관리하기",
		"header2": "XL-320 ID MAP",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/mini/#xl320-id-map"
	},
	"3340": {
		"product": "버그 키트",
		"header1": "버그 키트",
		"header2": "",
		"header3": "",
		"content": "올로 버그 키트에서는 센서 일체형 제어기 CM 100 와 감속모터 가 포함되어 있습니다 사용자가 직접 버그 로봇을 제어하는 프로그램을 제작 및 다운로드 하기 위해서는 USB 다운로더 LN 101 를 구매하셔야 합니다 프로그래밍 방법은 프로그래밍 학습 을 참고하세요 주의 올로 버그 키트는 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-키트"
	},
	"3341": {
		"product": "버그 키트",
		"header1": "버그 키트",
		"header2": "버그 키트에 포함된 설명서로 만든 가지 형태의 버그 로봇 예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-키트"
	},
	"3342": {
		"product": "버그 키트",
		"header1": "버그 키트",
		"header2": "올로 버그 로봇으로 할 수 있는 게임 예제",
		"header3": "",
		"content": "올로 버그 게임 버그 배틀 동그란 원 안에 로봇을 올려 놓습니다 심판의 시작 신호와 함께 게임을 시작합니다 로봇을 조종하여 상대방 로봇을 원 밖으로 밀어내면 승리 올로 버그 게임 버그 라인트레이싱 버그 로봇을 선 위에 올려 놓습니다 전원을 켜면 버그 로봇이 스스로 선을 따라 움직입니다 OLLO 버그 라인트레이스용 라인 인쇄물 OLLO LineTrace pdf 동봉된 여러가지 모양의 퍼즐판을 이용해 올로 버그가 따라갈 길을 만들어 주세요 버그 로봇은 어디든지 갈 수 있습니다 OLLO 버그 퍼즐 레이스용 라인 인쇄물 OLLO PuzzleRacing zip ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-키트"
	},
	"3343": {
		"product": "버그 키트",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#시작하기"
	},
	"3344": {
		"product": "버그 키트",
		"header1": "시작하기",
		"header2": "부품 목록",
		"header3": "",
		"content": "올로 버그 부품 목록 CM 100 RC 100 감속모터 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#부품-목록"
	},
	"3345": {
		"product": "버그 키트",
		"header1": "시작하기",
		"header2": "버그 작동하기",
		"header3": "",
		"content": "올로 버그 키트는 기본적으로 제품 출하 시 버그 기본 프로그램 이 들어 있습니다 버그 기본 프로그램의 동작 방법은 아래와 같습니다 버그 전원 켜기 시작 버튼을 한 번 누르면 전원이 켜지고 다시 한 번 누르면 전원이 꺼집니다 버그 제어기 CM 100은 절전 기능이 있어서 별다른 입력이 없다면 약 5분 뒤에 자동으로 전원이 꺼집니다 이 절전 기능은 태스크 코드로 제어할 수 있으며 기본 프로그램에는 5분으로 설정되어 있습니다 태스크 코드로 제어하는 방법보기 리모컨 조종 모드 시작 버튼을 2회 누르면 실행됩니다 1회는 적외선 채널 2회는 적외선 채널 무선 조종을 위해서는 RC 100 리모컨의 적외선 채널이 일치해야 합니다 RC 100 적외선 채널 바꾸는 방법 보기 RC 100 의 버튼을 이용하여 버그 로봇의 이동 방향을 조종합니다 포트 에 서보 모터가 연결되어 있는 경우 버튼으로 서보 모터를 조종합니다 포트 에 서보 모터가 연결되어 있는 경우 버튼으로 서보 모터를 조종합니다 서보모터 는 버그 키트에 기본으로 들어 있지 않습니다 별도 구매 후 연결하셔야 합니다 라인트레이서 모드 시작 버튼을 3회 누르면 실행됩니다 흰 바닥에 검은 색 라인을 따라 다닙니다 전방에 물체가 감지되면 멈추고 박수를 치면 다시 라인을 따라 다닙니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-작동하기"
	},
	"3346": {
		"product": "버그 키트",
		"header1": "시작하기",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#지그비-무선-조종"
	},
	"3347": {
		"product": "버그 키트",
		"header1": "시작하기",
		"header2": "지그비 무선 조종",
		"header3": "지그비(ZIGBee)",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210도 사용법은 동일 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#지그비-무선-조종"
	},
	"3348": {
		"product": "버그 키트",
		"header1": "시작하기",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 ZIG 100 installed RC 100 ZIG 110 installed CM 100 ZIG 110 installed CM 510 ZIG 100 installed CM ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#지그비-무선-조종"
	},
	"3349": {
		"product": "버그 키트",
		"header1": "응용하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#응용하기"
	},
	"3350": {
		"product": "버그 키트",
		"header1": "응용하기",
		"header2": "배틀 버그 만들기",
		"header3": "",
		"content": "올로 버그 키트에 서보모터 를 추가 구매하여 장착하면 다양한 형태의 배틀 버그를 만들 수 있습니다 올로 버그 기본 프로그램 에는 포트 이나 포트 에 서보 모터를 연결했을 때 RC 100 으로 조종이 가능하도록 프로그래밍 되어 있습니다 포트 에 서보 모터가 연결되어 있는 경우 버튼으로 서보 모터를 조종합니다 포트 에 서보 모터가 연결되어 있는 경우 버튼으로 서보 모터를 조종합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#배틀-버그-만들기"
	},
	"3351": {
		"product": "버그 키트",
		"header1": "응용하기",
		"header2": "자동차 만들기",
		"header3": "",
		"content": "올로 버그 키트에 큰타이어 세트 를 추가 구매하시면 바퀴를 달아 자동차를 만드실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#자동차-만들기"
	},
	"3352": {
		"product": "버그 키트",
		"header1": "응용하기",
		"header2": "그 외의 장치 활용하기",
		"header3": "",
		"content": "올로 OLLO 의 제어기 CM 100 에는 배틀 버그 만들기와 자동차 만들기에서 소개한 부품 외에도 아래와 같은 여러 가지 부품들을 연결하여 다양한 형태의 로봇을 만들 수 있습니다 적외선 센서 접촉 센서 LED 모듈 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#그-외의-장치-활용하기"
	},
	"3353": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#프로그래밍-학습"
	},
	"3354": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "화면 출력하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#화면-출력하기"
	},
	"3355": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "화면 출력하기",
		"header3": "학습목표",
		"content": "프로그램 출력용 모니터 창에 제어기 CM 100 의 중앙 적외선 센서 값을 출력하여 확인하는 프로그램을 작성합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#화면-출력하기"
	},
	"3356": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "화면 출력하기",
		"header3": "준비 사항",
		"content": "학습 목표를 달성하기 위해서는 우선 태스크 코드를 작성하고 프로그램 출력용 모니터 창을 띄워줄 로보플러스 RoboPlus 소프트웨어가 필요하며 태스크 코드를 실행하여 중앙 적외선 센서 값을 PC 로 보내줄 제어기 CM 100 가 필요합니다 또한 PC 와 제어기 사이의 연결을 위해 USB 다운로더 LN 101 가 필요합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#화면-출력하기"
	},
	"3357": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 작성",
		"content": "RoboPlus Task 프로그램 실행 제어기 선택 빈 줄을 선택한 후 더블클릭 하거나 Enter 키를 누르면 제어기 선택 대화창이 나타납니다 제어기를 선택 후 확인 버튼을 누릅니다 프로그램 시작 만들기 이어서 뜨는 명령어 종류 선택 창에서 프로그램 시작을 마우스로 더블클릭 하거나 선택 후 Enter 키를 누릅니다 무조건 반복 명령어 입력 반복해서 적외선 센서 값을 읽어와서 화면에 출력하기 위해 무조건 반복 명령어를 사용합니다 프로그램 시작의 와 사이 구간의 빈 줄을 선택하고 Enter 키를 누르거나 더블클릭하면 명령어 선택 창이 뜹니다 반복문 무조건 반복 을 선택합니다 로드 명령어 입력 적외선 센서의 값을 읽어와 화면 표시로 입력하기 위해 로드 명령어를 사용합니다 무조건 반복의 와 사이 구간의 빈 줄에 실행문 로드 값 입력하기 를 선택하여 입력합니다 중앙 적외선 센서 값을 화면 출력 으로 로드 로드 명령어의 파라미터 중 좌측의 파라미터 를 선택합니다 파라미터에 대한 설명 를 더블클릭 하거나 클릭 후 Enter 를 누르면 아래와 같은 파라미터 선택 창이 뜹니다 제어기 화면 출력 후 줄 바꿈 을 선택하고 확인 버튼을 누릅니다 같은 방법으로 우측의 파라미터 에는 제어기 중앙 적외선 센서를 입력해 줍니다 로드 명령어의 파라미터를 모두 입력한 화면은 아래와 같습니다 태스크 코드 저장 하기 Ctrl 를 누르거나 도구 모음의 저장 버튼을 눌러 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#화면-출력하기"
	},
	"3358": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "화면 출력하기",
		"header3": "태스크 코드 다운로드",
		"content": "위에서 작성한 태스크 코드를 제어기에 다운로드 합니다 태스크 코드 다운로드 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#태스크-코드-다운로드"
	},
	"3359": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "화면 출력하기",
		"header3": "프로그램 실행 및 결과보기",
		"content": "프로그램 출력용 모니터 창 띄우기 프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 먼저 띄워야 합니다 프로그램 출력용 모니터 창을 띄우는 방법은 프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭하거나 도구 모음에서 프로그램 출력 보기 버튼 클릭 혹은 프로그램 메뉴의 프로그램 출력 보기 메뉴 선택 혹은 단축키 F5 버튼을 누르면 됩니다 프로그램 실행하기 프로그램 출력용 모니터 창을 띄웠으면 제어기에 다운받은 프로그램을 실행합니다 제어기 상단의 시작 버튼을 눌러 켜면 내부의 LED 가 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 제어기의 중앙 적외선 센서 앞에 손을 가까이 멀리 움직이며 프로그램 출력용 모니터 창에 숫자 값이 변화하는 것을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#태스크-코드-다운로드"
	},
	"3360": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 움직이기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-움직이기"
	},
	"3361": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 움직이기",
		"header3": "학습 목표",
		"content": "버그 키트로 만들어진 버그 로봇을 전진 좌회전 우회전 후진으로 움직여 봅시다 버그 로봇은 교육키트 2단계 3단계로도 만들 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-움직이기"
	},
	"3362": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 움직이기",
		"header3": "준비물",
		"content": "PC RoboPlus Task 프로그램 조립된 버그 로봇 USB 다운로더 LN 101 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-움직이기"
	},
	"3363": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 움직이기",
		"header3": "태스크 코드 작성",
		"content": "버그 로봇 전진 RoboPlus Task 실행 및 프로그램 시작 만들기 화면 출력하기 참조 RoboPlus Task를 실행하면 다음과 같은 화면을 볼 수 있습니다 직진 함수 만들기 함수에 대한 보다 자세한 설명은 여기를 참고하세요 함수는 프로그램 시작의 와 바깥에 만들어야 합니다 따라서 번째 줄 부터 함수를 만들도록 하겠습니다 먼저 번 줄을 선택하면 뜨는 명령어 선택창에서 함수 Sub routine 에서 함수 만들기를 선택합니다 함수가 아래와 같이 만들어 집니다 함수 이름을 지정하기 위해 이름을 입력하세요 부분을 더블클릭하거나 선택된 상태로 Enter 키를 눌러 함수 이름을 직진 으로 입력하고 다시 Enter 키를 누릅니다 버그 직진을 위한 모터 제어 버그에는 2개의 감속모터가 좌측과 우측의 관절로 된 다리를 움직이도록 되어 있습니다 버그 직진을 위해서는 다리를 움직이는 양쪽 모터가 모두 전진 방향으로 회전을 해야 합니다 감속모터 제어를 위해서는 로드 명령어를 사용하여 모터 제어 값을 넣어줘야 합니다 함수 직진의 와 사이 빈 줄을 더블클릭하여 뜨는 명령어 선택 창에서 실행문 로드 값 입력하기 를 선택합니다 포트 에 연결된 감속모터 좌측 모터 제어를 위해 첫 번째를 선택하여 감속모터 포트 을 입력합니다 좌측 모터의 회전 방향과 속도를 지정하기 위해 두 번째를 선택하여 방향 CCW 와 출력 1023 을 입력합니다 CCW 는 반시계 방향을 나타내며 좌측모터의 전진방향입니다 출력 1023 은 감속 모터의 최대 출력 값이며 출력이 강하면 회전력도 강하고 속도도 빠릅니다 포트 의 감속모터에 제어값 CCW 1023 입력을 완료한 모습입니다 포트 의 감속모터 제어를 위해 방금 입력한 명령줄 아래에 빈 줄을 삽입합니다 빈 줄을 삽입하기 위해서는 원하는 위치에서 Space 키를 누르면 됩니다 아래는 함수 직진의 위치를 클릭한 후 Space 키를 누른 모습입니다 위에서 포트 의 감속모터 제어문을 입력한 것과 동일한 방법으로 포트 의 감속모터에 CW 방향 시계방향 으로 1023 최대출력 으로 회전하도록 명령줄을 입력합니다 오른쪽 모터의 경우 CW 가 전진방향입니다 함수 호출 함수에 대한 보다 자세한 설명은 여기를 참고하세요 CM 100 의 프로그램을 실행 시키면 직진 함수가 실행되도록 하기 위해서는 프로그램 시작에서 직진 함수를 호출해 주어야 합니다 프로그램이 종료되지 않고 계속 실행되도록 하기 위해 무조건 반복 명령어를 사용합니다 프로그램 시작의 와 사이에 무조건 반복 명령어를 입력 합니다 무조건 반복 구문 내에서 직진 함수를 호출합니다 무조건 반복의 빈 줄 더블클릭 혹은 Enter 에서 함수 Sub routine 의 함수 호출을 선택합니다 이름을 입력하세요 부분을 더블클릭하거나 Enter 키를 누르면 현재 만들어진 함수의 목록이 나옵니다 목록에서 직진 함수를 선택하거나 직접 입력합니다 지금까지 입력한 최종 결과물은 아래와 같습니다 버그 로봇 후진 후진은 직진에서 두 모터의 방향만 모두 반대로 바꿔주면 됩니다 따라서 직진 함수를 가져다가 수정하여 후진 함수를 만들도록 하겠습니다 직진 함수 복사 후 붙여넣기 복사 잘라내기 붙여넣기 참고 마우스로 드래그 혹은 Shift 키나 Ctrl 키를 누른 채로 직진 함수를 모두 선택합니다 마우스 오른쪽 클릭 후 뜨는 팝업 메뉴에서 복사 를 선택하거나 단축키 Ctrl 를 눌러 복사합니다 직진 함수 아래에 15 라인 클릭 후 마우스 오른쪽 클릭 팝업 메뉴에서 붙여넣기 혹은 단축키 Ctrl 를 눌러 복사한 함수를 붙여 넣습니다 아래는 직진 함수를 복사하여 아래에 붙여넣기를 완료한 화면입니다 후진 함수로 이름 바꾸기 및 모터 방향 바꾸기 복사한 함수의 이름을 직진에서 후진으로 바꿔 줍니다 함수 이름 부분을 더블클릭하거나 Enter 키를 누르면 수정이 가능합니다 양쪽 모터의 회전 방향을 모두 반대방향으로 바꿔 줍니다 역시 오른쪽 파라미터 CW 1023 CCW 1023 부분을 더블클릭 하거나 Enter 키로 수정이 가능합니다 프로그램 시작에서 호출 함수를 전진에서 후진으로 바꿔 줍니다 다음과 같이 프로그램 시작 시 계속 반복해서 후진 함수를 실행하게 됩니다 버그 로봇 좌회전 좌회전 함수를 만들기 위해서 위의 후진에서와 동일하게 직진 함수를 복사한 후 함수 이름을 좌회전으로 바꾸고 우측 모터 포트 는 그대로 전진방향으로 회전하도록 두고 좌측 모터 포트 만 정지 시켜 CW CCW 상관 없이 출력에 을 넣어 줌 버그 로봇이 좌회전하도록 합니다 버그 로봇 우회전 우회전 함수를 만들기 위해서 위의 후진에서와 동일하게 직진 함수를 복사한 후 함수 이름을 우회전으로 바꾸고 좌측 모터 포트 는 그대로 전진방향으로 회전하도록 두고 우측 모터 포트 만 정지 시켜 CW CCW 상관 없이 출력에 을 넣어 줌 버그 로봇이 우회전하도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-움직이기"
	},
	"3364": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 움직이기",
		"header3": "프로그램 다운로드",
		"content": "프로그램 다운로드 절차는 프로그램 다운로드 를 참고하세요 프로그래밍 결과 파일 bug move tsk ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-움직이기"
	},
	"3365": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 움직이기",
		"header3": "프로그램 실행 및 결과",
		"content": "CM 100 상단 시작 버튼 눌러 켜면 프로그램 시작에서 호출하는 함수에 따라 버그 로봇이 계속해서 직진 또는 후진 또는 좌회전 또는 우회전 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-움직이기"
	},
	"3366": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 라인 따라가기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-라인-따라가기"
	},
	"3367": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 라인 따라가기",
		"header3": "목표",
		"content": "적외선은 물체의 색상에 따라 반사하는 정도가 다릅니다 흰 색은 적외선을 많이 반사하고 검은색은 적외선을 적게 반사합니다 이러한 성질을 이용하여 CM 100 의 적외선 센서로 흰 바닥과 검은 선을 구분하고 버그 로봇이 그 선을 따라 가도록 프로그래밍 해 보도록 하겠습니다 앞 장의 버그 움직이기 를 바탕으로 작성합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-라인-따라가기"
	},
	"3368": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 라인 따라가기",
		"header3": "준비물",
		"content": "PC RoboPlus Task 프로그램 조립된 버그 로봇 USB 다운로더 LN 101 흰 바닥에 검은 선이 그어진 판 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-라인-따라가기"
	},
	"3369": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 라인 따라가기",
		"header3": "라인 트레이서",
		"content": "CM 100 의 바닥쪽 왼쪽 적외선 센서와 오른쪽 적외선 센서를 사용하여 흰 바닥과 검은 선을 구분한 다음 검은 선을 따라 버그가 움직이도록 하는 프로그래밍의 알고리즘은 아래와 같습니다 오른쪽 검은 선 감지 왼쪽 검은 선 감지 우회전 오른쪽 적외선 센서에만 검은 선이 감지되었다는 것은 선이 오른쪽으로 휘어져 있다는 의미이므로 오른쪽 모터를 정지시켜서 로봇의 진행 방향을 오른쪽으로 바꿉니다 오른쪽 검은 선 감지 왼쪽 검은 선 감지 좌회전 위에서의 반대 경우로 왼쪽으로 선이 휘어져 있으므로 왼쪽 모터를 정지시켜 로봇의 진행 방향을 왼쪽으로 바꿉니다 오른쪽 검은 선 감지 왼쪽 검은 선 감지 직진 양 쪽 적외선 센서 모두 감지가 되지 않았으면 선이 왼쪽과 오른쪽 적외선 센서 사이에 있거나 선을 벗어난 상태로 방향 전환 없이 직진합니다 오른쪽 검은 선 감지 왼쪽 검은 선 감지 직진 양 쪽 적외선 센서 모두 감지가 되었으면 십자 로 된 교차점과 같은 가로로 된 검은 선이 있거나 검은 바닥이므로 방향 전환 없이 직진합니다 앞서 작성한 버그 움직이기 예제에서 왼쪽 오른쪽 적외선 센서에 검은 선이 감지되는 조건에 따라 다른 함수를 호출하는 코드를 프로그램 시작에 넣어 버그 로봇을 움직이도록 합니다 왼쪽 적외선 센서에만 검은 선이 감지되면 좌회전 합니다 프로그램 시작 내의 무조건 반복의 와 사이에 조건에 따라 다른 동작을 하기 위해 조건문의 만약 명령어를 입력합니다 만약 명령어에 대한 자세한 정보는 여기를 참고하세요 만약 명령어 입력 후 화면은 다음과 같습니다 왼쪽 적외선 센서에만 검은 선이 감지되는 경우는 왼쪽 적외선 센서 값은 200 보다 작고 오른쪽 적외선 센서 값은 200 보다 크게 됩니다 이러한 조건을 찾기 위해 조건절의 비교 파라미터1 첫 번째 에 왼쪽 적외선 센서를 입력합니다 두 비교 파라미터 사이의 비교 연산자는 왼쪽 적외선 센서가 200 보다 작아야 하므로 를 입력합니다 비교 파라미터2 두 번째 에 숫자 200 을 입력합니다 왼쪽 적외선 센서 100 그리고 오른쪽 적외선 센서 200 두 가지 조건이 모두 만족되어야 하므로 then 을 클릭하여 연결 연산자를 amp amp AND 로 바꿉니다 연결 연산자를 바꾸면 뒤에 조건절이 자동으로 하나 더 추가됩니다 두 번째 조건절의 비교 파라미터1에 오른쪽 적외선 센서를 입력하고 비교 연산자는 를 비교 파라미터2에 숫자 200 을 입력하여 만약 명령어를 완성합니다 완성된 조건절이 참이면 왼쪽 적외선 센서에만 검은 선이 감지되면 좌회전 함수를 호출합니다 반대로 오른쪽 적외선 센서에만 검은 선이 감지되면 우회전 합니다 의 만약 명령어에 이어 조건을 계속 검사하기 위해 조건문의 아니면 만약 명령어를 입력합니다 의 만약 명령어 조건문이 참일 경우 아니면 만약 명령어는 실행되지 않습니다 에서와 반대로 오른쪽 적외선 센서에만 검은 선이 감지되는 경우는 왼쪽 적외선 센서 값은 200 보다 크고 오른쪽 적외선 센서 값은 200 보다 작게 됩니다 조건절은 을 참고하여 비교 연산자만 반대로 작성하면 됩니다 이 경우에는 우회전 함수를 호출합니다 과 외의 경우 즉 양쪽 적외선 센서 모두에 검은 선이 감지되거나 양쪽 모두 선이 감지되지 않은 경우 직진합니다 위의 두 가지 조건절이 모두 아닌 경우 직진하기 위해 조건문의 아니면 명령어를 입력하고 직진 함수를 호출합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-라인-따라가기"
	},
	"3370": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 라인 따라가기",
		"header3": "프로그램 다운로드",
		"content": "프로그램 다운로드 절차는 프로그램 다운로드 를 참고하세요 프로그래밍 결과 파일 bug linetracer tsk 라인트레이서용 인쇄물 다운 받기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-라인-따라가기"
	},
	"3371": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 라인 따라가기",
		"header3": "프로그램 실행 및 결과",
		"content": "흰 바탕에 검은 선이 그려진 판 위에 버그를 올려놓고 실행시켜 보세요 라인을 따라 버그가 움직이는지 확인하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-라인-따라가기"
	},
	"3372": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "센서에 반응하는 버그",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#센서에-반응하는-버그"
	},
	"3373": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "센서에 반응하는 버그",
		"header3": "목표",
		"content": "앞 장의 라인 따라하기와 같이 흰 바닥의 검은 선을 따라 움직이다가 전방의 중앙 적외선 센서에 물체가 감지되면 제자리에 멈추고 그 상태에서 박수 소리가 감지되면 다시 선을 따라 다니도록 프로그래밍 해 봅시다 앞 장의 버그 라인 따라가기 를 바탕으로 작성합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#센서에-반응하는-버그"
	},
	"3374": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "센서에 반응하는 버그",
		"header3": "준비물",
		"content": "PC RoboPlus Task 프로그램 조립된 버그 로봇 USB 다운로더 LN 101 흰 바닥에 검은 선이 그어진 판 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#센서에-반응하는-버그"
	},
	"3375": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "센서에 반응하는 버그",
		"header3": "센서에 반응하는 버그",
		"content": "정지 함수 추가 중앙 적외선 센서에 물체가 감지되면 이동을 멈추기 위해 정지 함수를 추가합니다 함수 만들기는 버그 움직이기 를 참고하여 작성하시면 됩니다 포트 에 연결된 좌 우측 감속모터에 모두 출력 을 넣어 정지 함수를 만듭니다 중앙 적외선 센서에 물체가 감지되면 정지 함수 호출 프로그램 시작에 만약 명령어를 추가하여 중앙 적외선 센서 값이 200 보다 커지면 물체가 감지됨 정지 함수를 호출합니다 버그가 완전히 정지할 때까지 잠시 기다립니다 소리 감지를 사용하기 위해서는 버그가 완전히 멈춰야 합니다 버그의 모터 등이 움직이는 소리는 CM 100 의 마이크에 아주 크게 들리기 때문에 버그가 움직이고 있으면 소리가 감지되었다고 판단되기 때문입니다 따라서 타이머를 사용하여 일정 시간 기다리는 코드를 추가해 줍니다 타이머의 자세한 설명은 여기 참조 로드 명령어로 타이머에 타이머 값 1초를 넣어줍니다 타이머 시간이 줄어들어 이 될 때까지 기다리기 위해 조건 대기 명령어를 사용합니다 조건 대기 명령어에 대한 보다 자세한 정보는 여기를 참고하세요 조건 대기 명령어로 타이머 값이 카운트다운 되어 이 될 때까지 보다 큰 동안 대기합니다 마이크를 통해 박수소리가 날 때 까지 대기합니다 중앙 적외선 센서에 물체가 감지되어 움직임을 정지했으면 그 상태로 소리가 감지될 때까지 대기하는 코드를 작성합니다 소리감지 횟수는 자동으로 으로 초기화 되지 않으므로 대기하기 전에 로드 명령어로 으로 초기화를 해 줍니다 소리감지 횟수에 대한 자세한 설명은 여기를 참고하세요 조건 대기 명령어를 사용하여 소리감지 횟수가 인 동안에는 대기하도록 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#센서에-반응하는-버그"
	},
	"3376": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "센서에 반응하는 버그",
		"header3": "프로그램 다운로드",
		"content": "프로그램 다운로드 절차는 프로그램 다운로드 를 참고하세요 프로그래밍 결과 파일 bug sensor tsk ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#센서에-반응하는-버그"
	},
	"3377": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "센서에 반응하는 버그",
		"header3": "프로그램 실행 및 결과",
		"content": "프로그램을 실행 시킨 후 중앙 적외선 센서에 물체가 감지되면 버그가 멈추는지 확인합니다 그 후 박수를 쳐서 다시 버그가 움직이는지 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#센서에-반응하는-버그"
	},
	"3378": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 조종하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-조종하기"
	},
	"3379": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 조종하기",
		"header3": "목표",
		"content": "RC 100 조종기를 사용하여 버그 로봇을 전 후 좌 우 로 조종할 수 있도록 프로그래밍을 해 봅시다 앞 장의 센서에 반응하는 버그 를 바탕으로 작성합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-조종하기"
	},
	"3380": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 조종하기",
		"header3": "준비물",
		"content": "PC RoboPlus Task 프로그램 조립된 버그 로봇 USB 다운로더 LN 101 RC 100 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-조종하기"
	},
	"3381": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 조종하기",
		"header3": "버그 조종하기",
		"content": "기존의 코드에서 프로그램 시작 내에 무조건 반복의 와 로 둘러쌓인 부분을 모두 삭제합니다 RC 100 의 무선 조종 신호를 받기 위해 조건 대기 명령어를 사용하여 새 무선 데이터가 도착할 때까지 대기합니다 새 무선 데이터 도착에 대한 자세한 설명은 여기를 참고하세요 새 무선 데이터가 도착하면 받은 무선 데이터를 로드 명령으로 받은데이터 라는 변수에 넣어줍니다 변수에 대한 자세한 설명은 여기를 참고하세요 받은 무선 데이터의 값 중 RC 100 이동 조종 버튼값만 분리합니다 계산 명령어를 이용하여 받은데이터 값에 RC 100 의 버튼 값을 비트연산 amp 를 통해 필요한 값만 분리하여 이동조종키 변수에 넣어줍니다 계산 명령어 입력 계산 명령어에 대한 자세한 정보는 여기를 참고하세요 결과 란에 이동조종키 변수를 넣고 연산 파라미터1 에 받은데이터 변수를 넣은 다음 연산자를 amp AND 로 선택합니다 연산 파라미터2 에 RC 100 버튼 값으로 을 모두 선택하여 입력합니다 RC 100 버튼 값에 대한 자세한 정보는 여기를 참고하세요 입력을 완료하면 아래와 같습니다 이동조종키 값에 따라 직진 후진 좌회전 우회전 합니다 모든 이동조종키 버튼이 떼어지면 정지합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-조종하기"
	},
	"3382": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 조종하기",
		"header3": "프로그램 다운로드",
		"content": "프로그램 다운로드 절차는 프로그램 다운로드 를 참고하세요 프로그래밍 결과 파일 bug rc tsk ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-조종하기"
	},
	"3383": {
		"product": "버그 키트",
		"header1": "프로그래밍 학습",
		"header2": "버그 조종하기",
		"header3": "프로그램 실행 및 결과",
		"content": "프로그램을 실행 시킨 후 RC 100 조종기로 전 후 좌 우로 조종해 보세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#버그-조종하기"
	},
	"3384": {
		"product": "버그 키트",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "다운로드 태스크 코드 OLLO BUG Product KR tsk 참고 태스크 코드 다운로드 방법 참고 기본 프로그램의 작동방법 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/bugkit/#다운로드"
	},
	"3385": {
		"product": "OLLO 2단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "올로 교육키트 로봇 수업용 2단계는 로봇이란 무엇인지에 대한 기본 개념부터 로봇의 동력 센서의 활용 속도와 힘 보행과 주행 등 과학적 원리와 물리적 이론에 보다 쉽게 접근하고 실험을 통해 자연스럽게 개념과 원리를 습득하게 해 줍니다 비슷한 형태의 로봇을 반복적으로 분해 조립하는 단순 학습이 아닌 로봇을 움직일 수 있게 하는 원리를 이해하고 학습할 수 있습니다 올로 교육키트 로봇 수업용 2단계는 총 12주차의 교재와 예제 로봇이 결합되어 프로그래밍의 기본 학습과 센서의 활용 로봇의 제작 원리의 이해 문제 풀이 등의 과정을 제공합니다 12회에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 주의 올로 2단계는 현재 단종되어 더 이상 판매되지 않습니다 올로 교육키트 2단계에서 프로그램은 선생님이 다운로드 해 주며 사용자가 직접 프로그램 학습 및 다운로드를 하기 위해서는 USB 다운로더 LN 101 를 별도로 구매하셔야 합니다 보다 다양한 주변 장치를 이용하여 로봇을 제작 및 프로그래밍 하기 위해서는 교육키트 3단계 를 구매하시면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/explorer/#개요"
	},
	"3386": {
		"product": "OLLO 2단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "CM 100 감속 모터 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/explorer/#부품-목록"
	},
	"3387": {
		"product": "OLLO 2단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "올로 2단계 키트에 포함된 제어기 CM 100 에는 다운로드 없이 사용할 수 있는 통합 프로그램이 내장되어 있습니다 만약 단 한번이라도 다운로드한 적이 있다면 통합 프로그램이 지워진 것이므로 USB 다운로더 LN101 를 이용해서 예제 프로그램을 다운로드해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/explorer/#작동하기"
	},
	"3388": {
		"product": "OLLO 2단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "제어기의 버튼을 연속으로 누르면 도 레 미와 같은 음계 소리가 나며 누른 횟수에 따라 내장된 프로그램을 선택할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/explorer/#작동방법"
	},
	"3389": {
		"product": "OLLO 2단계",
		"header1": "작동하기",
		"header2": "프로그램 선택 방법",
		"header3": "",
		"content": "자세한 내용은 키트에 포함된 교재를 참고 하시기 바랍니다 버튼 누름 횟수 교재 내용 로봇 도 단원 예제 레 단원 3예제 미 단원 4예제 나만의 로봇을 만들어요 파 단원 5예제 솔 단원 6예제 라 단원 7예제 시 단원 8예제 나만의 로봇을 만들어요 높은 도 단원 9예제 참고 통합 프로그램으로 선택할 수 없는 예제는 USB 다운로더 LN101 를 이용해서 다운로드해야 합니다 예제 파일은 아래 다운로드 에서 얻을 수 있습니다 참고 USB 다운로더 LN101 은 2단계구성품에 포함되어 있지 않습니다 쇼핑몰에서 별도 구매해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/explorer/#프로그램-선택-방법"
	},
	"3390": {
		"product": "OLLO 2단계",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/explorer/#다운로드"
	},
	"3391": {
		"product": "OLLO 2단계",
		"header1": "다운로드",
		"header2": "교안 예제(교육키트 2단계)",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 USB 다운로더 LN101 은 2단계 구성품에 포함되어 있지 않습니다 쇼핑몰에서 별도구매 해주세요 2단계 통합 예제 프로그램 제품 구입 시 제어기에 기본으로 들어있는 프로그램입니다 통합 프로그램 사용법은 작동하기 를 참고하세요 다운로드 OLLO L2 Total KR tsk 단원별 예제 프로그램 Robots 코끼리 다운로드 OLLO L2 Elephant KR tsk 풍차 다운로드 OLLO L2 Windmill KR tsk 어보이더 다운로드 OLLO L2 Avoider KR tsk 상상하세요 다운로드 OLLO L2 DistanceSensor KR tsk 다운로드 OLLO L2 Penguin KR tsk 다운로드 OLLO L2 CardGiver KR tsk Robots 물개 다운로드 OLLO L2 Seal KR tsk 라인트레이서 다운로드 OLLO L2 Linetracer KR tsk 곡사포 다운로드 OLLO L2 Howitzer KR tsk 나만의 로봇 다운로드 OLLO L2 SoundSensor KR tsk 다운로드 OLLO L2 Dancing KR tsk 다운로드 OLLO L2 Cradle KR tsk Robots 무당벌레 다운로드 OLLO L2 Ladybug KR tsk 10 강아지 다운로드 OLLO L2 WheelPuppy KR tsk 11 쥐 다운로드 OLLO L2 Mouse KR tsk 12 여치 다운로드 OLLO L2 Battlebug KR tsk ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/explorer/#교안-예제교육키트-2단계"
	},
	"3392": {
		"product": "OLLO 3단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "올로 교육키트 로봇 수업용 3단계는 제어기를 통한 로봇의 제어 원리부터 서보모터의 제어 접촉센서와 적외선센서 LED 모듈의 제어 원리를 학습할 수 있습니다 로봇 프로그램의 순서도 개념을 이해하고 프로그래밍 기초 지식을 학습함으로써 실질적이고 본격적인 로봇 제작 및 프로그래밍을 이해하는 단계입니다 제작한 로봇을 센서로 동작시키거나 무선조종기로 조종할 수 있는 프로그램을 직접 제작해 봅니다 올로 교육키트 로봇 수업용 3단계는 2단계 키트와 결합되어 총 12주차의 프로그래밍 학습과 센서들의 활용 무선 조종 프로그래밍 원리의 이해 문제풀이 등의 과정을 제공합니다 12회에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 주의 올로 3단계는 현재 단종되어 더 이상 판매되지 않습니다 올로 교육키트 3단계는 2단계 키트의 부품들이 있어야 로봇을 제작할 수 있습니다 반드시 교육키트 2단계를 먼저 구매하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#개요"
	},
	"3393": {
		"product": "OLLO 3단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "RC 100 LN 101 서보 모터 적외선 센서 LED 모듈 접촉 센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#부품-목록"
	},
	"3394": {
		"product": "OLLO 3단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#작동하기"
	},
	"3395": {
		"product": "OLLO 3단계",
		"header1": "작동하기",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#지그비-무선-조종"
	},
	"3396": {
		"product": "OLLO 3단계",
		"header1": "작동하기",
		"header2": "지그비 무선 조종",
		"header3": "지그비(ZIGBee)",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210도 사용법은 동일 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#지그비-무선-조종"
	},
	"3397": {
		"product": "OLLO 3단계",
		"header1": "작동하기",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 RC 100 에 ZIG 100 모듈을 장착한 모습 CM 100 에 ZIG 110 모듈을 장착한 모습 CM 510 에 ZIG 110 모듈을 장착한 모습 CM 에 ZIG 100 모듈을 장착한 모습 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#지그비-무선-조종"
	},
	"3398": {
		"product": "OLLO 3단계",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#다운로드"
	},
	"3399": {
		"product": "OLLO 3단계",
		"header1": "다운로드",
		"header2": "[교안 예제(교육키트 3단계)](#교안-예제(교육키트-3단계)",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 3단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 태스크 코드 설명 건널목 차단기 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 범퍼카 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 집게 탐사차 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 전기 기타 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 태스크 코드 설명 노래하는 새 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 타워 크레인 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 장갑차 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 탱크 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 태스크 코드 설명 청기백기 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 10 배틀 버그 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 11 로봇 기사 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 12 레이싱카 Download Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 프로그래밍 예제 프로그램2 로봇 예제 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/inventor/#다운로드"
	},
	"3400": {
		"product": "OLLO 4단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "올로 교육키트 로봇 수업용 4단계는 제어기를 통한 로봇의 제어 원리부터 서보모터의 제어 접촉센서와 적외선센서 LED 모듈의 제어 원리를 학습할 수 있습니다 로봇 프로그램의 순서도 개념을 이해하고 프로그래밍 기초 지식을 학습함으로써 실질적이고 본격적인 로봇 제작 및 프로그래밍을 이해하는 단계입니다 제작한 로봇을 센서로 동작시키거나 무선조종기로 조종할 수 있는 프로그램을 직접 제작해 봅니다 올로 교육키트 로봇 수업용 4단계는 2단계 3단계 키트와 결합되어 총 12주차의 프로그래밍 학습과 센서들의 활용 무선 조종 프로그래밍 원리의 이해 문제풀이 등의 과정을 제공합니다 12회에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다 주의 올로 4단계는 현재 단종되어 더 이상 판매되지 않습니다 올로 교육키트 4단계는 2단계 3단계 키트의 부품들이 있어야 로봇을 제작할 수 있습니다 반드시 교육키트 2단계 3단계를 먼저 구매하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#개요"
	},
	"3401": {
		"product": "OLLO 4단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "고속 감속 모터 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#부품-목록"
	},
	"3402": {
		"product": "OLLO 4단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#작동하기"
	},
	"3403": {
		"product": "OLLO 4단계",
		"header1": "작동하기",
		"header2": "지그비 무선 조종",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#지그비-무선-조종"
	},
	"3404": {
		"product": "OLLO 4단계",
		"header1": "작동하기",
		"header2": "지그비 무선 조종",
		"header3": "지그비(ZIGBee)",
		"content": "ZIG 100 110 은 로봇용 무선 통신 장치로서 ZIGBee 방식을 사용합니다 ZIGBee 는 Bluetooth 와 같이 PAN Personal Area Network 통신에 많이 사용되는 통신 기술입니다 적외선 방식에 비해서 통신 품질이 매우 좋고 여러 명이 동시에 조종하여도 각자 자신의 로봇을 조종할 수 있는 장점이 있습니다 구매한 제품에 지그비 모듈이 포함되지 않을 수 있습니다 이 경우에는 별도로 구매해야 합니다 BT 210도 사용법은 동일합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#지그비-무선-조종"
	},
	"3405": {
		"product": "OLLO 4단계",
		"header1": "작동하기",
		"header2": "지그비 무선 조종",
		"header3": "제어기와 지그비",
		"content": "RC 100 을 이용한 올로와 바이올로이드의 조종은 기본적으로 적외선 방식의 무선 통신을 이용하도록 되어 있습니다 이것을 ZIGBee 방식의 무선 통신을 이용하도록 하기 위해서는 ZIG 110 set 를 별도로 구매하여 RC 100 에 ZIG 100 을 장착하고 제어기 에 ZIG 110 을 장착해야 합니다 자세한 장착 방법은 각 부품의 설명 페이지를 참고하세요 지그비 셋트는 제품 출하시 서로 통신이 가능하도록 설정이 맞춰져 있습니다 만약 다른 지그비 셋트와 혼용하면 무선 조종이 되지 않으니 섞이지 않도록 주의하시기 바랍니다 RC 100 에 ZIG 100 모듈을 장착한 모습 CM 100 에 ZIG 110 모듈을 장착한 모습 CM 510 에 ZIG 110 모듈을 장착한 모습 CM 에 ZIG 100 모듈을 장착한 모습 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#지그비-무선-조종"
	},
	"3406": {
		"product": "OLLO 4단계",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#다운로드"
	},
	"3407": {
		"product": "OLLO 4단계",
		"header1": "다운로드",
		"header2": "[교안 예제(교육키트 4단계)](#교안-예제(교육키트-4단계)",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 4단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 태스크 코드 설명 로봇 축구 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 라인트레이서 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 로봇 얼굴 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 미로 탈출 로봇 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 태스크 코드 설명 회전목마 Download Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 프로그래밍 예제 프로그램2 로봇 예제 프로그램 탐사 로봇 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 지게차 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 전투 로봇 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 태스크 코드 설명 덤프 트럭 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 10 춤추는 로봇 Download Download Download 조립 확인용 예제 프로그램 프로그래밍 예제 프로그램 로봇 예제 프로그램 11 줄타는 원숭이 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 12 토끼와 거북이 Download Download 조립 확인용 예제 프로그램 로봇 예제 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/ollo/ollo-4/#다운로드"
	},
	"3408": {
		"product": "로보티즈 스마트",
		"header1": "로보티즈 스마트",
		"header2": "",
		"header3": "",
		"content": "1단계 2단계 3단계 교안 예제 교안 예제 교안 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/#로보티즈-스마트"
	},
	"3409": {
		"product": "로보티즈 스마트",
		"header1": "로보티즈 스마트 II",
		"header2": "",
		"header3": "",
		"content": "1단계 2단계 3단계 교안 예제 교안 예제 교안 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/#로보티즈-스마트-ii"
	},
	"3410": {
		"product": "로보티즈 스마트",
		"header1": "로보티즈 스마트 III",
		"header2": "",
		"header3": "",
		"content": "1단계 2단계 3단계 4단계 교안 예제 교안 예제 교안 예제 교안 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/#로보티즈-스마트-iii"
	},
	"3411": {
		"product": "스마트 교육키트 1단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-1/#개요"
	},
	"3412": {
		"product": "스마트 교육키트 1단계",
		"header1": "개요",
		"header2": "로보티즈 스마트 교육키트(로봇수업용) 1단계",
		"header3": "",
		"content": "로보티즈 스마트는 일반 리모컨을 이용한 로봇 구동의 단순 조정한계를 스마트 기기와 로봇을 블루투스로 연결하여 양방향 입출력이 가능하도록 구현된 교육용 로봇 솔루션입니다 로보티즈 스마트 1단계는 올바른 스마트기기의 활용을 위한 스마트기기의 기초적인 활용부터 어플리케이션을 응용 통해 예제별 프로그램 실전학습을 함께 진행하는 로봇 IT 교육용 키트입니다 로보티즈 스마트는 총 12장의 교재와 6가지 예제 로봇이 결합되어 로봇 원리의 이해 로봇의 제작 문제 풀이 스마트기기의 개념 프로그래밍의 기본 학습 및 스마트기기의 윤리적 문제 등의 과정을 제공합니다 로보티즈 스마트 1단계에는 스마트기기의 다양한 기능을 이용할 수 있는 제어기와 스마트 기기와 무선 통신 모듈이 가능한 블루투스가 포함되어 있습니다 스마트 교육키트 1단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMART 을 통해 다운로드 할 수 있습니다 로보티즈 스마트 1단계는 현재 단종되어 더 이상 판매되지 않습니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-1/#로보티즈-스마트-교육키트로봇수업용-1단계"
	},
	"3413": {
		"product": "스마트 교육키트 1단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "CM 200 BT 210 감속 모터 접촉센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-1/#부품-목록"
	},
	"3414": {
		"product": "스마트 교육키트 1단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 스마트 기기에 SMART 를 다운로드 받아서 설치해야 합니다 설치가 완료되면 스마트 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 210 를 연결하고 SMART 에서 task를 이용하여 예제를 다운로드 받습니다 SMART 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-1/#작동하기"
	},
	"3415": {
		"product": "스마트 교육키트 1단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "SMART 를 실행하고 제어기의 버튼을 눌러 전원을 켜서 대기합니다 SMART 에서 해당 예제를 클릭하고 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 1단계 교안예제 페이지 또는 SMART앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-1/#작동하기"
	},
	"3416": {
		"product": "스마트 교육키트 1단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 1단계 교안을 참고하세요 만일 프로그램을 직접 만들거나 다운로드 할 경우에 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 210 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도 구매 해주세요 로봇 태스크 코드 바람개비 꽃 로봇 예제 프로그램 프로그래밍 예제 프로그램 거미 로봇 예제 프로그램 프로그래밍 예제 프로그램 지키미 로봇 예제 프로그램 프로그래밍 예제 프로그램 꿀벌 로봇 예제 프로그램 프로그래밍 예제 프로그램 청기백기 로봇 예제 프로그램 프로그래밍 예제 프로그램 전자총 로봇 예제 프로그램 프로그래밍 예제 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-1/#교안예제"
	},
	"3417": {
		"product": "스마트 교육키트 2단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-2/#개요"
	},
	"3418": {
		"product": "스마트 교육키트 2단계",
		"header1": "개요",
		"header2": "로보티즈 스마트 교육키트(로봇수업용) 2단계",
		"header3": "",
		"content": "로보티즈 스마트는 어플리케이션을 이용한 프로그램 다운 방법 및 블루투스를 이용한 로봇과 스마트기기 연결 방법 등 기본적인 사용 학습법부터 로봇 하드웨어와 스마트기기의 입력방식 외부기기 연결 방법 등 스마트기기에 관련된 개념 학습을 로봇 예제별 프로그램을 이용한 실전 학습과 함께 진행하는 로봇IT 교육용 키트입니다 로보티즈 스마트는 총 12장의 교재와 6가지 예제 로봇이 결합되어 로봇 원리의 이해 로봇의 제작 문제 풀이 스마트기기의 개념 프로그래밍의 기본 학습 및 스마트기기의 윤리적 문제 등의 과정을 제공합니다 로보티즈 스마트 2단계는 컬러센서 자석센서 및 접촉센서의 원리 등 로봇 하드웨어 설명이 포함된 홀수장과 횟수 반복문 음성출력 및 기울임 방향을 바꿔보는 프로그램 학습 및 응용 등으로 이루어진 짝수장으로 구성되어 있습니다 스마트 교육키트 2단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMART 을 통해 다운로드 할 수 있습니다 보다 다양한 관절이 사용되는 로봇을 제작 및 프로그래밍 하기 위해서는 교육키트3단계를 구매하시면 됩니다 주의 로보티즈 스마트 2단계는 현재 단종되어 더 이상 판매되지 않습니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-2/#로보티즈-스마트-교육키트로봇수업용-2단계"
	},
	"3419": {
		"product": "스마트 교육키트 2단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "컬러센서 자석센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-2/#부품-목록"
	},
	"3420": {
		"product": "스마트 교육키트 2단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 스마트 기기에 SMART 를 다운로드 받아서 설치해야 합니다 설치가 완료되면 제어기 CM 200 에 블루투스 BT 210 를 연결하고 SMART 에서 task를 이용하여 예제를 다운로드 받습니다 SMART 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 참고 예제 task파일은 스마트2단계 교안예제 페이지 또는 SMART앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-2/#작동하기"
	},
	"3421": {
		"product": "스마트 교육키트 2단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 210 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도 구매 해주세요 단원별 예제 프로그램 로봇 태스크 코드 룰렛 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 스마트레이싱카 로봇 예제 프로그램 프로그래밍 예제 프로그램 금고 로봇 예제 프로그램 프로그래밍 예제 프로그램 검투사 로봇 예제 프로그램 프로그래밍 예제 프로그램 대포로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 알람시계 로봇 예제 프로그램 프로그래밍 예제 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-2/#교안예제"
	},
	"3422": {
		"product": "스마트 교육키트 3단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-3/#개요"
	},
	"3423": {
		"product": "스마트 교육키트 3단계",
		"header1": "개요",
		"header2": "로보티즈 스마트 교육키트(로봇수업용) 3단계",
		"header3": "",
		"content": "로보티즈 스마트는 어플리케이션을 이용한 프로그램 다운 방법 및 블루투스를 이용한 로봇과 스마트기기 연결 방법 등 기본적인 사용 학습법부터 로봇 하드웨어와 스마트기기의 입력방식 외부기기 연결 방법 등 스마트기기에 관련된 개념 학습을 로봇 예제별 프로그램을 이용한 실전 학습과 함께 진행하는 로봇 IT 교육용 키트입니다 로보티즈 스마트는 총 12장의 교재와 6가지 예제 로봇이 결합되어 로봇 원리의 이해 로봇의 제작 문제 풀이 스마트기기의 개념 프로그래밍의 기본 학습 및 스마트기기의 윤리적 문제 등의 과정을 제공합니다 로보티즈 스마트 3단계는 스마트 기기를 통한 조종을 기본으로 로봇 하드웨어 설명이 포함된 홀수장과 음성 인식기능 동영상 재생 및 Motion 사용하기 등의 과정이 포함된 짝수장으로 구성되어 있습니다 특히 Motion 프로그램은 로보티즈 스마트 3단계에 처음 사용되며 다관절 로봇의 동작 프로그램 학습 및 응용 등을 학습할 수 있습니다 스마트 교육키트 3단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMART 을 이용해야 합니다 주의 로보티즈 스마트 3단계는 현재 단종되어 더 이상 판매되지 않습니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-3/#로보티즈-스마트-교육키트로봇수업용-3단계"
	},
	"3424": {
		"product": "스마트 교육키트 3단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-3/#부품-목록"
	},
	"3425": {
		"product": "스마트 교육키트 3단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 스마트 기기에 SMART 를 다운로드 받아서 설치해야 합니다 설치가 완료되면 제어기 CM 200 에 블루투스 BT 210 를 연결하고 SMART 에서 task를 이용하여 예제를 다운로드 받습니다 SMART 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 참고 예제 task 파일은 로보티즈 스마트3단계 교안예제 페이지 또는 SMART앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-3/#작동하기"
	},
	"3426": {
		"product": "스마트 교육키트 3단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 3단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 210 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도 구매 해주세요 단원별 예제 프로그램 로봇 태스크 코드 스마트 탐사차 로봇 예제 프로그램 프로그래밍 예제 프로그램 말하는 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 스마트 4족 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 스마트 강아지 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 스마트 변신 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 스마트 드로이드 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart1-3/#교안예제"
	},
	"3427": {
		"product": "스마트II 교육키트 1단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-1/#개요"
	},
	"3428": {
		"product": "스마트II 교육키트 1단계",
		"header1": "개요",
		"header2": "로보티즈 스마트II 교육 키트(로봇수업용) 1단계",
		"header3": "",
		"content": "로보티즈 스마트II는 일반 리모컨을 이용한 로봇 구동의 단순 조정한계를 스마트 기기와 로봇을 블루투스로 연결하여 양방향 입출력이 가능하도록 구현된 교육용 로봇 솔루션입니다 로보티즈 스마트II 1단계는 올바른 스마트기기의 활용을 위한 스마트기기의 기초적인 활용부터 어플리케이션을 응용 통해 예제별 프로그램 실전학습을 함께 진행하는 로봇 IT 교육용 키트입니다 로보티즈 스마트II 1단계는 총 12장의 교재와 6가지 예제 로봇이 결합되어 로봇 원리의 이해 로봇의 제작 문제 풀이 스마트기기의 개념 프로그래밍의 기본 학습 및 스마트기기의 윤리적 문제 등의 과정을 제공합니다 로보티즈 스마트II 1단계에는 스마트기기의 다양한 기능을 이용할 수 있는 제어기와 스마트 기기와 무선 통신 모듈이 가능한 블루투스가 포함되어 있습니다 스마트II 교육키트 1단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMARTII 을 통해 다운로드 할 수 있습니다 주의 로보티즈 스마트II 1단계는 현재 단종되어 더 이상 판매되지 않습니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-1/#로보티즈-스마트ii-교육-키트-로봇수업용-3단계"
	},
	"3429": {
		"product": "스마트II 교육키트 1단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "CM 200 BT 210 감속 모터 접촉센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-1/#부품-목록"
	},
	"3430": {
		"product": "스마트II 교육키트 1단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 스마트 기기에 SMARTII 를 다운로드 받아서 설치해야 합니다 설치가 완료되면 스마트II 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 210 를 연결하고 SMARTII 에서 task를 이용하여 예제를 다운로드 받습니다 SMARTII 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-1/#작동하기"
	},
	"3431": {
		"product": "스마트II 교육키트 1단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "SMARTII 를 실행하고 제어기의 버튼을 눌러 전원을 켜서 대기합니다 SMARTII 에서 해당 예제를 클릭하고 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 1단계 교안예제 페이지 또는 SMARTII 앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-1/#작동하기"
	},
	"3432": {
		"product": "스마트II 교육키트 1단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 1단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 210 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도 구매 해주세요 로봇 태스크 코드 바람개비 꽃 로봇 예제 프로그램 프로그래밍 예제 프로그램 거미 로봇 예제 프로그램 프로그래밍 예제 프로그램 지키미 로봇 예제 프로그램 프로그래밍 예제 프로그램 꿀벌 로봇 예제 프로그램 프로그래밍 예제 프로그램 청기백기 로봇 예제 프로그램 프로그래밍 예제 프로그램 전자총 로봇 예제 프로그램 프로그래밍 예제 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-1/#교안예제"
	},
	"3433": {
		"product": "스마트II 교육키트 2단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-2/#개요"
	},
	"3434": {
		"product": "스마트II 교육키트 2단계",
		"header1": "개요",
		"header2": "로보티즈 스마트II 교육키트(로봇수업용) 2단계",
		"header3": "",
		"content": "로보티즈 스마트II는 어플리케이션을 이용한 프로그램 다운 방법 및 블루투스를 이용한 로봇과 스마트기기 연결 방법 등 기본적인 사용 학습법부터 로봇 하드웨어와 스마트기기의 입력방식 외부기기 연결 방법 등 스마트기기에 관련된 개념 학습을 로봇 예제별 프로그램을 이용한 실전 학습과 함께 진행하는 로봇IT 교육용 키트입니다 로보티즈 스마트II는 총 12장의 교재와 6가지 예제 로봇이 결합되어 로봇 원리의 이해 로봇의 제작 문제 풀이 스마트기기의 개념 프로그래밍의 기본 학습 및 스마트기기의 윤리적 문제 등의 과정을 제공합니다 로보티즈 스마트II 2단계는 컬러센서 자석센서 및 접촉센서의 원리 등 로봇 하드웨어 설명이 포함된 홀수장과 횟수 반복문 음성출력 및 기울임 방향을 바꿔보는 프로그램 학습 및 응용 등으로 이루어진 짝수장으로 구성되어 있습니다 스마트II 교육키트 2단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMART2 을 통해 다운로드 할 수 있습니다 보다 다양한 관절이 사용되는 로봇을 제작 및 프로그래밍 하기 위해서는 교육키트3단계를 구매하시면 됩니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-2/#로보티즈-스마트ii-교육키트로봇수업용-2단계"
	},
	"3435": {
		"product": "스마트II 교육키트 2단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "컬러센서 CS 10 자석센서 MGSS 10 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-2/#부품-목록"
	},
	"3436": {
		"product": "스마트II 교육키트 2단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 스마트 기기에 SMARTII 를 다운로드 받아서 설치해야 합니다 설치가 완료되면 스마트II 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 210 를 연결하고 SMARTII 에서 task를 이용하여 예제를 다운로드 받습니다 SMARTII 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-2/#작동하기"
	},
	"3437": {
		"product": "스마트II 교육키트 2단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "SMARTII 를 실행하고 제어기의 버튼을 눌러 전원을 켜서 대기합니다 SMARTII 에서 해당 예제를 클릭하고 연결이 완료되면 프로그램이 실행됩니다 참고 예제 Task 파일은 스마트II 2단계 교안예제 페이지 또는 SMARTII 앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-2/#작동하기"
	},
	"3438": {
		"product": "스마트II 교육키트 2단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 210 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도구매 해주세요 로봇 태스크 코드 룰렛 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 스마트 레이싱카 로봇 예제 프로그램 프로그래밍 예제 프로그램 금고 로봇 예제 프로그램 프로그래밍 예제 프로그램 검투사 로봇 예제 프로그램 프로그래밍 예제 프로그램 대포로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 알람시계 로봇 예제 프로그램 프로그래밍 예제 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-2/#교안예제"
	},
	"3439": {
		"product": "스마트II 교육키트 3단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-3/#개요"
	},
	"3440": {
		"product": "스마트II 교육키트 3단계",
		"header1": "개요",
		"header2": "로보티즈 스마트II 교육키트(로봇수업용) 3단계",
		"header3": "",
		"content": "로보티즈 스마트II 는 어플리케이션을 이용한 프로그램 다운 방법 및 블루투스를 이용한 로봇과 스마트기기 연결 방법 등 기본적인 사용 학습법부터 로봇 하드웨어와 스마트기기의 입력방식 외부기기 연결 방법 등 스마트기기에 관련된 개념 학습을 로봇 예제별 프로그램을 이용한 실전 학습과 함께 진행하는 로봇 IT 교육용 키트입니다 로보티즈 스마트II 는 총 12장의 교재와 6가지 예제 로봇이 결합되어 로봇 원리의 이해 로봇의 제작 문제 풀이 스마트기기의 개념 프로그래밍의 기본 학습 및 스마트기기의 윤리적 문제 등의 과정을 제공합니다 로보티즈 스마트II 3단계는 스마트 기기를 통한 조종을 기본으로 로봇 하드웨어 설명이 포함된 홀수장과 음성 인식기능 동영상 재생 및 Motion 사용하기 등의 과정이 포함된 짝수장으로 구성되어 있습니다 특히 Motion 프로그램은 로보티즈 스마트 3단계에 처음 사용되며 다관절 로봇의 동작 프로그램 학습 및 응용 등을 학습할 수 있습니다 스마트II 교육키트 3단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMART 을 이용해야 합니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-3/#로보티즈-스마트ii-교육키트로봇수업용-3단계"
	},
	"3441": {
		"product": "스마트II 교육키트 3단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-3/#부품-목록"
	},
	"3442": {
		"product": "스마트II 교육키트 3단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "사용할 스마트 기기에 SMARTII 를 다운로드 받아서 설치해야 합니다 설치가 완료되면 스마트II 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 210 를 연결하고 SMARTII 에서 task를 이용하여 예제를 다운로드 받습니다 SMARTII 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-3/#작동하기"
	},
	"3443": {
		"product": "스마트II 교육키트 3단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "SMARTII 를 실행하고 제어기의 버튼을 눌러 전원을 켜서 대기합니다 SMARTII 에서 해당 예제를 클릭하고 연결이 완료되면 프로그램이 실행됩니다 참고 예제 Task 파일은 스마트II 3단계 교안예제 페이지 또는 SMARTII 앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-3/#작동하기"
	},
	"3444": {
		"product": "스마트II 교육키트 3단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 3단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 210 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도구매 해주세요 단원별 예제 프로그램 로봇 태스크 코드 스마트 탐사차 로봇 예제 프로그램 프로그래밍 예제 프로그램 말하는 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 스마트 4족 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 스마트 강아지 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 스마트 변신 로봇 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 스마트 드로이드 로봇 예제 프로그램 프로그래밍 예제 프로그램 로봇 모션 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart2-3/#교안예제"
	},
	"3445": {
		"product": "스마트III 교육키트 1단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-1/#개요"
	},
	"3446": {
		"product": "스마트III 교육키트 1단계",
		"header1": "개요",
		"header2": "로보티즈 스마트III 교육 키트(로봇수업용) 1단계",
		"header3": "",
		"content": "로보티즈 스마트III는 일반 리모컨의 단방향통신을 이용한 단순조정의 한계를 넘어 블루투스로 양방향통신함으로써 스마트기기와 로봇이 상호작용하는 획기적인 교육용 로봇 솔루션입니다 로보티즈 스마트III는 단계마다 총 12장의 교재와 12가지 예제 로봇이 결합되어 로봇 및 과학 원리의 이해 로봇의 제작 프로그래밍의 기본 학습 문제 풀이 등의 과정을 제공합니다 로보티즈 스마트III 1단계에는 스마트기기의 다양한 기능을 이용할 수 있는 제어기와 스마트 기기와 무선 통신이 가능한 블루투스 모듈이 포함되어 있습니다 프로그램 학습 및 다운로드를 하기 위해서는 SMARTIII 와 Task2 0이 필요합니다 또한 스마트기기가 없는 경우에도 로보티즈 BT 410 SET가 결합된 리모컨 RC 100B 으로 로봇을 조종할 수 있도록 별도의 예제 프로그램이 제공됩니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-1/#로보티즈-스마트iii-교육-키트-로봇수업용-1단계"
	},
	"3447": {
		"product": "스마트III 교육키트 1단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "CM 200 BT 410 감속 모터 접촉센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-1/#부품-목록"
	},
	"3448": {
		"product": "스마트III 교육키트 1단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "스마트 기기에 SMARTIII 와 task2 를 설치해야 합니다 앱 설치가 완료되면 스마트III 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 410 를 연결하고 SMARTIII에서 task2 0을 실행하여 예제를 다운로드 받습니다 SMARTIII 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-1/#작동하기"
	},
	"3449": {
		"product": "스마트III 교육키트 1단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "제어기의 버튼을 눌러 전원을 켭니다 SMARTIII에서 해당 예제를 클릭하여 제어기와 스마트기기 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 1단계 교안예제 페이지 또는 SMARTIII앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-1/#작동하기"
	},
	"3450": {
		"product": "스마트III 교육키트 1단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 1단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 410 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도구매 해주세요 로봇 태스크 코드 축구로봇 로봇 예제 프로그램 조종기 프로그램 운반로봇 로봇 예제 프로그램 조종기 프로그램 터렛 로봇 예제 프로그램 조종기 프로그램 바람개비꽃 로봇 예제 프로그램 자율 프로그램 복서 로봇 예제 프로그램 조종기 프로그램 보안로봇 로봇 예제 프로그램 조종기 프로그램 거미 로봇 예제 프로그램 조종기 프로그램 암기게임 로봇 예제 프로그램 조종기 프로그램 전자총 로봇 예제 프로그램 자율 프로그램 10 오르골 로봇 예제 프로그램 자율 프로그램 11 청기백기 로봇 예제 프로그램 조종기 프로그램 12 꿀벌 로봇 예제 프로그램 자율 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-1/#교안예제"
	},
	"3451": {
		"product": "스마트III 교육키트 2단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-2/#개요"
	},
	"3452": {
		"product": "스마트III 교육키트 2단계",
		"header1": "개요",
		"header2": "로보티즈 스마트III 교육키트(로봇수업용) 2단계",
		"header3": "",
		"content": "로보티즈 스마트III는 일반 리모컨을 이용한 로봇의 단순 조종한계를 극복하기 위해 스마트 기기와 로봇을 블루투스로 연결하여 양방향 입출력이 가능하도록 구현된 교육용 로봇 솔루션입니다 로보티즈 스마트III는 총 12장의 교재와 12가지 예제 로봇이 결합되어 로봇 및 과학 원리의 이해 로봇의 제작 문제 풀이 등의 과정을 제공합니다 로보티즈 스마트III 2단계에는 컬러센서가 포함되어 있어 색상인식 예제를 경험할 수 있고 서보모터를 통한 위치제어가 가능한 로봇구조를 학습할 수 있습니다 또한 중형사이즈의 휠과 타이어 캐터필러 셋트를 결합한 예제를 경험할 수 있습니다 로보티즈 스마트III 2단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMARTIII 와 Task2 0이 필요합니다 또한 스마트기기가 없는 경우에도 로보티즈 BT 410 SET가 결합된 리모컨 RC 100B 으로 로봇을 조종할 수 있도록 별도의 예제 프로그램이 제공됩니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-2/#로보티즈-스마트iii-교육키트로봇수업용-2단계"
	},
	"3453": {
		"product": "스마트III 교육키트 2단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "서보 모터 컬러 센서 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-2/#부품-목록"
	},
	"3454": {
		"product": "스마트III 교육키트 2단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "스마트 기기에 SMARTIII 와 task2 를 설치해야 합니다 앱 설치가 완료되면 스마트III 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 410 를 연결하고 SMARTIII에서 task2 0을 실행하여 예제를 다운로드 받습니다 SMARTIII 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-2/#작동하기"
	},
	"3455": {
		"product": "스마트III 교육키트 2단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "제어기의 버튼을 눌러 전원을 켭니다 SMARTIII에서 해당 예제를 클릭하여 제어기와 스마트기기 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 2단계 교안예제 페이지 또는 SMARTIII앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-2/#작동하기"
	},
	"3456": {
		"product": "스마트III 교육키트 2단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 410 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도구매 해주세요 로봇 태스크 코드 드리블 로봇 로봇 예제 프로그램 조종기 프로그램 전자 활 로봇 예제 프로그램 자율 프로그램 룰렛 로봇 로봇 예제 프로그램 자율 프로그램 여우 게임 로봇 예제 프로그램 조종기 프로그램 알람 로봇 로봇 예제 프로그램 조종기 프로그램 검투사 로봇 예제 프로그램 조종기 프로그램 대포 로봇 로봇 예제 프로그램 조종기 프로그램 마녀 로봇 로봇 예제 프로그램 자율 프로그램 스마트 레이싱카 로봇 예제 프로그램 조종기 프로그램 10 해적 게임 로봇 예제 프로그램 조종기 프로그램 11 스마트 오토바이 로봇 예제 프로그램 조종기 프로그램 12 가위바위보 로봇 로봇 예제 프로그램 조종기 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-2/#교안예제"
	},
	"3457": {
		"product": "스마트III 교육키트 3단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-3/#개요"
	},
	"3458": {
		"product": "스마트III 교육키트 3단계",
		"header1": "개요",
		"header2": "로보티즈 스마트III 교육키트(로봇수업용) 3단계",
		"header3": "",
		"content": "로보티즈 스마트III는 일반 리모컨을 이용한 로봇의 단순 조종한계를 극복하기 위해 스마트 기기와 로봇을 블루투스로 연결하여 양방향 입출력이 가능하도록 구현된 교육용 로봇 솔루션입니다 로보티즈 스마트III는 총 12장의 교재와 12가지 예제 로봇이 결합되어 로봇 및 과학 원리의 이해 로봇의 제작 문제 풀이 등의 과정을 제공합니다 로보티즈 스마트III 3단계에는 적외선센서가 포함되어 있어 거리를 감지하는 기능을 구현 할 수 있고 자석센서가 포함되어 있어 자력감지를 통한 비접촉 감지 기능을 구현할 수 있습니다 또한 추가적인 서보모터를 통해 더욱 다양한 로봇의 구조를 학습할 수 있으며 대형사이즈의 휠과 타이어셋트를 결합한 예제를 경험할 수 있습니다 로보티즈 스마트III 3단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMARTIII 와R Task2 0이 필요합니다 스마트기기가 없는 경우에도 로보티즈 BT 410 SET가 결합된 리모컨 RC 100B 으로 로봇을 조종할 수 있도록 별도의 예제 프로그램이 제공됩니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-3/#로보티즈-스마트iii-교육키트로봇수업용-3단계"
	},
	"3459": {
		"product": "스마트III 교육키트 3단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "서보 모터 자석 센서 적외선 센서 LED 모듈 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-3/#부품-목록"
	},
	"3460": {
		"product": "스마트III 교육키트 3단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "스마트 기기에 SMARTIII 와 task2 를 설치해야 합니다 앱 설치가 완료되면 스마트III 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 410 를 연결하고 SMARTIII에서 task2 0을 실행하여 예제를 다운로드 받습니다 SMARTIII 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-3/#작동하기"
	},
	"3461": {
		"product": "스마트III 교육키트 3단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "제어기의 버튼을 눌러 전원을 켭니다 SMARTIII에서 해당 예제를 클릭하여 제어기와 스마트기기 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 3단계 교안예제 페이지 또는 SMARTIII앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-3/#작동하기"
	},
	"3462": {
		"product": "스마트III 교육키트 3단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 410 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도구매 해주세요 로봇 태스크 코드 스노우모빌 로봇 예제 프로그램 조종기 프로그램 더하기 게임 로봇 예제 프로그램 조종기 프로그램 스마트 금고 로봇 예제 프로그램 조종기 프로그램 다연발 탱크 로봇 예제 프로그램 조종기 프로그램 반딧불이 로봇 예제 프로그램 조종기 프로그램 해양탐사선 로봇 예제 프로그램 조종기 프로그램 농구 로봇 로봇 예제 프로그램 조종기 프로그램 덤프트럭 로봇 예제 프로그램 조종기 프로그램 스마트 지게카 로봇 예제 프로그램 조종기 프로그램 10 플라스틱맨 로봇 예제 프로그램 자율 프로그램 11 지프차 로봇 예제 프로그램 조종기 프로그램 12 타워크레인 로봇 예제 프로그램 조종기 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-3/#교안예제"
	},
	"3463": {
		"product": "스마트III 교육키트 4단계",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-4/#개요"
	},
	"3464": {
		"product": "스마트III 교육키트 4단계",
		"header1": "개요",
		"header2": "로보티즈 스마트III 교육키트(로봇수업용) 4단계",
		"header3": "",
		"content": "로보티즈 스마트III는 일반 리모컨을 이용한 로봇 구동의 단순 조정한계를 스마트 기기와 로봇을 블루투스로 연결하여 양방향 입출력이 가능하도록 구현된 교육용 로봇 솔루션입니다 로보티즈 스마트III는 교재와 예제 로봇이 결합되어 로봇 및 과학 원리의 이해 로봇의 제작 문제 풀이 등의 과정을 제공합니다 로보티즈 스마트III 4단계에는 추가적인 서보모터를 통해 최대 8관절의 로봇구조를 학습할 수 있습니다 이번 단계에서 새로이 사용되는 모션 프로그램을 통해 다관절 생체모방형 로봇이나 복잡한 기계의 형태를 구현하는 동작을 가진 로봇을 학습 할 수 있습니다 로보티즈 스마트III 4단계에서 프로그램 학습 및 다운로드를 하기 위해서는 SMARTIII 와R Task2 그리고 motion이 필요합니다 또한 스마트기기가 없는 경우에도 로보티즈 BT 410 SET가 결합된 리모컨 RC 100B 으로 로봇을 조종할 수 있도록 별도의 예제 프로그램이 제공됩니다 스마트 앱 파라미터 사용법 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-4/#로보티즈-스마트iii-교육키트로봇수업용-4단계"
	},
	"3465": {
		"product": "스마트III 교육키트 4단계",
		"header1": "부품 목록",
		"header2": "",
		"header3": "",
		"content": "서보 모터 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-4/#부품-목록"
	},
	"3466": {
		"product": "스마트III 교육키트 4단계",
		"header1": "작동하기",
		"header2": "",
		"header3": "",
		"content": "스마트 기기에 SMARTIII 와 task2 를 설치해야 합니다 앱 설치가 완료되면 스마트III 1단계 키트에 포함된 제어기 CM 200 에 블루투스 BT 410 를 연결하고 SMARTIII에서 task2 0을 실행하여 예제를 다운로드 받습니다 SMARTIII 설치 및 예제 다운로드 방법 바로가기 주의 제어기에 프로그램을 다운로드 받으면 그전에 다운받은 프로그램은 지워집니다 예제 동작시 음원이나 음성이 재생되는 것을 함께 확인하기 위해서는 스마트 기기의 미디어 볼륨을 반드시 키우고 실행하길 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-4/#작동하기"
	},
	"3467": {
		"product": "스마트III 교육키트 4단계",
		"header1": "작동하기",
		"header2": "작동방법",
		"header3": "",
		"content": "제어기의 버튼을 눌러 전원을 켭니다 SMARTIII에서 해당 예제를 클릭하여 제어기와 스마트기기 연결이 완료되면 프로그램이 실행됩니다 참고 예제 파일은 4단계 교안예제 페이지 또는 SMARTIII앱 에서 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-4/#작동하기"
	},
	"3468": {
		"product": "스마트III 교육키트 4단계",
		"header1": "교안예제",
		"header2": "",
		"header3": "",
		"content": "각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요 또한 예제 태스크 코드의 다운로드 방법은 태스크 코드 다운로드 를 참고하세요 다운로드시 필요한 BT 410 은 1단계 구성품에 포함되어 있습니다 분실시 쇼핑몰에서 별도구매 해주세요 로봇 태스크 코드 컬러공장 로봇 예제 프로그램 조종기 프로그램 스마트 탐사차 로봇 예제 프로그램 조종기 프로그램 4족 로봇 로봇 예제 프로그램 모션 파일 조종기 프로그램 춤추는 고릴라 로봇 예제 프로그램 모션 파일 조종기 프로그램 스마트 강아지 로봇 예제 프로그램 모션 파일 조종기 프로그램 변신로봇 로봇 예제 프로그램 모션 파일 조종기 프로그램 레전드 히어로 로봇 예제 프로그램 모션 파일 조종기 프로그램 드래곤 로봇 예제 프로그램 모션 파일 조종기 프로그램 슈퍼카 로봇 예제 프로그램 조종기 프로그램 ",
		"url": "http://emanual.robotis.com/docs/kr/edu/smart/smart3-4/#교안예제"
	},
	"3469": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "",
		"header3": "",
		"content": "파일의 최상단에 반드시 아래의 YFM Yaml Front matter 을 추가하고 내용을 알맞게 업데이트합니다 layout archive lang kr 영어 en 한글 kr 일어 jp 중국어 cn ref thormang3 getting started 컨텐츠의 주제 각 언어별로 ref가 같아야 함 read time true share true author profile false permalink docs kr platform thormang3 getting started 파일위치 파일명 sidebar title THORMANG3 제품명 nav thormang3 내비게이션 참조명 navigation yml파일 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#컨텐츠-작성방법"
	},
	"3470": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "개요번호",
		"header3": "",
		"content": "개요번호를 만들기 위해서는 아래와 같이 제목 앞에 을 붙이고 한칸을 띄운다음 제목을 입력한다 1번 제목 1번 제목 1번 제목 2번 제목 2번 제목 1번 제목 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#개요번호"
	},
	"3471": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "다단계 목록",
		"header3": "",
		"content": "번호 없는 목록과 하위 항목을 만들 수 있으며 번호를 만들어서 사용할 수도 있고 번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다 하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다 번호 없는 목록과 하위 목록을 만들 수 있으며 번호를 만들어서 사용할 수도 있고 번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다 하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#다단계-목록"
	},
	"3472": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "글상자",
		"header3": "",
		"content": "참고 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다 notice primary 다양한 종류의 상자 notice info 색상도 다르고 notice warning 한줄짜리 공지에 유용합니다 notice danger 여러줄은 다른 방법을 써야합니다 Success 조금 아쉽죠 참고 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다 notice notice primary 다양한 종류의 상자 notice primary notice info 색상도 다르고 notice info notice warning 한줄짜리 공지에 유용합니다 notice warning notice danger 여러줄은 다른 방법을 써야합니다 notice danger Success 조금 아쉽죠 notice success 참고 여러줄짜리 글상자를 사용하려면 조금 복잡합니다 글상자로 묶고자 하는 문단의 첫번째에 capture group notice 01 를 넣고 마지막 숫자 01은 다른 그룹 글상자의 이름과 겹치지 않게 사용한 그룹 글상자의 숫자만큼 증가시켜줍니다 글상자로 묶고자 하는 문단의 마지막 줄에 endcapture 를 추가합니다 글상자를 넣고자하는 부분에 아래의 코드를 추가하고 글상자의 유형에 따라 notice를 notice info notice warning 등으로 변경한 뒤 group notice 01의 01을 해당 그룹 글상자의 숫자와 맞춰줍니다 div class notice group notice 01 markdownify div endcapture ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#글상자"
	},
	"3473": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "표",
		"header3": "",
		"content": "아래의 예제를 보시기 바랍니다 각 셀은 로 구분되며 줄을 맞추지 않아도 되며 표 내용과 헤더로 구분됩니다 한 컬럼의 좌우정렬은 헤더 아래의 에서 지정할 수 있습니다 콜론 이 왼쪽에만 있으면 왼쪽정렬 오른쪽에만 있으면 오른쪽 정렬 양쪽에 모두 있으면 가운데 정렬입니다 셀 병합기능이 없기 때문에 사용에 다소 불편함이 있을 수 있습니다 한칸에 여러줄을 입력하려면 br 태그를 이용할 수 있습니다 표의 시작과 끝에는 반드시 한줄의 공백이 있어야 합니다 항목 항목 이름 똘망 br Thormang3 소속 로보티즈 항목 항목 이름 똘망 Thormang3 소속 로보티즈 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#표"
	},
	"3474": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "그림",
		"header3": "",
		"content": "그림 삽입은 그림을 업로드한 후에 그림의 주소를 지정해서 사용할 수 있습니다 주소를 저장하는 레퍼런스는 문서의 가장 하단에 작성합니다 성능그래프 performance graph performance graph http localhost 4000 assets images xh430 w210 performance graph jpg ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#그림"
	},
	"3475": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "동영상",
		"header3": "",
		"content": "동영상 삽입은 유튜브 동영상을 기준으로 아래의 코드를 복사한 후 src의 동영상 주소만 변경해서 작성합니다 iframe width 640 height 360 src https www youtube com embed rvm m2ogrLA frameborder allowfullscreen iframe ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#동영상"
	},
	"3476": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "링크",
		"header3": "",
		"content": "링크 삽입은 아래와 같이 사용할 수 있습니다 주소를 저장하는 레퍼런스 태그는 문서의 가장 하단에 작성합니다 컨텐츠 작성방법 컨텐츠 작성방법 Contents Format Contents Format http localhost 4000 docs kr faq ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#링크"
	},
	"3477": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "텍스트 효과",
		"header3": "",
		"content": "텍스트 효과에는 기울임1 또는 기울임2 두껍게1 또는 두껍게2 선긋기 를 사용할 수 있습니다 텍스트 효과에는 기울임1 또는 기울임2 두껍게1 또는 두껍게2 선긋기 를 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#텍스트-효과"
	},
	"3478": {
		"product": "Contents Guide",
		"header1": "컨텐츠 작성방법",
		"header2": "소스코드 입력",
		"header3": "",
		"content": "소스코드를 표시할 때에는 아래와 같이 할 수 있습니다 1번 방법은 코딩언어를 명시함으로써 코드에 하이라이트를 해주는 기능입니다 코드는 자동적으로 글상자에 둘러쌓입니다 1번 방법 cmake find package thormang3 kinematics dynamics target link libraries thormang3 kinematics dynamics find package thormang3 kinematics dynamics target link libraries thormang3 kinematics dynamics 2번 방법 find package thormang3 kinematics dynamics target link libraries thormang3 kinematics dynamics find package thormang3 kinematics dynamics target link libraries thormang3 kinematics dynamics ",
		"url": "http://emanual.robotis.com/docs/kr/faq/contents_guide#소스코드-입력"
	},
	"3479": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#태스크-코드-다운로드"
	},
	"3480": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-5",
		"header3": "",
		"content": "바이올로이드 초급 종합 키트에서 사용되는 제어기인 CM 에 로보플러스 프로그램을 사용하기 위해서는 반드시 펌웨어 업데이트가 필요합니다 펌웨어 업데이트 방법은 로보프러스 매니저의 펌웨어 업데이트를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-5"
	},
	"3481": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-5",
		"header3": "태스크 코드 다운로드 준비",
		"content": "다운로드 할 태스크 코드 파일 tsk 을 RoboPlus Task에서 불러 옵니다 태스크 코드 파일을 더블클릭하여 열 수 있습니다 RoboPlus Task 의 파일 열기 기능으로 열 수 있습니다 마우스를 이용하여 파일을 RoboPlus Task 위로 드래그 앤 드롭 Drag amp Drop 을 통해 열 수 있습니다 USB2Dynamixel 을 이용하여 PC 와 제어기를 연결합니다 제어기의 전원을 켭니다 전원을 켜는 방법은 각 제어기 정보를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-5"
	},
	"3482": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-5",
		"header3": "태스크 코드 다운로드",
		"content": "PC 와 제어기가 연결되어야 합니다 태스크 코드를 다운로드하기 위해서는 PC 와 제어기가 연결되어야 합니다 연결 방법은 각 제어기 정보를 참고하세요 사용할 통신 포트를 선택해야 합니다 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다 RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다 PC 와 제어기가 연결되어 있는지 확인합니다 연결 방법은 각 제어기 정보를 참고하세요 제어기의 전원이 켜져 있는지 확인합니다 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다 다운로드 메뉴를 선택합니다 만약 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다 룰 체크 에러 메시지 확인 다운로드를 진행합니다 만약 다운로드에 실패했다면 처음부터 다시 시도합니다 태스크 코드 Task Code 를 실행합니다 로봇의 동작을 실행 합니다 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다 태스크 코드 실행 방법은 각 제어기 정보를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-5"
	},
	"3483": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-100",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-100"
	},
	"3484": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-100",
		"header3": "준비",
		"content": "다운로드 할 태스크 코드 파일 tsk 을 RoboPlus Task에서 불러 옵니다 태스크 코드 파일을 더블클릭하여 열 수 있습니다 RoboPlus Task 의 파일 열기 기능으로 열 수 있습니다 마우스를 이용하여 파일을 RoboPlus Task 위로 드래그 앤 드롭 Drag amp Drop 을 통해 열 수 있습니다 USB 다운로더 LN 101 를 이용하여 PC 와 제어기 CM 100 를 연결합니다 건전지 AA 2개 를 연결후 제어기 CM 100 의 전원을 켭니다 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-100"
	},
	"3485": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-100",
		"header3": "다운로드",
		"content": "PC 와 제어기가 연결되어야 합니다 태스크 코드를 다운로드하기 위해서는 PC 와 제어기가 연결되어야 합니다 연결 방법은 각 제어기 정보 를 참고하세요 사용할 통신 포트를 선택해야 합니다 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다 RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다 PC 와 제어기가 연결되어 있는지 확인합니다 연결 방법은 각 제어기 정보를 참고하세요 제어기의 전원이 켜져 있는지 확인합니다 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다 다운로드 메뉴를 선택합니다 만약 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다 룰 체크 에러 메시지 확인 다운로드를 진행합니다 만약 다운로드에 실패했다면 처음부터 다시 시도합니다 태스크 코드 Task Code 를 실행하고 로봇의 동작을 실행 합니다 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다 태스크 코드 실행 방법은 각 제어기 정보 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-100"
	},
	"3486": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-150",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-150"
	},
	"3487": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-150",
		"header3": "준비",
		"content": "PC에 Task 소프트웨어가 설치되어 있어야 합니다 Task 다운로드 다운로드할 태스크 코드 파일 tsk 을 Task 에서 불러옵니다 태스크 코드 파일을 더블클릭하여 열 수 있습니다 Task의 파일열기 기능으로 열 수 있습니다 제어기 CM 150 를 충전배터리 LBS 041 와 연결한 후 제어기의 전원을 켭니다 마이크로 USB케이블 사용해 PC와 제어기 CM 150 을 연결합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-150"
	},
	"3488": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-150",
		"header3": "다운로드",
		"content": "PC와 제어기가 마이크로 USB로 연결되어 있는지 확인합니다 제어기 CM 150 의 전원이 켜져 있는지 확인합니다 아래 그림을 참고하여 장치 를 선택합니다 목록에서 검색된 장치 를 선택하고 를 누릅니다 목록에서 장치가 나타나지 않을 경우 위의 항목을 다시 체크합니다 다운로드 를 선택합니다 아래와 같이 진행된 후 다운로드가 완료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-150"
	},
	"3489": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-530",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-530"
	},
	"3490": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-530",
		"header3": "준비",
		"content": "RoboPlus 소프트웨어가 PC에 설치되어 있어야 합니다 Roboplus 다운로드 배터리의 충전상태를 확인합니다 사용할 예제 파일을 PC에 미리 다운로드합니다 예제 파일 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-530"
	},
	"3491": {
		"product": "태스크 코드 다운로드",
		"header1": "태스크 코드 다운로드",
		"header2": "CM-530",
		"header3": "다운로드",
		"content": "미니 USB 케이블을 이용하여 PC와 제어기 CM 530 을 연결합니다 PC에서 RoboPlus를 실행하고 RoboPlus Task 를 선택합니다 아래 창이 나올 경우 펌웨어 0을 체크하고 제어기 CM 530 를 선택합니다 제어기 CM 530 의 전원을 켜고 통신포트를 선택합니다 자동 찾기 를 선택하면 쉽게 포트를 찾을 수 있습니다 제어기 CM 530 를 찾지 못할 경우 아래와 같은 메시지가 나타납니다 위 오류 내용을 확인하여 수정하고 다시 포트를 연결합니다 제어기 CM 530 에 다운로드 할 예제 파일을 RoboPlus에서 불러옵니다 아래 표시된 다운로드 버튼을 눌러 예제 프로그램을 제어기에 다운로드합니다 아래와 같은 메시지가 나타나고 다운로드가 완료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#cm-530"
	},
	"3492": {
		"product": "태스크 코드 다운로드",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#동영상"
	},
	"3493": {
		"product": "태스크 코드 다운로드",
		"header1": "동영상",
		"header2": "로보플러스 프로그램 다운로드 (CM-100)",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#동영상"
	},
	"3494": {
		"product": "태스크 코드 다운로드",
		"header1": "동영상",
		"header2": "포트 설정 및 셋팅하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/faq/download_task_code/#동영상"
	},
	"3495": {
		"product": "FAQ",
		"header1": "FAQ",
		"header2": "",
		"header3": "",
		"content": "제어기 호환표 태스크코드 다운로드 태스크 룰 체크 CM 510 530 퓨즈 교체 USB 드라이버 설치 ",
		"url": "http://emanual.robotis.com/docs/kr/faq/#faq"
	},
	"3496": {
		"product": "BT-100/110A",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote BT 100 110A 주의 BT 100 110A는 현재 단종 되어 더 이상 판매되지 않습니다 BT 100 110A 는 블루투스 통신을 이용하여 모듈끼리 시리얼 통신 UART 을 가능하게 해 주는 부품입니다 BT 100 과 BT 110A 는 장착하려는 부품과의 인터페이스 Interface 만 다를 뿐 동일한 기능을 제공합니다 각각 연결 가능한 부품은 아래와 같습니다 각 부품에 장착하는 방법은 부품별 설명 페이지를 참고하세요 BT 100 ZIG2Serial RC 100A BT 110A CM 100A CM 530 무선조종 무선 다운로드 가능 CM 510 CM 700 무선 조종 가능 펌웨어 업데이트 필수 주의 다음의 제품들은 BT 110A와 호환되지 않습니다 리모콘 RC 100 무선모듈 장착시 녹색LED가 켜지는 제품 제어기 CM 100 CM CM BT 100 110A 는 2개가 1세트로 구성되어 판매되며 최초 구입 시 상대방 모듈의 ID 가 설정된 상태에서 출고가 되므로 구매 후 별도의 ID 설정 작업 없이 바로 장착하여 사용하실 수 있습니다 세트 구성품 둘 중 하나를 잃어버리지 않도록 주의하시기 바랍니다 BT 100 110A 는 통신만 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-110/#개요"
	},
	"3497": {
		"product": "BT-100/110A",
		"header1": "개요",
		"header2": "사용 예시",
		"header3": "",
		"content": "블루투스 통신을 이용한 올로 버그 조종 BT 110A set 사용 올로 버그 제어기 CM 100A 에 BT 110A 장착 무선 조종기 RC 100A 에 BT 100 장착 블루투스 통신을 이용한 PC 에서 바이올로이드 프리미엄 키트 조종 BT 110A set 사용 ZIG2Serial 에 BT 100 장착 후 PC 의 시리얼포트에 연결 바이올로이드 프리미엄키트 제어기 CM 510 CM 530 CM 700 에 BT 110A 장착 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-110/#개요"
	},
	"3498": {
		"product": "BT-100/110A",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 설명 무게 BT 100 2g BT 110A 2g 크기 BT 100 18 5mm 20mm 8mm 7mm 커넥터 제외시 BT 110A 18mm 30mm 1mm 블루투스 사양 Bluetooth Specification Support 유효 통신 거리 10M 주파수 대역 4GHz ISM Band Bandwidth MAX 250kbps 기본 통신속도 57 600bps 통신 감도 83dBm Typical Transmit Power 4dBm Typical 지원되는 블루투스 프로파일 SPP Serial Port Profile 동작 전압 3V 소모 전류 48mA Max 동작 온도 10 50 통신속도 200bps 230 400bps 안테나 Chip Antenna 인터페이스 UART TTL Level Flow Control BT 100 RTS CTS support ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-110/#제품-사양"
	},
	"3499": {
		"product": "BT-100/110A",
		"header1": "제품 사양",
		"header2": "BT-100/110A 기본설정값",
		"header3": "",
		"content": "구분 BT 100 설정 값 BT 110A 설정 값 Device Name BT 100vx BT 110vx Pin Code Pass key 0000 0000 Uart baud rate data bit parity bit stop bit 57600 57600 ROLE MASTER SLAVE TIMEOUT 1초 1초 Connection Mode MODE1 MODE2 Debug Char 0x21 0x21 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-110/#bt-100110a-기본설정값"
	},
	"3500": {
		"product": "BT-100/110A",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "ockquote BT 100 ockquote BT 110A ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-110/#핀-배열"
	},
	"3501": {
		"product": "BT-100/110A",
		"header1": "핀 배열",
		"header2": "BT-100",
		"header3": "",
		"content": "핀 번호 핀 이름 기능 입력 출력 신호레벨 GND Ground 0v 3V DC 입력 Status LED Status LED 출력 TTL FA RESET Factory Reset Reset default setting 입력 TTL UART CTS UART Clear Send 입력 TTL UART RTS UART Ready Send 출력 TTL TXD Transfer Data Data Out 출력 TTL RXD Receive Data Data 입력 TTL ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-110/#bt-100"
	},
	"3502": {
		"product": "BT-100/110A",
		"header1": "핀 배열",
		"header2": "BT-110A",
		"header3": "",
		"content": "핀 번호 핀 이름 기능 입력 출력 신호레벨 RXD Receive Data Data 입력 TTL TXD Transfer Data Data Out 출력 TTL 3V DC 입력 GND Ground 0v ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-110/#bt-110a"
	},
	"3503": {
		"product": "BT-210",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote BT 210 BT 210은 블루투스 통신을 이용하여 모듈끼리 시리얼 통신 UART 을 가능하게 해 주는 부품입니다 연결 가능한 부품은 아래와 같습니다 각 부품에 장착하는 방법은 부품별 설명 페이지를 참고하세요 BT 210 CM 100A CM 530 무선조종 무선 다운로드 가능 CM 510 CM 700 CM 900 OpenCM9 04 무선 조종 가능 펌웨어 업데이트 필수 주의 다음의 제품들은 BT 210과 호환되지 않습니다 리모콘 RC 100 RC 100A 제어기 CM 100 CM CM ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#개요"
	},
	"3504": {
		"product": "BT-210",
		"header1": "개요",
		"header2": "사용 예시",
		"header3": "",
		"content": "블루투스 통신을 이용한 올로 버그 조종 올로 버그 제어기 CM 100A 에 BT 210 장착 안드로이드 스마트폰과 BT 210 연결을 통한 OLLO 조종 PC 에서 블루투스 통신을 이용한 제어기 조종 OpenCM9 04 에 BT 210 장착 후 PC 의 블루투스 포트에 연결 바이올로이드 프리미엄키트 제어기 CM 530 에 BT 210 장착 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#개요"
	},
	"3505": {
		"product": "BT-210",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 설명 무게 51g 크기 18mm 30mm 1mm 블루투스 사양 Bluetooth Specification Support 유효 통신거리 10M 주파수 대역 GHz ISM Band Bandwidth MAX 250kbps 기본 통신속도 57 600bps 통신 감도 81dBm Typical Transmit Power 4dBm Typical 지원되는 블루투스 프로파일 SPP Serial Port Profile 동작 전압 3V 소모전류 48mA Max 동작 온도 40 85 통신속도 200bps 000 000bps v13 이상 안테나 Chip Antenna 인터페이스 UART 3V Level 공중선전력 4dBm Class ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#제품-사양"
	},
	"3506": {
		"product": "BT-210",
		"header1": "제품 사양",
		"header2": "사용 가능한 통신속도",
		"header3": "",
		"content": "통신속도 BT 210 FW v12 이하 BT 210 FW v13 이상 BT 410 BT 410 동글 1200 2400 4800 9600 14400 19200 28800 38400 57600 76800 115200 230400 250000 460800 921600 1000000 1382400 1500000 2000000 2500000 3000000 4000000 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#사용-가능한-통신속도"
	},
	"3507": {
		"product": "BT-210",
		"header1": "통신 모드",
		"header2": "",
		"header3": "",
		"content": "BT 210은 페어링 연결을 통해 보다 신뢰성 있는 통신을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#통신-모드"
	},
	"3508": {
		"product": "BT-210",
		"header1": "통신 모드",
		"header2": "1:1 통신",
		"header3": "",
		"content": "BT 210을 사용할 때 하나의 기기를 Master 로 설정하고 다른 하나를 Slave 로 설정해서 사용할 수 있습니다 또한 블루투스를 지원하는 스마트폰과 연결할 때에는 BT 210을 Slave 로 설정하면 사용이 가능합니다 초기에 전원이 인가되면 파란색 LED가 깜박이며 페어링이 성공하게 되면 파란색 LED가 계속 켜져 있게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#11-통신"
	},
	"3509": {
		"product": "BT-210",
		"header1": "BT-210 설정하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#bt-210-설정하기"
	},
	"3510": {
		"product": "BT-210",
		"header1": "BT-210 설정하기",
		"header2": "설정",
		"header3": "",
		"content": "OpenCM 04에 아래의 OpenCM IDE의 SerialUSB Serial2 Converter 예제를 다운로드 합니다 ockquote OpenCM IDE 사용시 ockquote Arduino IDE 사용시 OpenCM9 04와 BT 210을 연결한 후 Tera Term을 실행합니다 다운로드 Tera Term OpenCM 04와 PC를 USB를 연결하고 드라이버 설치 후 해당 COM포트로 Tera Term 터미널 프로그램으로 연결합니다 아래와 같이 표시되면 연결이 완료되었습니다 baud rate는 어떤 값이든 상관없습니다 아래와 같이 Setup Terminal 을 선택하시고 Local echo에 체크합니다 터미널에서 아래와 같이 표를 입력하면 OK가 뜨고 커맨드 모드로 진입합니다 여기서 AT를 입력하고 엔터를 치면 계속 OK가 뜨는 것이 확인되면 성공적으로 BT 210과 연결되었고 설정을 하실 수 있습니다 터미널 설정을 마치고 BT 210을 OpenCM 04에서 떼었다가 붙이면 아래와 같이SLAVE MASTER 모드 중에 하나로 작동됩니다 아래 그림은 MASTER 모드 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#설정"
	},
	"3511": {
		"product": "BT-210",
		"header1": "AT 명령어",
		"header2": "",
		"header3": "",
		"content": "아래와 같이 터미널에서 AT 커맨드를 통해 BT 210의 설정을 변경할 수 있고 AT커맨드의 종류는 아래와 같습니다 시스템 리셋 ATZ를 입력 후 엔터를 누르면 아래와 같이 BT 210이 재시작 됩니다 만약 설정을 변경하였다면 변경된 모드로 재시작합니다 모드 변경 BT 210의 디바이스 모드 Slave Master 를 설정하기 위해서는 아래의 커맨드로 변경을 할 수 있습니다 대소문자 관계 없음 AT BTROLE Master mode AT BTROLE Slave mode 그리고 ATZ를 입력 후 엔터를 누르면 시스템이 리셋되고 변경된 모드로 동작합니다 ockquote Master 모드 ockquote Slave 모드 주변장치 검색 주변 장치 검색은 BT 210이 MASTER모드일 때만 동작합니다 아래와 같이 AT BTINQ를 입력 후 엔터를 누르면 현재 주변에 Device Class가 0x1F00 SPP 인 Device가 차례로 검색되어 나옵니다 장치 연결 페어링 장치 연결은 AT BTINQ 커맨드로 주변 장치 검색을 하고 난 뒤 표시된 블루투스 어드레스 16진수 12자리 를 통해 페어링 연결 합니다 예를 들면 위의 abc2 ff 123458이라는 블루투스 어드레스를 표시 제외하고 ATDabc2ff123458이라고 입력 후 엔터를 누르면 연결을 시도합니다 여기서 장치간의 Pin Code가 맞지 않으면 페어링이 안되기 때문에 반드시 체크를 해야 합니다 기본적으로 0000 입니다 Pin Code 변경 AT BTKEY 4자리 Pin Code 아래와 같이 원하는 Pin code를 입력하시면 Pin Code가 변경됩니다 변경된 Pin Code 확인은 아래와 같이 없이 AT BTKEY만 입력합니다 현재 Device Class 출력 현재 디바이스의 클래스를 출력합니다 BT 210은 SPP Serial Port Profile 이므로 0x1f00으로만 출력됩니다 Bluetooth 장치 이름 변경 AT BTNAME 원하는 장치 이름 Device Under Test 모드 DUT DUT모드는 블루투스 테스터기에서 디바이스의 성능을 측정할 때 사용되는 모드이고 일반적인 용도에서는 쓰이지 않습니다 AT BTDUT를 입력하시면 현재 모드에서 토글되어 설정되고 ATZ입력하시면 해당 모드로 재시작합니다 반드시 SLAVE모드에서 실행해야 합니다 DUT모드에서 빠져나오기 위해서는 아래와 같이 한번 더 AT BTDUT를 입력하시면 Disable되고 ATZ를 통해 리셋하시면 됩니다 통신속도 변경 AT BTUART baudrate parity bit stop bit Example AT BTUART 57600 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#at-명령어"
	},
	"3512": {
		"product": "BT-210",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "핀 번호 핀 명칭 기능 입력 출력 RXD Receive Data Data 입력 TXD Transmit Data Data Out 출력 3V DC 입력 GND Ground 0v ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-210/#핀-배열"
	},
	"3513": {
		"product": "BT-410",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote BT 410 BT 410은 블루투스 저전력 표준 통신을 이용하여 모듈끼리 시리얼 통신 UART 을 가능하게 해 주는 부품입니다 연결 가능한 부품은 아래와 같습니다 각 부품에 장착하는 방법은 부품별 설명 페이지를 참고하세요 BT 410 사용 가능 제품 SLAVE 모듈 CM 100A CM 150 CM 200 OpenCM9 04 OpenCM7 무선조종 무선 다운로드 가능 최신 펌웨어 가능 CM 510 CM 700 CM 900 CM 530 무선 조종 가능 MASTER 모듈 RC 100B 호환되지 않는 제품 리모콘 RC 100 RC 100A 제어기 CM 100 CM CM BT 410 지원하는 스마트 기기 호환되는 스마트 기기 Android Bluetooth 지원 기기 중 Android OS v4 이상 예 Nexus 2nd Galaxy S3 이상 기종의 최신 OS 단 최신형이라도 보급형 기기의 경우 Bluetooth 0를 지원하지 않을 수 있음 iOS iOS v8 1이상 예 iPhone 4S이상 iPod 5G iPad 3rd 이상 기종의 최신 OS 지원 가능 제어기 및 버전 CM 150 최소 버전 v23 이상 CM 200 최소 버전 v64 이상 OpenCM7 최소 버전 v6 이상 OpenCM9 04 최소 버전 v11 이상 Revision E002 제어기의 W를 최신버전으로 유지해주세요 지원 가능 로보티즈 App Android ROBOTIS MINI App Task Task2 Motion2 Smart2 IoT iOS ROBOTIS MINI App Task2 Motion2 가급적 스마트폰의 어플리케이션을 최신버전으로 유지해주세요 OS 정책에 따라 추가 업데이트가 있을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#개요"
	},
	"3514": {
		"product": "BT-410",
		"header1": "개요",
		"header2": "사용 예시",
		"header3": "",
		"content": "블루투스 통신을 이용한 드림 로봇 조종 드림 제어기 CM 150 에 BT 410 SLAVE 모듈 장착 안드로이드 iOS 스마트 기기과 BT 410 연결을 통한 드림 로봇 조종 블루투스 통신을 이용한 로보티즈 미니 로봇 모션 편집 OpenCM9 04 에 BT 410 SLAVE 모듈 장착 후 안드로이드 iOS 스마트 기기에서 Motion 어플 실행 스마트 기기에서 BT 410을 검색하여 연결 Motion 어플을 이용해 로보티즈 미니 로봇의 모션을 편집 및 다운로드 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#사용-예시"
	},
	"3515": {
		"product": "BT-410",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 설명 무게 5g 크기 18mm 30mm 1mm 블루투스 사양 Bluetooth Specification Energy Support 유효 통신거리 10M 주파수 대역 4GHz ISM Band Bandwidth MAX 128kbps 기본 통신속도 57 600bps 동작 전압 3V 소모전류 7mA Max 동작 온도 40 통신속도 200bps 000 000bps 안테나 Chip Antenna 인터페이스 UART 3V Level 감도 81dBm Typical 공중선전력 4dBm Class ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#제품-사양"
	},
	"3516": {
		"product": "BT-410",
		"header1": "제품 사양",
		"header2": "사용 가능한 통신속도",
		"header3": "",
		"content": "통신속도 BT 210 FW v12 이하 BT 210 FW v13 이상 BT 410 BT 410 동글 1200 2400 4800 9600 14400 19200 28800 38400 57600 76800 115200 230400 250000 460800 921600 1000000 1382400 1500000 2000000 2500000 3000000 4000000 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#사용-가능한-통신속도"
	},
	"3517": {
		"product": "BT-410",
		"header1": "호환성",
		"header2": "",
		"header3": "",
		"content": "ZIG 110 100A BT 100 110A 210 BT 410 Dongle Connectivity Andriod Connectivity iOS Connectivity PC need Dongle Connectivity Master Slave Connectivity Master Slave Connectivity Phone Slave Connectivity Phone Slave support later Data Data Transfer reliability Data Max throughput 250kbps 250kbps 128kbps Update Module FW update MAC address Default MAC address xxxx BT 110 100 001901 xxxxxx BT 210 B863BC xxxxxx DBE7DF xxxxxx MAC address MAC address range 65535 byte byte ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#호환성"
	},
	"3518": {
		"product": "BT-410",
		"header1": "통신 모드",
		"header2": "",
		"header3": "",
		"content": "BT 410은 페어링 연결을 통해 보다 신뢰성 있는 통신을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#통신-모드"
	},
	"3519": {
		"product": "BT-410",
		"header1": "통신 모드",
		"header2": "1:1 통신",
		"header3": "",
		"content": "초기에 전원이 인가되면 파란색 LED가 깜박이며 페어링이 성공하게 되면 파란색 LED가 계속 켜져 있게 됩니다 자동페어링 방법 BT 410 마스터의 파란 LED가 깜박일 때 페어링 되어 있지 않음 BT 410 SLAVE 모듈을 가까이 갖다 대면 10cm 이내 자동으로 페어링이 됩니다 그 이후는 먼 거리에서도 페어링 되어 통신 가능 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#11-통신"
	},
	"3520": {
		"product": "BT-410",
		"header1": "BT-410 설정하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#bt-410-설정하기"
	},
	"3521": {
		"product": "BT-410",
		"header1": "BT-410 설정하기",
		"header2": "[설정]",
		"header3": "",
		"content": "시스템 리셋 이름 변경 SLAVE 주소 설정 가능 모드 변경 불가 OpenCM 04에 아래의 OpenCM IDE의 SerialUSB Serial2 Converter 예제를 다운로드 합니다 OpenCM 04와 BT 410을 연결한 후 Tera Term을 실행합니다 다운로드 Tera Term OpenCM 04와 PC를 USB를 연결하고 드라이버 설치 후 해당 COM포트로 Tera Term 터미널 프로그램으로 연결합니다 아래와 같이 표시되면 연결이 완료되었습니다 baud rate는 어떤 값이든 상관없습니다 아래와 같이 Setup Terminal 을 선택하시고 Local echo에 체크합니다 터미널에서 아래와 같이 표를 입력하면 OK가 뜨고 커맨드 모드로 진입합니다 여기서 AT를 입력하고 엔터를 치면 계속 OK가 뜨는 것이 확인되면 성공적으로 BT 410과 연결되었고 설정을 하실 수 있습니다 터미널 설정을 마치고 BT 410을 OpenCM 04에서 떼었다가 붙이면 아래와 같이SLAVE MASTER 모드 중에 하나로 작동됩니다 아래 그림은 MASTER 모드 주변 장치 검색은 BT 410이 MASTER모드일 때만 동작합니다 아래와 같이 AT BTINQ를 입력 후 엔터를 누르면 현재 주변에 Device Class가 0x1F00 SPP 인 Device가 차례로 검색되어 나옵니다 장치 연결은 AT BTINQ 커맨드로 주변 장치 검색을 하고 난 뒤 표시된 블루투스 어드레스 16진수 12자리 를 통해 페어링 연결 합니다 예를 들면 위의 abc2 ff 123458이라는 블루투스 어드레스를 표시 제외하고 ATDabc2ff123458이라고 입력 후 엔터를 누르면 연결을 시도합니다 여기서 장치간의 Pin Code가 맞지 않으면 페어링이 안되기 때문에 반드시 체크를 해야 합니다 기본적으로 0000 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#bt-410-설정하기"
	},
	"3522": {
		"product": "BT-410",
		"header1": "AT 명령어",
		"header2": "",
		"header3": "",
		"content": "아래와 같이 터미널에서 AT 커맨드를 통해 BT 410의 설정을 변경할 수 있고 AT커맨드의 종류는 아래와 같습니다 시스템 리셋 ATZ를 입력 후 엔터를 누르면 아래와 같이 BT 410이 재시작 됩니다 만약 설정을 변경하였다면 변경된 모드로 재시작합니다 주변장치 검색 주변 장치 검색은 BT 410이 MASTER모드일 때만 동작합니다 아래와 같이 AT BTINQ를 입력 후 엔터를 누르면 현재 주변에 Device Class가 0x1F00 SPP 인 Device가 차례로 검색되어 나옵니다 장치 연결 페어링 장치 연결은 AT BTINQ 커맨드로 주변 장치 검색을 하고 난 뒤 표시된 블루투스 어드레스 16진수 12자리 를 통해 페어링 연결 합니다 예를 들면 위의 abc2 ff 123458이라는 블루투스 어드레스를 표시 제외하고 ATDabc2ff123458이라고 입력 후 엔터를 누르면 연결을 시도합니다 여기서 장치간의 Pin Code가 맞지 않으면 페어링이 안되기 때문에 반드시 체크를 해야 합니다 기본적으로 0000 입니다 Bluetooth 장치 이름 변경 AT BTNAME 원하는 장치 이름 페어링 재설정 ockquote MASTER 모듈과 페어링할 슬레이브 모듈의 주소 설정 자동 페어링 비활성화 및 활성화 REV2 파란색 스티커 MASTER모듈만 가능 비활성화 AT BTAUTOPAIR 을 입력 후 ENTER 키 입력 몇 초 뒤에 성공메시지 출력됨 활성화 AT BTAUTOPAIR 을 입력 후 ENTER 키 입력 몇 초 뒤에 성공메시지 출력됨 통신속도 변경 AT BTUART baudrate parity bit stop bit Example AT BTUART 57600 참고 BT 410의 경우 Master Slave 모드 변경 불가 하며 생산된 상태 그대로만 사용 가능합니다 Slave Slave 또는 Master Master 간 페어링은 불가능 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#at-명령어"
	},
	"3523": {
		"product": "BT-410",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "핀 번호 핀 명칭 기능 입력 출력 RXD Receive Data Data 입력 TXD Transfer Data Data Out 출력 3V DC 입력 GND Ground 0v ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410/#핀-배열"
	},
	"3524": {
		"product": "BT-410 Dongle",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote BT 410 동글 BT 410동글 은 USB 인터페이스와 블루투스 저전력 표준 통신 인터페이스 마스터 기능 를 지니고 있으며 두 인터페이스를 변환해 주는 부품입니다 즉 BT 410동글을 PC에 장착하고 BT 410 SLAVE 모듈 1개 과 페어링을 하면 PC와 BT 410 SLAVE 모듈이 서로 데이터를 주고 받을 수 있습니다 각 부품에 장착하는 방법은 부품별 설명 페이지를 참고하세요 BT 410 동글과 연동이 가능한 무선통신 모듈 BT 410 Slave 모듈 BT 410 동글과 연동이 불가능한 무선통신 모듈 BT 410 MASTER 모듈 BT 210 MASTER 모듈 BT 210 SLAVE 모듈 BT 100 110A ZIG 100 110A ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#개요"
	},
	"3525": {
		"product": "BT-410 Dongle",
		"header1": "개요",
		"header2": "사용 예시",
		"header3": "",
		"content": "주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#개요"
	},
	"3526": {
		"product": "BT-410 Dongle",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 세부 내용 무게 5g 크기 50 5mm 20mm 10 5mm 블루투스 사양 Bluetooth Specification Energy Support 유효 통신거리 10M 주파수 대역 4GHz ISM Band Bandwidth MAX 128kbps 기본 통신속도 57 600bps 동작 전압 0V 소모전류 25mA Max 동작 온도 40 통신속도 200bps 000 000bps 안테나 Chip Antenna 인터페이스 USB Full Speed 감도 81dBm Typical 공중선전력 4dBm Class ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#제품-사양"
	},
	"3527": {
		"product": "BT-410 Dongle",
		"header1": "제품 사양",
		"header2": "사용 가능한 통신속도",
		"header3": "",
		"content": "통신속도 BT 210 FW v12 이하 BT 210 FW v13 이상 BT 410 BT 410 동글 1200 2400 4800 9600 14400 19200 28800 38400 57600 76800 115200 230400 250000 460800 921600 1000000 1382400 1500000 2000000 2500000 3000000 4000000 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#사용-가능한-통신속도"
	},
	"3528": {
		"product": "BT-410 Dongle",
		"header1": "호환성",
		"header2": "",
		"header3": "",
		"content": "BT 410 동글과 BT 410 Slave 모듈의 조합으로 가능한 작업 제품 펌웨어 복구 로보플러스 매니저 펌웨어 업데이트 로보플러스 매니저 Entry Scratch 태스크 다운로드 모션 다운로드 CM 50 영문버전 CM 150 CM 200 CM 530 OpenCM7 OpenCM9 04 자동차로봇 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#호환성"
	},
	"3529": {
		"product": "BT-410 Dongle",
		"header1": "통신 모드",
		"header2": "",
		"header3": "",
		"content": "BT 410 동글은 페어링 연결을 통해 신뢰성 있는 통신을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#통신-모드"
	},
	"3530": {
		"product": "BT-410 Dongle",
		"header1": "통신 모드",
		"header2": "1:1 통신",
		"header3": "",
		"content": "전원이 켜진 PC의 USB 포트에 장착하면 파란색 LED가 깜박이며 BT 410 SLAVE 모듈과 페어링이 성공하게 되면 파란색 LED가 계속 켜져 있게 됩니다 자동페어링 방법 BT 410 동글의 파란 LED가 깜박일 때 페어링 되어 있지 않음 BT 410 SLAVE 모듈을 가까이 갖다 대면 10cm 이내 자동으로 페어링이 됩니다 그 이후는 먼 거리에서도 페어링 되어 통신 가능 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#11-통신"
	},
	"3531": {
		"product": "BT-410 Dongle",
		"header1": "BT-410 동글 설정하기",
		"header2": "",
		"header3": "",
		"content": "시스템 리셋 SLAVE 주소 설정 자동페어링 기능 활성화 비활성화 모드 변경 불가 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#bt-410-동글-설정하기"
	},
	"3532": {
		"product": "BT-410 Dongle",
		"header1": "BT-410 동글 설정하기",
		"header2": "설정",
		"header3": "",
		"content": "BT 410 동글을 PC에 연결 한 다음 드라이버 설치 후 COM포트 번호를 확인 합니다 다운로드 Tera Term 해당 COM포트로 Tera Term 터미널 프로그램을 실행하고 File New connection 을 클릭합니다 BT 410 동글의 COM 포트 번호를 선택 Serial Port 설정창 통신속도를 57600 으로 설정 Terminal 설정창 Local echo 기능 활성화 터미널에서 아래와 같이 표를 입력하면 OK가 뜨고 커맨드 모드로 진입합니다 여기서 AT를 입력하고 엔터를 치면 계속 OK가 뜨는 것이 확인되면 성공적으로 BT 410과 연결되었고 설정을 할 수 있습니다 주변장치 검색 기능입니다 아래와 같이 AT BTINQ DBE7DF000001를 입력 후 엔터를 누르면 현재 주변 BLE 장치 중 MAC 주소가 DBE7DF000001 이상인 장치들이 검색됩니다 장치 연결은 AT BTINQ 커맨드로 주변 장치 검색을 하고 난 뒤 표시된 블루투스 어드레스 16진수 12자리 를 통해 페어링 연결 합니다 예를 들면 위의 DBE7 DF 000001이라는 블루투스 어드레스를 표시 제외하고 ATDDBE7DF000001이라고 입력 후 엔터를 누르면 연결을 시도합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#설정"
	},
	"3533": {
		"product": "BT-410 Dongle",
		"header1": "AT 명령어",
		"header2": "",
		"header3": "",
		"content": "아래와 같이 터미널에서 AT 커맨드를 통해 BT 410 동글의 설정을 변경할 수 있고 AT커맨드의 종류는 아래와 같습니다 시스템 리셋 ATZ를 입력 후 엔터를 누르면 아래와 같이 BT 410 동글이 재시작 됩니다 만약 설정을 변경하였다면 변경된 모드로 재시작합니다 주변장치 검색 아래와 같이 AT BTINQ를 입력 후 엔터를 누르면 현재 주변 블루투스 장치 중 MAC 주소가 DBE7DF000001 이상인 장치들이 검색됩니다 자동 페어링 페어링 되지 않은 BT 410 SLAVE 모듈을 BT 410 동글 가까이 대략 10cm 이내 근접시키면 자동을 페어링 됩니다 자동 페어링 기능 비활성화 AT BTAUTOPAIR 을 입력 후 ENTER 키 입력 몇 초 뒤에 아래와 같이 성공메세지가 출력됨 자동 페어링 기능 활성화 AT BTAUTOPAIR 을 입력 후 ENTER 키 입력 몇 초 뒤에 아래와 같이 성공 메세지가 출력됨 통신속도 변경 AT BTUART baudrate parity bit stop bit Example AT BTUART 57600 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#at-명령어"
	},
	"3534": {
		"product": "BT-410 Dongle",
		"header1": "드라이버 설치 확인방법",
		"header2": "",
		"header3": "",
		"content": "BT 410 동글 드라이버가 PC에 바르게 설치되었는지 확인하는 방법은 다음과 같습니다 PC 의 USB 포트 에 BT 410 동글을 연결합니다 내 컴퓨터 위에서 마우스 오른쪽 클릭 으로 뜨는 팝업 메뉴 의 관리 를 선택합니다 장치 관리자 의 범용 직렬 버스 컨트롤러 장치 목록에서 USB Serial Converter 를 확인합니다 포트 COM 및 LPT 장치 목록에서 USB Serial Port COMx 를 확인합니다 COM 포트 번호는 시스템마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#드라이버-설치-확인방법"
	},
	"3535": {
		"product": "BT-410 Dongle",
		"header1": "드라이버 수동 설치",
		"header2": "",
		"header3": "",
		"content": "참고 RoboPlus 를 설치하게 되면 자동으로 FTDI Driver USB2Dynamixel USB다운로더 LN 101 BT 410 동글 드라이버 가 설치됩니다 만약 RoboPlus 를 설치하지 않고 해당 드라이버를 설치하거나 RoboPlus 설치 시 드라이버가 제대로 설치되지 않았을 경우 아래와 같은 방법으로 드라이버를 수동으로 설치하십시오 PC 에 장치를 연결합니다 드라이버가 설치되어 있지 않을 경우 새 하드웨어 검색 마법사 시작 창이 뜹니다 목록 또는 특정 위치에서 설치 고급 다음 드라이버의 위치를 지정합니다 RoboPlus 를 설치한 경우 드라이버는 RoboPlus 설치 폴더의 LN101 폴더에 있습니다 또는 최신 버전의 드라이버를 설치하고자 하는 경우 FTDI Driver Download 페이지에서 VCP Drivers 의 최신 버전을 받으시면 됩니다 Windows 32bit 드라이버 설치 Windows 64bit 드라이버 설치 다음 을 누르면 설치가 진행되며 USB Serial Converter 의 드라이버 설치가 완료됩니다 동일한 방법으로 USB Serial Port 드라이버도 설치해 줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/bt-410-dongle/#드라이버-수동-설치"
	},
	"3536": {
		"product": "RC-100A/100B",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote RC 100A 100B 주의 RC 100A는 현재 단종 되어 더 이상 판매되지 않습니다 적외선 IR 지그비 ZIGBee 블루투스 Bluetooth 통신을 통해 로봇을 조종할 수 있는 장치입니다 아무것도 장착하지 않은 상태에서는 적외선 통신을 할 수 있습니다 ZIG 100을 장착하면 지그비 통신을 할 수 있습니다 BT 100 BT 210 BT 410을 장착하면 블루투스 통신을 할 수 있습니다 주의 RC 100 블루투스를 지원하지 않습니다 적외선 통신만 지원 RC 100A 블루투스 모듈 중 BT 100만 지원되며 지그비 모듈인 ZIG 100을 지원합니다 적외선 통신 지원 RC 100B BT 100 BT 210 BT 410 ZIG 100과 적외선 통신을 지원합니다 참고 지그비나 블루투스 연결시 RC 100 은 녹색LED 가 켜지며 RC 100A RC 100B는 파란색 LED 가 켜집니다 AX S1과의 적외선 통신은 지원되지 않습니다 ZIG110 지그비는 지원되지 않습니다 무선모듈을 2개를 동시에 연결하지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#개요"
	},
	"3537": {
		"product": "RC-100A/100B",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 설명 무게 80g 크기 138mm 105mm 36mm 동작 전압 0V DC 소비전력 07W 배터리 알랄라인 LR6 AA 건전지 버튼 11 버튼 전원 모드 버튼 포함 통신 방식 적외선 통신 기본 지그비 통신 ZIG 100 모듈 장착시 블루투스 통신 BT 100 BT 210 BT 410 모듈 장착시 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#제품-사양"
	},
	"3538": {
		"product": "RC-100A/100B",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "전원 켜기 가운데의 POWER MODE 버튼이 전원 버튼으로 가볍게 회 누르면 적색 LED 가 2회 깜빡이며 켜집니다 전원 끄기 가운데의 POWER MODE 버튼을 길게 약 1초 이상 누르고 있으면 적색 LED 가 3회 ZIG 100을 꽂았을 때는 4회 깜빡입니다 깜빡인 후 전원이 꺼집니다 자동 절전 모드 RC 100B는 2분 이상 사용하지 않으면 아무 버튼도 누르지 않으면 배터리 소모를 줄이기 위해 자동으로 전원이 꺼집니다 버튼 눌림 상태 전송 RC 100B 는 버튼이 눌리면 눌린 버튼에 해당하는 패킷을 연결된 송신 모듈을 통해 동조된 수신모듈에게 전송합니다 버튼을 모두 떼는 순간에도 버튼이 눌리지 않음을 나타내는 패킷을 전송합니다 패킷과 관련된 내용은 리모콘 코드 맵 을 참조하십시오 펌웨어 버전 확인 펌웨어 버전 4는 6번 키를 누른채로 전원을 켜면 파란색 LED가 4회 깜빡입니다 펌웨어 버전 4는 전원을 끄거나 건전지를 제거해도 설정한 채널이 저장됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#사용-방법"
	},
	"3539": {
		"product": "RC-100A/100B",
		"header1": "연결하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#연결하기"
	},
	"3540": {
		"product": "RC-100A/100B",
		"header1": "연결하기",
		"header2": "기본 IR 모듈",
		"header3": "",
		"content": "IR Receiver를 장착한 CM 100A CM 510 CM530으로 무선 통신 패킷을 전송할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#연결하기"
	},
	"3541": {
		"product": "RC-100A/100B",
		"header1": "연결하기",
		"header2": "RC-100A와 ZIG-100 모듈",
		"header3": "",
		"content": "ZIG 100 모듈을 장착한 CM CM2 로 무선 통신 패킷을 전송할 수 있습니다 ZIG 110A 모듈을 장착한 CM 100A CM 510 CM 530 CM 700 으로 무선 통신 패킷을 전송할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#연결하기"
	},
	"3542": {
		"product": "RC-100A/100B",
		"header1": "연결하기",
		"header2": "RC-100A/100B 와 블루투스 모듈",
		"header3": "",
		"content": "BT 110A 모듈을 장착한 CM 100A CM 510 CM 530 CM 700 으로 무선 통신 패킷을 전송할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#연결하기"
	},
	"3543": {
		"product": "RC-100A/100B",
		"header1": "통신모드 확인하기",
		"header2": "",
		"header3": "",
		"content": "LED 색상 비교 기본 IR 사용시 RC 100A 100B RC 100 빨강 빨강 파랑 초록 사용 가능한 무선 모듈 모듈 RC 100 RC 100A RC 100B ZIG 100 셋트 ZIG 110 셋트 ZIG 110A 셋트 BT 110A 셋트 BT 100A BT 210 셋트 BT 210 셋트 BT 410 셋트 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#통신모드-확인하기"
	},
	"3544": {
		"product": "RC-100A/100B",
		"header1": "적외선 통신채널 설정 방법",
		"header2": "",
		"header3": "",
		"content": "적외선 무선 통신을 이용한 조종의 경우 사이의 통신 채널을 설정할 수 있습니다 통신 채널은 수신측과 송신측이 동일하게 설정해야만 무선 통신이 연결될 수 있습니다 아래는 RC 100 의 적외선 무선 통신 채널 설정 방법입니다 제어기 측의 채널 설정 방법은 로보플러스 태스크의 제어기 채널 설정 을 참고하세요 ockquote 펌웨어 버전 4부터는 전원을 꺼도 채널번호가 유지됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#적외선-통신채널-설정-방법"
	},
	"3545": {
		"product": "RC-100A/100B",
		"header1": "ZIG-100/BT-100 모듈 장착 방법",
		"header2": "",
		"header3": "",
		"content": "RC 100 의 건전지 뚜껑을 열면 아래와 같이 ZIG 100 이라고 적힌 곳이 ZIG 100 모듈을 장착할 위치입니다 RC 100A 의 경우 ZIG 100과 BT 100을 선택적으로 장착할 수 있습니다 아래 그림에 표시된 붉은 동그라미 부분이 서로 맞닿도록 넣어줍니다 손가락이나 길다란 막대 등으로 ZIG 100 BT 100 모듈을 꾹 눌러 완전히 삽입되도록 합니다 RC 100A 에 ZIG 100 BT100 모듈 장착이 완료된 모습입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#zig-100bt-100-모듈-장착-방법"
	},
	"3546": {
		"product": "RC-100A/100B",
		"header1": "브로드캐스트 채널 설정",
		"header2": "",
		"header3": "",
		"content": "RC 100Z에 장착된 ZIG 100의 설정이 Broadcasting Mode 다 다 통신모드 일 경우에 4개의 채널을 버튼 조작으로 설정 가능합니다 MODE버튼과 원하는 채널의 숫자 버튼 4번 을 동시에 눌러주면 채널을 변경할 수 있습니다 채널 변경 시에는 적색 LED가 채널 번호만큼 깜빡이므로 바뀐 채널 번호를 확인할 수 있습니다 주의 기본 공장출하 상태에서는 다 다 통신모드가 아닌 통신모드이므로 채널 변경은 무의미합니다 채널을 변경할 경우에 ZIG 100의 통신이 잠시 끊어질 수 있습니다 건전지를 빼면 채널이 다시 초기값으로 돌아가기 때문에 다시 설정해 주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#브로드캐스트-채널-설정"
	},
	"3547": {
		"product": "RC-100A/100B",
		"header1": "리모콘 코드 맵",
		"header2": "",
		"header3": "",
		"content": "RC 100 조종기의 버튼을 누르면 아래 코드맵에서와 같이 각 버튼에 해당하는 코드 값이 송신됩니다 2개 이상의 버튼을 누른 경우에는 눌려진 각 버튼 코드 값의 합이 송신됩니다 예제 버튼 버튼 버튼 코드 값 버튼 코드 값 64 65 송신 값 예제 버튼 버튼 버튼 코드 값 16 버튼 코드 값 256 272 송신 값 참고 적외선 모드 일때 사용 가능한 키 조합 수는 128개 입니다 ZIGBee 모드 일때 사용 가능한 키 조합 수는 512개 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#리모콘-코드-맵"
	},
	"3548": {
		"product": "RC-100A/100B",
		"header1": "통신 패킷",
		"header2": "",
		"header3": "",
		"content": "RC100은 통신 패킷을 아래와 같은 형식으로 사용하고 있습니다 는 Inverse 1의 보수 를 뜻합니다 예제 0xAA 0x55 0xF0 0x0F 예제 DATA 0x1234 Packet 0xFF 0x55 0x34 0xCB 0x12 0xED ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#통신-패킷"
	},
	"3549": {
		"product": "RC-100A/100B",
		"header1": "건전지 넣는 방법",
		"header2": "",
		"header3": "",
		"content": "뒷 뚜껑을 연다 건전지를 1개 넣는다 극성에 주의 다음 건전지를 넣는다 꾹 눌러서 건전지 삽입을 완료한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#건전지-넣는-방법"
	},
	"3550": {
		"product": "RC-100A/100B",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "RoboPlus Task RoboPlus Task 를 통해 로봇을 조종하는 프로그램을 만들 수 있습니다 Zigbee SDK Zigbee SDK 를 통해 C언어로 ZIGBee를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/rc-100/#활용-방법"
	},
	"3551": {
		"product": "ZIG-100/110A",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote ZIG 100 110A 주의 ZIG 100 110A는 현재 단종 되어 더 이상 판매되지 않습니다 ZIG 100 110A 는 지그비 통신을 이용하여 모듈끼리 시리얼 통신 UART 을 가능하게 해 주는 부품입니다 ZIG 100 과 ZIG 110A 는 장착하려는 부품과의 인터페이스 Interface 만 다를 뿐 동일한 기능을 제공합니다 각각 연결 가능한 부품은 아래와 같습니다 각 부품에 장착하는 방법은 부품별 설명 페이지를 참고하세요 ZIG 100 CM ZIG2Serial RC 100 ZIG 110A CM 100 CM 510 CM 530 CM 700 ZIG 100 110A 는 2개가 1세트로 구성되어 판매되며 최초 구입 시 상대방 모듈의 ID 가 설정된 상태에서 출고가 되므로 구매 후 별도의 ID 설정 작업 없이 바로 장착하여 사용하실 수 있습니다 세트 구성품 둘 중 하나를 잃어버리지 않도록 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#개요"
	},
	"3552": {
		"product": "ZIG-100/110A",
		"header1": "개요",
		"header2": "사용 예시",
		"header3": "",
		"content": "지그비 통신을 이용한 올로 버그 조종 ZIG 110A set 사용 올로 버그 제어기 CM 100 에 ZIG 110A 장착 무선 조종기 RC 100 에 ZIG 100 장착 지그비 통신을 이용한 PC 에서 바이올로이드 프리미엄 키트 조종 ZIG 110A set 사용 ZIG2Serial 에 ZIG 100 장착 후 PC 의 시리얼포트에 연결 바이올로이드 프리미엄키트 제어기에 ZIG 110A 장착 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#개요"
	},
	"3553": {
		"product": "ZIG-100/110A",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 설명 무게 ZIG 100 1g ZIG 110A 7g 크기 ZIG 100 19mm 27mm 9mm 6mm 커넥터 제외시 ZIG 110A 18 1mm 30mm 1mm 주파수 대역 4GHz Bandwidth MAX 250kbps 동작 전압 7V 6V 3V 권장 소비전류 30mA 3V 기본 통신속도 ZIG 100 57 600bps ZIG 110A 57 600bps ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#제품-사양"
	},
	"3554": {
		"product": "ZIG-100/110A",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#사용-방법"
	},
	"3555": {
		"product": "ZIG-100/110A",
		"header1": "사용 방법",
		"header2": "로보플러스",
		"header3": "",
		"content": "로보플러스를 통해 상대방 무선 ID를 변경하거나 브로드 캐스팅 모드로 설정하는 방법은 다음과 같이 두 가지가 있습니다 사용자의 하드웨어 구성 상황에 따라 적절한 방법을 선택할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#로보플러스"
	},
	"3556": {
		"product": "ZIG-100/110A",
		"header1": "사용 방법",
		"header2": "로보플러스",
		"header3": "제어기에 연결되어 있는 경우",
		"content": "먼저 제어기에 ZIG 100이나 ZIG 110A 를 연결한 후 RoboPlus Manager를 실행합니다 적절한 포트를 선택하고 제어기에 연결하면 다음과 같은 화면을 볼 수 있습니다 제어기 관리 화면에서 상대방 무선 ID를 선택하면 오른쪽 보조 컨트롤창에서 값을 설정할 수 있습니다 원하는 값을 설정한 후 적용 버튼을 누르면 값이 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#제어기에-연결되어-있는-경우"
	},
	"3557": {
		"product": "ZIG-100/110A",
		"header1": "사용 방법",
		"header2": "로보플러스",
		"header3": "ZIG2Serial에 연결되어 있는 경우",
		"content": "ZIG2Serial에 ZIG 100을 연결한 후 RoboPlus Manager를 실행합니다 ZIG2Serial이 연결된 포트를 선택하고 ZIG2Serial 설정 아이콘을 클릭합니다 Zigbee 설정 버튼을 클릭하고 화면에서 지시하는대로 진행합니다 설정창이 뜨면 원하는 값을 설정한 후 바꾸기 버튼을 누르면 값이 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#zig2serial에-연결되어-있는-경우"
	},
	"3558": {
		"product": "ZIG-100/110A",
		"header1": "사용 방법",
		"header2": "터미널",
		"header3": "",
		"content": "ZIG2Serial과 시리얼 통신용 터미널 프로그램을 이용해서 ZIG 100을 설정할 수 있습니다 여기서는 RoboPlus Terminal을 기반으로 사용방법을 설명합니다 ZIG2Serial에 ZIG 100을 연결한 후 터미널 프로그램을 실행합니다 ZIG2Serial이 연결된 PC의 시리얼 포트 번호를 이용해서 포트를 엽니다 키보드의 키 Shift 숫자1키 를 누르고 있는 상태에서 ZIG2Serial의 리셋 스위치를 누릅니다 ZIG 100은 부팅될 때 가 입력되면 설정 모드가 실행되도록 되어 있습니다 성공하면 다음과 같이 설정 화면이 나타납니다 Baudrate ZIG 100에 설정된 통신 속도 입니다 My ID ZIG 100의 고유 ID 입니다 이것은 사용자가 바꿀 수 없습니다 Dest Addr 통신할 상대 ZIG 100의 ID 입니다 명령어를 이용해서 ZIG 100을 설정합니다 사용할 수 있는 명령어는 다음과 같습니다 키 ZIG 100의 현재 설정 값을 확인합니다 키 통신할 상대 ZIG 100의 ID를 지정합니다 반드시 16진수로 입력해야 합니다 FFFF를 입력하면 Broadcast 통신 모드가 됩니다 키 ZIG 100의 통신 속도를 바꿉니다 반드시 16진수로 입력해야 합니다 키 Waiting 모드를 지정합니다 Broadcast 모드가 아닐 경우만 설정할 수 있습니다 Waiting 모드에 대한 자세한 내용은 ZIG 100 매뉴얼을 참고하시기 바랍니다 키 설정 모드를 종료합니다 ZIG2Serial의 리셋 스위치를 눌러서 종료할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#터미널"
	},
	"3559": {
		"product": "ZIG-100/110A",
		"header1": "통신 모드",
		"header2": "",
		"header3": "",
		"content": "ZIG 100과 ZIG 110A 는 설정에 따라 통신 혹은 통신을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#통신-모드"
	},
	"3560": {
		"product": "ZIG-100/110A",
		"header1": "통신 모드",
		"header2": "1:1 통신",
		"header3": "",
		"content": "한쌍의 ZIG 100 혹은 ZIG 110A 모듈의 설정값 중 상대방 무선 ID가 서로를 가리키고 있으면 통신 상태가 됩니다 초기에 전원이 인가되면 붉은색 LED가 깜박이며 잠시 후 서로 인식을 하게되면 붉은색 LED가 계속 켜져있게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#통신-모드"
	},
	"3561": {
		"product": "ZIG-100/110A",
		"header1": "통신 모드",
		"header2": "1:N 통신",
		"header3": "",
		"content": "ZIG 100 모듈을 Waiting 모드로 설정할 수 있습니다 Waiting 모드의 모듈은 상대방 ID를 무시합니다 다른 ZIG 100 ZIG 110A 모듈은 Wating 모듈을 상대방 ID로 지정해야 합니다 복수의 ZIG 100 ZIG 110A 모듈이 Wating 모듈을 상대방 ID로 지정할 수 있습니다 초기에 전원이 인가되면 붉은색 LED가 깜박이며 Waiting 모드의 모듈과 Waiting 모드 모듈을 가르키는 모듈이 서로 인식을 하게되면 붉은색 LED가 계속 켜져있게 됩니다 이 때 한번 연결되면 전원이 꺼지지 않는 한 서로 연결이 지속됩니다 만약 여러개의 모듈이 Waiting 모드의 모듈로 동시 접속을 하려 한다면 맨 처음 연결된 모듈과의 통신을 계속 유지합니다 Waiting 모드로 설정하는 방법은 다음과 같습니다 최초 연결된 모듈과 통신을하며 이외 모듈들은 신호를 대기상태를 유지합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#통신-모드"
	},
	"3562": {
		"product": "ZIG-100/110A",
		"header1": "통신 모드",
		"header2": "N:N 통신",
		"header3": "",
		"content": "ZIG 100 혹은 ZIG 110A 모듈을 브로드 캐스팅 모드로 설정할 수 있습니다 브로드 캐스팅 모드로 설정하면 브로드 캐스팅 모드로 설정된 모든 모듈들이 서로의 데이터를 송수신합니다 보통 하나의 모듈을 통해 다른 모듈들에 한꺼번에 명령을 전달하는 용도로 사용합니다 ZIG 110A 모듈은 브로드 캐스팅 채널을 바꿀 수 없습니다 기본값 ZIG 100 모듈은 핀 상태에 따라 브로드 캐스팅 채널을 변경 할 수 있습니다 ZIG 110A은 ZIG 110A의 상대방 ID를 16진수 FFFF로 설정하여 진입 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#통신-모드"
	},
	"3563": {
		"product": "ZIG-100/110A",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#핀-배열"
	},
	"3564": {
		"product": "ZIG-100/110A",
		"header1": "핀 배열",
		"header2": "ZIG-100",
		"header3": "",
		"content": "GND Zigbee Module의 Ground Level 0v Zigbee Module의 Supply Voltage 6V LED Zigbee Module의 접속 상태를 알려주는 LED RESET Zigbee Module을 Reset 시켜줄 때 사용한다 Zigbee 설정 모드에 들어갈때도 사용 CHANNEL SEL2 Broadcasting Mode에서 사용 CHANNEL SEL1 Broadcasting Mode에서 사용 TXD Zigbee Module의 Transmit Signal 단자 RXD Zigbee Module의 Receive Signal 단자 채널 Zig 100의 핀 상태 CHANNEL SEL1 LowCHANNEL SEL2 CHANNEL SEL1 HighCHANNEL SEL2 CHANNEL SEL1 LowCHANNEL SEL2 CHANNEL SEL1 HighCHANNEL SEL2 ockquote ZIG 100 핀 상태에 따른 Broadcasting Channel 정보 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#핀-배열"
	},
	"3565": {
		"product": "ZIG-100/110A",
		"header1": "핀 배열",
		"header2": "ZIG-110A",
		"header3": "",
		"content": "RXD Zigbee Module의 Receive Signal 단자 TXD Zigbee Module의 Transmit Signal 단자 Zigbee Module의 Supply Voltage 6V GND Zigbee Module의 Ground Level 0v ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#핀-배열"
	},
	"3566": {
		"product": "ZIG-100/110A",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "Zigbee SDK Zigbee SDK 를 통해 C언어로 ZIGBee를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig-110/#활용-방법"
	},
	"3567": {
		"product": "ZIG2Serial",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote ZIG2Serial ZIG 100 의 ID 변경 로보플러스 매니저 를 통해 ID 변경 가능 PC 에서 ZIGBee 통신을 통해 로봇과 시리얼 통신 PC 의 프로그램은 별도로 제작해야 합니다 통신 테스트는 로보플러스 매니저 로 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#개요"
	},
	"3568": {
		"product": "ZIG2Serial",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 설명 무게 11 12g 크기 56mm 34mm 12mm 동작 전압 5V 5V 통신속도 57 600bps ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#제품-사양"
	},
	"3569": {
		"product": "ZIG2Serial",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "명칭 설명 통신 상태 표시 LED RS 232 에서 ZIG 100 을 통해 나가는 신호가 있을 때는 TXD 가 켜지고 ZIG 100 을 통해 들어오는 신호가 있으면 RXD 가 켜집니다 ZIG 100 커넥터 ZIG2Serial 에 ZIG 100 을 연결하기 위한 커넥터 입니다 ZIG 100 상태 표시 LED ZIG 100 의 상태를 표시합니다 꺼져 있는 경우 ZIG 100 이 연결되지 않았거나 설정 상태일 경우입니다 켜져 있는 경우 상대 ZIG 100 과 연결되어 통신 준비가 된 상태입니다 깜빡거리는 경우 상대 ZIG 100 을 찾지 못한 상태입니다 리셋 스위치 ZIG 100 을 재부팅 시킬 때 사용합니다 전원 커넥터 ZIG2Serial 이 동작하기 위해서는 5V 전원이 필요합니다 사용자는 이 커넥터를 이용해서 전원을 공급할 수 있습니다 USB2Dynamixel 에 연결하여 사용하는 경우는 별도 전원 공급이 필요 없습니다 RS232 커넥터 PC 의 RS 232 포트에 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#각-부-명칭"
	},
	"3570": {
		"product": "ZIG2Serial",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#핀-배열"
	},
	"3571": {
		"product": "ZIG2Serial",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#사용-방법"
	},
	"3572": {
		"product": "ZIG2Serial",
		"header1": "사용 방법",
		"header2": "PC에 연결",
		"header3": "",
		"content": "PC 에는 시리얼 포트라는 RS 232 통신용 커넥터가 있습니다 ZIG2Serial 의 RS 232 커넥터를 여기에 연결하면 됩니다 만약 PC 에 시리얼 포트가 없으면 시중에 판매되는 USB2Serial 컨버터를 구매해서 사용해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#pc에-연결"
	},
	"3573": {
		"product": "ZIG2Serial",
		"header1": "사용 방법",
		"header2": "전원 공급",
		"header3": "",
		"content": "ZIG2Serial이 동작하기 위해서는 5V 전원을 공급해야 합니다 ZIG2Serial 의 전원 커넥터를 이용해서 전원을 공급할 수 있습니다 전원 연결용 케이블은 다음의 Pin 배열을 참고해서 직접 제작해야 합니다 외부 전원 연결용 저항 위치에는 0옴 저항 을 달아주거나 납으로 연결 시켜 주어야 외부 전원이 공급됩니다 당사의 USB2Dynamixel 제품을 사용할 경우 USB2Dynamixel 에서 ZIG2Serial 에 전원을 공급해 주어 별도의 전원 공급 없이 사용할 수 있습니다 WARNING 외부 전원 연결용 저항을 연결한 경우 반드시 제거 후 사용해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#전원-공급"
	},
	"3574": {
		"product": "ZIG2Serial",
		"header1": "사용 방법",
		"header2": "ZIG-100 연결",
		"header3": "",
		"content": "ZIG 100 의 방향에 주의하여 연결하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#zig-100-연결"
	},
	"3575": {
		"product": "ZIG2Serial",
		"header1": "사용 방법",
		"header2": "BT-100 연결",
		"header3": "",
		"content": "BT 100 의 방향에 주의하여 연결하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#bt-100-연결"
	},
	"3576": {
		"product": "ZIG2Serial",
		"header1": "사용 방법",
		"header2": "Broadcast 채널 선택",
		"header3": "",
		"content": "ZIG 100은 CHANNEL SEL 핀을 이용해서 Broadcast 채널을 선택할 수 있습니다 ZIG2Serial에서는 채널 선택을 위해 연결 설정을 변경해야 합니다 Open은 연결하지 않은 것으로 납을 제거하면 됩니다 Short는 연결한 것으로 납을 묻혀 놓으면 됩니다 R5와 R6에 있는 저항은 이므로 제거하고 대신 납을 묻혀도 무방합니다 ZIG2Serial은 공장 출하 시 기본적으로 R5 R6 R7이 모두 Short가 되어 채널 1로 설정되어 있습니다 R7의 납만 제거했다 묻혔다 해서 채널 1과 4를 쉽게 선택할 수 있습니다 참고 자사 제품인 CM 5의 경우 ZIG 100을 장착했을 때 Broadcast 채널 1이 선택되도록 되어있습니다 만약 ZIG2Serial을 다른 채널로 설정한 경우 Broadcast 통신 모드에서 CM 5와 통신이 되지 않습니다 채널 ZIG2Serial의 연결 상태 R7 Short R6 Short R5 Short R7 Short R6 Open R5 Short R7 Short R6 Short R5 Open R7 Short R6 Open R5 Open R7 Open R6 Don care R5 Don care ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#broadcast-채널-선택"
	},
	"3577": {
		"product": "ZIG2Serial",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "RoboPlus Manager 로보플러스 매니저 를 통해 ZIG 100 ZIG 110의 설정값을 세팅할 수 있습니다 Zigbee SDK Zigbee SDK 를 통해 C언어로 Zigbee를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#활용-방법"
	},
	"3578": {
		"product": "ZIG2Serial",
		"header1": "회로도",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#회로도"
	},
	"3579": {
		"product": "ZIG2Serial",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/communication/zig2serial/#동영상"
	},
	"3580": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "아두이노 보드에서 다이나믹셀과 RC100을 사용하기위한 쉴드 보드이며 다이나믹셀 제어를 위한 라이브러리를 제공함 본 제품은 아두이노 Uno를 포함하지 않습니다 아두이노 관련 제품은 별도로 구매를 해야합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#개요"
	},
	"3581": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 동작 전압 4V XL 320 12V Series 허용전류 1A 아두이노 10A 터미널 전원 커넥터 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#제품-사양"
	},
	"3582": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "핀 번호 핀 이름 설명 HW UART RX RX HW UART TX TX SW UART RX 주의2 SoftwareSerial SW UART TX 주의2 SoftwareSerial 항목 핀 이름 설명 다이나믹셀 포트 TTL TTL XL 430 RS485 주의3 전원 스위치 Power SW 다이나믹셀 포트 전원 스위치 UART 스위치 UART SW 업로드 또는 다이나믹셀 선택 스위치 주의1 Jumper Cap 전원 선택 전원 연결 방법 아두이노 핀 0번 1번이 다이나믹셀 제어를 위한 시리얼 포트 아두이노 핀 2번은 방향 제어를 위한 제어핀 다이나믹셀 제어를 위해서 하드웨어 시리얼 포트를 사용하기 때문에 아두이노 핀 8번을 이용하여 소프트웨어 시리얼로 RC100 혹은 LN101을 연결하여 시리얼 통신 수행 주의1 UART SW SW 를 Upload로 세팅해야 펌웨어를 USB 포트를 통해서 업로드 할 수 있다 Dynamixel로 세팅해야만 다이나믹셀을 활용할 수 있다 이 때는 USB 포트를 사용하지 못하므로 펌웨어를 업로드 할 수 없다 주의2 SoftwareSerial을 지원하지 않는 보드를 사용한다면 핀 7번과 8번을 UART 통신으로 사용하지 못한다 주의3 TTL TTL XL 430 RS485 커넥터들은 병렬로 연결되어 하나의 serial을 사용한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#각-부-명칭"
	},
	"3583": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "전원 연결 방법",
		"header2": "",
		"header3": "",
		"content": "VIN 전원 공유 VIN 전원 분리 전원 입력은 점퍼캡의 설치 유무에 따라 다음과 같이 나뉜다 VIN 전원 공유 아두이노의 SMPS 커넥터를 이용한 전원 사용 VIN 전원 분리 다이나믹셀 쉴드의 전원 입력 커텍터를 이용한 전원 사용 아두이노 보드의 USB 전원으로는 다이나믹셀 전원 연결이 되지 않기 때문에 반드시 외부 전원을 연결 해야 한다 전원 입력 커넥터를 사용할 때는 반드시 전원의 극성을 확인 하고 연결해서 사용해야한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#전원-연결-방법"
	},
	"3584": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "스위치",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#스위치"
	},
	"3585": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "스위치",
		"header2": "업로드 스위치",
		"header3": "",
		"content": "다이나믹셀 제어를 위해서 아두이노 보드의 하드웨어 시리얼 포트를 사용하는데 같은 포트로 업로드가 진행 되기 때문에 두 포트가 충돌이 날 수 있다 따라서 업로드를 위해서는 시리얼 포트 스위치를 이용하여 Upload 위치로 이동 시킨 후 업로드를 한다 업로드가 완료된 후에는 다이나믹셀 제어를 위해서 스위치를 Dynamixel 위치로 이동 시켜야한다 이동 시키지 않는다면 다이나믹셀 구동이 되지 않는다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#업로드-스위치"
	},
	"3586": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "스위치",
		"header2": "다이나믹셀 전원 스위치",
		"header3": "",
		"content": "다이나믹셀 커넥터의 전원을 별도로 Off 할수 있는 스위치이다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#다이나믹셀-전원-스위치"
	},
	"3587": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "아두이노 쉴드 라이브러리",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#아두이노-쉴드-라이브러리"
	},
	"3588": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "아두이노 쉴드 라이브러리",
		"header2": "특징",
		"header3": "",
		"content": "다이나믹셀 프로토콜 지원 최대 16개 다이나믹셀 제어 가능 일반적으로 XL 320 XL430 W250은 각 모터당 6A를 소모한다 SynWrite 지원 RC100 라이브러리 지원 소프트 시리얼 라이브러리를 이용한 시리얼 통신 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#특징"
	},
	"3589": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "아두이노 쉴드 라이브러리",
		"header2": "라이브러리 설치",
		"header3": "",
		"content": "아두이노 IDE에서 라이브러리를 추가하는 세가지 방법이 있다 라이브러리 매니저를 활용하는 방법 Zip파일로 압축된 라이브러리를 불러오는 방법 수동으로 설치하는 방법 각각의 방법에 대한 자세한 설명은 Arduino Official Guide 에서 찾을 수 있다 다음은 라이브러리 매니저를 활용하는 예이다 라이브러리를 설치하였다면 examples 항목에 DynamixelShield가 생기고 사용 가능한 예제를 볼 수 있다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#라이브러리-설치"
	},
	"3590": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "라이브러리 API",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#라이브러리-api"
	},
	"3591": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "라이브러리 API",
		"header2": "라이브러리 초기화",
		"header3": "",
		"content": "라이브러리를 사용하기 위해서는 통신 포트의 속도와 프로토콜을 설정하여 begin 함수로 초기화 한다 begin 1000000 PACKET VER ockquote 1Mbps 통신 속도에 프로토콜 으로 설정 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#라이브러리-초기화"
	},
	"3592": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "라이브러리 API",
		"header2": "다이나믹셀 연결",
		"header3": "",
		"content": "쉴드 라이브러리는 다이나믹셀의 모델을 기반으로 하여 자동으로 주소값을 참조하도록 되어 있기 때문에 연결된 다이나믹셀이 무엇인지 알기 위해서 연결된 다이나믹셀의 ID와 모델을 추가해야 한다 자동 추가 ping ockquote ping 함수를 이용하여 자동으로 1번 부터 31번까지 검색을 해서 연결된 다이나믹셀이 있으면 추가한다 수동 추가 begin 1000000 delay 1000 addMotor XL430 addMotor XL430 addMotor 15 AX12 ockquote addMotor 함수를 이용하여 추가한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#다이나믹셀-연결"
	},
	"3593": {
		"product": "아두이노 다이나믹셀 쉴드",
		"header1": "라이브러리 API",
		"header2": "사용 가능한 API 목록",
		"header3": "",
		"content": "bool begin uint32 baud rate 57600 uint8 protocol version PACKET VER bool scan void bool ping uint8 id GLOBAL ID bool addMotor uint8 id uint8 model bool setProtocolVersion uint8 version bool write uint8 id uint16 addr uint8 data uint16 length uint32 timeout bool read uint8 id uint16 addr uint8 data uint16 length uint32 timeout uint8 getDxlCount void uint8 getDxlID uint8 index uint32 getErr void void clearErr void bool reboot uint8 id bool reset uint8 id bool setID uint8 id uint8 new id bool setBaud uint8 id uint32 new baud bool ledOn uint8 id bool ledOff uint8 id bool torqueOn uint8 id bool torqueOff uint8 id bool setJointMode uint8 id bool setWheelMode uint8 id bool setGoalPosition uint8 id uint32 position int32 getGoalPosition uint8 id int32 getCurPosition uint8 id bool setGoalSpeed uint8 id int32 speed int32 getGoalSpeed uint8 id int32 getCurSpeed uint8 id bool setGoalAngle uint8 id int32 angle int32 getGoalAngle uint8 id int32 getCurAngle uint8 id bool syncWriteBegin void bool syncWriteEnd void ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/arduino_dynamixel_shield/#사용-가능한-api-목록"
	},
	"3594": {
		"product": "CM-100A",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "올로에서 사용되는 제어기로 올로의 각종 부품들 감속모터 서보모터 접촉센서 LED모듈 적외선센서 등 을 연결할 수 있습니다 RoboPlus Task 를 통해 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 CM 100A 제어기는 RoboPlus Motion을 지원하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-100/#개요"
	},
	"3595": {
		"product": "CM-100A",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 22g 컨트롤러 ATMega 크기 42mm 42mm 18mm 동작 전압 범위 0V 5V 권장 0V AA LR6 소비 전류 대기 상태 04mA 실행 상태 30mA 최대 한계 1000mA 동작 온도 70 내부 O장치 적외선 센서 거리 감지용 마이크 소리 감지용 버저 Buzzer 외부 장치 통신 포트 무선 조종 및 다운로드용 모터 연결 포트 감속 모터용 다목적 포트 센서 및 출력용 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-100/#제품-사양"
	},
	"3596": {
		"product": "CM-100A",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "ockquote CM 100A 각 부 명칭 시작 버튼 버튼을 눌러 켜면 내부의 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 적외선 센서 3개의 적외선 센서가 장착되어 있어 각 방향에서의 센서값을 이용하여 프로그래밍 할 수 있습니다 ockquote CM 100 의 각 포트에 연결 가능한 모듈 상단 포트 시작 버튼 옆에 위치해 있으며 USB 다운로더 LN 101 적외선 수신기 ZIG 110A BT 110A 등을 연결할 수 있습니다 포트 각 포트 번호는 II 와 같이 막대 숫자로 표시되어 있으며 감속 모터를 연결하는 2핀으로 된 포트입니다 포트 각 포트 번호는 III IIII 와 같이 막대 숫자로 표시되어 있으며 적외선 센서와 접촉센서 서보모터 LED 모듈 등을 연결할 수 있는 5핀으로 된 포트입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-100/#각-부-명칭"
	},
	"3597": {
		"product": "CM-100A",
		"header1": "전원 연결",
		"header2": "",
		"header3": "",
		"content": "CM 100A 은 AA사이즈 건전지 두개를 사용하여 전원을 연결할 수 있습니다 전압의 범위는 0V 이고 권장전압은 0V 입니다 전원 포트의 간단한 회로 구성은 다음과 같습니다 부분에 전지의 극을 부분에 전지의 극을 연결하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-100/#전원-연결"
	},
	"3598": {
		"product": "CM-100A",
		"header1": "작동 방법",
		"header2": "",
		"header3": "",
		"content": "시작 버튼을 눌러 켜면 내부의 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 처음 시작 시 연속으로 버튼을 누른 횟수에 따라 시작 버튼 눌림 횟수 가 증가합니다 따라서 이 파라미터를 사용하여 프로그래밍 하면 CM 100 을 작동시킬 때 시작 버튼을 누르는 횟수에 따라 각각 다른 행동을 하도록 할 수 있습니다 제어기가 켜진 상태에서 다시 시작 버튼을 누르면 제어기가 꺼집니다 제어기 작동 시 자동꺼짐 타이머 의 기본 설정 값은 5분 입니다 자동꺼짐타이머 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-100/#작동-방법"
	},
	"3599": {
		"product": "CM-100A",
		"header1": "PC 연결",
		"header2": "",
		"header3": "",
		"content": "CM 100A을 PC와 연결하기 위해서는 LN 101 이 필요합니다 PC와 연결하기 위한 자세한 정보는 LN 101 페이지에서 확인 할 수 있습니다 ockquote LN 101과 CM 100A 제어기 연결 그림 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-100/#pc-연결"
	},
	"3600": {
		"product": "CM-100A",
		"header1": "무선 통신 모듈 연결하기",
		"header2": "",
		"header3": "",
		"content": "CM 100A에는 ZIG 110 BT 110 무선 통신 모듈을 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-100/#무선-통신-모듈-연결하기"
	},
	"3601": {
		"product": "CM-150",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "드림에서 사용되는 제어기로 드림의 각종 부품들 감속모터 서보모터 접촉센서 LED모듈 적외선센서 등 을 연결할 수 있습니다 RoboPlus Manager 30 이상 버전 를 통해 펌웨어 복구를 할 수 있습니다 RoboPlus Task 이상 버전 를 통해 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 CM 150 제어기는 RoboPlus Motion을 지원하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#개요"
	},
	"3602": {
		"product": "CM-150",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 21g 컨트롤러 STM32F103C8 크기 42mm 42mm 18mm 동작 전압 범위 2V 2V 권장 7V 리튬이온 배터리 소비 전류 대기 상태 50mA 실행 상태 70mA 최대 한계 300mA 동작 온도 70 내부 O장치 적외선 센서 거리 감지용 마이크 소리 감지용 버저 Buzzer 외부 장치 4핀 통신 포트 무선 조종 및 다운로드용 Micro USB 포트 PC 연결용 모터 연결 포트 감속 모터용 다목적 포트 센서 및 출력용 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#제품-사양"
	},
	"3603": {
		"product": "CM-150",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "컨트롤 테이블은 제어기 내부에 존재하는 데이터의 집합체입니다 사용자는 컨트롤 테이블의 주소를 이용하여 해당 주소에 저장된 데이터를 읽어오거나 새로운 데이터를 입력할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#컨트롤-테이블"
	},
	"3604": {
		"product": "CM-150",
		"header1": "컨트롤 테이블",
		"header2": "영역(EEPROM, RAM)",
		"header3": "",
		"content": "컨트롤 테이블은 2개의 영역으로 구분됩니다 RAM 영역에 위치한 데이터는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM 영역에 위치한 데이터는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#컨트롤-테이블"
	},
	"3605": {
		"product": "CM-150",
		"header1": "컨트롤 테이블",
		"header2": "접근 속성(R, RW)",
		"header3": "",
		"content": "컨트롤 테이블의 데이터에는 2개의 접근 속성이 있습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 데이터는 사용자가 임의로 값을 바꿀 수 없기 때문에 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#컨트롤-테이블"
	},
	"3606": {
		"product": "CM-150",
		"header1": "컨트롤 테이블",
		"header2": "초기값",
		"header3": "",
		"content": "제어기에 전원이 인가될 때 컨트롤 테이블의 각 데이터는 초기값으로 설정됩니다 사용자가 초기값을 변경하면 새로운 초기값이 적용됩니다 RAM 영역의 초기값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#컨트롤-테이블"
	},
	"3607": {
		"product": "CM-150",
		"header1": "컨트롤 테이블",
		"header2": "크기",
		"header3": "",
		"content": "데이터의 크기는 용도에 따라 byte 로 정해져 있습니다 Instruction Packet을 통해 데이터를 변경할 때는 해당 데이터의 크기를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#컨트롤-테이블"
	},
	"3608": {
		"product": "CM-150",
		"header1": "컨트롤 테이블",
		"header2": "크기",
		"header3": "EEPROM 영역",
		"content": "주소 크기 byte 데이터 설명 접근속성 초기값 Model Number 모델 번호 400 Firmware Version 펌웨어 버전 정보 ID 제어기 ID 200 Baud Rate 제어기 통신속도 Return Delay Time 응답 지연 시간 10 Status Return Level 응답 레벨 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#eeprom-영역"
	},
	"3609": {
		"product": "CM-150",
		"header1": "컨트롤 테이블",
		"header2": "크기",
		"header3": "RAM 영역",
		"content": "주소 크기 byte 데이터 설명 접근속성 초기값 21 Mode Number 현재 모드 번호 25 Press Counter 시작버튼 눌림 횟수 26 Button Status 사용자버튼 상태 30 My Zigbee ID 나의 무선모듈 ID 32 Your Zigbee ID 상대 무선모듈 ID 36 IR Communication Channel 적외선 수신기 통신 채널 번호 73 128ms Timer Value 128ms 타이머 값 74 1ms Timer Value 1ms 타이머 값 76 Power Save Timer Value 자동 꺼짐 타이머 값 77 Random Number 임의의 숫자 84 Buzzer Index 부저 음계 멜로디 번호 85 Buzzer Time 부저 재생 시간 86 Sound Detected Count 최종 소리 감지 횟수 87 Sound Detecting Count 소리 감지 횟수 91 Internal Right IR Sensor Value 내장 우측 적외선센서 감지값 93 Internal Left IR Sensor Value 내장 좌측 적외선센서 감지값 95 Internal Center IR Sensor Value 내장 가운데 적외선센서 감지값 128 Port Servo Mode 3번 포트 서보모터 모드 바퀴 서보 129 Port Servo Mode 4번 포트 서보모터 모드 바퀴 서보 136 Port Motor Speed 3번 서보모터 회전 속도 138 Port Motor Speed 4번 서보모터 회전 속도 152 Port Motor Speed 1번 감속모터 회전 속도 154 Port Motor Speed 2번 서보모터 회전 속도 156 Port Servo Position 3번 서보모터 위치 값 158 Port Servo Position 4번 서보모터 위치 값 172 Port IR Sensor Value 3번 포트 적외선 센서 값 174 Port IR Sensor Value 4번 포트 적외선 센서 값 204 Port Touch Sensor Value 3번 포트 터치 센서 값 205 Port Touch Sensor Value 4번 포트 터치 센서 값 212 Port LED Module Value 3번 포트 LED모듈 제어 값 213 Port LED Module Value 4번 포트 LED모듈 제어 값 220 Port User Device Value 3번 포트의 사용자 장치 222 Port User Device Value 4번 포트의 사용자 장치 236 port Temperature Sensor Value 3번 포트 온도 센서 값 237 Port Temperature Sensor Value 4번 포트 온도 센서 값 244 Port Ultrasonic Sensor Value 3번 포트 초음파 센서 값 245 Port Ultrasonic Sensor Value 4번 포트 초음파 센서 값 252 Port Magnetic Sensor Value 3번 포트 자석 센서 값 253 Port Magnetic Sensor Value 4번 포트 자석 센서 값 260 Port Motion Sensor Value 3번 포트 동작 감지 센서 값 261 Port Motion Sensor Value 4번 포트 동작 감지 센서 값 268 Port Color Sensor Value 3번 포트 칼라 센서 값 269 Port Color Sensor Value 4번 포트 칼라 센서 값 276 Port Hydro Thermo Sensor Humidity Value 3번 포트 온습도 센서 습도 값 277 Port Hydro Thermo Sensor Humidity Value 4번 포트 온습도 센서 습도 값 284 Port Hydro Thermo Sensor Temperature Value 3번 포트 온습도 센서 온도 값 285 Port Hydro Thermo Sensor Temperature Value 4번 포트 온습도 센서 온도 값 292 Port Brightness Sensor Value 3번 포트 조도 센서 값 294 Port Brightness Sensor Value 4번 포트 조도 센서 값 Manager 0을 통해서 제어기를 연결하면 컨트롤 테이블을 확인할 수 있습니다 컨트롤 테이블 확인하기 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#ram-영역"
	},
	"3610": {
		"product": "CM-150",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "ockquote CM 150 각 부 명칭 시작 버튼 짧게 버튼을 눌러 켜면 내부의 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 적외선 센서 3개의 적외선 센서가 장착되어 있어 각 방향에서의 센서값을 이용하여 프로그래밍 할 수 있습니다 ockquote CM 150 의 각 포트에 연결 가능한 모듈 상단 4핀 포트 시작 버튼 옆에 위치해 있으며 적외선 수신기 ZIG 110A BT 210 등을 연결할 수 있습니다 Micro USB 포트 4핀 포트 옆에 위치해 있으며 micro USB 케이블을 통해 PC에 연결할 수 있습니다 포트 각 포트 번호는 II 와 같이 막대 숫자로 표시되어 있으며 감속 모터를 연결하는 2핀으로 된 포트입니다 포트 각 포트 번호는 III IIII 와 같이 막대 숫자로 표시되어 있으며 적외선 센서와 접촉센서 서보모터 LED 모듈 등을 연결할 수 있는 5핀으로 된 포트입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#각-부-명칭"
	},
	"3611": {
		"product": "CM-150",
		"header1": "전원 연결",
		"header2": "",
		"header3": "",
		"content": "CM 150 은 LBS 040 리튬이온 배터리 세트 한 개를 사용하여 전원을 연결할 수 있습니다 전압의 범위는 0V 이고 권장전압은 7V 입니다 전원 포트의 간단한 회로 구성은 다음과 같습니다 부분에 전지의 극을 부분에 전지의 극을 연결하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#전원-연결"
	},
	"3612": {
		"product": "CM-150",
		"header1": "작동 방법",
		"header2": "",
		"header3": "",
		"content": "시작 버튼을 눌러 켜면 내부의 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 처음 시작 시 연속으로 버튼을 누른 횟수에 따라 시작 버튼 눌림 횟수 가 증가합니다 따라서 이 파라미터를 사용하여 프로그래밍 하면 CM 150 을 작동시킬 때 시작 버튼을 누르는 횟수에 따라 각각 다른 행동을 하도록 할 수 있습니다 시작 버튼을 1초 이상 눌러 켜면 삐삐 2회 소리가 나고 내부의 LED에 불이 켜지며 제어기가 켜지고 다운로드 된 프로그램이 실행되지 않는 manage 모드에 진입합니다 시작 버튼을 5초 이상 눌러 켜면 삐삐삐 3회 소리가 나고 펌웨어 복구 모드로 진입합니다 제어기가 켜진 상태에서 다시 시작 버튼을 누르면 제어기가 꺼집니다 제어기 작동 시 자동꺼짐 타이머 의 기본 설정 값은 5분 입니다 자동꺼짐타이머 바로가기 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#작동-방법"
	},
	"3613": {
		"product": "CM-150",
		"header1": "PC 연결",
		"header2": "",
		"header3": "",
		"content": "CM 150 을 PC와 연결하기 위해서는 micro USB 케이블이 필요합니다 PC와 연결하기 위한 자세한 정보는 USB 드라이버 설치 페이지 에서 확인 할 수 있습니다 ockquote micro USB 케이블과 CM 150 제어기 연결 그림 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#pc-연결"
	},
	"3614": {
		"product": "CM-150",
		"header1": "무선 통신 모듈 연결하기",
		"header2": "",
		"header3": "",
		"content": "CM 150 에는 BT 210 BT 110 ZIG 110 무선 통신 모듈을 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-150/#무선-통신-모듈-연결하기"
	},
	"3615": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "스마트에서 사용되는 제어기로 스마트의 각종 부품들 감속모터 서보모터 접촉센서 LED모듈 적외선센서 등 을 연결할 수 있습니다 RoboPlus Manager 를 통해 펌웨어 복구를 할 수 있습니다 RoboPlus Task 또는 Task 이상 버전 를 통해 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#개요"
	},
	"3616": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "제품 사양",
		"header3": "",
		"content": "항목 사양 무게 25g 컨트롤러 STM32L151C8 크기 54mm 42mm 18mm 동작 전압 8V 4V 권장 4V 건전지 또는 리튬이온 배터리 소비 전류 대기 상태 80mA 실행 상태 150mA 최대 한계 300mA 동작 온도 70 내부 O장치 적외선 센서 거리 감지용 마이크 소리 감지용 버저 Buzzer 외부 장치 4핀 통신 포트 무선 조종 및 다운로드용 모터 연결 포트 감속 모터용 다목적 포트 센서 및 출력용 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#제품-사양"
	},
	"3617": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "컨트롤 테이블",
		"header3": "",
		"content": "컨트롤 테이블은 제어기 내부에 존재하는 데이터의 집합체입니다 사용자는 컨트롤 테이블의 주소를 이용하여 해당 주소에 저장된 데이터를 읽어오거나 새로운 데이터를 입력할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#컨트롤-테이블"
	},
	"3618": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "컨트롤 테이블",
		"header3": "영역(EEPROM, RAM)",
		"content": "컨트롤 테이블은 2개의 영역으로 구분됩니다 RAM 영역에 위치한 데이터는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM 영역에 위치한 데이터는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#컨트롤-테이블"
	},
	"3619": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "컨트롤 테이블",
		"header3": "접근속성(R, RW)",
		"content": "컨트롤 테이블의 데이터에는 2개의 접근 속성이 있습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 데이터는 사용자가 임의로 값을 바꿀 수 없기 때문에 주로 측정 또는 모니터링 용도로 사용되고 읽기쓰기 속성 은 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#컨트롤-테이블"
	},
	"3620": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "컨트롤 테이블",
		"header3": "초기값",
		"content": "제어기에 전원이 인가될 때 컨트롤 테이블의 각 데이터는 초기값으로 설정됩니다 사용자가 초기값을 변경하면 새로운 초기값이 적용됩니다 RAM 영역의 초기값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#컨트롤-테이블"
	},
	"3621": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "컨트롤 테이블",
		"header3": "크기",
		"content": "데이터의 크기는 용도에 따라 byte 로 정해져 있습니다 Instruction Packet을 통해 데이터를 변경할 때는 해당 데이터의 크기를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#컨트롤-테이블"
	},
	"3622": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "컨트롤 테이블",
		"header3": "EEPROM 영역",
		"content": "주소 크기 byte 항목 설명 접근속성 초기값 Model Number 모델 번호 400 Firmware Version 펌웨어 버전 정보 ID 제어기 ID 200 Baud Rate 제어기 통신속도 Return Delay Time 응답 지연 시간 10 Status Return Level 응답 레벨 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#컨트롤-테이블"
	},
	"3623": {
		"product": "CM-200",
		"header1": "개요",
		"header2": "컨트롤 테이블",
		"header3": "RAM 영역",
		"content": "주소 크기 byte 항목 설명 접근속성 초기값 21 Mode Number 현재 모드 번호 25 Press Counter 시작버튼 눌림 횟수 26 Button Status 사용자버튼 상태 30 My Zigbee ID 나의 무선모듈 ID 32 Your Zigbee ID 상대 무선모듈 ID 36 IR Communication Channel 적외선 수신기 통신 채널 번호 66 Motion Play Page 모션 실행 페이지 번호 68 Motion Play Status 모션 실행 상태 73 128ms Timer Value 128ms 타이머 값 74 1ms Timer Value 1ms 타이머 값 76 Power Save Timer Value 자동 꺼짐 타이머 값 77 Random Number 임의의 숫자 79 AUX LED RED 사용자 LED RED 84 Buzzer Index 부저 음계 멜로디 번호 85 Buzzer Time 부저 재생 시간 86 Sound Detected Count 최종 소리 감지 횟수 87 Sound Detecting Count 소리 감지 횟수 88 Battery Sound Enable 저전압 알람 스위치 91 Internal Right IR Sensor Value 내장 우측 적외선센서 감지값 93 Internal Left IR Sensor Value 내장 좌측 적외선센서 감지값 95 Internal Center IR Sensor Value 내장 가운데 적외선센서 감지값 97 Input Power Voltage unit 1V 입력전압 단위 1V 128 Port Servo Mode 3번 포트 서보모터 모드 바퀴 서보 129 Port Servo Mode 4번 포트 서보모터 모드 바퀴 서보 136 Port Motor Speed 3번 서보모터 회전 속도 138 Port Motor Speed 4번 서보모터 회전 속도 152 Port Motor Speed 1번 감속모터 회전 속도 154 Port Motor Speed 2번 서보모터 회전 속도 156 Port Servo Position 3번 서보모터 위치 값 158 Port Servo Position 4번 서보모터 위치 값 172 Port IR Sensor Value 3번 포트 적외선 센서 값 174 Port IR Sensor Value 4번 포트 적외선 센서 값 204 Port Touch Sensor Value 3번 포트 터치 센서 값 205 Port Touch Sensor Value 4번 포트 터치 센서 값 212 Port LED Module Value 3번 포트 LED모듈 제어 값 213 Port LED Module Value 4번 포트 LED모듈 제어 값 220 Port User Device Value 3번 포트의 사용자 장치 222 Port User Device Value 4번 포트의 사용자 장치 236 port Temperature Sensor Value 3번 포트 온도 센서 값 237 Port Temperature Sensor Value 4번 포트 온도 센서 값 244 Port Ultrasonic Sensor Value 3번 포트 초음파 센서 값 245 Port Ultrasonic Sensor Value 4번 포트 초음파 센서 값 252 Port Magnetic Sensor Value 3번 포트 자석 센서 값 253 Port Magnetic Sensor Value 4번 포트 자석 센서 값 260 Port Motion Sensor Value 3번 포트 동작 감지 센서 값 261 Port Motion Sensor Value 4번 포트 동작 감지 센서 값 268 Port Color Sensor Value 3번 포트 칼라 센서 값 269 Port Color Sensor Value 4번 포트 칼라 센서 값 276 Port Hydro Thermo Sensor Humidity Value 3번 포트 온습도 센서 습도 값 277 Port Hydro Thermo Sensor Humidity Value 4번 포트 온습도 센서 습도 값 284 Port Hydro Thermo Sensor Temperature Value 3번 포트 온습도 센서 온도 값 285 Port Hydro Thermo Sensor Temperature Value 4번 포트 온습도 센서 온도 값 292 Port Brightness Sensor Value 3번 포트 조도 센서 값 294 Port Brightness Sensor Value 4번 포트 조도 센서 값 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#컨트롤-테이블"
	},
	"3624": {
		"product": "CM-200",
		"header1": "Quick Start",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#quick-start"
	},
	"3625": {
		"product": "CM-200",
		"header1": "Quick Start",
		"header2": "각 부 명칭",
		"header3": "",
		"content": "시작버튼 짧게 버튼을 눌러 켜면 시작 버튼 좌측의 빨간색 전원 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 적외선 센서 3개의 적외선 센서가 장착되어 있어 각 방향에서의 센서값을 이용하여 프로그래밍 할 수 있습니다 상단 4핀 포트 HOST LINK 시작 버튼 옆에 위치해 있으며 USB 다운로더 LN 101 ZIG 110A BT 110A BT 210 등을 연결할 수 있습니다 포트 각 포트 번호는 II 와 같이 막대 숫자로 표시되어 있으며 감속 모터를 연결하는 2핀으로 된 포트입니다 포트 10 각 포트 번호는 III IV 와 같이 막대 숫자로 표시되어 있으며 적외선 센서와 접촉센서 서보모터 LED 모듈 등을 연결할 수 있는 5핀으로 된 포트입니다 POWER LED 빨간색 전원이 켜지면 POWER LED가 켜지고 전원이 꺼지면 꺼집니다 TX LED 녹색 제어기에서 4핀 포트를 통해서 외부로 데이터를 전송하는 동안 켜집니다 RX LED 파란색 외부에서 4핀 포트를 통해 제어기로 데이터를 전송하는 동안 켜집니다 AUX LED 빨간색 사용자가 ON OFF를 제어할 수 있는 LED 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#각-부-명칭"
	},
	"3626": {
		"product": "CM-200",
		"header1": "Quick Start",
		"header2": "전원 연결",
		"header3": "",
		"content": "CM 200 은 ABB 030 건전지x2 박스 2개 또는 LBS 040 리튬이온 배터리 두개를 사용하여 전원을 연결할 수 있습니다 입력 가능한 전압의 범위는 8V 4V 이며 권장 사용전압은 4V 입니다 전원 포트의 극성은 위 그림과 같습니다 부분에 전지의 극을 부분에 전지의 극을 연결하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#전원-연결"
	},
	"3627": {
		"product": "CM-200",
		"header1": "Quick Start",
		"header2": "작동 확인하기",
		"header3": "",
		"content": "시작 버튼을 짧게 눌러 켜면 시작 버튼 좌측의 빨간색 전원 LED에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 처음 시작 시 연속으로 버튼을 누른 횟수에 따라 시작 버튼 눌림 횟수 가 증가합니다 따라서 이 파라미터를 사용하여 프로그래밍 하면 CM 200 을 작동시킬 때 시작 버튼을 누르는 횟수에 따라 각각 다른 행동을 하도록 할 수 있습니다 프로그래밍은 이 문서의 고급 사용자 항목의 프로그래밍 을 참조하십시오 시작 버튼을 1초 이상 눌러 켜면 삐삐 2회 소리가 나고 빨간색 전원LED 에 불이 켜지며 제어기가 켜지고 다운로드 된 프로그램이 실행되지 않는 manage 모드에 진입합니다 시작 버튼을 5초 이상 눌러 켜면 삐삐삐 3회 소리가 나고 펌웨어 복구 모드로 진입합니다 제어기가 켜진 상태에서 다시 시작 버튼을 누르면 제어기가 꺼집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#작동-확인하기"
	},
	"3628": {
		"product": "CM-200",
		"header1": "초급 사용자",
		"header2": "",
		"header3": "",
		"content": "초급 사용자는 미리 작성되어있는 코드를 CM 200 제어기에 다운로드 받아서 로봇을 움직여 볼 수 있습니다 파일을 CM 200제어기에 다운로드하기 위해서는 Smart와 Task 앱의 설치가 필요합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#초급-사용자"
	},
	"3629": {
		"product": "CM-200",
		"header1": "초급 사용자",
		"header2": "무선통신 연결하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#무선통신-연결하기"
	},
	"3630": {
		"product": "CM-200",
		"header1": "초급 사용자",
		"header2": "R+ SmartIII 설치하기",
		"header3": "",
		"content": "여기에서는 스마트 기기에 SmartIII를 설치합니다 구글 play 스토어에서 로보티즈 를 검색합니다 SmartIII ROBOTIS 를 선택합니다 설치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#r-smartiii-설치하기"
	},
	"3631": {
		"product": "CM-200",
		"header1": "초급 사용자",
		"header2": "R+ m.Task 2.0 설치하기",
		"header3": "",
		"content": "여기에서는 스마트 기기에 Task 0을 설치합니다 예제 다운로드 편집 디버깅 리모컨 기능을 제공합니다 구글 play 스토어에서 로보티즈 를 검색합니다 Task2 ROBOTIS 를 선택합니다 설치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#r-mtask-20-설치하기"
	},
	"3632": {
		"product": "CM-200",
		"header1": "초급 사용자",
		"header2": "모션파일 다운로드",
		"header3": "",
		"content": "로봇을 움직이는데 필요한 모션 파일을 다운로드합니다 Smart 앱을 실행합니다 작동하고자 하는 예제의 그림을 길게 터치합니다 스마트3 앱에서는 예제그림 하단의 편집 버튼을 선택합니다 세부 메뉴 창에서 받고자 하는 모션 파일을 선택하면 자동으로 Motion 앱이 실행됩니다 제어기의 전원을 켜고 화면 왼쪽 아래에 있는 연결 버튼을 터치하면 연결할 수 있는 장치의 목록이 나타납니다 목록에서 로봇에 연결된 블루투스 BT 210 을 선택하고 연결하기 를 터치합니다 스마트기기와 블루투스가 연결되어 있지 않으면 장치 선택 창 이 열리므로 블루투스를 선택하여 연결하면 됩니다 창이 사라지면 모션 다운로드 탭을 선택하고 모션그룹 다운로드 버튼을 터치합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#모션파일-다운로드"
	},
	"3633": {
		"product": "CM-200",
		"header1": "관리하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#관리하기"
	},
	"3634": {
		"product": "CM-200",
		"header1": "관리하기",
		"header2": "펌웨어 복구",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#펌웨어-복구"
	},
	"3635": {
		"product": "CM-200",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#참고자료"
	},
	"3636": {
		"product": "CM-200",
		"header1": "참고자료",
		"header2": "호환성",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#호환성"
	},
	"3637": {
		"product": "CM-200",
		"header1": "참고자료",
		"header2": "호환성",
		"header3": "호환되는 소프트웨어",
		"content": "로보플러스 로보플러스 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#호환성"
	},
	"3638": {
		"product": "CM-200",
		"header1": "참고자료",
		"header2": "호환성",
		"header3": "호환되는 장치",
		"content": "LN 101 다운로더 IRSS 10 적외선 센서 TS 10 터치 센서 CS 10 컬러 센서 MGSS 10 자석 센서 PIR 10 동작 센서 TPS 10 온도 센서 TMS 10 온습도 센서 CDS 10 조도 센서 SM 10 서보모터 GM 10A 감속모터 저속 감속모터 LM 10 LED 모듈 ZIG 110A BT 110A BT 210 BT 410 LBS 040 리튬이온 배터리 ABB 030 배터리 박스 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#호환성"
	},
	"3639": {
		"product": "CM-200",
		"header1": "참고자료",
		"header2": "호환성",
		"header3": "적용된 교육키트",
		"content": "로보티즈 스마트 로보티즈 스마트 II 로보티즈 스마트 III ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-200/#호환성"
	},
	"3640": {
		"product": "CM-5",
		"header1": "부품 사진",
		"header2": "",
		"header3": "",
		"content": "CM CM 제어기는 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#부품-사진"
	},
	"3641": {
		"product": "CM-5",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 125 95g 배터리 제외 컨트롤러 ATMega128 동작 전압 허용 범위 7V 12V 권장 전압 11 1V Li PO 3cell 소모 전류량 IDLE 시 50mA 전체 최대 전류 5A Fuse 동작 온도 70 외부 장치 AX MX Series Dynamixel 커넥터 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#주요-사양"
	},
	"3642": {
		"product": "CM-5",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "전원 스위치 전원을 연결하기 위한 스위치 입니다 전원잭 전원 공급기 SMPS 의 전원잭을 연결하는 소켓입니다 시작 버튼 모드 선택을 위한 버튼입니다 모드 버튼 CM 의 동작 모드를 변경하기 위한 버튼입니다 시리얼 케이블 연결잭 시리얼 케이블로 CM 510 과 PC 의 시리얼 포트를 연결하는 포트입니다 태스크 코드 다운로드 또는 PC와의 통신용으로 사용됩니다 버튼 프로그램 동작 중 입력 수단으로 사용할 수 있도록 할당된 버튼입니다 이 버튼들로 로봇에게 명령을 내릴 수 있습니다 모드 표시 LED 현재 CM 5의 동작 모드를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 MANAGE 다이나믹셀 관리모드가 실행 중임을 나타냅니다 RoboPlus Manager를 이용하여 CM AX MX Dynamixel 의 동작을 설정하거나 테스트하기 위해 사용합니다 RoboPlus Manager 와 CM 5가 연결 되었을때 자동으로 실행됩니다 PROGRAM 모션 편집 모드가 실행 중임을 나타냅니다 RoboPlus Motion 을 이용하여 모션을 편집할 떄 사용합니다 RoboPlus Motion 과 CM 5가 연결 되었을 때 자동으로 실행 됩니다 PLAY 태스크 코드 모드가 실행 중임을 나타냅니다 RoboPlus Task 를 이용하여 작성한 코드를 CM 5에 다운로드 한 뒤에 사용합니다 PLAY LED가 깜빡거릴때 사용자가 직접 START 버튼을 눌러서 실행시켜야 합니다 상태 표시 LED 현재 CM 의 상태를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 POWER 전원이 ON 이면 켜지고 충전 중이면 깜빡입니다 TXD CM 가 외부로 데이터를 송신하는 동안 켜집니다 RXD CM 가 외부로부터 데이터를 수신하는 동안 켜집니다 AUX 사용자가 프로그램에서 사용할 수 있도록 할달된 LED입니다 태스크 코드를 이용하여 켜거나 끌 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#각-부-명칭"
	},
	"3643": {
		"product": "CM-5",
		"header1": "전원 연결",
		"header2": "",
		"header3": "",
		"content": "CM 에는 충전지가 내장되어 있습니다 충전지가 충전되어 있을 경우 전원 스위치를 ON 으로 설정하면 전원이 켜집니다 충전지를 사용하지 않고 외부 전원을 연결하고자 할 경우 전원잭에 전원 공급기인 SMPS 를 꽂고 전원 스위치를 ON 으로 설정하면 전원이 켜집니다 전원이 켜지면 Power LED 가 점등되며 모드 표시 LED 중 하나가 깜빡입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#전원-연결"
	},
	"3644": {
		"product": "CM-5",
		"header1": "작동 방법",
		"header2": "",
		"header3": "",
		"content": "전원 켜기 전원 스위치를 OFF에서 ON으로 변경하시면 전원이 켜집니다 만약 전원 스위치를 ON으로 연결했을경우에도 전원이 켜지지 않는다면 내부 배터리가 방전되었을 수 있습니다 충전하기 를 참조하여 충전을 하시거나 전원공급기 SMPS 를 이용하여 전원을 연결하시기 바랍니다 시작 로봇을 동작시키기 위해서는 모드 버튼 을 이용하여 PLAY로 이동시킵니다 LED가 PLAY에 깜빡이고 있을때 시작 START 버튼을 눌러 실행을 시킵니다 시작 START 버튼을 누르면 PLAY의 LED가 더 이상 깜빡이지 않고 계속 LED가 켜져 있는 상태가 되야 올바로 실행 되고 있는 상태입니다 종료 실행되고 있는 동작을 중단하고 싶을 경우 모드 MODE 버튼을 눌러서 다시 대기 모드 상태로 만들거나 전원 스위치로 전원을 OFF 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#작동-방법"
	},
	"3645": {
		"product": "CM-5",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "CM 5를 구 버전의 행동제어 프로그래머 대신 RoboPlus에서 사용하기 위해서는 펌웨어를 업데이트 해야합니다 펌웨어를 업데이트 하는 방법은 RoboPlus Manager에서 펌웨어 업데이트하기 를 참조하십시오 다이나믹셀과 주변 장치를 제어하기 위해 사용되는 제어기로 다이나믹셀 AX MX Series 등 을 연결할 수 있습니다 RoboPlus Motion 을 통해 특정 모션을 편집 저장할 수 있습니다 저장된 Motion mtn파일 은 RoboPlus Task 를 통해 필요할 때 언제든 실행할 수 있으며 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 RoboPlus Motion RoboPlus Task RoboPlus Manager ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#활용-방법"
	},
	"3646": {
		"product": "CM-5",
		"header1": "PC 연결",
		"header2": "",
		"header3": "",
		"content": "PC 와 통신하기 위해서는 시리얼 케이블로 CM 의 시리얼 케이블 연결잭 과 PC 의 시리얼 포트를 연결해야 합니다 시리얼 포트가 없는 노트북에서 바이올로이드를 사용하고자 할 경우에는 본사에서 별도 판매하고 있는 USB2Dynamixel 을 이용하시면 USB 포트로도 통신할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#pc-연결"
	},
	"3647": {
		"product": "CM-5",
		"header1": "무선 통신 모듈 연결",
		"header2": "",
		"header3": "",
		"content": "CM 5에는 ZIG 100 무선 통신 모듈을 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#무선-통신-모듈-연결"
	},
	"3648": {
		"product": "CM-5",
		"header1": "충전 하기",
		"header2": "",
		"header3": "",
		"content": "로봇을 SMPS 를 연결하지 않고 동작시키기 위해서는 배터리를 사용해야 합니다 배터리가 방전되었을 경우에는 아래 순서에 따라 충전하여 사용하십시오 CM 에 SMPS 를 연결합니다 CM 의 전원스위치를 켜고 CM 의 버튼을 누릅니다 CM 가 충전 중일 때는 전원 LED 가 깜빡거립니다 전원 LED 가 깜빡거리는 속도는 충전이 얼마나 남았는지 확인하는 지표입니다 충전이 다 되어 갈수록 LED 의 깜빡거리는 속도는 점점 빨라집니다 충전이 다 되면 약 2초에 한 번씩만 깜빡입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#충전-하기"
	},
	"3649": {
		"product": "CM-5",
		"header1": "퓨즈 교체하기",
		"header2": "",
		"header3": "",
		"content": "CM 내부에는 과전류가 흘러서 회로가 망가지는 것을 막기 위한 퓨즈 Fuse 가 있습니다 퓨즈가 끊어지면 다음과 같은 증상이 나타납니다 CM 5가 SMPS로만 전원이 켜집니다 충전을 하기 위해 U버튼을 눌러도 LED가 깜박거리지 않습니다 CM 에 사용되는 퓨즈는 일반 전파상에서 쉽게 구할 수 있습니다 퓨즈의 용량 220V 5A ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#퓨즈-교체하기"
	},
	"3650": {
		"product": "CM-5",
		"header1": "관련동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#관련동영상"
	},
	"3651": {
		"product": "CM-5",
		"header1": "관련동영상",
		"header2": "로보플러스 매니저 사용하기(CM-5편)",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#관련동영상"
	},
	"3652": {
		"product": "CM-5",
		"header1": "관련동영상",
		"header2": "배터리 충전하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-5/#관련동영상"
	},
	"3653": {
		"product": "CM-510",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote CM 510 CM 510 제어기는 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#개요"
	},
	"3654": {
		"product": "CM-510",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 51 3g 컨트롤러 ATMega2561 동작 전압 허용 범위 5V 15V 권장 전압 11 1V Li PO 3cell 소모 전류량 IDLE 시 50mA 외부 최대전류 9A 전체 최대 전류 10A Fuse 동작 온도 70 내부 장치 버튼 개 Reset Port 마이크 소리 감지 전압 센서 외부 장치 로보티즈 5핀 포트 AX MX Series Dynamixel 커넥터 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#제품-사양"
	},
	"3655": {
		"product": "CM-510",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "CM 510 각 부 명칭 시리얼 케이블 연결잭 시리얼 케이블로 CM 510 과 PC 의 시리얼 포트를 연결하는 포트입니다 태스크 코드 다운로드 또는 PC와의 통신용으로 사용됩니다 통신장치 연결 포트 ZIG 110 BT 110 적외선 수신기 등의 무선 통신용 모듈이나 기타 외부 보드와의 통신용으로 사용되는 포트입니다 배터리 소켓 배터리를 연결하는 소켓입니다 전원잭 전원 공급기 SMPS 의 전원잭을 연결하는 소켓입니다 전원 LED 전원이 ON 상태이면 켜지고 OFF 상태이면 꺼지는 LED 입니다 전원 스위치 전원을 ON OFF 하기 위해 사용하는 스위치입니다 MODE 버튼 CM 510 의 동작 모드를 변경하기 위한 버튼입니다 아래의 모드 관련 설명을 참고하세요 START 버튼 모드 선택을 위한 버튼입니다 아래의 모드 관련 설명을 참고하세요 버튼 프로그램 동작 중 입력 수단으로 사용할 수 있도록 할당된 버튼입니다 이 버튼들로 로봇에게 명령을 내릴 수 있습니다 AX MX Series 버스 포트 AX MX다이나믹셀을 Daisy chain 으로 연결하기 위한 포트입니다 로보티즈 5핀 포트 DMS 접촉 센서 적외선 센서 등의 주변장치를 연결하기 위한 포트입니다 각 포트의 포트 번호는 II III IIII IIIII IIIIII 과 같이 막대 숫자로 표시되어 있습니다 모드 표시 LED 현재 CM 510 의 동작 모드를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 MANAGE 다이나믹셀 관리모드가 실행 중임을 나타냅니다 RoboPlus Manager를 이용하여 CM 510 AX MX Dynamixel 의 동작을 설정하거나 테스트하기 위해 사용합니다 RoboPlus Manager 와 CM 510가 연결 되었을때 자동으로 실행됩니다 PROGRAM 모션 편집 모드가 실행 중임을 나타냅니다 RoboPlus Motion 을 이용하여 모션을 편집할 떄 사용합니다 RoboPlus Motion 과 CM 510가 연결 되었을 때 자동으로 실행 됩니다 PLAY 태스크 코드 모드가 실행 중임을 나타냅니다 RoboPlus Task 를 이용하여 작성한 코드를 CM 510에 다운로드 한 뒤에 사용합니다 PLAY LED가 깜빡거릴때 사용자가 직접 START 버튼을 눌러서 실행시켜야 합니다 상태 표시 LED 현재 CM 510 의 상태를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 TxD CM 510 이 외부로 데이터를 송신하는 동안 켜집니다 RxD CM 510 이 외부로부터 데이터를 수신하는 동안 켜집니다 AUX 사용자가 프로그램에서 사용할 수 있도록 할당된 LED 입니다 태스크 코드를 이용하여 켜거나 끌 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#각-부-명칭"
	},
	"3656": {
		"product": "CM-510",
		"header1": "전원 연결",
		"header2": "",
		"header3": "",
		"content": "CM 510 에 배터리 소켓에 배터리를 연결하거나 전원 공급기인 SMPS 를 전원잭 소켓에 연결하고 전원 스위치를 ON 으로 설정하면 전원이 인가됩니다 전원이 인가되면 Power LED 가 켜지며 모드 표시 LED 중 하나가 깜빡입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#전원-연결"
	},
	"3657": {
		"product": "CM-510",
		"header1": "작동 방법",
		"header2": "",
		"header3": "",
		"content": "전원 켜기 전원 스위치를 OFF에서 ON으로 변경하시면 전원이 켜집니다 만약 전원 스위치를 ON으로 연결했을경우에도 전원이 켜지지 않는다면 배터리가 방전되었을 수 있습니다 충전하기 를 참조하여 충전을 하시거나 전원공급기 SMPS 를 이용하여 전원을 연결하시기 바랍니다 시작 로봇을 동작시키기 위해서는 모드 버튼을 이용하여 PLAY로 이동시킵니다 LED가 PLAY에 깜빡이고 있을때 시작 START 버튼을 눌러 실행을 시킵니다 시작 START 버튼을 누르면 PLAY의 LED가 더 이상 깜빡이지 않고 계속 LED가 켜져 있는 상태가 되야 올바로 실행 되고 있는 상태입니다 종료 실행되고 있는 동작을 중단하고 싶을 경우 모드 MODE 버튼을 눌러서 다시 대기 모드 상태로 만들거나 전원 스위치로 전원을 OFF 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#작동-방법"
	},
	"3658": {
		"product": "CM-510",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "RoboPlus 다이나믹셀과 주변 장치를 제어하기 위해 사용되는 제어기로 다이나믹셀 AX MX Series 등 과 올로의 각종 부품들 접촉센서 LED모듈 적외선센서 등 을 연결할 수 있습니다 RoboPlus Motion 을 통해 특정 모션을 편집 저장할 수 있습니다 저장된 Motion mtn파일 은 RoboPlus Task 를 통해 필요할 때 언제든 실행할 수 있으며 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 RoboPlus Motion RoboPlus Task RoboPlus Manager 임베디드 CM 510 제어기는 C언어로 제어할 수 있습니다 자세한 사항은 임베디드 부분을 참조하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#활용-방법"
	},
	"3659": {
		"product": "CM-510",
		"header1": "PC 연결",
		"header2": "",
		"header3": "",
		"content": "PC 와 CM 510 이 통신하기 위해서는 다운로드 케이블로 CM 510 의 시리얼 케이블 연결잭과 PC 의 시리얼 포트를 연결해야 합니다 시리얼 포트가 없는 노트북에서 PC 와 통신하고자 할 경우에는 USB2Dynamixel 을 이용하시면 USB 포트를 이용하여 통신할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#pc-연결"
	},
	"3660": {
		"product": "CM-510",
		"header1": "무선 통신 모듈 연결",
		"header2": "",
		"header3": "",
		"content": "CM 510에는 ZIG 110 무선 통신 모듈을 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#무선-통신-모듈-연결"
	},
	"3661": {
		"product": "CM-510",
		"header1": "충전 하기",
		"header2": "",
		"header3": "",
		"content": "로봇 작동 중 배터리 경고음이 울리면 배터리를 충전합니다 충전이 시작되면 충전기의 붉은색 LED가 깜빡입니다 충전이 완료되면 녹색 LED가 켜집니다 배터리 분리 충전기 연결 츙전 ockquote 충전중 붉은색 LED 충전완료 녹색 LED ockquote SMPS 를 로봇에 직접 연결하면 외부 전원으로 로봇을 구동할 수도 있습니다 ockquote 배터리에는 충전용 커넥터와 로봇 작동용 커넥터가 연결되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#충전-하기"
	},
	"3662": {
		"product": "CM-510",
		"header1": "퓨즈 교체하기",
		"header2": "",
		"header3": "",
		"content": "CM 510 CM530 에는 과전류가 흘러서 회로가 망가지는 것을 방지하기 위한 퓨즈 Fuse 가 있습니다 만약 CM 510 CM530 이 배터리로는 전원이 켜지지 않고 SMPS 로만 전원이 켜진다면 퓨즈가 끊어진 것이니 교체해 주어야 합니다 CM 510 CM530 의 퓨즈 사이즈는 아래와 같으며 용량은 125V 5A 10A 사이의 제품을 사용하시면 됩니다 CM 510 CM530 뒷면의 퓨즈 FUSE 를 확인한다 핀셋 등으로 퓨즈를 새 것으로 교체한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#퓨즈-교체하기"
	},
	"3663": {
		"product": "CM-510",
		"header1": "사용자 응용 장치 제작을 위한 핀 정보",
		"header2": "",
		"header3": "",
		"content": "전원 CM 510의 전원 핀 구성은 다음과 같습니다 외부 5핀 포트 CM 510의 외부 포트 핀 구성은 다음과 같습니다 OUT 5V 출력 가능 최대 허용 전류 9A 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND NC 사용하지 않음 통신 장치 연결 포트 통신 장치 연결 포트의 핀 기능은 다음과 같습니다 GND Ground Level 0v Supply Voltage 6V RXD Receive Signal 단자 TXD Transmit Signal 단자 3핀 커넥터 포트 3핀 커넥터 포트의 핀 기능은 다음과 같습니다 자세한 사항은 AX 시리즈 핀 배열 을 참조하십시오 모서리의 각진 부분을 참조하여 방향이 바뀌지 않도록 유의하십시오 GND Ground Level 0v VDD Supply Voltage 베터리 전압과 동일 DATA Data 전송 핀 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#사용자-응용-장치-제작을-위한-핀-정보"
	},
	"3664": {
		"product": "CM-510",
		"header1": "관련 동영상",
		"header2": "",
		"header3": "",
		"content": "로보플러스 매니저 사용하기 CM 510편 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-510/#관련-동영상"
	},
	"3665": {
		"product": "CM-530",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote CM 530 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#개요"
	},
	"3666": {
		"product": "CM-530",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 54g 컨트롤러 STM32F103RE 동작 전압 허용 범위 5V 15V 권장 전압 11 1V Li PO 3cell 소모 전류량 IDLE 시 50mA 외부 최대전류 3A 전체 최대 전류 10A Fuse 동작 온도 70 내부 장치 버튼 개 Reset Port 마이크 소리 감지 전압 센서 외부 장치 로보티즈 5핀 포트 AX MX Series Dynamixel 커넥터 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#제품-사양"
	},
	"3667": {
		"product": "CM-530",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "CM 530 각 부 명칭 mini USB 연결잭 USB 케이블로 CM 530 과 PC 의 USB 포트를 연결하는 포트입니다 태스크 코드 다운로드 또는 PC와의 통신용으로 사용됩니다 통신장치 연결 포트 ZIG 110 BT 110 적외선 수신기 등의 무선 통신용 모듈이나 기타 외부 보드와의 통신용으로 사용되는 포트입니다 배터리 소켓 배터리를 연결하는 소켓입니다 전원잭 전원 공급기 SMPS 의 전원잭을 연결하는 소켓입니다 전원 LED 전원이 ON 상태이면 켜지고 OFF 상태이면 꺼지는 LED 입니다 전원 스위치 전원을 ON OFF 하기 위해 사용하는 스위치입니다 MODE 버튼 CM 530 의 동작 모드를 변경하기 위한 버튼입니다 아래의 모드 관련 설명을 참고하세요 START 버튼 모드 선택을 위한 버튼입니다 아래의 모드 관련 설명을 참고하세요 버튼 프로그램 동작 중 입력 수단으로 사용할 수 있도록 할당된 버튼입니다 이 버튼들로 로봇에게 명령을 내릴 수 있습니다 AX MX Series 버스 포트 AX MX다이나믹셀을 Daisy chain 으로 연결하기 위한 포트입니다 로보티즈 5핀 포트 DMS 접촉 센서 적외선 센서 등의 주변장치를 연결하기 위한 포트입니다 각 포트의 포트 번호는 II III IIII IIIII IIIIII 과 같이 막대 숫자로 표시되어 있습니다 모드 표시 LED 현재 CM 530 의 동작 모드를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 MANAGE 다이나믹셀 관리모드가 실행 중임을 나타냅니다 RoboPlus Manager를 이용하여 CM 530 AX MX Dynamixel 의 동작을 설정하거나 테스트하기 위해 사용합니다 RoboPlus Manager 와 CM 530이 연결 되었을때 자동으로 실행됩니다 PROGRAM 모션 편집 모드가 실행 중임을 나타냅니다 RoboPlus Motion 을 이용하여 모션을 편집할 떄 사용합니다 RoboPlus Motion 과 CM 530이 연결 되었을 때 자동으로 실행 됩니다 PLAY 태스크 코드 모드가 실행 중임을 나타냅니다 RoboPlus Task 를 이용하여 작성한 코드를 CM 530에 다운로드 한 뒤에 사용합니다 PLAY LED가 깜빡거릴때 사용자가 직접 START 버튼을 눌러서 실행시켜야 합니다 상태 표시 LED 현재 CM 530 의 상태를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 TxD CM 530 이 외부로 데이터를 송신하는 동안 켜집니다 RxD CM 530 이 외부로부터 데이터를 수신하는 동안 켜집니다 AUX 사용자가 프로그램에서 사용할 수 있도록 할당된 LED 입니다 태스크 코드를 이용하여 켜거나 끌 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#각-부-명칭"
	},
	"3668": {
		"product": "CM-530",
		"header1": "전원 연결",
		"header2": "",
		"header3": "",
		"content": "CM 530 에 배터리 소켓에 배터리를 연결하거나 전원 공급기인 SMPS 를 전원잭 소켓에 연결하고 전원 스위치를 ON 으로 설정하면 전원이 인가됩니다 전원이 인가되면 Power LED 가 켜지며 모드 표시 LED 중 하나가 깜빡입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#전원-연결"
	},
	"3669": {
		"product": "CM-530",
		"header1": "작동 방법",
		"header2": "",
		"header3": "",
		"content": "전원 켜기 전원 스위치를 OFF에서 ON으로 변경하시면 전원이 켜집니다 만약 전원 스위치를 ON으로 연결했을경우에도 전원이 켜지지 않는다면 배터리가 방전되었을 수 있습니다 충전하기 를 참조하여 충전을 하시거나 전원공급기 SMPS 를 이용하여 전원을 연결하시기 바랍니다 시작 로봇을 동작시키기 위해서는 모드 버튼을 이용하여 PLAY로 이동시킵니다 LED가 PLAY에 깜빡이고 있을때 시작 START 버튼을 눌러 실행을 시킵니다 시작 START 버튼을 누르면 PLAY의 LED가 더 이상 깜빡이지 않고 계속 LED가 켜져 있는 상태가 되야 올바로 실행 되고 있는 상태입니다 종료 실행되고 있는 동작을 중단하고 싶을 경우 모드 MODE 버튼을 눌러서 다시 대기 모드 상태로 만들거나 전원 스위치로 전원을 OFF 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#작동-방법"
	},
	"3670": {
		"product": "CM-530",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "RoboPlus 다이나믹셀과 주변 장치를 제어하기 위해 사용되는 제어기로 다이나믹셀 AX MX Series 등 과 올로의 각종 부품들 접촉센서 LED모듈 적외선센서 등 을 연결할 수 있습니다 RoboPlus Motion 을 통해 특정 모션을 편집 저장할 수 있습니다 저장된 Motion mtn파일 은 RoboPlus Task 를 통해 필요할 때 언제든 실행할 수 있으며 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 RoboPlus Motion RoboPlus Task RoboPlus Manager 임베디드 CM 530 제어기는 C언어로 제어할 수 있습니다 자세한 사항은 임베디드 부분을 참조하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#활용-방법"
	},
	"3671": {
		"product": "CM-530",
		"header1": "PC 연결",
		"header2": "",
		"header3": "",
		"content": "PC 와 CM 530 이 통신하기 위해서는 USB 케이블로 CM 530 의 mini USB 연결잭과 PC 의 USB 포트를 연결해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#pc-연결"
	},
	"3672": {
		"product": "CM-530",
		"header1": "무선 통신 모듈 연결",
		"header2": "",
		"header3": "",
		"content": "CM 530에는 ZIG 110 BT110 무선 통신 모듈을 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#무선-통신-모듈-연결"
	},
	"3673": {
		"product": "CM-530",
		"header1": "충전하기",
		"header2": "",
		"header3": "",
		"content": "로봇 작동 중 배터리 경고음이 울리면 배터리를 충전합니다 충전이 시작되면 충전기의 붉은색 LED가 깜빡입니다 충전이 완료되면 녹색 LED가 켜집니다 배터리 분리 충전기 연결 충전 ockquote 충전중 붉은색 LED 충전완료 녹색 LED ockquote SMPS 를 로봇에 직접 연결하면 외부 전원으로 로봇을 구동할 수도 있습니다 ockquote 배터리에는 충전용 커넥터와 로봇 작동용 커넥터가 연결되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#충전하기"
	},
	"3674": {
		"product": "CM-530",
		"header1": "퓨즈 교체하기",
		"header2": "",
		"header3": "",
		"content": "CM 510 CM530 에는 과전류가 흘러서 회로가 망가지는 것을 방지하기 위한 퓨즈 Fuse 가 있습니다 만약 CM 510 CM530 이 배터리로는 전원이 켜지지 않고 SMPS 로만 전원이 켜진다면 퓨즈가 끊어진 것이니 교체해 주어야 합니다 CM 510 CM530 의 퓨즈 사이즈는 아래와 같으며 용량은 125V 5A 10A 사이의 제품을 사용하시면 됩니다 퓨즈의 교체 방법 CM 510 CM530 뒷면의 퓨즈 FUSE 를 확인한다 핀셋 등으로 퓨즈를 새 것으로 교체한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#퓨즈-교체하기"
	},
	"3675": {
		"product": "CM-530",
		"header1": "사용자 응용 장치 제작을 위한 핀 정보",
		"header2": "",
		"header3": "",
		"content": "전원 CM 530의 전원 핀 구성은 다음과 같습니다 외부 5핀 포트 CM 530의 외부 포트 핀 구성은 다음과 같습니다 OUT1 3V 출력 가능 최대 허용 전류 3A 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND OUT2 3V 출력 가능 최대 허용 전류 3A 통신 장치 연결 포트 통신 장치 연결 포트의 핀 기능은 다음과 같습니다 GND Ground Level 0v Supply Voltage 6V RXD Receive Signal 단자 TXD Transmit Signal 단자 3핀 커넥터 포트 3핀 커넥터 포트의 핀 기능은 다음과 같습니다 자세한 사항은 AX 시리즈 핀 배열 을 참조하십시오 모서리의 각진 부분을 참조하여 방향이 바뀌지 않도록 유의하십시오 GND Ground Level 0v VDD Supply Voltage 베터리 전압과 동일 DATA Data 전송 핀 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#사용자-응용-장치-제작을-위한-핀-정보"
	},
	"3676": {
		"product": "CM-530",
		"header1": "관련 동영상",
		"header2": "",
		"header3": "",
		"content": "로보플러스 매니저 사용하기 CM 530편 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-530/#관련-동영상"
	},
	"3677": {
		"product": "CM-700",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "CM 700 은 CPU TTL RS485 통신회로 ZIG 110 커넥터 등이 포함된 제어 모듈 형태의 제어기입니다 CM 700 보드만으로는 다이나믹셀을 비롯한 주변 장치들을 제어할 수 없으므로 서브 보드가 필요합니다 CM 700 SUB Board 는 전원부 커넥터류 스위치 5핀 주변장치 관련 부가회로 등이 포함되어 있습니다 서브 보드는 사용자의 의도에 따라 커넥터 핀 배열을 참고하여 직접 제작하실 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#개요"
	},
	"3678": {
		"product": "CM-700",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 37 3g 컨트롤러 ATMega2561 동작 전압 허용 범위 7V 35V 권장 전압 상기 전원 인가 부분 내용 참조 소모 전류량 IDLE 시 40mA 외부 최대전류 9A 전체 최대 전류 10A Fuse 동작 온도 70 내부 장치 버튼 개 Reset Start 전압 센서 외부 장치 로보티즈 5핀 포트 TTL 통신을 사용하는 다이나믹셀용 3핀 커넥터 RS 485 통신을 사용하는 다이나믹셀용 4핀 커넥터 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#제품-사양"
	},
	"3679": {
		"product": "CM-700",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "ockquote CM 700 각 부 명칭 시리얼 케이블 amp 통신장치 연결 포트 LN 101 을 통해 CM 700 과 PC를 연결하는 포트입니다 태스크 코드 다운로드 또는 PC와의 통신용으로 사용됩니다 또한 ZIG 110 BT 110 같은 무선 통신용 모듈이나 기타 외부 보드와의 통신용으로 사용되는 포트입니다 배터리 소켓 배터리를 연결하는 소켓입니다 전원 LED 전원이 ON 상태이면 켜지고 OFF 상태이면 꺼지는 LED 입니다 전원 스위치 전원을 ON OFF 하기 위해 사용하는 스위치입니다 MODE 버튼 CM 700 의 동작 모드를 변경하기 위한 버튼입니다 아래의 모드 관련 설명을 참고하세요 START 버튼 모드 선택을 위한 버튼입니다 아래의 모드 관련 설명을 참고하세요 3핀 케이블 커넥터 3핀 케이블 TTL 통신 을 사용하는 다이나믹셀을 Daisy chain 으로 연결하기 위한 포트입니다 4핀 케이블 커넥터 4핀 케이블 RS 485 통신 을 사용하는 다이나믹셀을 Daisy chain 으로 연결하기 위한 포트입니다 로보티즈 5핀 포트 DMS 접촉센서 적외선 센서 등의 주변장치를 연결하기 위한 포트입니다 모드 표시 LED 현재 CM 700 의 동작 모드를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 MON 다이나믹셀 관리모드가 실행 중임을 나타냅니다 RoboPlus Manager를 이용하여 CM 700 다이나믹셀 의 동작을 설정하거나 테스트하기 위해 사용합니다 RoboPlus Manager 와 CM 700가 연결 되었을때 자동으로 실행됩니다 EDIT 모션 편집 모드가 실행 중임을 나타냅니다 RoboPlus Motion 을 이용하여 모션을 편집할 떄 사용합니다 RoboPlus Motion 과 CM 700가 연결 되었을 때 자동으로 실행 됩니다 PLAY 태스크 코드 모드가 실행 중임을 나타냅니다 RoboPlus Task 를 이용하여 작성한 코드를 CM 700에 다운로드 한 뒤에 사용합니다 PLAY LED가 깜빡거릴때 사용자가 직접 START 버튼을 눌러서 실행시켜야 합니다 상태 표시 LED 현재 CM 700 의 상태를 나타내는 LED 입니다 보다 자세한 내용은 아래에 설명이 있습니다 TxD CM 700 이 외부로 데이터를 송신하는 동안 켜집니다 RxD CM 700 이 외부로부터 데이터를 수신하는 동안 켜집니다 AUX 사용자가 프로그램에서 사용할 수 있도록 할당된 LED 입니다 태스크 코드를 이용하여 켜거나 끌 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#각-부-명칭"
	},
	"3680": {
		"product": "CM-700",
		"header1": "전원 연결",
		"header2": "",
		"header3": "",
		"content": "CM 700 은 마이크로 컨트롤러가 포함된 CM 700 과 전원부 및 각종 커넥터 등이 포함된 SUB 보드로 나뉘어집니다 각 보드의 연결에 따라 동작 전압의 범위가 달라질 수 있으므로 아래 내용을 참고하여 배터리를 제작하시면 됩니다 CM 700 자체 제작 SUB 보드 CM 700 에는 레귤레이터가 없기 때문에 자체 제작 SUB 보드에서 CM 700 으로 공급되는 전원은 반드시 5V 여야 합니다 CM 700 동작 전압 CM 700 CM 700 SUB 보드 CM 700 과 CM 700 SUB 보드만을 연결하여 동작할 경우 SUB 보드로 공급되는 전원의 허용 범위는 다음과 같습니다 CM 700 SUB 동작 전압 35 CM 700 CM 700 SUB 보드 Dynamixels 사용 다이나믹셀 Min Voltage Max Voltage Li Po 환산 Ni MH 환산 AX 12A 12 cells 10 cells DX 117 12 18 cells 10 15 cells RX 10 12 cells 10 cells RX 28 12 18 cells 10 15 cells RX 64 12 18 cells 10 15 cells EX 106 12 18 cells 10 15 cells MX Series 10 14 cells 12 cells 두 종류 이상의 다이나믹셀을 혼용할 경우 혼용된 다이나믹셀들이 모두 동작 가능한 전압 구간이 되어야 하므로 최소 전압은 혼용된 다이나믹셀의 스펙 중 가장 높은 최소 전압을 최대 전압은 가장 낮은 최대 전압을 선택하여 해당 범위에 맞게 사용하여야 합니다 예를 들어 AX 12A 와 RX 64 를 혼용할 경우 AX 12A 는 12 이고 RX 64 는 12 18 이므로 동작 가능한 최소 최대 전압은 12V 12V가 됩니다 즉 Li Po 환산 cells 혹은 Ni MH 환산 10 cells 가 됩니다 CM 700 에 배터리 소켓에 배터리를 연결하고 전원 스위치를 ON 으로 설정하면 전원이 인가됩니다 전원이 인가되면 Power LED 가 켜지며 모드 표시 LED 중 하나가 깜빡입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#전원-연결"
	},
	"3681": {
		"product": "CM-700",
		"header1": "작동 방법",
		"header2": "",
		"header3": "",
		"content": "전원 켜기 전원 스위치를 OFF에서 ON으로 변경하시면 전원이 켜집니다 만약 전원 스위치를 ON으로 연결했을경우에도 전원이 켜지지 않는다면 배터리가 방전되었을 수 있습니다 배터리를 충전하시거나 전원공급기 SMPS 를 이용하여 전원을 연결하시기 바랍니다 시작 로봇을 동작시키기 위해서는 모드 버튼을 이용하여 PLAY로 이동시킵니다 LED가 PLAY에 깜빡이고 있을때 시작 START 버튼을 눌러 실행을 시킵니다 시작 START 버튼을 누르면 PLAY의 LED가 더 이상 깜빡이지 않고 계속 LED가 켜져 있는 상태가 되야 올바로 실행 되고 있는 상태입니다 종료 실행되고 있는 동작을 중단하고 싶을 경우 모드 MODE 버튼을 눌러서 다시 대기 모드 상태로 만들거나 전원 스위치로 전원을 OFF 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#작동-방법"
	},
	"3682": {
		"product": "CM-700",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "RoboPlus 다이나믹셀과 주변 장치를 제어하기 위해 사용되는 제어기로 다이나믹셀 AX Series MX Series DX Series RX Series EX Series 등 과 올로의 각종 부품들 접촉센서 LED모듈 적외선 센서 등 을 연결할 수 있습니다 RoboPlus Motion 을 통해 특정 모션을 편집 저장할 수 있습니다 저장된 Motion mtn파일 은 RoboPlus Task 를 통해 필요할 때 언제든 실행할 수 있으며 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 RoboPlus Motion RoboPlus Task RoboPlus Manager 임베디드 CM 700 제어기는 C언어로 제어할 수 있습니다 자세한 사항은 임베디드 부분을 참조하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#활용-방법"
	},
	"3683": {
		"product": "CM-700",
		"header1": "PC 연결",
		"header2": "",
		"header3": "",
		"content": "PC 와 CM 700 이 통신하기 위해서는 LN 101 과 CM 700 포트를 연결해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#pc-연결"
	},
	"3684": {
		"product": "CM-700",
		"header1": "무선 통신 모듈 연결",
		"header2": "",
		"header3": "",
		"content": "CM 700에는 ZIG 110 BT110 무선 통신 모듈을 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#무선-통신-모듈-연결"
	},
	"3685": {
		"product": "CM-700",
		"header1": "퓨즈 교체하기",
		"header2": "",
		"header3": "",
		"content": "CM 700 에는 과전류가 흘러서 회로가 망가지는 것을 방지하기위한 퓨즈 Fuse 가 있습니다 만약 CM 700 이 켜지지 않는다면 퓨즈가 끊어진 것일 수 있으니 퓨즈를 교체해 보시기 바랍니다 CM 700 의 퓨즈 사이즈는 아래와 같으며 용량은 125V 5A 10A 사이의 제품을 사용하시면 됩니다 CM 510 퓨즈와 동일 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#퓨즈-교체하기"
	},
	"3686": {
		"product": "CM-700",
		"header1": "서브보드 연결 커넥터 정보",
		"header2": "",
		"header3": "",
		"content": "CM 700 과 SUB 보드를 연결하는 커넥터의 핀 배열은 아래와 같습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#서브보드-연결-커넥터-정보"
	},
	"3687": {
		"product": "CM-700",
		"header1": "사용자 응용 장치 제작을 위한 핀 정보",
		"header2": "",
		"header3": "",
		"content": "전원 CM 700의 전원 핀 구성은 다음과 같습니다 외부 5핀 포트 5핀 주변 장치 연결 포트에는 간단히 제어가 가능한 센서를 사용자가 제작하여 연결할 수 있습니다 그러나 잘못된 회로를 구성하여 연결할 경우 제어기 회로가 손상될 수 있으므로 회로에 대한 지식을 먼저 습득하시기 바랍니다 5핀으로 된 주변 장치 연결 포트의 핀 구성은 아래와 같습니다 OUT 5V 출력 가능 최대 허용 전류 9A 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND NC 사용하지 않음 다음과 같은 LED 회로를 구성한다면 1번 핀을 제어하여 LED를 껐다 켤 수 있는 장치를 만들 수 있습니다 제어기종류 및 LED의 종류에 따라 저항의 크기를 조정해야 합니다 RoboPlus Task에서 사용자 장치 OUT 포트에 High신호를 주는 방법은 다음과 같습니다 먼저 로드 계산 등의 쓰기 가능 파라미터에 사용자 장치를 선택하고 장치가 연결된 포트를 설정합니다 이 후 읽기 가능 파라미터에 포트 값 상수를 이용하여 High신호를 설정합니다 위와 같은 코드가 실행되면 PORT3에 연결된 장치의 OUT 포트에 신호가 발생하게 되며 연결된 LED가 켜집니다 통신 장치 연결 포트 통신 장치 연결 포트의 핀 기능은 다음과 같습니다 TXD Transmit Signal 단자 RXD Receive Signal 단자 Supply Voltage 6V GND Ground Level 0v 3핀 커넥터 포트 3핀 커넥터 포트의 핀 기능은 다음과 같습니다 자세한 사항은 AX 시리즈 핀 배열 을 참조하십시오 모서리의 각진 부분을 참조하여 방향이 바뀌지 않도록 유의하십시오 GND Ground Level 0v VDD Supply Voltage 베터리 전압과 동일 DATA Data 전송 핀 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 4핀 커넥터 포트 4핀 커넥터 포트의 핀 기능은 다음과 같습니다 자세한 사항은 RX 시리즈 핀 배열 을 참조하십시오 DX EX시리즈의 4핀과 호환됩니다 모서리의 각진 부분을 참조하여 방향이 바뀌지 않도록 유의하십시오 GND Ground Level 0v VDD Supply Voltage 베터리 전압과 동일 DATA Data 전송 핀 DATA Data 전송 핀 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#사용자-응용-장치-제작을-위한-핀-정보"
	},
	"3688": {
		"product": "CM-700",
		"header1": "관련 동영상",
		"header2": "",
		"header3": "",
		"content": "로보플러스 매니저 사용하기 CM 700편 제어기 퓨즈 교체하기 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-700/#관련-동영상"
	},
	"3689": {
		"product": "CM-900",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "CM 900은 32bit ARM Cortex M3가 장착되어있으며 회로도 및 소스코드가 공개된 로봇용 임베디드 보드입니다 TTL RS 485 커넥터를 통해 로보티즈의 모든 다이나믹셀 시리즈가 지원되며 블루투스 지그비 포트 또한 지원됩니다 주의 CM 900 은 현재 단종되어 더 이상 판매되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-900/#개요"
	},
	"3690": {
		"product": "CM-900",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 CPU STM32F103C8 ARM Cortex M3 Operation Voltage 5V 24V USB 5V 12V XL Series 4V GPIO 32 Timer 16bit Analog ADC 10 12bit Flash 64 Kbytes SRAM 20 Kbytes Clock 72Mhz USB FullSpeed CAN USART SPI I2C TWI Debug JTAG amp SWD DMA 7ch Pin TTL Pin RS485 Pin XL Serise Dimension 60mm 54 mm mm USB전원으로는 다이나믹셀을 구동할 수 없습니다 별도의 전원을 공급해주세요 CM 900은 한군데이상만 전원이 공급되면 동작합니다 별도의 전원공급시 연결되는 주변장치의 동작전압을 확인해주세요 다이나믹셀이나 XL Series의 경우 입력된 전압이 그대로 공급됩니다 다이나믹셀과 XL Series는 동작전압차이가 있어 함께 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-900/#주요-사양"
	},
	"3691": {
		"product": "CM-900",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "ockquote CM 900 각 부 명칭 Micro USB CM 900을 다운로드 또는 PC와 같은 외부 장치와 USB 통신을 수행하며 동시에 5V 전원이 공급됩니다 제공된 USB 케이블 또는 가지고 있는 일반 안드로이드 디바이스의 Micro USB 케이블을 대용해서 사용할 수 있습니다 Reset SW CM 900 CPU의 리셋을 수행합니다 BT 110 ZIG 110 4PIN BT 110 BT 210 ZIG 110 LN 101 등과 같은 4핀 케이블을 연결해서 외부 장치와 시리얼 UART 통신을 수행합니다 단 LN 101은 펌웨어 다운로드가 아닌 오직 PC와 시리얼 통신만 수행합니다 2mm 54 mm 만능기판 CM 900의 양쪽 좌우로 각각 2mm 54mm Pitch의 만능기판이 장착되어 있어서 편리하게 사용자 응용 회로를 납땜 연결할 수 있습니다 mm GPIO Header CM 900의 CPU인 STM32F103C8의 모든 Pin들이 외부로 인터페이스 되어 있어서 자유롭게 활용 가능합니다 TTL PIN 3핀 케이블 TTL 통신 을 사용하는 다이나믹셀을 Daisy chain으로 연결하기 위한 포트 입니다 RS485 PIN 4핀 케이블 RS 485 통신 을 사용하는 다이나믹셀을 Daisy chain 으로 연결하기 위한 포트입니다 전원 LED 전원이 ON 상태이면 켜지고 OFF 상태이면 꺼지는 LED 입니다 Status LED CM 900에서 프로그래밍 확인을 위한 테스트 LED입니다 D16번 PIN을 통해HIGH LOW를 주면 LED가 꺼지거나 켜집니다 배터리 소켓 배터리를 연결하는 소켓입니다 DC SMPS 12V SMPS를 연결하는 소켓입니다 XL Series PIN 최신 다이나믹셀 시리즈의 TTL 3핀 커넥터 입니다 JTAG SWD 10 PIN JTAG SWD 단자를 통해 IAR Keil등의 다른 상용개발프로그램을 이용할 수 있습니다 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-900/#각-부-명칭"
	},
	"3692": {
		"product": "CM-900",
		"header1": "CM-900 USB 드라이버 설치(Windows용)",
		"header2": "",
		"header3": "",
		"content": "Linux Mac OS X는 드라이버를 설치할 필요가 없습니다 Windows 8은 시작설정 드라이버 서명 적용 사용 안 함 으로 재부팅하신 후 설치 진행해주세요 CM 900을 Micro USB cable을 통해 PC와 연결하여 USB 드라이버 소트으웨어 설치 준비 ROBOTIS divers 디렉토리를 선택 이 드라이버 소프트웨어를 설치합니다 를 선택 COM포트가 몇 번인지 확인 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-900/#cm-900-usb-드라이버-설치windows용"
	},
	"3693": {
		"product": "CM-900",
		"header1": "소프트웨어 사용법",
		"header2": "",
		"header3": "",
		"content": "CM 900 과 제공된 USB 케이블을 통해 PC와 연결 ROBOTIS ROBOTIS CM exe 실행 ROBOTIS CM SW 시리얼 포트 설정에서 CM 900이 연결된 COM포트를 선택 장치관리자 참조 CM 900 버전에 맞게 선택 간편하게 예제 접근 아래의 2개 버튼 중에 하나를 선택 확인 버튼은 컴파일만 수행 다운로드 버튼은 컴파일후 다운로드 수행 Windows XP 에서 다운로드 에러 Board responding 발생시 USB Host Controller Driver를 업데이트 하시기 바랍니다 아래와 같이 드라이버 버젼이 낮은경우 문제가 발생할 수 있습니다 시리얼 모니터를 통해 USB 데이터를 바로 확인 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-900/#소프트웨어-사용법"
	},
	"3694": {
		"product": "CM-900",
		"header1": "CM-900 소프트웨어 다운로드",
		"header2": "",
		"header3": "",
		"content": "CM 900은 ROBOTIS CM 개발 환경을 이용해 쉽고 편리한 개발을 할 수 있습니다 사용 중인 OS에 따라 아래의 링크를 통해 다운로드 받을 수 있습니다 Download Windows XP Vista ROBOTIS CM9 v1 windows zip Download Mac OS Tested OS 10 ROBOTIS CM9 v1 macosx dmg Download Linux 64bit Tested Ubuntu 12 04 ROBOTIS CM9 v1 linux64 tar gz Download Linux 32bit Tested Ubuntu 10 10 ROBOTIS CM9 v1 linux32 tar gz ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/cm-900/#cm-900-소프트웨어-다운로드"
	},
	"3695": {
		"product": "제어기 호환표",
		"header1": "다이나믹셀을 지원하는 통신속도",
		"header2": "",
		"header3": "",
		"content": "통신속도 bps CM CM 510 CM 530 CM 700 CM 900 OpenCM9 04 OpenCR 9600 57600 115200 1M 2M 3M 4M 5M ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/controller_compatibility/"
	},
	"3696": {
		"product": "제어기 호환표",
		"header1": "호환표",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/controller_compatibility/"
	},
	"3697": {
		"product": "제어기 호환표",
		"header1": "호환표",
		"header2": "다이나믹셀",
		"header3": "",
		"content": "모델 CM 100 CM 150 CM 200 CM CM 510 CM 530 CM 700 CM 900 OpenCM9 04 485 EXP OpenCM7 OpenCR AX Series DX Series RX Series EX Series MX Series TTL MX Series RS485 XM Series XH Series XL 320 PRO Series ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/controller_compatibility/"
	},
	"3698": {
		"product": "제어기 호환표",
		"header1": "호환표",
		"header2": "부품",
		"header3": "",
		"content": "모델 CM 100 CM 150 CM 200 CM CM 510 CM 530 CM 700 CM 900 OpenCM9 04 485 EXP OpenCM7 OpenCR Bioloid Serial Cable Mini USB Micro USB LN 101 IRSS 10 TS 10 DMS 80 IR 어레이 GS 12 CS 10 MGSS 10 PIR 10 TPS 10 TMS 10 AX S1 SM 10 GM 10A 고속 감속모터 저속 감속모터 LM 10 IR 수신기 ZIG 100 ZIG 110A BT 110A BT 210 BT 410 LBS 040 11 1V LiPo 6V NiMH OBB 10A ABB 030 LFU 10 FU 사용자 장치 OpenCM9 04의 IR 수신기는 Task에서 지원하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/controller_compatibility/"
	},
	"3699": {
		"product": "제어기 호환표",
		"header1": "호환표",
		"header2": "소프트웨어",
		"header3": "",
		"content": "모델 CM 100 CM 150 CM 200 CM CM 510 CM 530 CM 700 CM 900 OpenCM9 04 485 EXP OpenCM7 OpenCR OpenCM IDE 아두이노 IDE 스크래치2 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/controller_compatibility/"
	},
	"3700": {
		"product": "OpenCM 485 EXP",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#개요"
	},
	"3701": {
		"product": "OpenCM 485 EXP",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "입력전압 30V Power SMPS LiPo PRO 24V 전원 스위치 다이나믹셀 포트 4Pin 3Pin 버튼 LED 크기 68 mm 66 mm 무게 32g ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#주요-사양"
	},
	"3702": {
		"product": "OpenCM 485 EXP",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "SMPS DC Adapter SMPS DC Adapter를 연결해 OpenCM 485 확장보드 보드에 전원을 인가합니다 Pro Power 다이나믹셀 프로와 동일한 24V 전원 커넥터로 전원을 인가합니다 Li Po battery 11 1V Li Po battery LBS 10 를 사용하는 커넥터 입니다 Dynamixel TTL PIN 3핀 케이블 Dynamixel TTL Bus 을 사용하는 다이나믹셀을 Daisy chain으로 연결하기 위한 포트 입니다 User Button 사용자가 제어 할 수 있는 스위치 입니다 User LED 사용자가 제어 할 수있는 LED 입니다 header OpenCM9 04와 연결하 기 위한 헤더 입니다 54mm pitch Dynamixel 485 PIN 4핀 케이블 Dynamixel 485 Bus 을 사용하는 다이나믹셀을 Daisy chain으로 연결하기 위한 포트 입니다 Power Switch 보드와 다이나믹셀 전원을 off하는 스위치 입니다 단 USB 연결시 보드 전원은 off되지 않습니다 JP1 Jumper OpenCM 485 EXP 보드에 입력된 전압을 OpenCM9 04에도 전압을 입력할지 결정하는 점퍼 입니다 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#각-부-명칭"
	},
	"3703": {
		"product": "OpenCM 485 EXP",
		"header1": "OpenCM9.04와 연결하기",
		"header2": "",
		"header3": "",
		"content": "OpenCM 485 확장보드 와 OpenCM9 04를 준비합니다 OpenCM9 04는 타입에 관계없이 사용가능하고 헤더를 납땜해주세요 OpenCM 485 확장보드 와 OpenCM9 04를 아래의 그림과 같이 연결 합니다 주의 방향을 위와 같이 연결 해주시기 바랍니다 OpenCM9 04에 USB Cable를 연결 합니다 다이나믹셀과 SMPS를 연결 합니다 참고 다이나믹셀 펌웨어 업데이트 및 복구시 OpenCM9 04와 OpenCM 485 확장보드를 반드시 분리해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#opencm904와-연결하기"
	},
	"3704": {
		"product": "OpenCM 485 EXP",
		"header1": "전원 연결 회로",
		"header2": "",
		"header3": "",
		"content": "OpenCM 485 확장보드 와 OpenCM9 04 연결시 전원 블록 다이어그램 OpenCM 485 확장보드는 기본적으로 OpenCM9 04 5V 전원 공급을 하며 JP1은 아래 OpeCM 485 확장보드에서 VDD전원을 OpenCM9 04로 공급할 것인지 결정합니다 ockquote OpenCM 485 EXP 전원 연결도 OpenCM 485 확장보드의 TTL 485 버스는 OpenCM9 04의 USART3 Serial3 을 통해서 다이나믹셀 버스가 구성됩니다 참고 OpenCM9 04의 다이나믹셀 TTL BUS는 USART1 Serial1 과 연결되어 있습니다 ockquote OpenCM9 04 amp OpenCM 485 확장보드 버스 연결도 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#전원-연결-회로"
	},
	"3705": {
		"product": "OpenCM 485 EXP",
		"header1": "OpenCM 485 확장보드 프로그래밍",
		"header2": "",
		"header3": "",
		"content": "Support robotis com 소프트웨어 도움말 ROBORIS OpenCM 반드시 이 후 버전을 사용하셔야 합니다 다운받은 OpenCM IDE 압축을 풀고 ROBOTIS OpenCM exe를 실행 합니다 OpenCM 485 확장보드의 485 Bus는 OpenCM9 04에서 Serial3 USART3 를 통해서 패킷을 주고 받습니다 반드시 Dynamixel 클래스 변수 선언시 3으로 초기화 해야 합니다 Dynamixel Dxl Dynamixel Serial3 USART3 OpenCM 485 확장보드에 있는 USART3을 사용 하려면 3으로 써야 합니다 void setup Dxl begin 1Mbps void loop Dxl writeWord 30 Dxl writeWord 30 delay 1000 Dxl writeWord 30 1023 Dxl writeWord 30 4095 delay 1000 아래의 다운로드 버튼을 눌러서 프로그램을 다운로드 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#opencm-485-확장보드-프로그래밍"
	},
	"3706": {
		"product": "OpenCM 485 EXP",
		"header1": "버튼 및 LED 활용",
		"header2": "",
		"header3": "",
		"content": "OpenCM 485 확장보드에는 OpenCM9 04의 IO핀과 연결된 버튼 2개와 LED 3개가 제공됩니다 각 버튼 및 LED와 연결된 OpenCM9 04의 IO 핀번호는 아래의 표에서 확인할 수 있습니다 OpenCM9 04 Button1 16 Button2 17 LED1 18 LED2 19 LED3 20 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#버튼-및-led-활용"
	},
	"3707": {
		"product": "OpenCM 485 EXP",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "다운로드 SCHEMATIC OpenCM 485 EXP pdf ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm485exp/#다운로드"
	},
	"3708": {
		"product": "OpenCM 7.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote OpenCM IoT키트에서 사용되는 제어기로 스마트의 각종 부품들 감속모터 서보모터 접촉센서 LED모듈 적외선센서 등 을 연결할 수 있습니다 RoboPlus Task2 또는 Task2 41 이상 버전 를 통해 제어용 태스크 코드를 작성하여 각 부품들의 동작을 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#개요"
	},
	"3709": {
		"product": "OpenCM 7.0",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 세부 사양 무게 10g 컨트롤러 STM32L151C8 크기 66mm 27mm 9mm 동작 전압 6V 2V 권장전압 0V 건전지 또는 리튬이온 배터리 소비 전류 대기 상태 20mA 실행 상태 90mA 최대 한계 300mA 동작 온도 70 내부 O장치 마이크 소리 감지용 버저 Buzzer LED 사용자 입력버튼 외부 장치 4핀 통신 포트 무선 조종 및 다운로드용 모터 연결 포트 감속 모터용 다목적 포트 센서 및 출력용 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#주요-사양"
	},
	"3710": {
		"product": "OpenCM 7.0",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "시작 버튼 짧게 버튼을 눌러 켜면 시작 버튼 하단의 빨간색 전원 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 4핀 포트 통신용 시작 버튼 옆에 위치해 있으며 USB 다운로더 LN 101 ZIG 110A BT 110A BT 210 BT 410 등을 연결할 수 있습니다 감속모터 포트 각 포트 번호는 와 같이 숫자로 표시되어 있으며 감속모터를 연결하는 2핀으로 된 포트입니다 제어기 보드상의 흰 선으로 2핀 케이블의 방향이 표기되어 있습니다 로보티즈 5핀 포트 각 포트 번호는 와 같이 숫자로 표시되어 있으며 적외선 센서와 접촉센서 서보모터 LED 모듈 등을 연결할 수 있는 5핀으로 된 포트입니다 제어기 보드상의 흰 선으로 5핀 케이블의 방향이 표기되어 있습니다 POWER LED 빨간색 전원이 켜지면 POWER LED가 켜지고 전원이 꺼지면 꺼집니다 LED RED GREEN BLUE 사용자가 ON OFF를 제어할 수 있는 LED 입니다 버저 소리를 냅니다 마이크 소리를 감지합니다 사용자 버튼 버튼이 눌리는지 감지합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#각-부-명칭"
	},
	"3711": {
		"product": "OpenCM 7.0",
		"header1": "전원 연결",
		"header2": "",
		"header3": "",
		"content": "OpenCM7 은 배터리 건전지 리튬이온배터리 또는 USB를 통해서 전원을 공급 받을 수 있습니다 2핀 포트 5핀 포트에 연결되는 감속모터 서보모터 적외선 센서 등등 모듈에 공급되는 전원은 2핀 배터리 포트를 통해서만 공급될 수 있습니다 2핀 전원포트에는 ABB 030 건전지x2 박스 1개 또는 LBS 040 리튬이온 배터리 한개를 연결할 수 있습니다 CPU및 부저 마이크 LED 등 내부장치들에 공급되는 전원은 2핀 배터리 또는 USB를 통해서 공급될 수 있습니다 전압의 범위는 6V 2V 이고 권장전압은 0V 입니다 전원 포트의 간단한 회로 구성은 다음과 같습니다 부분에 전지의 극을 부분에 전지의 극을 연결하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#전원-연결"
	},
	"3712": {
		"product": "OpenCM 7.0",
		"header1": "작동 방법",
		"header2": "",
		"header3": "",
		"content": "시작 버튼을 짧게 눌러 켜면 시작 버튼 좌측의 빨간색 전원 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다 처음 시작 시 연속으로 버튼을 누른 횟수에 따라 시작 버튼 눌림 횟수 가 증가합니다 따라서 이 파라미터를 사용하여 프로그래밍 하면 OpenCM7 0을 작동시킬 때 시작 버튼을 누르는 횟수에 따라 각각 다른 행동을 하도록 할 수 있습니다 시작 버튼을 1초 이상 눌러 켜면 삐삐 2회 소리가 나고 빨간색 전원LED 에 불이 켜지며 제어기가 켜지고 다운로드 된 프로그램이 실행되지 않는 manage 모드에 진입합니다 시작 버튼을 5초 이상 눌러 켜면 삐삐삐 3회 소리가 나고 펌웨어 복구 모드로 진입합니다 제어기가 켜진 상태에서 다시 시작 버튼을 누르면 제어기가 꺼집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#작동-방법"
	},
	"3713": {
		"product": "OpenCM 7.0",
		"header1": "무선 통신 모듈 연결하기",
		"header2": "",
		"header3": "",
		"content": "OpenCM7 에는 BT 410 BT 210 BT 110 ZIG 110A 무선 통신 모듈을 연결할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#무선-통신-모듈-연결하기"
	},
	"3714": {
		"product": "OpenCM 7.0",
		"header1": "스마트폰 연결",
		"header2": "",
		"header3": "",
		"content": "Google Play 에서 Task2를 설치해 주세요 OpenCM7 0을 스마트폰과 연결하기 위해서는 BT 110A BT 210 또는 BT 410이 필요합니다 ockquote 스마트폰과 OpenCM7 제어기 연결 그림 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#스마트폰-연결"
	},
	"3715": {
		"product": "OpenCM 7.0",
		"header1": "PC 연결",
		"header2": "",
		"header3": "",
		"content": "OpenCM7 0을 PC와 연결하기 위해서는 LN 101또는 USB 케이블이 필요합니다 PC와 Micro MINI Cable을 연결한 OpenCM7 제어기 연결 그림 ockquote PC와 LN 101을 연결한 OpenCM7 제어기 연결 그림 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#pc-연결"
	},
	"3716": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "컨트롤 테이블은 제어기 내부에 존재하는 데이터의 집합체입니다 사용자는 컨트롤 테이블의 주소를 이용하여 해당 주소에 저장된 데이터를 읽어오거나 새로운 데이터를 입력할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#컨트롤-테이블"
	},
	"3717": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "영역(EEPROM, RAM)",
		"header3": "",
		"content": "컨트롤 테이블은 2개의 영역으로 구분됩니다 RAM 영역에 위치한 데이터는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM 영역에 위치한 데이터는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#컨트롤-테이블"
	},
	"3718": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "접근 속성(R, RW)",
		"header3": "",
		"content": "컨트롤 테이블의 데이터에는 2개의 접근 속성이 있습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 데이터는 사용자가 임의로 값을 바꿀 수 없기 때문에 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#컨트롤-테이블"
	},
	"3719": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "초기값",
		"header3": "",
		"content": "제어기에 전원이 인가될 때 컨트롤 테이블의 각 데이터는 초기값으로 설정됩니다 사용자가 초기값을 변경하면 새로운 초기값이 적용됩니다 RAM 영역의 초기값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#컨트롤-테이블"
	},
	"3720": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "크기",
		"header3": "",
		"content": "데이터의 크기는 용도에 따라 byte 로 정해져 있습니다 Instruction Packet을 통해 데이터를 변경할 때는 해당 데이터의 크기를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#컨트롤-테이블"
	},
	"3721": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 데이터 설명 접근 속성 초기값 Model Number 모델 번호 420 Version Firmware 펌웨어 버전 정보 ID 제어기 ID 200 Baud Rate 제어기 통신 속도 Return Delay Time 응답 지연 시간 10 Status Return Level 응답 레벨 11 Bootloader Version 부트로더 버전 정보 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#eeprom-영역"
	},
	"3722": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 데이터 설명 접근 속성 초기값 21 Mode Number 동작모드 번호 25 Press Counter 시작버튼 눌림 횟수 26 Button Status 시작버튼 상태 73 128ms Timer Value 128ms 타이머 74 1ms Timer Value 1ms 타이머 76 Power Save Timer Value 자동꺼짐 타이머 값 77 Random Number 무작위 숫자 79 Red LED 빨간색 LED 80 Green LED 초록색 LED 81 Blue LED 파란색 LED 84 Buzzer Index 버저 종류 85 Buzzer Time 버저 울림시간 86 Sound Detected Count 최종 소리 감지 횟수 87 Sound Detecting Count 실시간 소리 감지 횟수 88 Battery Sound Enable 저전압 경고음 설정 97 Input Power Voltage 입력전원 전압 128 Port Servo Mode 3번 포트 서보모터 모드 129 Port Servo Mode 4번 포트 서보모터 모드 130 Port Servo Mode 5번 포트 서보모터 모드 131 Port Servo Mode 6번 포트 서보모터 모드 136 Port Motor Speed 1번모터 회전 속도 138 Port Motor Speed 2번모터 회전 속도 140 Port Motor Speed 3번모터 회전 속도 142 Port Motor Speed 4번모터 회전 속도 144 Port Motor Speed 5번모터 회전 속도 146 Port Motor Speed 6번모터 회전 속도 156 Port Servo Position 3번 서보모터 위치 값 158 Port Servo Position 4번 서보모터 위치 값 160 Port Servo Position 5번 서보모터 위치 값 162 Port Servo Position 6번 서보모터 위치 값 172 Port IR Sensor Value 3번 포트 적외선 센서 값 174 Port IR Sensor Value 4번 포트 적외선 센서 값 176 Port IR Sensor Value 5번 포트 적외선 센서 값 178 Port IR Sensor Value 6번 포트 적외선 센서 값 204 Port Touch Sensor Value 3번 포트 터치 센서 값 205 Port Touch Sensor Value 4번 포트 터치 센서 값 206 Port Touch Sensor Value 5번 포트 터치 센서 값 207 Port Touch Sensor Value 6번 포트 터치 센서 값 212 Port LED Module Value 3번 포트 LED모듈 제어 값 213 Port LED Module Value 4번 포트 LED모듈 제어 값 214 Port LED Module Value 5번 포트 LED모듈 제어 값 215 Port LED Module Value 6번 포트 LED모듈 제어 값 220 Port User Device Value 3번 포트의 사용자 장치 222 Port User Device Value 4번 포트의 사용자 장치 224 Port User Device Value 5번 포트의 사용자 장치 226 Port User Device Value 6번 포트의 사용자 장치 236 Port Temperature Sensor Value 3번 포트 온도 센서 값 237 Port Temperature Sensor Value 4번 포트 온도 센서 값 238 Port Temperature Sensor Value 5번 포트 온도 센서 값 239 Port Temperature Sensor Value 6번 포트 온도 센서 값 244 Port Ultrasonic Sensor Value 3번 포트 초음파 센서 값 245 Port Ultrasonic Sensor Value 4번 포트 초음파 센서 값 246 Port Ultrasonic Sensor Value 5번 포트 초음파 센서 값 247 Port Ultrasonic Sensor Value 6번 포트 초음파 센서 값 252 Port Magnetic Sensor Value 3번 포트 자석 센서 값 253 Port Magnetic Sensor Value 4번 포트 자석 센서 값 254 Port Magnetic Sensor Value 5번 포트 자석 센서 값 255 Port Magnetic Sensor Value 6번 포트 자석 센서 값 260 Port Motion Sensor Value 3번 포트 동작 감지 센서 값 261 Port Motion Sensor Value 4번 포트 동작 감지 센서 값 262 Port Motion Sensor Value 5번 포트 동작 감지 센서 값 263 Port Motion Sensor Value 6번 포트 동작 감지 센서 값 268 Port Color Sensor Value 3번 포트 칼라 센서 값 269 Port Color Sensor Value 4번 포트 칼라 센서 값 270 Port Color Sensor Value 5번 포트 칼라 센서 값 271 Port Color Sensor Value 6번 포트 칼라 센서 값 276 Port Hydro Thermo Sensor Humidity Value 3번 포트 온습도 센서 습도 값 277 Port Hydro Thermo Sensor Humidity Value 4번 포트 온습도 센서 습도 값 278 Port Hydro Thermo Sensor Humidity Value 5번 포트 온습도 센서 습도 값 279 Port Hydro Thermo Sensor Humidity Value 6번 포트 온습도 센서 습도 값 284 Port Hydro Thermo Sensor Temperature Value 3번 포트 온습도 센서 온도 값 285 Port Hydro Thermo Sensor Temperature Value 4번 포트 온습도 센서 온도 값 286 Port Hydro Thermo Sensor Temperature Value 5번 포트 온습도 센서 온도 값 287 Port Hydro Thermo Sensor Temperature Value 6번 포트 온습도 센서 온도 값 292 Port Brightness Sensor Value 3번 포트 조도 센서 값 294 Port Brightness Sensor Value 4번 포트 조도 센서 값 296 Port Brightness Sensor Value 5번 포트 조도 센서 값 298 Port Brightness Sensor Value 6번 포트 조도 센서 값 참고 Manager 0을 통해서 제어기를 연결하면 컨트롤 테이블을 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#ram-영역"
	},
	"3723": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#address-기능-설명"
	},
	"3724": {
		"product": "OpenCM 7.0",
		"header1": "컨트롤 테이블",
		"header2": "Address 기능 설명",
		"header3": "Power Save Timer Value",
		"content": "자동꺼짐 타이머 시간을 설정합니다 기본값은 0이며 이때 외부와의 통신이 없는 경우 타이머에 의해 60분 뒤에 전원이 꺼집니다 255로 설정하는 경우 배터리가 방전될 위험이 있으니 주의하시기 바랍니다 설정값 설정된 타이머 시간 60분 60 60분 61 254 60분 255 무제한 배터리 방전에 주의 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm7/#power-save-timer-value"
	},
	"3725": {
		"product": "OpenCM 9.04",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "OpenCM9 04 Types Package Item OpenCM9 04 Type OpenCM9 04 Type OpenCM9 04 Type Power Switch User Button 2Pin Battery LBS 40 JTAG SWD Micro USB Pin Port Dynamixel TTL BUS Pin 통신 포트 MOLEX 53253 0370 XL 320 호환 MOLEX 22 03 5035 AX 또는 MX 시리즈 호환 MOLEX 53253 0370 XL 320 호환 OpenCM9 04 는 32bit ARM Cortex M3가 장착되어 있으며 회로도 및 소스코드가 공개된 로봇용 임베디드 보드입니다 Type으로는 type이 있습니다 위의 Type사진과 표를 보면 커넥터를 제공 여부에 따라 Type이 달라집니다 Type의 경우 OpenCM9 04 악세서리 세트를 별도 구매하시면 Type에서 제공하는 모든 커넥터 부품들과 USB Cable을 한번에 구입할 수 있습니다 악세서리 구매하기 참고 제어기복구는 현재 OpenCM9 04 타입 다윈미니용제어기 만 지원되고있으며 복구방법은 아래 링크에서 확인가능합니다 OpenCM9 04 Type 펌웨어 복구하기 주의 다이나믹셀 펌웨어 업데이트 및 복구시 OpenCM9 04와 OpenCM 485 확장보드를 반드시 분리해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#개요"
	},
	"3726": {
		"product": "OpenCM 9.04",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 CPU STM32F103CB ARM Cortex M3 동작 전압 5V 16V 입출력 GPIO 26 타이머 16bit 아날로그 입력 ADC 10 12bit 플래시 메모리 128Kb SRAM 20Kb 동작 클럭 72Mhz USB Full Speed Micro Type USART SPI I2C TWI 디버깅 JTAG amp SWD 다이나믹셀 3핀 TTL 버스 크기 27mm 66 5mm 주의 USB전원으로는 다이나믹셀을 구동할 수 없습니다 별도의 전원을 공급해주세요 OpenCM9 04 는 USB나 배터리 또는 터미널 중에 하나 이상의 전원이 공급되면 동작합니다 별도의 전원공급시 연결되는 주변장치의 동작전압을 확인해주세요 제어기에 입력된 전압이 다이나믹셀에 바로 공급됩니다 2V를 권장하는 XL 320은 다른 다이나믹셀과 동작전압의 차이가 있어 함께 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#제품-사양"
	},
	"3727": {
		"product": "OpenCM 9.04",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "컨트롤 테이블은 제어기 내부에 존재하는 데이터의 집합체입니다 사용자는 컨트롤 테이블의 주소를 이용하여 해당 주소에 저장된 데이터를 읽어오거나 새로운 데이터를 입력할 수 있습니다 영역 EEPROM RAM 컨트롤 테이블은 2개의 영역으로 구분됩니다 RAM 영역에 위치한 데이터는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM 영역에 위치한 데이터는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile 접근 속성 컨트롤 테이블의 데이터에는 2개의 접근 속성이 있습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 데이터는 사용자가 임의로 값을 바꿀 수 없기 때문에 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 제어 용도로 사용됩니다 초기값 제어기에 전원이 인가될 때 컨트롤 테이블의 각 데이터는 초기값으로 설정됩니다 사용자가 초기값을 변경하면 새로운 초기값이 적용됩니다 RAM 영역의 초기값은 전원이 인가되었을 때 설정되는 값입니다 크기 데이터의 크기는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 데이터를 변경할 때는 해당 데이터의 크기를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#컨트롤-테이블"
	},
	"3728": {
		"product": "OpenCM 9.04",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM Area",
		"header3": "",
		"content": "주소 크기 데이터 설명 접근속성 초기값 Model Number 모델 변호 400 Firmware Version 펌웨어 버전 정보 ID 제어기 ID 200 Baud Rate 제어기 통신속도 Return Delay Time 응답 지연 시간 10 Status Return Level 응답 레벨 12 Baud Rate 다이나믹셀 통신속도 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#eeprom-area"
	},
	"3729": {
		"product": "OpenCM 9.04",
		"header1": "컨트롤 테이블",
		"header2": "RAM Area",
		"header3": "",
		"content": "주소 크기 데이터 설명 접근속성 초기값 21 Mode Number 현재 모드 번호 26 Button Status 사용자버튼 상태 66 Motion Play Page 모션 실행 페이지 번호 68 Motion Play Status 모션 실행 상태 73 128ms Timer Value 128ms 타이머 값 74 1ms Timer Value 1ms 타이머 값 77 Random Number 임의의 숫자 79 Green LED 녹색 LED 값 82 Motion LED 모션중 LED 사용 여부 360 Port IR Sensor Value 1번 포트 적외선 센서 값 366 Port IR Sensor Value 4번 포트 적외선 센서 값 368 Port DMS Sensor Value 1번 포트 DMS 센서 값 370 Port DMS Sensor Value 2번 포트 DMS 센서 값 372 Port DMS Sensor Value 3번 포트 DMS 센서 값 374 Port DMS Sensor Value 4번 포트 DMS 센서 값 376 Port Touch Sensor Value 1번 포트 터치 센서 값 377 Port Touch Sensor Value 2번 포트 터치 센서 값 378 Port Touch Sensor Value 3번 포트 터치 센서 값 379 Port Touch Sensor Value 4번 포트 터치 센서 값 381 Port LED Module Value 2번 포트 LED모듈 제어 값 382 Port LED Module Value 3번 포트 LED모듈 제어 값 386 Port User Device Value 2번 포트의 사용자 장치 388 Port User Device Value 3번 포트의 사용자 장치 392 Port Temperature Sensor Value 1번 포트 온도 센서 값 393 Port Temperature Sensor Value 2번 포트 온도 센서 값 394 Port Temperature Sensor Value 3번 포트 온도 센서 값 395 Port Temperature Sensor Value 4번 포트 온도 센서 값 396 Port Ultrasonic Sensor Value 1번 포트 초음파 센서 값 397 Port Ultrasonic Sensor Value 2번 포트 초음파 센서 값 398 Port Ultrasonic Sensor Value 3번 포트 초음파 센서 값 399 Port Ultrasonic Sensor Value 4번 포트 초음파 센서 값 400 Port Magnetic Sensor Value 1번 포트 자석 센서 값 401 Port Magnetic Sensor Value 2번 포트 자석 센서 값 402 Port Magnetic Sensor Value 3번 포트 자석 센서 값 403 Port Magnetic Sensor Value 4번 포트 자석 센서 값 404 Port Motion Sensor Value 1번 포트 동작 감지 센서 값 405 Port Motion Sensor Value 2번 포트 동작 감지 센서 값 406 Port Motion Sensor Value 3번 포트 동작 감지 센서 값 407 Port Motion Sensor Value 4번 포트 동작 감지 센서 값 409 Port Color Sensor Value 2번 포트 칼라 센서 값 410 Port Color Sensor Value 3번 포트 칼라 센서 값 참고 Manager 0을 통해서 제어기를 연결하면 컨트롤 테이블을 확인할 수 있습니다 컨트롤 테이블 확인하기 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#ram-area"
	},
	"3730": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "",
		"header3": "",
		"content": "OpenCM 04 영문 eManual 에서 더 많은 정보가 제공되고 있습니다 오른쪽 탭의 구글 버튼 을 클릭하시면 구글 번역기를 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#하드웨어"
	},
	"3731": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "블럭 다이어그램",
		"header3": "",
		"content": "OpenCM9 04의 전체 블럭 다이어그램은 아래와 같습니다 OpenCM9 04는 32비트 Cortex M3 코어를 가진 STM32F103CB 마이크로컨트롤러를 중심으로 회로가 구성되어 있습니다 전원 회로는 5V와 3V 레귤레이터가 다단 Cascade 형태로 구성되어 있고 5V는 다이나믹셀 TTL 버스에 공급되고 3V는 마이크로컨트롤러 및 5핀 포트 4핀 통신포트에 공급됩니다 OpenCM9 04의 USB FS를 지원하고 Micro 커넥터를 이용해 프로그램을 다운로드 받거나 데이터 통신을 수행합니다 USART 1번 채널은 다이나믹셀 TTL Bus에 할당되어 있어서 핀11 TX1 12 RX1 을 이용한 중복사용은 불가능합니다 ockquote OpenCM9 04 블럭 다이어그램 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#블럭-다이어그램"
	},
	"3732": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#각-부-명칭"
	},
	"3733": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "전원 스위치",
		"content": "보드와 다이나믹셀 전원을 off하는 스위치 입니다 단 USB 연결시 보드 전원은 off되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#전원-스위치"
	},
	"3734": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "직렬 배터리 소켓",
		"content": "LBS 04 리튬 이온 배터리 2개를 직렬 연결하는 커넥터 입니다 배터리를 2개 직렬 연결한 상태에서 충전할 경우 쇼트위험이 있으므로 반드시 보드와 연결을 분리해서 충전해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#직렬-배터리-소켓"
	},
	"3735": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "다이나믹셀 TTL 소켓",
		"content": "3핀 케이블 Dynamixel TTL Bus 을 사용하는 다이나믹셀을 Daisy chain으로 연결하기 위한 포트 입니다 주의 커넥터 제조사의 PIN 순서와 상이할 수 있으니 반드시 PIN 순서를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#다이나믹셀-ttl-소켓"
	},
	"3736": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "통신포트",
		"content": "BT 210 BT 110A ZIG 110A LN 101 등과 같은 4핀 케이블을 연결해서 외부 장치와 유 무선 통신을 수행합니다 OpenCM9 04의 4핀 통신 포트는 Serial2 USART2 를 사용합니다 ockquote 4핀 통신 포트 핀맵 ockquote OpenCM9 04와 스마트폰을 이용한 무선 통신 연결 예시 ockquote OpenCM9 04와 RC100을 이용한 블루투스 무선 통신 연결 예시 ockquote OpenCM9 04와 RC100을 이용한 지그비 무선 통신 연결 예시 ockquote OpenCM9 04와 LN 101을 이용한 유선 통신 연결 예시 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#통신포트"
	},
	"3737": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "사용자 버튼",
		"content": "사용자가 제어 할 수 있는 스위치 입니다 23번핀 혹은 BOARD BUTTON PIN으로 사용할 수 있고 pinMode 에서 INPUT PULLDOWN옵션으로 초기화해서 사용합니다 그리고 OpenCM9 04에서 다운로드가 되지 않을 때 User button을 누른 상태에서 USB를 연결하면 Status LED가 계속 켜지면서 바로 다운로드 모드로 진입합니다 ockquote OpenCM9 04는 User button으로 긴급 복구 모드 진입을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#사용자-버튼"
	},
	"3738": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "외부 ADC 기준전압 점퍼",
		"content": "Analog 기준전압을 변경할 수 있습니다 입출력 IO헤더 를 참고해주십시요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#외부-adc-기준전압-점퍼"
	},
	"3739": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "Micro-B USB",
		"content": "OpenCM9 04를 다운로드 또는 PC와 같은 외부 장치와 USB 통신을 수행하며 동시에 5V 전원이 공급됩니다 배터리 연결시 USB 5V는 자동으로 차단되고 배터리로부터 전원을 공급받습니다 만약 과전류가 흐를 경우 내장된 Fuse가 USB 5V에서 흐르는 전류를 차단하므로 사용자 PC가 손상될 위험으로부터 보호됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#micro-b-usb"
	},
	"3740": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "상태 LED",
		"content": "OpenCM9 04에서 프로그래밍 확인을 위한 테스트 LED입니다 14번 핀 혹은 BOARD LED PIN이 HIGH이면 꺼지고 LOW가 되면 켜집니다 PWM으로 제어 가능합니다 ockquote Status LED 위치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#상태-led"
	},
	"3741": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "리셋 버튼",
		"content": "CPU의 리셋을 수행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#리셋-버튼"
	},
	"3742": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "JTAG/SWD PIN",
		"content": "ST LINK와 같은 Circuit Debugger Programmer와 연결할 수 있습니다 JTAG SWD 4핀 포트를 통해서 전문가를 위한 별도의 상용개발프로그램을 이용 가능합니다 아래는 ST LINK와의 연결도 예시입니다 ockquote ST LINK 와 OpenCM9 04 연결 예시 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#jtagswd-4-pin"
	},
	"3743": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "로보티즈 5핀 포트",
		"content": "ROBOTIS 5핀 장치 모듈 를 연결해 사용 할 수 있습니다 ockquote 5핀 포트 번호 및 사용 방법 ockquote 5핀 케이블 연결 방향 5핀 장치 종류 포트 포트 포트 포트 적외선센서 DMS센서 자이로센서 접촉센서 컬러센서 자석센서 온도센서 동작감지센서 LED모듈 ockquote 로보티즈 센서 및 LED 모듈 호환 리스트 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#로보티즈-5핀-포트"
	},
	"3744": {
		"product": "OpenCM 9.04",
		"header1": "하드웨어",
		"header2": "각 부 명칭",
		"header3": "입출력 IO헤더",
		"content": "OpenCM9 04의 CPU인 STM32F103CB의 GPIO 핀들이 외부로 인터페이스 되어 있어서 자유롭게 활용 가능합니다 핀 25번까지 총26개의 GPIO 핀은 디지털 입력 및 출력이 가능하고 3V에서 동작합니다 디지털 출력에서 HIGH일 경우 3V이고 LOW일때는 0V입니다 디지털 출력에서 최대 토글 스피드는 18Mhz입니다 단 핀22 23은 최대 2Mhz 디지털 입력의 경우 0V 3V까지만 입력 가능하지만 아래의 핀들은 5V입력이 가능합니다 그 외에 핀에 3V 이상의 전압을 입력할 경우 OpenCM9 04가 손상될 수 있으니 주의하세요 5V입력가능한 핀 5V Tolerant 10 11 12 13 14 15 16 17 18 19 20 21 각 핀에서 최대로 공급 Source 또는 받아들일 Sink 수 있는 전류는 최대 25mA입니다 단 핀22 23의 경우 3mA OpenCM9 04의 모든 GPIO핀들은 내부적으로 pull up 또는 pull down이 지원되고 소프트웨어로 변경할 수 있습니다 참고로 pull up 또는 pull down 저항은 40Kohm Typical 입니다 기타 궁금한 사항은 OpenCM9 04의 CPU인 STM32F103CB의 데이터시트를 참고하세요 ockquote OpenCM9 04 GPIO 핀맵 Serial USART 11 TX1 12 RX1 TX2 RX2 24 TX3 25 RX3 PWM 10 11 12 13 14 SPI SS1 SCK1 MISO1 MOSI1 18 SS2 19 SCK2 20 MISO2 21 MOSI2 LED 14 BOARD LED PIN defined 14 BUTTON 23 BOARD BUTTON PIN defined 23 RST CPU Reset 신호와 연결된 핀입니다 5V 배터리 연결시 5V 전원을 사용할 수 있는 핀입니다 단 USB 연결시 5V 전압이 출력되지 않습니다 3V 배터리 연결 혹은 USB 연결시 3V 전원을 사용할 수 있는 핀입니다 GND 핀과 같이 연결되어 있고 보드 전체의 GND 단자입니다 A0 디지털 입출력및 아날로그 입력이 가능합니다 A1 디지털 입출력및 아날로그 입력이 가능합니다 SPI 1번채널의 SCK클럭핀으로 사용 가능합니다 A2 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 A3 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 A4 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 USART1번 Serial2 채널의 TXD 핀으로 사용되고 4핀 통신포트의 TX2와 연결되어 있습니다 A5 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 USART2번 Serial2 채널의 RXD 핀으로 사용되고 4핀 통신포트의 RX2와 연결되어 있습니다 A6 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 SPI 1번 채널의 MISO 핀으로 사용 가능합니다 A7 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 SPI 1번 채널의 MOSI 핀으로 사용 가능합니다 A8 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 A9 디지털 입출력및 아날로그 입력이 가능합니다 PWM 출력이 가능합니다 D10 디지털 입출력이 가능합니다 PWM 출력이 가능합니다 D11 디지털 입출력이 가능합니다 PWM 출력이 가능합니다 USART1번 Serial1 의 TX핀입니다 다이나믹셀 TTL Bus와 중복사용 불가능합니다 D12 디지털 입출력이 가능합니다 PWM 출력이 가능합니다 USART1번 Serial1 의 RX핀입니다 다이나믹셀 TTL Bus와 중복사용 불가능합니다 D13 디지털 입출력이 가능합니다 PWM 출력이 가능합니다 D14 디지털 입출력이 가능합니다 PWM 출력이 가능합니다 Status LED와 연결된 핀입니다 BOARD LED PIN으로 미리 define되어 있습니다 D15 디지털 입출력이 가능합니다 보드 전체 전원 입력단입니다 연속된 2개의 홀이 에 해당합니다 배터리 소켓의 단자와 연결되어 있습니다 GND 보드 전체 전원 입력단입니다 연속된 2개의 홀이 GND 에 해당합니다 배터리 소켓의 단자와 연결되어 있습니다 TTL 다이나믹셀 TTL Bus의 Data 라인입니다 이 핀만 가지고 3핀 TTL 데이지 체인 구성을 할 수 있습니다 다이나믹셀 TTL Bus와 관련된 핀이고 TX RX를 선택하는 핀입니다 다이나믹셀 TTL Bus의 TX 핀입니다 다이나믹셀 TTL Bus의 RX 핀입니다 D16 디지털 입출력이 가능합니다 D17 디지털 입출력이 가능합니다 D18 디지털 입출력이 가능합니다 D19 디지털 입출력이 가능합니다 SPI 2번 채널의 SCK 클럭핀으로 사용 가능합니다 D20 디지털 입출력이 가능합니다 SPI 2번 채널의 MISO핀으로 사용 가능합니다 D21 디지털 입출력이 가능합니다 SPI 2번 채널의 MOSI 클럭핀으로 사용 가능합니다 D22 디지털 입출력이 가능합니다 최대 출력 전류가 3mA 이고 최대 토글 스피드는 2Mhz입니다 D23 디지털 입출력이 가능합니다 User Button과 연결된 핀입니다 버튼을 누른채로 전원을 공급하면 보드가 긴급 복구 다운로드 모드로 진입하게 되므로 유의합니다 최대 출력 전류가 3mA 이고 최대 토글 스피드는 2Mhz입니다 D24 디지털 입출력이 가능합니다 I2C 2번 채널의 SCL 핀으로 사용 가능합니다 또한 USART3 Serial3 의 TX핀으로 사용 가능합니다 D25 디지털 입출력이 가능합니다 I2C 2번 채널의 SDA 핀으로 사용 가능합니다 또한 USART3 Serial3 의 RX핀으로 사용 가능합니다 5V 5V 공급 가능한 핀입니다 JP2 점퍼를 수정해서 아래의 AREF 핀과 연결해서 5V 기준전압으로 변경할 수 있습니다 AREF CPU의 Analog Reference 핀과 연결되어 있습니다 JP2번 점퍼를 수정하면 AREF를 3V가 아닌 다른 전압으로 변경할 수 있습니다 최대 5V전압만 가능합니다 자세한 사항은 STM32F103CB 의 데이터 시트를 참고하세요 ockquote JP2 점퍼 위치 및 사용방법 ockquote JP2를 변경해서 아날로그 입력 기준 전압 AREF 를 5V로 변경한 예시 주의 아날로그 기준전압 AREF 을 5V로 변경시 5V 입력 가능한 핀을 확인하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#입출력-io헤더"
	},
	"3745": {
		"product": "OpenCM 9.04",
		"header1": "전원 연결 방법",
		"header2": "",
		"header3": "",
		"content": "OpenCM보드는 아래와 같이 3가지 전원 포트로 보드를 작동시킬 수 있습니다 LBS 40 배터리 소켓 오른쪽 헤더의 핀을 통한 공급 USB 연결을 통한 공급 XL 320 다이나믹셀을 구동시키기 위해서는 LBS 04 배터리 2개를 배터리 소켓에 연결하는 것을 추천합니다 ockquote OpenCM9 04와 XL 320 LBS 40 Li Ion Battery 연결 예시 ockquote LBS 40 배터리 XL 320을 제외한 3핀 TTL 다이나믹셀은 헤더의 핀 또는 배터리 소켓을 이용해 전원을 공급하시길 추천합니다 ockquote OpenCM9 04와 AX12 연결 예시 아래의 그림과 같이 배터리 커넥터의 양끝 에 연결하고 전원을 공급할 수 있는 장치로 연결도 가능합니다 OpenCM9 04 뒷면을 보면 그림A와 같이 가운데 가 연결 되어있으므로 아래와 같이 연결이 가능합니다 ockquote 전원 연결 예시 아래와 그림과 같이 배터리 소켓과 핀으로 동시 전원 공급은 피하세요 그리고 배터리 소켓에 배터리를 혼용하지 마십시요 배터리 소켓은 LBS 40 배터리만 사용해 주세요 배터리 커넥터 및 헤더핀 전원 두 개중 하나는 제거 배터리 혼용 금지 USB 포트는 LBS 40 배터리 혹은 핀과 동시 연결해도 무방합니다 차단회로 내장 혹은 배터리로 공급되는 전압은 다이나믹셀의 권장 전압으로 사용하시길 추천합니다 그 이상의 전압은 다이나믹셀의 수명을 단축시키거나 고장의 원인이 될 수 있습니다 참고로 OpenCM9 04에 공급할 수 있는 최대 전압은 16V입니다 그 이상의 전압은 OpenCM9 04의 부품들이 견디지 못할 수도 있습니다 USB 전원 공급만으로는 다이나믹셀의 정상 동작이 되지 않지만 그 외에 통신포트나 IO 헤더핀은 정상동작을 합니다 LBS 40 배터리를 직렬 연결한 채로 USB 충전은 쇼트가 생길 수 있으니 주의하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#전원-연결-방법"
	},
	"3746": {
		"product": "OpenCM 9.04",
		"header1": "A타입 전원 스위치 추가하기",
		"header2": "",
		"header3": "",
		"content": "A타입에는 전원 스위치가 없이 JP1이 쇼트처리 되어서 판매됩니다 전원 스위치를 추가하기 위해서는 JP1의 납땜 처리를 제거하시고 54mm pitch 전원 스위치를 추가하시면 됩니다 전원스위치는 OpenCM9 04 악세사리 키트에 포함되어 있고 pitch가 맞는 전원 스위치를 따로 구해서 사용할 수 있습니다 ockquote JP1과 전원 스위치 회로도 JP1이 연결되어 있으면 스위치가 없이도 동작합니다 ockquote OpenCM9 04의 A타입에서는 JP1의 연결을 끊고 스위치를 추가해야 제대로 동작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#a타입-전원-스위치-추가하기"
	},
	"3747": {
		"product": "OpenCM 9.04",
		"header1": "A타입 다이나믹셀 TTL 커넥터 추가하기",
		"header2": "",
		"header3": "",
		"content": "OpenCM9 04의 다이나믹셀 TTL 3핀 홀은 기존 다이나믹셀 TTL 3핀과 XL 320 TTL 3핀 미니타입 이 모두 호환 가능합니다 따라서 두 가지 종류의 커넥터 모두 납땜해서 사용할 수 있습니다 참고로 2종류의 TTL 3핀은 OpenCM 악세사리 키트에 모두 포함되어 있습니다 ockquote OpenCM9 04 A타입은 2가지 종류의 3핀 커넥터를 모두 납땜할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#a타입-다이나믹셀-ttl-커넥터-추가하기"
	},
	"3748": {
		"product": "OpenCM 9.04",
		"header1": "소프트웨어 개발환경",
		"header2": "",
		"header3": "",
		"content": "아두이노 IDE OpenCM IDE 아두이노 IDE OpenCM IDE Dynamixel SDK DynamixelWorkbench 아두이노 라이브러리 OS 10 12 리눅스 12 04 윈도우즈 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#소프트웨어-개발환경"
	},
	"3749": {
		"product": "OpenCM 9.04",
		"header1": "소프트웨어 개발환경",
		"header2": "OpenCM IDE",
		"header3": "",
		"content": "OpenCM IDE는 더이상 업데이트되지 않습니다 아두이노 IDE 를 사용하시는 것을 권장드립니다 OpenCM IDE 매뉴얼 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#opencm-ide"
	},
	"3750": {
		"product": "OpenCM 9.04",
		"header1": "소프트웨어 개발환경",
		"header2": "아두이노 IDE",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#아두이노-ide"
	},
	"3751": {
		"product": "OpenCM 9.04",
		"header1": "소프트웨어 개발환경",
		"header2": "아두이노 IDE",
		"header3": "리눅스에 설치하기",
		"content": "USB 포트 설정 리눅스 환경의 아두이노 IDE에서 루트 권한이 없이 USB를 통해 OpenCM9 04에 스케치를 업로드하기 위해서는 아래와 같은 작업이 필요합니다 wget https raw githubusercontent com ROBOTIS GIT OpenCM9 04 master 99 opencm cdc rules sudo cp 99 opencm cdc rules udev rules sudo udevadm control reload rules sudo udevadm trigger 컴파일러 설정 OpenCM9 04의 라이브러리는 32비트 플랫폼에서 작성되었기 때문에 64비트 PC에서는 아래와 같이 32비트용 컴파일러를 설치해주어야 합니다 sudo apt get install libncurses5 dev i386 아두이노 IDE 설치하기 아래의 아두이노 홈페이지에서 최신버전의 아두이노 IDE를 다운로드 받은 뒤 설치하십시오 OpenCM9 04는 이상의 아두이노 IDE에서 동작을 확인했습니다 https www arduino cc en Main Software 원하는 위치에 압축파일을 해제하고 터미널에서 설치파일을 실행하십시오 아래는 사용자의 최상위 폴더 에 아두이노 IDE 3을 설치하는 예제입니다 cd tools arduino install sh 아두이노 IDE가 설치된 파일 경로와 절대경로명을 bashrc 파일에 입력하십시오 여기에서는 gedit 에디터를 사용했습니다 입력이 완료되면 source 명령어를 사용해서 변경된 설정을 적용시켜주어야 합니다 gedit bashrc export PATH PATH HOME tools arduino source bashrc 아두이노 IDE 실행하기 리눅스 환경에서 아두이노 IDE를 실행하기 위해서는 터미널 창에 다음과 같이 입력하십시오 arduino OpenCM9 04를 아두이노 IDE에 포팅하기 환경설정 아두이노 IDE가 실행되면 File Prefereneces를 클릭한 다음 아래의 주소를 Additional Boards Maanger URLs 텍스트상자에 입력하십시오 https raw githubusercontent com ROBOTIS GIT OpenCM9 04 master arduino opencm release package opencm9 04 index json 보드 매니저를 통해 OpenCM9 04 패키지 설치하기 Tools Board Boards Manager를 선택하고 아래와 같이 설치하십시오 네트워크 사정에 따라 다르지만 20분정도 걸립니다 텍스트상자에 OpenCM9 04 를 입력하고 검색된 패키지 중 ROBOTIS에서 제작된 패키지를 선택하고 설치하십시오 설치가 완료되면 INSTALLED 라는 문구가 표시됩니다 Tools Board에서 OpenCM9 04 보드가 보이는지 확인하십시오 OpenCM9 04 관련 소스를 불러오기 위해서는 OpenCM9 04 보드를 선택해야 합니다 포트 설정 여기에서는 프로그램을 업로드하기 위한 포트 설정을 합니다 OpenCM9 04와 PC가 USB를 통해 연결되어 있어야 합니다 Tools Port dev ttyACM0를 선택하십시오 dev ttyACM0 의 마지막 숫자는 PC의 환경에 따라 바뀔 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#리눅스에-설치하기"
	},
	"3752": {
		"product": "OpenCM 9.04",
		"header1": "소프트웨어 개발환경",
		"header2": "아두이노 IDE",
		"header3": "맥에 설치하기",
		"content": "아두이노 IDE 설치하기 아래의 아두이노 홈페이지에서 최신버전의 아두이노 IDE를 다운로드 받은 뒤 설치하십시오 OpenCM9 04는 이상의 아두이노 IDE에서 동작을 확인했습니다 https www arduino cc en Main Software 아두이노 IDE 실행하기 맥에서 아두이노 IDE를 실행하기 위해서는 아래와 같이 아두이노 IDE 아이콘을 클릭하십시오 OpenCM9 04를 아두이노 IDE에 포팅하기 환경설정 아두이노 IDE가 실행되면 File Prefereneces를 클릭한 다음 아래의 주소를 Additional Boards Maanger URLs 텍스트상자에 입력하십시오 https raw githubusercontent com ROBOTIS GIT OpenCM9 04 master arduino opencm release package opencm9 04 index json 보드 매니저를 통해 OpenCM9 04 패키지 설치하기 Tools Board Boards Manager를 선택하고 아래와 같이 설치하십시오 네트워크 사정에 따라 다르지만 20분정도 걸립니다 텍스트상자에 OpenCM9 04 를 입력하고 검색된 패키지 중 ROBOTIS에서 제작된 패키지를 선택하고 설치하십시오 설치가 완료되면 INSTALLED 라는 문구가 표시됩니다 Tools Board에서 OpenCM9 04 보드가 보이는지 확인하십시오 OpenCM9 04 관련 소스를 불러오기 위해서는 OpenCM9 04 보드를 선택해야 합니다 포트 설정 여기에서는 프로그램을 업로드하기 위한 포트 설정을 합니다 OpenCM9 04와 PC가 USB를 통해 연결되어 있어야 합니다 Tools Port dev ttyACM0를 선택하십시오 dev ttyACM0 의 마지막 숫자는 PC의 환경에 따라 바뀔 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#맥에-설치하기"
	},
	"3753": {
		"product": "OpenCM 9.04",
		"header1": "소프트웨어 개발환경",
		"header2": "아두이노 IDE",
		"header3": "윈도우즈에 설치하기",
		"content": "Install Virtual COM Port Driver USB 포트를 통해 OpenCM9 04를 윈도우즈 환경에서 사용하려면 USB CDC 드라이버를 설치해야 합니다 아래 방법으로 설치하시기 바랍니다 윈도우즈 드라이버 설치방법 아두이노 IDE 설치하기 아래의 아두이노 홈페이지에서 최신버전의 아두이노 IDE를 다운로드 받은 뒤 설치하십시오 OpenCM9 04는 이상의 아두이노 IDE에서 동작을 확인했습니다 https www arduino cc en Main Software 윈도우즈 버전의 아두이노 IDE는 압축파일 형태와 설치 형태로 구분됩니다 선호하는 방법으로 설치하시기 바랍니다 OpenCM9 04를 아두이노 IDE에 포팅하기 환경설정 아두이노 IDE가 실행되면 File Prefereneces를 클릭한 다음 아래의 주소를 Additional Boards Maanger URLs 텍스트상자에 입력하십시오 https raw githubusercontent com ROBOTIS GIT OpenCM9 04 master arduino opencm release package opencm9 04 index json 보드 매니저를 통해 OpenCM9 04 패키지 설치하기 Tools Board Boards Manager를 선택하고 아래와 같이 설치하십시오 네트워크 사정에 따라 다르지만 20분정도 걸립니다 텍스트상자에 OpenCM9 04 를 입력하고 검색된 패키지 중 ROBOTIS에서 제작된 패키지를 선택하고 설치하십시오 설치가 완료되면 INSTALLED 라는 문구가 표시됩니다 Tools Board에서 OpenCM9 04 보드가 보이는지 확인하십시오 OpenCM9 04 관련 소스를 불러오기 위해서는 OpenCM9 04 보드를 선택해야 합니다 포트 설정 여기에서는 프로그램을 업로드하기 위한 포트 설정을 합니다 OpenCM9 04와 PC가 USB를 통해 연결되어 있어야 합니다 Tools Port COM1를 선택하십시오 COM1 의 마지막 숫자인 포트번호는 PC의 환경에 따라 바뀔 수 있습니다 장치관리자에서 포트번호를 확인하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#윈도우즈에-설치하기"
	},
	"3754": {
		"product": "OpenCM 9.04",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "매뉴얼 다운로드 OpenCM9 04 manual ko zip 회로도 다운로드 SCHEMATIC OpenCM9 04 pdf TOP 거버 다운로드 OpenCM9 04 REV 131009 TOP pdf BOTTOM 거버 다운로드 OpenCM9 04 REV 131009 BOTTOM pdf 거버 다운로드 OpenCM9 04 REV 131009 Gerber pdf ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#다운로드"
	},
	"3755": {
		"product": "OpenCM 9.04",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#참고자료"
	},
	"3756": {
		"product": "OpenCM 9.04",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencm904/#도면"
	},
	"3757": {
		"product": "OpenCR1.0",
		"header1": "OpenCR1.0",
		"header2": "",
		"header3": "",
		"content": "OpenCR1 0는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 OpenCR1 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/controller/opencr10/"
	},
	"3758": {
		"product": "LED Module(LM-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote LM 10 LED 모듈 LED로 불빛을 내는 모듈입니다 오렌지색과 파란색 두 가지 LED 가 들어 있으며 포트 제어를 통해 각각 따로따로 ON OFF 제어가 가능합니다 무게 4g 크기 24mm 18mm 12mm 호환 기준표 제어기 호환표 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/display/lm-10/#개요"
	},
	"3759": {
		"product": "LED Module(LM-10)",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "OUT2 신호 인가시 두 번째 LED를 켤 수 있음 GND NC 사용 안함 OUT1 신호 인가시 첫 번째 LED를 켤 수 있음 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/display/lm-10/#핀-배열"
	},
	"3760": {
		"product": "LED Module(LM-10)",
		"header1": "활용 방법",
		"header2": "",
		"header3": "",
		"content": "로보플러스 태스크 LED모듈 사용법 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/display/lm-10/#활용-방법"
	},
	"3761": {
		"product": "LED Module(LM-10)",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/display/lm-10/#동영상"
	},
	"3762": {
		"product": "USB 다운로더(LN-101)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote USB 다운로더 LN 101 USB 다운로더 LN 101 는 PC 의 USB 포트와 제어기의 4핀 포트를 시리얼 통신으로 연결하기 위해 사용합니다 ockquote LN 101과 CM 100 제어기 연결 그림 ockquote LN 101과 CM 700 제어기 연결 그림 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/ln-101/#개요"
	},
	"3763": {
		"product": "USB 다운로더(LN-101)",
		"header1": "개요",
		"header2": "시리얼 통신의 용도",
		"header3": "",
		"content": "PC 에서 작성한 태스크 코드를 제어기로 다운로드 제어기의 태스크 코드 실행 결과를 PC 의 화면에 출력 RoboPlus 의 가상 로봇 조종 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/ln-101/#개요"
	},
	"3764": {
		"product": "USB 다운로더(LN-101)",
		"header1": "개요",
		"header2": "사용 가능한 제어기",
		"header3": "",
		"content": "CM 100 CM 150 CM 200 CM 700 OpenCM9 04C 참고 LN 101 통신이 불안정하다면 전압레벨 차이가 원인일 수 있습니다 연결된 장비 및 PC가 그라운드와 연결되어 있는지 확인해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/ln-101/#개요"
	},
	"3765": {
		"product": "USB 다운로더(LN-101)",
		"header1": "드라이버 설치 확인",
		"header2": "",
		"header3": "",
		"content": "USB 다운로더 드라이버가 PC에 바르게 설치되었는지 확인하는 방법은 다음과 같습니다 PC 의 USB 포트에 USB 다운로더 LN 101 USB2Dynamixel 를 연결합니다 내 컴퓨터 위에서 마우스 오른쪽 클릭으로 뜨는 팝업 메뉴의 관리를 선택합니다 장치 관리자 의 범용 직렬 버스 컨트롤러 장치 목록에서 USB Serial Converter 를 확인합니다 포트 COM 및 LPT 장치 목록에서 USB Serial Port COMx 를 확인합니다 COM 포트 번호는 시스템마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/ln-101/#드라이버-설치-확인"
	},
	"3766": {
		"product": "USB 다운로더(LN-101)",
		"header1": "드라이버 수동 설치",
		"header2": "",
		"header3": "",
		"content": "RoboPlus 를 설치하게 되면 자동으로 FTDI Driver USB2Dynamixel USB다운로더 LN 101 BT 410 동글 드라이버 가 설치됩니다 만약 RoboPlus 를 설치하지 않고 해당 드라이버를 설치하거나 RoboPlus 설치 시 드라이버가 제대로 설치되지 않았을 경우 아래와 같은 방법으로 드라이버를 수동으로 설치하십시오 PC 에 장치를 연결합니다 드라이버가 설치되어 있지 않을 경우 새 하드웨어 검색 마법사 시작 창이 뜹니다 목록 또는 특정 위치에서 설치 고급 다음 드라이버의 위치를 지정합니다 RoboPlus 를 설치한 경우 드라이버는 RoboPlus 설치 폴더의 LN101 폴더에 있습니다 또는 최신 버전의 드라이버를 설치하고자 하는 경우 FTDI Driver Download 페이지에서 VCP Drivers 의 최신 버전을 받으시면 됩니다 Windows 32bit 드라이버 설치 Windows 64bit 드라이버 설치 다음 을 누르면 설치가 진행되며 USB Serial Converter 의 드라이버 설치가 완료됩니다 동일한 방법으로 USB Serial Port 드라이버도 설치해 줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/ln-101/#드라이버-수동-설치"
	},
	"3767": {
		"product": "USB 다운로더(LN-101)",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/ln-101/#동영상"
	},
	"3768": {
		"product": "U2D2",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote U2D2 U2D2는 PC의 USB포트와 다이나믹셀 또는 제어기를 연결하여 직접 구동하기 위한 통신 변환 장치입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#개요"
	},
	"3769": {
		"product": "U2D2",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#사용-방법"
	},
	"3770": {
		"product": "U2D2",
		"header1": "사용 방법",
		"header2": "PC to DYNAMIXEL",
		"header3": "",
		"content": "U2D2는 각종 다이나믹셀을 연결할 수 있도록 TTL Level 통신을 위한 3핀 커넥터와 RS 485 통신을 위한 4핀 커넥터가 내장되어 있습니다 그러나 U2D2는 다이나믹셀에 전원을 공급하지 않기 때문에 다이나믹셀을 구동시키기 위해서는 별도로 다이나믹셀에 전원을 공급해 주어야 합니다 다이나믹셀 동작을 위한 권장 전압은 모델별로 차이가 있습니다 모델 별 적정 전압은 각 다이나믹셀의 설명 페이지를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#사용-방법"
	},
	"3771": {
		"product": "U2D2",
		"header1": "사용 방법",
		"header2": "PC to UART",
		"header3": "",
		"content": "U2D2는 OpkrCM9 04 CM 150 CM 200 등과 같이 4핀 UART 통신을 사용하는 제어기를 PC의 USB포트에 연결하여 이용하는 경우에도 사용될 수 있습니다 참고 U2D2의 통신이 불안정하다면 신호의 기준 전압 레벨 차이에 의한 것일 수 있습니다 이 경우 PC의 전원과 주변 장비의 전원의 접지 여부를 확인해 주세요 참고 접지가 불안정할 경우 U2D2 고장의 원인이 될 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#사용-방법"
	},
	"3772": {
		"product": "U2D2",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 설명 무게 9g 크기 48mm 18mm 14 6mm 지원 포트 3핀 TTL Level TTL 통신을 지원하는 다이나믹셀 4핀 RS 485 RS 485 통신을 지원하는 다이나믹셀 4핀 UART CM 150 CM 200 등 4핀 UART를 지원하는 제어기 통신속도 최대 6Mbps ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#제품-사양"
	},
	"3773": {
		"product": "U2D2",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "명 칭 설 명 4핀 UART USB 포트를 UART 통신으로 변환합니다 3핀 TTL Level TTL Level 통신으로 3핀으로 된 다이나믹셀과 연결합니다 4핀 RS 485 RS 485 통신으로 4핀으로 된 다이나믹셀과 연결합니다 상태표시 LED 전원공급 TxD 데이터 쓰기 RxD 데이터 읽기 상태를 표시합니다 Micro USB PC의 USB 포트와 연결합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#각-부-명칭"
	},
	"3774": {
		"product": "U2D2",
		"header1": "통신속도",
		"header2": "",
		"header3": "",
		"content": "목표 BPS 설정 BPS 오차율 600 600 00 57 600 57 588 4823 02 115 200 115 246 0984 04 000 000 000 000 00 000 000 000 000 00 000 000 000 000 00 000 000 000 000 00 500 000 571 428 571 56 000 000 000 000 00 참고 UART는 Baud Rate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#통신속도"
	},
	"3775": {
		"product": "U2D2",
		"header1": "전원 공급",
		"header2": "",
		"header3": "",
		"content": "U2D2에 다이나믹셀을 직접 연결하여 사용하는 경우 U2D2는 다이나믹셀에 전원을 공급하지 않기 때문에 다이나믹셀을 구동하려면 아래와 같이 다이나믹셀에 별도의 전원을 공급해 주어야 합니다 외부 전원을 연결하기 전에 반드시 연결된 다이나믹셀의 적정 공급 전압을 확인하세요 주의 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel을 통한 전원공급을 권장드립니다 다이나믹셀에 케이블을 연결할 때는 전원이 꺼진 상태에서 연결하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#전원-공급"
	},
	"3776": {
		"product": "U2D2",
		"header1": "전원 공급",
		"header2": "SMPS를 이용한 전원 인가",
		"header3": "",
		"content": "로보티즈의 SMPS 를 이용하여 다이나믹셀을 구동시키려면 SMPS2Dynamixel을 통해 아래와 같이 연결하세요 단 로보티즈 SMPS의 경우 12V 5A 이므로 다이나믹셀의 구동 전압을 확인하고 연결하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#전원-공급"
	},
	"3777": {
		"product": "U2D2",
		"header1": "전원 공급",
		"header2": "제어기를 이용한 전원 인가",
		"header3": "",
		"content": "로보티즈의 제어기나 OpenCM 485 확장보드를 이용하여 전원을 인가하려면 아래와 같이 연결하세요 제어기나 OpenCM 485 확장보드의 전원은 배터리나 SMPS 를 통해 연결할 수 있으며 입력 전압에 따라 다이나믹셀에 공급되는 전압이 달라질 수 있으니 다이나믹셀의 구동 전압을 확인하고 연결하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#전원-공급"
	},
	"3778": {
		"product": "U2D2",
		"header1": "전원 공급",
		"header2": "Power Supply를 이용한 전원 인가",
		"header3": "",
		"content": "Power Supply를 이용하여 전원을 인가할 경우 먼저 Power Supply 의 전압 및 전류 설정 값을 연결하려는 다이나믹셀의 동작 전압에 맞게 설정한 후 케이블을 연결하세요 케이블의 핀 배열을 확인하여 반대로 연결하지 않도록 주의하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#전원-공급"
	},
	"3779": {
		"product": "U2D2",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#핀-배열"
	},
	"3780": {
		"product": "U2D2",
		"header1": "데이터 통신방법",
		"header2": "",
		"header3": "",
		"content": "PC 의 USB 포트를 통해 하위 포트로 데이터를 보낼 Tx 때는 하위 포트 모두에 동시에 동일한 데이터를 전달합니다 반대로 하위 포트에서 데이터가 올라 오면 Rx 데이터가 들어온 포트가 자동으로 USB 쪽으로 연결되어 데이터가 전달됩니다 따라서 이 경우에는 하위 포트 중 하나에서 들어온 데이터는 다른 하위 포트로는 전달이 되지 않습니다 또한 두 개 이상의 하위 포트에서 데이터가 동시에 들어오게 되면 데이터가 섞이게 됩니다 따라서 3핀 TTL Level 을 사용하는 다이나믹셀과 4핀 RS 485 를 사용하는 다이나믹셀을 동시에 연결해서 사용할 수는 있지만 ID 가 겹치게 되면 응답 패킷이 섞여 들어오기 때문에 정상적으로 동작하지 않습니다 또한 Bulk Read 나 Sync Read 명령과 같이 여러 개의 다이나믹셀이 응답 패킷을 보내야 하는 명령의 경우 명령 패킷에 응답할 다이나믹셀이 모두 같은 포트에 연결되어 있지 않으면 정상적으로 동작하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#데이터-통신방법"
	},
	"3781": {
		"product": "U2D2",
		"header1": "소프트웨어와 활용",
		"header2": "",
		"header3": "",
		"content": "로보플러스의 활용 Windows에서 제어기나 다이나믹셀을 관리하기 위해서는 로보플러스 프로그램을 활용합니다 Task 제어기에 태스크 코드를 다운로드 받을 때 사용합니다 Motion 제어기에 모션 데이터를 다운로드 받을 때 사용합니다 Manager 제어기나 다이나믹셀을 직접 연결하여 펌웨어를 업데이트 하거나 컨트롤 테이블을 테스트 하기 위해 사용합니다 로보티즈 홈페이지 Dynamixel Workbench의 활용 Linux에서 다이나믹셀의 컨트롤 테이블을 테스트하기 위해서는 Dynamixel Workbench를 활용합니다 로보티즈 GitHub Dynamixel Workbench 매뉴얼 Dynamixel SDK의 활용 MATLAB LabVIEW Python Java 등 다양한 프로그래밍 언어를 사용하여 다이나믹셀을 제어하는 프로그램을 직접 작성하고자 한다면 Dynamixel SDK를 활용합니다 Dynamixel SDK는 다이나믹셀 프로토콜을 사용하는 패킷 통신을 위한 제어 함수를 제공하는 소프트웨어 개발 라이브러리입니다 로보티즈 GitHub Dynamixel SDK 매뉴얼 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#소프트웨어와-활용"
	},
	"3782": {
		"product": "U2D2",
		"header1": "추가정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#추가정보"
	},
	"3783": {
		"product": "U2D2",
		"header1": "추가정보",
		"header2": "내부 스위치 활용",
		"header3": "",
		"content": "케이스 내부에 두 개의 조작 가능한 스위치가 있습니다 이 스위치는 기본 위치가 둘 다 OFF 상태이며 일반적인 경우 기본 상태로 사용하는 것을 권장하기 때문에 외부에서 바로 접근이 불가능하도록 되어 있습니다 따라서 자세한 내용을 이해하고 있는 경우에만 케이스를 해체하고 스위치를 조작하여 RS 485 종단 저항과 UART 3V 전원을 활용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#내부-스위치-활용"
	},
	"3784": {
		"product": "U2D2",
		"header1": "추가정보",
		"header2": "내부 스위치 활용",
		"header3": "RS-485 종단저항(120Ω) 연결 스위치",
		"content": "전송계 및 전송 기기는 여러 설계 기준에 의한 임피던스를 가지고 있어서 단말 또는 분단점에서 반사 현상이 발생됩니다 이에 선로의 양 끝단에 저항을 연결하여 선로 전체에 일정 전류가 순환하도록 함으로써 선로 상의 임피던스를 조정하여 반사 현상을 줄이고 노이즈에 강하도록 설치하는 것이 종단 저항입니다 종단 저항은 반드시 달아야 하는 필수 사항은 아닙니다 RS 485 통신에서 네트워크 길이가 길지 않고 통신 속도가 낮다면 종단 저항은 필요 없습니다 데이터 통신에 오류가 자주 발생한다면 종단 저항 처리를 해 주어야 할 수 있으며 이 스위치를 ON 시키면 RS 485에서 일반적으로 사용되는 종단 저항 120 이 연결되게 됩니다 만일 종단 저항을 이용해도 통신이 원활하게 이루어지지 않을 경우 선로 상태에 따라 저항 값을 가감해 주어야 할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#내부-스위치-활용"
	},
	"3785": {
		"product": "U2D2",
		"header1": "추가정보",
		"header2": "내부 스위치 활용",
		"header3": "UART 3.3V 전원 연결 스위치",
		"content": "일반적으로 4핀 UART 포트에 연결되는 제어기와 같은 장치는 해당 장치의 동작을 위해 별도로 외부에서 전원을 공급받기 때문에 4핀 UART 포트의 2번 핀은 전원이 연결되어 있지 않습니다 그러나 BT 410 과 같이 4핀 UART 포트 외에 별도의 전원을 연결할 수 없는 장치의 경우 4핀 UART 포트의 2번 핀을 통해 동작을 위한 전원을 공급받는 경우가 있습니다 이런 경우에 4핀 UART 포트를 통해 장치에 전원을 공급하기 위해서 이 스위치를 사용합니다 스위치를 ON 시키면 4핀 UART 의 2번 핀에 3V 의 전원이 연결됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#내부-스위치-활용"
	},
	"3786": {
		"product": "U2D2",
		"header1": "추가정보",
		"header2": "기구 결합시 주의사항",
		"header3": "",
		"content": "마운트 홀 사용 볼트 M2 사이즈 탭 나사 마운트 홀 깊이 순수 깊이 7mm 바닥면에서부터의 깊이 5mm ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2/#기구-결합시-주의사항"
	},
	"3787": {
		"product": "U2D2 전원 허브",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "U2D2와 결합하여 여러 종류의 외부 전원을 연결하여 다이나믹셀에 안정적으로 전력을 공급해주는 역할을 한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2_power_hub/#개요"
	},
	"3788": {
		"product": "U2D2 전원 허브",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 동작 전압 4V 24 0V 최대 전류 10 0A ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2_power_hub/#제품-사양"
	},
	"3789": {
		"product": "U2D2 전원 허브",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "파트명 설명 Power Connector SMPS를 비롯하여 다양한 전원을 수용할 수 있도록 터미널 블록을 포함한 3종류의 커넥터 TTL RS485 두 가지 방식을 통신할 수 있도록 JST 커넥터 3핀 4핀 배치 TTL RS485 data test point TTL의 Data 라인 RS485의 라인의 신호를 편하게 확인할 수 있도록 별도로 TP를 배치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2_power_hub/#각-부-명칭"
	},
	"3790": {
		"product": "U2D2 전원 허브",
		"header1": "주의사항",
		"header2": "",
		"header3": "",
		"content": "터미널블록을 이용할 때 좌측 우측 이므로 외부 전원을 활용할 때 극성에 유의해야한다 보드 뒷면에 여러가지 핀들이 노출되어 있으므로 밑면에 도체가 닿을 위험을 어느 정도 차단하기 위해 제공된 서포터를 결합시키는 것을 권장한다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/u2d2_power_hub/#주의사항"
	},
	"3791": {
		"product": "USB2Dynamixel",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote USB2Dynamixel USB2Dynamixel은 PC 에서 다이나믹셀을 직접 구동하기 위해 사용되는 장치입니다 USB2Dynamixel 은 PC 의 USB 포트에 연결되어 사용되며 각종 다이나믹셀이 연결될 수 있도록 3P 커넥터 및 4P 커넥터가 내장되어 있습니다 또한 USB2Dynamixel 은 노트북 등 시리얼 포트가 없는 PC 에서 USB 포트를 시리얼 포트로 변환할 때 이용될 수 있습니다 이 기능은 CM CM CM CM 510 과 같은 다이나믹셀 전용 제어기를 USB 포트에 연결하여 이용할 경우 또는 로봇을 무선으로 제어하기 위해서 ZIG2Serial 을 USB 포트에 연결하여 이용할 경우 유용하게 사용될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#개요"
	},
	"3792": {
		"product": "USB2Dynamixel",
		"header1": "개요",
		"header2": "PC 를 이용한 다이나믹셀 제어",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#개요"
	},
	"3793": {
		"product": "USB2Dynamixel",
		"header1": "개요",
		"header2": "시리얼 포트의 변환",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#개요"
	},
	"3794": {
		"product": "USB2Dynamixel",
		"header1": "개요",
		"header2": "무선통신",
		"header3": "",
		"content": "참고 USB2Dynamixel 통신이 불안정하다면 전압레벨 차이 일수 있습니다 연결된 장비 및 PC가 그라운드와 연결되어 있는지 확인해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#개요"
	},
	"3795": {
		"product": "USB2Dynamixel",
		"header1": "각 부 명칭",
		"header2": "",
		"header3": "",
		"content": "명 칭 설 명 상태 표시 LED 전원 공급 TXD data 쓰기 RXD data 읽기 상태를 표시합니다 기능 선택 스위치 TTL RS 485 RS 232 의 통신 방법을 선택합니다 3P 커넥터 TTL 통신으로 AX 시리즈의 다이나믹셀과 연결합니다 4P 커넥터 RS 485 통신으로 DX RX 시리즈의 다이나믹셀과 연결합니다 시리얼 커넥터 RS 232 통신으로 USB 포트를 시리얼 포트로 변환합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#각-부-명칭"
	},
	"3796": {
		"product": "USB2Dynamixel",
		"header1": "각 부 명칭",
		"header2": "핀 배열",
		"header3": "",
		"content": "아래 그림은 USB2Dynamixel 에 사용되는 커넥터 핀들의 용도입니다 각 핀들을 사용자의 용도에 맞게 이용하고자 하는 경우 각 핀들의 용도를 숙지하신 뒤 사용하시기 바랍니다 4P 3P 케이블 커넥터의 핀 배치도 시리얼 커넥터의 핀 배치도 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#핀-배열"
	},
	"3797": {
		"product": "USB2Dynamixel",
		"header1": "통신모드 선택 방법",
		"header2": "",
		"header3": "",
		"content": "아래 그림과 같이 USB2Dynamixel의 스위치를 변경하여 통신 모드를 선택할 수 있습니다 TTL 통신 AX 시리즈 AX S1 등 3핀 포트를 이용하는 다이나믹셀 RS485 통신 DX 시리즈 RX 시리즈 EX 시리즈 등 4핀 포트를 이용하는 다이나믹셀 RS232 통신 CM CM 510 등의 시리얼 케이블을 이용하는 제어기 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#통신모드-선택-방법"
	},
	"3798": {
		"product": "USB2Dynamixel",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "Dynamixel SDK Dynamixel SDK 를 이용해 다이나믹셀을 C언어로 직접 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#사용-방법"
	},
	"3799": {
		"product": "USB2Dynamixel",
		"header1": "전원 공급",
		"header2": "",
		"header3": "",
		"content": "USB2Dynamixel은 다이나믹셀에 전원을 공급하지 않습니다 따라서 다이나믹셀을 구동시키기 위해서는 아래와 같이 전원을 별도로 공급해 주어야 합니다 각 다이나믹셀의 모델별 적정 공급 전압은 각 다이나믹셀 설명 페이지를 참고하세요 주의 전원 공급시 주의사항 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2Dynamixel을 통한 전원공급을 권장드립니다 다이나믹셀에 케이블을 연결할 때는 전원이 꺼진 상태에서 연결하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#전원-공급"
	},
	"3800": {
		"product": "USB2Dynamixel",
		"header1": "전원 공급",
		"header2": "다이나믹셀에 전원 인가",
		"header3": "",
		"content": "PIN Figure 를 참조하여 커넥터의 2번 PIN 에는 플러스 전원을 커넥터의 1번 PIN 에는 마이너스 전원을 인가하십시오 다이나믹셀의 커넥터 2개는 동일한 것이므로 둘 중 어떠한 곳에 전원을 인가해도 무방합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#전원-공급"
	},
	"3801": {
		"product": "USB2Dynamixel",
		"header1": "전원 공급",
		"header2": "USB2Dynamixel과 다이나믹셀 사이에 전원 인가",
		"header3": "",
		"content": "위와 같이 다이나믹셀에 전원을 인가할 수 없는 경우 아래와 같이 USB2Dynamixel 과 다이나믹셀 사이에 전원을 인가하십시오 USB2Dynamixel 커넥터 2번 PIN 에 연결되어 있는 전선을 분리하여 플러스 인가합니다 USB2Dynamixel 커넥터 1번 PIN 에 연결되어 있는 전선에 결선으로 전선을 추가로 연결하여 마이너스 전원을 인가합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#전원-공급"
	},
	"3802": {
		"product": "USB2Dynamixel",
		"header1": "드라이버 설치 확인",
		"header2": "",
		"header3": "",
		"content": "USB 다운로더 드라이버가 PC에 바르게 설치되었는지 확인하는 방법은 다음과 같습니다 PC 의 USB 포트에 USB 다운로더 LN 101 USB2Dynamixel 를 연결합니다 내 컴퓨터 위에서 마우스 오른쪽 클릭으로 뜨는 팝업 메뉴의 관리를 선택합니다 장치 관리자 의 범용 직렬 버스 컨트롤러 장치 목록에서 USB Serial Converter 를 확인합니다 포트 COM 및 LPT 장치 목록에서 USB Serial Port COMx 를 확인합니다 COM 포트 번호는 시스템마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#드라이버-설치-확인"
	},
	"3803": {
		"product": "USB2Dynamixel",
		"header1": "드라이버 수동 설치",
		"header2": "",
		"header3": "",
		"content": "로보플러스를 설치하게 되면 자동으로 FTDI Driver USB2Dynamixel USB다운로더 LN 101 BT 410 동글 드라이버 가 설치됩니다 만약 로보플러스를 설치하지 않고 해당 드라이버를 설치하거나 로보플러스설치 시 드라이버가 제대로 설치되지 않았을 경우 아래와 같은 방법으로 드라이버를 수동으로 설치하십시오 PC 에 장치를 연결합니다 드라이버가 설치되어 있지 않을 경우 새 하드웨어 검색 마법사 시작 창이 뜹니다 목록 또는 특정 위치에서 설치 고급 다음 드라이버의 위치를 지정합니다 로보플러스를 설치한 경우 드라이버는 로보플러스설치 폴더의 LN101 폴더에 있습니다 또는 최신 버전의 드라이버를 설치하고자 하는 경우 FTDI Driver Download 페이지에서 VCP Drivers 의 최신 버전을 받으시면 됩니다 Windows 32bit 드라이버 설치 Windows 64bit 드라이버 설치 다음 을 누르면 설치가 진행되며 USB Serial Converter 의 드라이버 설치가 완료됩니다 동일한 방법으로 USB Serial Port 드라이버도 설치해 줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#드라이버-수동-설치"
	},
	"3804": {
		"product": "USB2Dynamixel",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/interface/usb2dynamixel/#동영상"
	},
	"3805": {
		"product": "감속 모터(GM-10A)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote 감속 모터 GM 10A 올로 OLLO 에서 사용되는 모터로 CM 100 에 연결하여 포트 제어를 통해 모터의 회전 방향과 회전 속도를 조절할 수 있습니다 올로 스위치와 전지 박스를 구매하여 연결하면 일반 DC모터와 같이 동작시킬 수 있습니다 제품 호환 가이드 제어기 호환표 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/gm-10a/#개요"
	},
	"3806": {
		"product": "감속 모터(GM-10A)",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "무게 15g 크기 18mm 36mm 24mm 기어비 70 속력 125 RPM 5V 250 RPM 0V 특징 양쪽 축 출력 안전장치 클러치 장착 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/gm-10a/#제품-사양"
	},
	"3807": {
		"product": "감속 모터(GM-10A)",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "MOT MOT 참고 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/gm-10a/#핀-배열"
	},
	"3808": {
		"product": "감속 모터(GM-10A)",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "로보플러스 태스크 감속모터 사용법 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/gm-10a/#사용-방법"
	},
	"3809": {
		"product": "감속 모터(GM-10A)",
		"header1": "[동영상]",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/gm-10a/#사용-방법"
	},
	"3810": {
		"product": "고속 감속모터",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote 고속 감속모터 주의 고속 감속모터는 현재 단종 되어 더 이상 판매되지 않습니다 올로 OLLO 에서 사용되는 모터로 CM 100 에 연결하여 포트 제어를 통해 모터의 회전 방향과 회전 속도를 조절할 수 있습니다 올로 스위치와 전지 박스를 구매하여 연결하면 일반 DC모터와 같이 동작시킬 수 있습니다 제품 호환 가이드 제어기 호환표 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/h_speed_geared_motor/#개요"
	},
	"3811": {
		"product": "고속 감속모터",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "무게 15g 크기 18mm 36mm 24mm 기어비 70 속력 160 RPM 5V 350 RPM 0V 특징 양쪽 축 출력 안전장치 클러치 장착 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/h_speed_geared_motor/#제품-사양"
	},
	"3812": {
		"product": "고속 감속모터",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "MOT MOT 참고 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/h_speed_geared_motor/#핀-배열"
	},
	"3813": {
		"product": "고속 감속모터",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "로보플러스 태스크 감속모터 사용법 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/h_speed_geared_motor/#사용-방법"
	},
	"3814": {
		"product": "고속 감속모터",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/h_speed_geared_motor/#동영상"
	},
	"3815": {
		"product": "모터",
		"header1": "감속모터(GM-10A)",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/#감속모터gm-10a"
	},
	"3816": {
		"product": "모터",
		"header1": "고속 감속모터",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/#고속-감속모터"
	},
	"3817": {
		"product": "모터",
		"header1": "저속 감속모터",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/#저속-감속모터"
	},
	"3818": {
		"product": "모터",
		"header1": "서보모터(SM-10)",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/#서보모터sm-10"
	},
	"3819": {
		"product": "저속 감속모터",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote 저속 감속 모터 로보티즈 드림 ROBOTIS DREAM 1단계에서 사용되는 모터 입니다 제품 호환 가이드 제어기 호환표 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/l_speed_geared_motor/#개요"
	},
	"3820": {
		"product": "저속 감속모터",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "무게 15g 크기 18mm 36mm 24mm 기어비 70 속력 150 RPM 7V 특징 양쪽 축 출력 안전장치 클러치 장착 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/l_speed_geared_motor/#제품-사양"
	},
	"3821": {
		"product": "저속 감속모터",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "MOT MOT 참고 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/l_speed_geared_motor/#핀-배열"
	},
	"3822": {
		"product": "저속 감속모터",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "로보플러스 태스크 감속모터 사용법 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/l_speed_geared_motor/#사용-방법"
	},
	"3823": {
		"product": "저속 감속모터",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/l_speed_geared_motor/#동영상"
	},
	"3824": {
		"product": "서보 모터",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote 서보 모터 SM 10 올로 OLLO 에서 사용되는 모터로 CM 100 에 연결하여 포트 제어를 통해 동작을 제어할 수 있습니다 회전 모드 로 설정하면 감속모터와 동일하게 동작시킬 수 있으며 관절 모드 로 설정하면 회전 속도 힘 와 위치값 지정을 통해 모터를 지정된 위치까지 움직이도록 할 수 있습니다 관절을 움직이거나 조향장치를 움직이는 등 조건에 따라 특정한 각도를 유지해야 하는 곳에 주로 사용합니다 제품 호환 가이드 제어기 호환표 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/servo_motor/#개요"
	},
	"3825": {
		"product": "서보 모터",
		"header1": "제품 사양",
		"header2": "",
		"header3": "",
		"content": "무게 16g 크기 18mm 36mm 27mm horn 기어비 194 속력 85 RPM 0V 특징 위치센서 POT 안전장치 클러치 장착 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/servo_motor/#제품-사양"
	},
	"3826": {
		"product": "서보 모터",
		"header1": "제품 사양",
		"header2": "제어각",
		"header3": "",
		"content": "올로의 서보 모터는 300 까지 위치를 제어할 수 있으며 최소 제어각은 약 29 300 1024 입니다 하지만 올로의 서보모터는 다이나믹셀에 비해 정밀하지 못하고 출력 토크 이 약하기 때문에 서보모터의 원리와 사용법에 대한 기본적인 학습을 위한 용도로 사용되는 것이 알맞으며 정밀한 제어를 필요로 하는 곳에 사용하기에는 적합하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/servo_motor/#제어각"
	},
	"3827": {
		"product": "서보 모터",
		"header1": "핀 배열",
		"header2": "",
		"header3": "",
		"content": "MOT GND ADC 모터의 현재 위치를 아날로그 신호로 출력 MOT 참고 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/servo_motor/#핀-배열"
	},
	"3828": {
		"product": "서보 모터",
		"header1": "사용 방법",
		"header2": "",
		"header3": "",
		"content": "로보플러스 태스크 서보모터 사용법 참조 사용 가능한 어드레스 목록 동작모드 속도 위치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/servo_motor/#사용-방법"
	},
	"3829": {
		"product": "서보 모터",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/motor/servo_motor/#동영상"
	},
	"3830": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "WARNING AX S1은 현재 단종되어 더 이상 판매되지 않습니다 AX S1 은 센서 장치로서 로봇의 눈과 귀의 역할을 합니다 물체의 거리 감지 주변의 밝기 감지 소리 감지 기능이 내장되어 있으며 적외선 리모컨 수신부도 내장되어 있습니다 또한 소리를 발생시키는 기능도 있습니다 AX S1 은 AX 12 와 외형 및 통신 방식은 동일하나 서보 모터로 동작하지는 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#introduction"
	},
	"3831": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "주요사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 37g 해상도 10bit 1024 동작 온도 85 사용 전압 12V 권장 전압 11 1V 최대 전류 40mA Command Signal Digital Packet Protocol Type Half duplex Asynchronous Serial Communication 8bit 1stop No Parity Link Physical TTL Level Multi Drop daisy chain type Connector ID 254 ID 253 통신 속도 7843bps Mbps Feedback Infra red Sensor Internal Mic Temperature Input Voltage IR Remocon Tx Rx Data Material Engineering Plastic ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#specifications"
	},
	"3832": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "통신방법",
		"header2": "",
		"header3": "",
		"content": "AX S1의 통신 방법과 통신과 관련된 하드웨어 구성은 다이나믹셀 AX시리즈와 동일합니다 통신 방법 패킷 구성에 관한 내용은 다이나믹셀 통신 을 참조하시기 바랍니다 통신 하드웨어에 관한 내용은 AX시리즈의 하드웨어 구성 통신 을 참조하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#how-to-communicate"
	},
	"3833": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 다이나믹셀 내부에 존재하는 값으로서 다이나믹셀의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 data를 변경하는 방식으로 다이나믹셀을 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#컨트롤-테이블"
	},
	"3834": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM and RAM",
		"header3": "",
		"content": "RAM Area의 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 그러나 EEPROM Area Data의 경우 값을 설정하면 전원이 Off되어도 그 값이 보존됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#eeprom-and-ram"
	},
	"3835": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "Address",
		"header3": "",
		"content": "Address는Data의 위치 입니다 Dynamixel 에 Data를 쓰거나 읽기 위해서는 Packet에 그 Data가 위치해 있는 Address를 지정해 주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#Address"
	},
	"3836": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "접근",
		"header3": "",
		"content": "다이나믹셀 Data 에는 읽기 전용 과 읽고 쓰기가 가능한 것 두 가지가 있습니다 읽기 전용 은 주로 센싱용으로 사용되는 data 이며 읽고 쓰기 가능한 것 은 구동을 위한 Data 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#access"
	},
	"3837": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "초기값",
		"header3": "",
		"content": "Control Table에서 우측에 표시된 초기값들은 EEPROM 영역 Data인 경우 공장출하 값이고 RAM Area Data인 경우는 전원이 인가되었을 때 갖는 초기값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#initial-value"
	},
	"3838": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "상위바이트/하위바이트",
		"header3": "",
		"content": "Control Table 에는 명칭이 같지만 과 가 뒤에 붙어서 Address가 구분되어 있는 것들이 있습니다 이것은 16bit가 요구되는 Data를 8bit씩 각 Address 에 나누어 표현한 것입니다 이 두 개의 Address 는 하나의 Instruction Packet으로 동시에 write 되어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#highest-lowest-byte"
	},
	"3839": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM Area",
		"header3": "",
		"content": "Address Data Name Description Access Initial Value 0x00 Model Number 모델번호의 하위바이트 13 0x0D 0x01 Model Number 모델번호의 상위바이트 0x00 0x02 Firmware Version 펌웨어 버젼 0x03 ID 다이나믹셀 ID 100 0x64 0x04 Baud Rate 다이나믹셀 통신 속도 0x0x 0x05 Return Delay Time 응답 지연 시간 250 0xFA 16 0x10 Status Return Level 응답 레벨 선택 0x02 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#eeprom-area"
	},
	"3840": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "RAM Area",
		"header3": "",
		"content": "주소 데이터명 설명 접근 초기값 26 0X1A IR Left Fire Data 왼쪽 적외선 센서값 27 0X1B IR Center Fire Data 중앙 적외선 센서값 28 0X1C IR Right Fire Data 오른쪽 적외선 센서값 29 0X1D Light Left Data 왼쪽 조명 센서값 30 0X1E Light Center Data 중앙 조명 센서값 31 0X1F Light Right Data 오른쪽 조명 센서값 32 0X20 IR Obstacle Detected 적외선 물체 감지 유무 33 0X21 Light Detected 조명 감지 유무 35 0X23 Sound Data 현재 소리 크기값 36 0X24 Sound Data Max Hold 최대 소리 감지값 37 0X25 Result Sound Counter 최종 소리 감지 횟수 38 0X26 Sound Detected Time 소리 감지 시간 하위 바이트 39 0X27 Sound Detected Time 소리 감지 시간 상위 바이트 40 0X28 Buzzer Data 버저 음계 41 0X29 Buzzer Data 버저 울림 시간 44 0X2C Registered Instruction의 등록 여부 0X00 46 0X2E IR Remocon Data Received 새 리모콘 데이터 도착 0X00 47 0X2F Lock EEPROM 잠금 0X00 48 0X30 Remocon RX Data 수신 데이터 패킷 하위 바이트 49 0X31 Remocon RX Data 수신 데이터 패킷 상위 바이트 50 0X32 Remocon TX Data 송신 데이터 패킷 하위 바이트 51 0X33 Remocon TX Data 송신 데이터 패킷 상위 바이트 52 0X34 IR Obstacle Detect CompareRD 적외선 물체 감지 기준값 53 0X35 Light Detect CompareRD 조명 감지 기준값 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#ram-area"
	},
	"3841": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3842": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3843": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "펌웨어 버젼 (2)",
		"header3": "",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3844": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3845": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "전송속도 (4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3846": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3847": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "Status Return Level(16)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3848": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "IR 거리감지 기준값",
		"content": "Dynamixel Sensor Module의 적외선 센서값에서 센서 방향에 물체가 있다고 판단하는 기준값을 설정합니다 적외선 센서값이 이 기준값보다 크면 물체가 일정 거리 내에 있는 것이므로 물체감지 유무값 IR Obstacle Detected Address 0x20 의 그 센서에 해당하는 비트가 로 셋팅되며 기준값보다 작으면 일정 거리 밖에 있는 것이므로 으로 셋팅됩니다 거리감지 기준값 IR Obstacle Detect Compare Value 은 ROM Address 0x14 과 RAM Address 0x34 두 곳에 할당이 되어 있는데 전원이 On될 때 EEPROM의 값이 RAM으로 복사됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3849": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "빛감지 기준값",
		"content": "Dynamixel Sensor Module의 조명밝기 센서값에서 조명이 켜져 있다고 판단하는 기준값을 설정합니다 조명밝기 센서값이 이 빛감지 기준값보다 크면 조명의 밝기가 일정 밝기 이상 밝은 것이므로 조명감지 유무 Light Detected 의 그 센서에 해당하는 비트가 로 셋팅되며 기준값보다 작으면 조명이 기준보다 어두운 것이므로 으로 셋팅됩니다 빛감지 기준값 Light Detect Compare Value 은 ROM Address 0x15 과 RAM Address 0x35 두 곳에 할당이 되어 있는데 전원이 On될 때 EEPROM의 값이 RAM으로 복사됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3850": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "적외선 거리센서 값 (Left/Center/Right)",
		"content": "Dynamixel Sensor Module의 거리측정용 적외선 센서값입니다 AX S1에 있는 적외선 발광부에서 강하게 적외선을 쏘면 벽이나 물체에 적외선이 반사되어 되돌아오게 되는데 AX S1에 있는 적외선 수광부 센서에서 이 반사되는 적외선의 양을 측정한 것으로 벽이나 물체가 가까이 있을수록 높은 값으로 측정됩니다 측정된 값은 255의 범위를 가지며 일정거리 안에 들어오면 255만 나올 수 있습니다 적외선 측정 방식이기 때문에 벽이나 물체의 색상이나 표면 질감에 따라 적외선 반사율이 차이가 있으므로 측정값에 차이가 생길 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3851": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "조명밝기 센서값 (Left/Center/Right)",
		"content": "Dynamixel Sensor Module의 조명감지 센서값입니다 적외선 센서값과 동일한 개념이나 적외선 발광부를 켜주지 않고 측정한 것으로 조명에서 나오는 적외선만을 측정할 수 있습니다 따라서 백열전구 같은 적외선이 많이 나오는 조명에서 조명감지 센서값이 측정될 수 있으며 라이터나 촛불과 같은 불도 근거리에서 측정이 가능합니다 측정된 값은 255의 범위를 가집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3852": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "물체감지 유무",
		"content": "AX S1의 적외선 거리센서 값이 거리감지 기준값보다 크면 물체가 감지되었다고 판단하여 물체감지 유무값의 특정 Bit을 1로 셋팅해 줍니다 각 센서가 나타내는 Bit은 아래 표를 참고하십시오 Bit 명칭 Bit 우측 센서 물체감지 조명감지 됨 Bit 중앙 센서 물체감지 조명감지 됨 Bit 좌측 센서 물체감지 조명감지 됨 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3853": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "조명감지 유무",
		"content": "AX S1의 조명밝기 센서값이 빛감지 기준값보다 크면 빛이 감지되었다고 판단하여 조명감지 유무값의 특정 Bit을 1로 셋팅해 줍니다 각 센서가 나타내는 Bit은 물체감지 유무값의 경우와 동일합니다 위 Address 0x20을 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3854": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "소리 크기",
		"content": "AX S1의 마이크로 입력되는 소리의 크기를 측정하여 수치로 나타내어 줍니다 소리 크기는 아래 그림과 같이 상하로 크기가 변하기 때문에 소음이 없을 때 127 128 0x7F 0x80 정도의 수치가 나오며 소리가 클수록 0이나 255 0xFF 에 가까워진다 소리 크기는 1초에 약 3800회 정도 입력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3855": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "최대 소리 크기",
		"content": "AX S1의 소리 크기 중에서 가장 큰 값을 따로 저장해 줍니다 즉 현재 소리 크기가 최대 소리 크기에 저장되어 있는 값보다 더 클 경우에 현재 소리 크기를 최대 소리 크기로 복사합니다 따라서 128보다 낮은 쪽으로의 소리크기는 사실상 무시되며 더 큰 소리가 날수록 그때의 소리 크기가 누적되어 저장된다고 보면 됩니다 아래 그림을 보면 이해하기 쉬울 것입니다 주의할 점은 최대 소리 크기가 누적이 되다가 255 0xFF 가 되어 버리면 더 이상 큰 값이 나올 수 없으므로 값이 계속 255로 유지가 됩니다 따라서 최대 소리 크기를 측정해야 하는 상황일 때 최대 소리 크기에 을 써주고 측정을 해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3856": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "소리감지 횟수",
		"content": "AX S1은 일정 수준 이상의 큰 소리가 날 경우 1회씩 카운트 해 주 는 기능이 있습니다 대표적인 예로 박수소리의 횟수를 카운트 하는 것이 가능합니다 하지만 한번의 박수 소리를 여러 번으로 오인식 하는 것을 막기 위해 1회 카운트 되면 약 80msec동안은 더 이상 카운트 하지 않으며 마지막으로 카운트한 후 800msec이 지나면 소리감지 횟수에 카운트한 값이 저장됩니다 소리감지 횟수가 증가된 시점을 알 수 있도록 하기 위해 내부적으로 카운트를 하고 있다가 800msec가 지난 후 소리감지 횟수에 값을 저장해 주면서 내부 카운트는 0으로 초기화됩니다 아래 그림을 보면 좀더 이해하기 쉬울 것입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3857": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "소리발생 시간",
		"content": "센서 모듈 AX S1에는 소리감지 횟수를 카운트 할 때마다 그 순간의 시간을 저장해 주는 기능이 있습니다 이 기능은 소리의 방향 탐지를 위해 제공되는 것으로 최소한 2개의 AX S1이 필요하며 소리의 속도 음속 섭씨 20도에서 약 343m sec 를 이용하여 두 AX S1의 마이크에 소리가 들어오기까지의 시간차를 이용한 것입니다 소리발생 시간은 내부적으로 시간을 세다가 65535를 반복하여 카운트 한다 소리감지 횟수가 증가할 때 현재 카운트 값을 저장합니다 따라서 2개의 AX S1을 적당한 거리를 띄워 놓고 소리발생 시간을 Broadcasting 명령을 이용하여 동시에 0으로 초기화 시킨 후 소리가 발생하면 두 AX S1에는 소리의 방향에 따라 시간차가 발생하게 됩니다 정면일 경우에는 거의 같은 시간으로 감지되겠지만 측면에 음원이 있을 경우 AX S1의 떨어진 거리에 비례하는 시간차가 발생합니다 이것을 가지고 음원의 방향을 대략적으로 추정할 수 있습니다 아래 그림을 보면 쉽게 이해할 수 있습니다 이 AX S1의 소리발생시간은 약 096 msec마다 모두 카운트하여 0부터 다시 카운트하게 된다 따라서 소리의 속도를 이용하여 계산해 보면 소리는 이 카운트 1당 02mm 정도의 거리를 이동하며 두 AX S1간의 거리는 70cm안에 있어야 합니다 예를들어 두 AX S1이 10cm 떨어져 있을 경우 위의 방식을 이용하여 측정할 경우 두 AX S1의 소리발생 시간은 최대 5000 까지 차이가 날 수 있습니다 5000정도 차이가 날 경우 음원이 완전히 90도 좌 혹은 우측에 있는 것이다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3858": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "버저 음계",
		"content": "센서 모듈 AX S1에는 버저가 장착되어 있어서 간단한 비프음을 낼 수 있습니다 버저 음계는 총 52개의 음을 낼 수 있는데 각 옥타브별로 온음 반음이 있기 때문에 다양한 음계를 재생할 수 있습니다 버저 음계값은 다음표와 같이 할당되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3859": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "버저 울림 시간",
		"content": "AX S1은 버저의 울림 시간을 조절하는 기능이 있습니다 1초 단위로 조절이 가능한데 최소 길이는 3초로 되어 있으며 최대로 길게 하면 5초까지 재생할 수 있습니다 즉 3을 넣으면 3초간 버저가 울리며 50 이상의 값을 넣으면 그와 무관하게 5초까지만 버저가 울립니다 또한 버저 울림이 끝나면 자동으로 버저 울림 시간이 0으로 초기화 됩니다 AX S1의 버저 울림 시간에는 두 가지의 특별한 기능이 있습니다 첫번째로 버저를 계속 울려주는 기능입니다 버저 울림 시간에 254를 써주고 나서 버저 음계에 원하는 음계의 번호를 써주면 버저가 멈추지 않고 계속 울리게 됩니다 버저 울림을 멈추기 위해서는 버저 울림 시간에 0을 써주면 됩니다 두번째 기능은 특수 멜로디를 재생해주는 기능입니다 버저 울림 시간에 255의 값을 써 주고 버저 음계에 26의 값을 써 주면 각 번호에 해당되는 27 가지의 다양한 멜로디를 재생할 수 있습니다 멜로디 재생이 끝나면 버저울림 시간이 자동으로 0으로 초기화 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3860": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "Registered Instruction",
		"content": "값 의미 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 0으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3861": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "새 리모콘 데이터 도착",
		"content": "센서 모듈 AX S1은 전방에 적외선 리모콘 센서 모듈이 장착되어 있기 때문에 AX S1끼리 적외선 리모콘 통신을 할 수 있다 바이트 단위로 전송이 가능합니다 주의할 점은 AX S1의 적외선 발광부는 전방 좌 우 3방향에 장착되어 있기 때문에 어느 방향으로든 적외선 리모콘 데이터를 전송할 수 있지만 적외선 리모콘 센서는 전방에만 장착되어 있기 때문에 리모콘 데이터 수신은 한정된 각도에서만 가능합니다 적외선 리모콘 데이터가 센서에 수신되면 새 리모콘 데이터 도착 값이 2로 변합니다 바이트가 수신되었다는 뜻이다 받은 리모콘 데이터를 읽어가면 자동으로 0으로 초기화 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3862": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "Lock",
		"content": "값 의미 EEPROM영역을 수정할 수 있습니다 EEPROM영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3863": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "받은 리모콘 데이터",
		"content": "적외선 리모콘 센서에 수신된 데이터가 저장되는 곳입니다 이 값을 읽어가면자동으로 새 리모콘 데이터 도착 값이 0으로 초기화 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3864": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "보낼 리모콘 데이터",
		"content": "적외선 발광부를 통해서 전송하고자 하는 리모콘 데이터를 써주는 곳입니다 2바이트의 값을 써주는 즉시 리모콘 데이터가 전송됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3865": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "거리감지 기준값",
		"content": "Address 0x14의 거리감지 기준값을 Control Table의 RAM영역에 저장하는 곳입니다 현재 AX S1의 적외선 센서의 경우 원거리까지 감지하기 위해 적외선을 강하게 발사하고 있기 때문에 약 5cm이내의 근거리에서는 항상 값이 최대치가 나오는 등 근거리에서 정상적인 감지가 불가능합니다 따라서 AX S1은 근거리에서의 정확한 감지를 위해 저감도 모드도 지원하는데 만약 거리감지 기준값에 0을 써줄 경우 저감도 모드로 전환됩니다 저감도 모드에서는 원거리 센서 성능이 많이 떨어지지만 근거리 감지의 경우 최대치로 포화 되지 않기 때문에 정확하고 섬세한 감지가 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3866": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "컨트롤 테이블",
		"header2": "ID (3)",
		"header3": "빛감지 기준값",
		"content": "Address 0x15의 빛감지 기준값을 Control Table의 RAM영역에 저장하는 곳입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#control-table-description"
	},
	"3867": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "조립하기",
		"header2": "",
		"header3": "",
		"content": "아래는 옵션 프레임과 혼을 이용한 결합구조의 예입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#조립하기"
	},
	"3868": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#참고자료"
	},
	"3869": {
		"product": "Integrated Sensor(AX-S1)",
		"header1": "참고자료",
		"header2": "Drawings",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ax-s1/#drawings"
	},
	"3870": {
		"product": "조도 센서(CDS-10)",
		"header1": "조도 센서 CDS-10",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cds-10/"
	},
	"3871": {
		"product": "조도 센서(CDS-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "빛의 양을 감지 할 수 있는 센서 입니다 센서의 감지 범위 내에 빛의 밝기 정도를 알 수 있습니다 제어기별 연결장치 제어기별 연결장치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cds-10/#개요"
	},
	"3872": {
		"product": "조도 센서(CDS-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 10 크기 18mm 30mm 8mm 측정 가능 감지 범위 2Cm 25Cm 측정 가능 감지 각도 45 도 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cds-10/#사양"
	},
	"3873": {
		"product": "조도 센서(CDS-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "사용안함 GND ADC 물체 감지 상태 출력 3V 5V 사용안함 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결 시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cds-10/#핀-배열-정보"
	},
	"3874": {
		"product": "Color Sensor(CS-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "다양한 색상을 감지 할 수 있는 센서 입니다 빨간색 파란색 초록색 노란색 흰색 검정색 총 6가지의 색상을 구별할 수 있습니다 제어기별 연결장치 제어기별 연결장치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cs-10/#개요"
	},
	"3875": {
		"product": "Color Sensor(CS-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 4g 크기 24mm 18mm 12mm 감지영역 6mm 18mm ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cs-10/#사양"
	},
	"3876": {
		"product": "Color Sensor(CS-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "SIG1 컬러선택 신호 GND ADC 해당 색상의 세기를 아날로그 전압으로 출력 3V 5V SIG2 컬러선택 신호 SIG1 SIG2 ADC RED 색상 세기 GREEN 색상 세기 BLUE 색상 세기 무의미한 값 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결 시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cs-10/#핀-배열-정보"
	},
	"3877": {
		"product": "Color Sensor(CS-10)",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/cs-10/#동영상"
	},
	"3878": {
		"product": "거리 센서(DMS-80)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "일정 거리 이내의 물체나 벽을 감지할 때 사용할 수 있습니다 적외선 센서에 비해 색깔에 영향을 거의 받지 않으며 정확한 거리를 측정할 수 있습니다 제어기별 연결장치 제어기별 연결장치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/dms-80/#개요"
	},
	"3879": {
		"product": "거리 센서(DMS-80)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 4g 감지 거리 10 80 cm 권장 공급 전압 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/dms-80/#사양"
	},
	"3880": {
		"product": "거리 센서(DMS-80)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "5V GND ADC 거리 센서 감지값을 아날로그 신호로 출력 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/dms-80/#핀-배열-정보"
	},
	"3881": {
		"product": "거리 센서(DMS-80)",
		"header1": "센서 출력",
		"header2": "",
		"header3": "",
		"content": "반사율 90 의 흰 종이와 반사율 18 의 회색 종이에 대한 거리 변화에 따른 아날로그 출력 전압과 이를 RoboPlus에서 확인한 그래프입니다 색과 반사율이 변해도 거리에 따른 출력값 변화가 거의 없는 것을 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/dms-80/#센서-출력"
	},
	"3882": {
		"product": "거리 센서(DMS-80)",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "RoboPlus Task 로보플러스 태스크의 DMS 80 섹션 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/dms-80/#튜토리얼"
	},
	"3883": {
		"product": "자이로 센서(GS-12)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "센서의 각속도를 측정할 수 있습니다 로봇이 얼마나 기울어졌는지 혹은 어느 방향으로 힘을 받아 움직였는지를 계산할 수 있습니다 로봇이 움직일 때 중심을 잡게 하는 등 여러가지 응용 동작을 프로그래밍 할 수 있습니다 제어기별 연결장치 제어기별 연결장치 참고 위와 같이 IC가 직사각형이면 신형 정사각형이면 구형으로 구분이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/gs-12/#개요"
	},
	"3884": {
		"product": "자이로 센서(GS-12)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 크기 23mm 23mm 10mm 동작 온도 40 85 각속도 측정 범위 300 300 샘플링 주기 140Hz 감도 33mV dps 권장 공급 전압 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/gs-12/#사양"
	},
	"3885": {
		"product": "자이로 센서(GS-12)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "X축 핀 ADC 각속도값을 아날로그 신호로 출력 GND 5V Y축 핀 5V GND ADC 각속도값을 아날로그 신호로 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/gs-12/#핀-배열-정보"
	},
	"3886": {
		"product": "자이로 센서(GS-12)",
		"header1": "센서 출력",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/gs-12/#센서-출력"
	},
	"3887": {
		"product": "자이로 센서(GS-12)",
		"header1": "센서 출력",
		"header2": "신형 센서",
		"header3": "",
		"content": "항목 최대값 최소값 출력값 510 300 100 각속도 300 300 전압값 ockquote 기준 전압값은 5V입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/gs-12/#센서-출력"
	},
	"3888": {
		"product": "자이로 센서(GS-12)",
		"header1": "센서 출력",
		"header2": "구형 센서",
		"header3": "",
		"content": "항목 최대값 최소값 출력값 455 250 45 각속도 300 300 전압값 23 23 23 ockquote 기준 전압값은 5V입니다 각속도가 0일 때 가만히 있을 때 출력값은 약250 입니다 어느 한 축으로 급격히 회전하였을 때 최대 455 최소 45의 값이 출력되며 300 s의 각속도를 나타냅니다 이 때 부호는 방향을 나타냅니다 온도에 따라 약 의 오차가 있을 수 있습니다 기준 전압값 혹은 회로 노이즈로 인해 값의 오차가 있을 수 있습니다 따라서 몇 개의 값을 평균내어 사용하는 것을 권장합니다 샘플링을 할 때는 로봇이 움직이지 않아야 합니다 RoboPlus Task에서 사용자 장치 파라미터 를 이용하여 값을 읽어올 수 있습니다 다음과 같이 샘플링을 할 수 있습니다 약 1초마다 10회 값을 읽어서 평균을 내고 그 값을 기준값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/gs-12/#센서-출력"
	},
	"3889": {
		"product": "자이로 센서(GS-12)",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "RoboPlus Task 로보플러스 태스트의 사용자 장치 파라미터 섹션 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/gs-12/#튜토리얼"
	},
	"3890": {
		"product": "적외선 센서 어레이",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "적외선 센서 어레이는 센서 장치로서 일곱개의 적외선 센서가 장착되여 있습니다 각 적외선 센서는 흰 색 검은 색 을 구분 할 수 있습니다 또한 소리를 발생시키는 기능도 있습니다 적외선 센서 어레이는 근거리에서의 적합한 감지를 위한 센서입니다 적외선의 발 수신부 끝단에서 5cm 이내에서 사용하도록 최적화되였습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#개요"
	},
	"3891": {
		"product": "적외선 센서 어레이",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 무게 18g 해상도 10bit 1024 동작 온도 85 사용 전압 15V 권장 전압 11 1V 최대 전류 100mA Command Signal Digital Packet Protocol Type Half duplex Asynchronous Serial Communication 8bit 1stop No Parity Link Physical TTL Level Multi Drop daisy chain type Connector ID 254 ID 253 통신 속도 7843bps Mbps Feedback Input Voltage IR Sensor data x7 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#사양"
	},
	"3892": {
		"product": "적외선 센서 어레이",
		"header1": "사용법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#사용법"
	},
	"3893": {
		"product": "적외선 센서 어레이",
		"header1": "사용법",
		"header2": "LED",
		"header3": "",
		"content": "적외선 센서 감지 값이 검은 색 감지 기준값보다 작을 경우 해당 LED가 켜집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#led"
	},
	"3894": {
		"product": "적외선 센서 어레이",
		"header1": "사용법",
		"header2": "자동으로 검은색 감지 기준값 찾기",
		"header3": "",
		"content": "3Pin 커넥터를 통해 전원이 공급되는 상태에서 정면 우측 버튼을 한번 누르면 일곱 LED가 반짝이면서 검은 색 감지 기준값 자동 찾기를 진행합니다 버튼을 다시 한번 누르면 검은 색 감지 기준값 자동 찾기가 끝나면서 일곱 적외선 센서의 검은 색 감지 기준값이 자동으로 설정됩니다 자동설정된 기준값 MAX VALUE MIN VALUE 입니다 그중 MAX VALUE는 버튼이 두번 눌린 사이 적외선 센서 최대 감지값 이고 MIN VALUE는 버튼이 두번 눌린 사이 적외선 센서 최소 감지값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#자동으로-검은색-감지-기준값-찾기"
	},
	"3895": {
		"product": "적외선 센서 어레이",
		"header1": "사용법",
		"header2": "RESET",
		"header3": "",
		"content": "3Pin 커넥터를 통해 전원이 공급되는 상태에서 정면 좌측 버튼을 한번 누르면 적외선 센서 어레이가 RESET됩니다 검은 색 감지 기준값이 달라지지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#reset"
	},
	"3896": {
		"product": "적외선 센서 어레이",
		"header1": "사용법",
		"header2": "통신 방법",
		"header3": "",
		"content": "적외선 어레이의 통신 방법 및 통신과 관련된 하드웨어 구성은 다이나믹셀 AX시리즈와 동일합니다 통신 방법 패킷 구성에 관한 내용은 다이나믹셀의 통신 을 참조하시기 바랍니다 통신 하드웨어에 관한 내용은 AX시리즈의 통신 하드웨어 구성 을 참조하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#통신-방법"
	},
	"3897": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 다이나믹셀 내부에 존재하는 값으로서 다이나믹셀의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 data를 변경하는 방식으로 다이나믹셀을 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블"
	},
	"3898": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM and RAM",
		"header3": "",
		"content": "RAM Area의 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 그러나 EEPROM Area Data의 경우 값을 설정하면 전원이 Off되어도 그 값이 보존됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#eeprom-and-ram"
	},
	"3899": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "Address",
		"header3": "",
		"content": "Address는Data의 위치 입니다 Dynamixel 에 Data를 쓰거나 읽기 위해서는 Packet에 그 Data가 위치해 있는 Address를 지정해 주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#address"
	},
	"3900": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "접근",
		"header3": "",
		"content": "다이나믹셀 Data 에는 읽기 전용 과 읽고 쓰기가 가능한 것 두 가지가 있습니다 읽기 전용 은 주로 센싱용으로 사용되는 data 이며 읽고 쓰기 가능한 것 은 구동을 위한 Data 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#접근"
	},
	"3901": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "초기값",
		"header3": "",
		"content": "Control Table에서 우측에 표시된 초기값들은 EEPROM 영역 Data인 경우 공장출하 값이고 RAM Area Data인 경우는 전원이 인가되었을 때 갖는 초기값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#초기값"
	},
	"3902": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "상위바이트/하위바이트",
		"header3": "",
		"content": "Control Table 에는 명칭이 같지만 과 가 뒤에 붙어서 Address 가 구분되어 있는 것들이 있습니다 이것은 16bit가 요구되는 Data를8bit씩 각Address 에 나누어 표현한 것입니다 이 두 개의 Address는 하나의 Instruction Packet으로 동시에 write 되어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#상위바이트하위바이트"
	},
	"3903": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 데이터명 설명 접근 초기값 0X00 Model Number 모델 번호의 하위 바이트 74 0X4A 0X01 Model Number 모델 번호의 상위 바이트 0X01 0X02 Version Firmware 펌웨어 버전 정보 0X03 ID 다이나믹셀 ID 100 0X64 0X04 Baud Rate 다이나믹셀 통신 속도 0X01 0X05 Return Delay Time 응답 지연 시간 250 0XFA 0X06 IR Threshold 1번 적외선 물체감지 기준값의 하위 바이트 16 0X10 0X07 IR Threshold 1번 적외선 물체감지 기준값의 상위 바이트 0X03 0X08 IR Threshold 2번 적외선 물체감지 기준값의 하위 바이트 16 0X10 0X09 IR Threshold 2번 적외선 물체감지 기준값의 상위 바이트 0X03 10 0X0A IR Threshold 3번 적외선 물체감지 기준값의 하위 바이트 16 0X10 11 0X0B IR Threshold 3번 적외선 물체감지 기준값의 상위 바이트 0X03 12 0X0C IR Threshold 4번 적외선 물체감지 기준값의 하위 바이트 16 0X10 13 0X0D IR Threshold 4번 적외선 물체감지 기준값의 상위 바이트 0X03 14 0X0E IR Threshold 5번 적외선 물체감지 기준값의 하위 바이트 16 0X10 15 0X0F IR Threshold 5번 적외선 물체감지 기준값의 상위 바이트 0X03 16 0X10 Status Return Level 응답 레벨 0X02 17 0X11 IR Threshold 6번 적외선 물체감지 기준값의 하위 바이트 16 0X10 18 0X12 IR Threshold 6번 적외선 물체감지 기준값의 상위 바이트 0X03 20 0X14 IR Threshold 7번 적외선 물체감지 기준값의 하위 바이트 16 0X10 21 0X15 IR Threshold 7번 적외선 물체감지 기준값의 상위 바이트 0X03 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#eeprom-영역"
	},
	"3904": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 데이터명 설명 접근 초기값 24 0X18 IR Fire Data 1번 적외선 센서값의 하위 바이트 25 0X19 IR Fire Data 1번 적외선 센서값의 상위 바이트 26 0X1A IR Fire Data 2번 적외선 센서값의 하위 바이트 27 0X1B IR Fire Data 2번 적외선 센서값의 상위 바이트 28 0X1C IR Fire Data 3번 적외선 센서값의 하위 바이트 29 0X1D IR Fire Data 3번 적외선 센서값의 상위 바이트 30 0X1E IR Fire Data 4번 적외선 센서값의 하위 바이트 31 0X1F IR Fire Data 4번 적외선 센서값의 상위 바이트 32 0X20 IR Fire Data 5번 적외선 센서값의 하위 바이트 33 0X21 IR Fire Data 5번 적외선 센서값의 상위 바이트 34 0X22 IR Fire Data 6번 적외선 센서값의 하위 바이트 35 0X23 IR Fire Data 6번 적외선 센서값의 상위 바이트 36 0X24 IR Fire Data 7번 적외선 센서값의 하위 바이트 37 0X25 IR Fire Data 7번 적외선 센서값의 상위 바이트 40 0X28 Buzzer Data 버저 음계 41 0X29 Buzzer Data 버저 울림 시간 42 0X2A AUTO Threshold 자동으로 물체감지 기준값 찾는 모드 0X00 43 0X2B IR Obstacle Detected 적외선 물체 감지 유무 44 0X2C Registered Instruction의 등록 여부 0X00 47 0X2F Lock EEPROM 잠금 0X00 48 0X30 IR Threshold 1번 적외선 물체감지 기준값의 하위 바이트 16 0X10 49 0X31 IR Threshold 1번 적외선 물체감지 기준값의 상위 바이트 0X03 50 0X32 IR Threshold 2번 적외선 물체감지 기준값의 하위 바이트 16 0X10 51 0X33 IR Threshold 2번 적외선 물체감지 기준값의 상위 바이트 0X03 52 0X34 IR Threshold 3번 적외선 물체감지 기준값의 하위 바이트 16 0X10 53 0X35 IR Threshold 3번 적외선 물체감지 기준값의 상위 바이트 0X03 54 0X36 IR Threshold 4번 적외선 물체감지 기준값의 하위 바이트 16 0X10 55 0X37 IR Threshold 4번 적외선 물체감지 기준값의 상위 바이트 0X03 56 0X38 IR Threshold 5번 적외선 물체감지 기준값의 하위 바이트 16 0X10 57 0X39 IR Threshold 5번 적외선 물체감지 기준값의 상위 바이트 0X03 58 0X3A IR Threshold 6번 적외선 물체감지 기준값의 하위 바이트 16 0X10 59 0X3B IR Threshold 6번 적외선 물체감지 기준값의 상위 바이트 0X03 60 0X3C IR Threshold 7번 적외선 물체감지 기준값의 하위 바이트 16 0X10 61 0X3D IR Threshold 7번 적외선 물체감지 기준값의 상위 바이트 0X03 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#ram-영역"
	},
	"3905": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3906": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "모델명 (0)",
		"content": "다이나믹셀의 모델 번호입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3907": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "펌웨어명 (2)",
		"content": "다이나믹셀 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3908": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID (3)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3909": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "전송속도(4)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 254 0xFE 까지 사용 가능하며 산출 공식은 다음과 같습니다 Baudrate BPS 000 000 Value 값 통신속도 bps 오차율 1M 000 500 000 000 400 000 000 250 000 000 200 000 000 16 115200 124 34 초기값 57600 794 103 19200 160 207 9600 160 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3910": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time (5)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3911": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "검은 색 감지 기준값",
		"content": "IR 7의 검은색 값을 설정합니다 적외선 센서값과 검은색 감지 기준값에 따라 아래와 같이 행동합니다 값 검은색 감지 LED 센서값 기준값 해당 BIT ON 센서값 기준값 해당 BIT OFF 전원이 켜지면 검은 색 감지 기준값 RAM은 이 값을 초기 값으로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3912": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "적외선 센서 값 (1 7)",
		"content": "IR ARRAY의 적외선 센서값입니다 IR ARRAY에 있는 적외선 발광부에서 강하게 적외선을 쏘면 벽이나 물체에 적외선이 반사되어 되돌아오게 되는데 IR ARRAY에 있는 적외선 수광부 센서에서 이 반사되는 적외선의 양을 측정한 것으로 벽이나 물체가 가까이 있을수록 물체 표면의 색이 밝을 수록 높은 값으로 측정됩니다 측정된 값은 1023의 범위를 가집니다 적외선 측정 방식이기 때문에 벽이나 물체의 표면 질감에 따라 적외선 반사율이 차이가 있으므로 측정값에 차이가 생길 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3913": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "버저 음계",
		"content": "센서 모듈 IR ARRAY에는 버저가 장착되어 있어서 간단한 비프음을 낼 수 있습니다 버저 음계는 총 52개의 음을 낼 수 있는데 각 옥타브별로 온음 반음이 있기 때문에 다양한 음계를 재생할 수 있습니다 버저 음계값은 다음 표와 같이 할당되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3914": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "버저 울림 시간",
		"content": "IR ARRAY은 버저의 울림 시간을 조절하는 기능이 있습니다 1초 단위로 조절이 가능한데 최소 길이는 3초로 되어 있으며 최대로 길게 하면 5초까지 재생할 수 있습니다 즉 3을 넣으면 3초간 버저가 울리며 50 이상의 값을 넣으면 그와 무관하게 5초까지만 버저가 울립니다 또한 버저 울림이 끝나면 자동으로 버저 울림 시간이 0으로 초기화 됩니다 IR ARRAY의 버저 울림 시간에는 두 가지의 특별한 기능이 있습니다 첫번째로 버저를 계속 울려주는 기능입니다 버저 울림 시간에 254를 써주고 나서 버저 음계에 원하는 음계의 번호를 써주면 버저가 멈추지 않고 계속 울리게 됩니다 버저 울림을 멈추기 위해서는 버저 울림 시간에 0을 써주면 됩니다 두번째 기능은 특수 멜로디를 재생해주는 기능입니다 버저 울림 시간에 255의 값을 써 주고 버저 음계에 26의 값을 써 주면 각 번호에 해당되는 27 가지의 다양한 멜로디를 재생할 수 있습니다 멜로디 재생이 끝나면 버저 울림 시간이 자동으로 0으로 초기화 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3915": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "자동으로 검은 색 감지 기준값 찾는 모드",
		"content": "검은 색 감지 기준값 자동 찾기의 시작 마침 을 설정하는 파라미터입니다 에서 로 변할 때 자동찾기를 시작하고 에서 으로 변할 때 자동찾기를 마칩니다 IR ARRAY의 각 적외선 센서의 감지 값이 검은 색 감지 기준값보다 작으면 검은 색을 감지하였다고 판단하여 아래와 같이 검은 색 감지 유무값의 특정 Bit을 1로 셋팅해 줍니다 동시에 해당 LED가 켜집니다 BIT 명칭 Bit 1번 적외선 센서에 검은 색 감지 Bit 2번 적외선 센서에 검은 색 감지 Bit 3번 적외선 센서에 검은 색 감지 Bit 4번 적외선 센서에 검은 색 감지 Bit 5번 적외선 센서에 검은 색 감지 Bit 6번 적외선 센서에 검은 색 감지 Bit 7번 적외선 센서에 검은 색 감지 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3916": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction",
		"content": "값 의미 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 0으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3917": {
		"product": "적외선 센서 어레이",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Lock",
		"content": "값 의미 EEPROM영역을 수정할 수 있습니다 EEPROM영역을 수정하지 못합니다 주의 Lock이 1로 설정되면 전원을 껐다 켜야 0으로 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ir-array/#컨트롤-테이블-설명"
	},
	"3918": {
		"product": "적외선 센서(IRSS-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "적외선을 발생시켜 반사되어 들어오는 양을 측정하는 방식입니다 적외선의 특성상 같은 거리의 물체도 색상이나 밝기에 따라 반사되는 양이 달라지므로 물체와의 거리를 정밀하게 측정하기에는 적합하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/irss-10/#개요"
	},
	"3919": {
		"product": "적외선 센서(IRSS-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 4g 크기 24mm 18mm 12mm ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/irss-10/#사양"
	},
	"3920": {
		"product": "적외선 센서(IRSS-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "SIG1 Low신호를 유지해야 함 GND ADC IR 수광부에서 감지한 값을 아날로그 신호로 출력 3V SIG2 High신호를 주면 IR LED를 켤 수 있음 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결 시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/irss-10/#핀-배열-정보"
	},
	"3921": {
		"product": "적외선 센서(IRSS-10)",
		"header1": "거리와 센서값의 관계",
		"header2": "",
		"header3": "",
		"content": "흰색 물체에 대한 거리에 따른 센서값의 변화를 대략적으로 나타낸 그래프입니다 센서값은 물체의 색상이나 주변 환경에 따라서도 달라질 수 있습니다 적외선 센서는 발광부와 수광부가 분리되어 있기 때문에 아래 그래프에서와 같이 지나치게 가까운 곳의 물체는 적외선이 반사되어 수광부로 들어오는 각도가 맞지 않아서 오히려 센서값이 줄어드는 구간이 생기는 것을 알 수 있습니다 또한 15cm 이상 떨어진 물체는 거의 감지할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/irss-10/#거리와-센서값의-관계"
	},
	"3922": {
		"product": "적외선 센서(IRSS-10)",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "RoboPlus Task 로보플러스 태스크의 적외선 센서 섹션 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/irss-10/#튜토리얼"
	},
	"3923": {
		"product": "적외선 센서(IRSS-10)",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "제어기별 연결장치 docs kr parts controller controller compatibility ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/irss-10/#동영상"
	},
	"3924": {
		"product": "자석센서 (MGSS-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "자석을 감지하는 센서 입니다 자석을 센서 가까이 대거나 멀리 떨어뜨림에 따라 접촉 센서와 동일하게 동작 합니다 접촉 센서와 다른 점은 자석이 센서의 정면에서 약 5mm까지 떨어져 있더라도 자석이 있음을 감지 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/mgss-10/#개요"
	},
	"3925": {
		"product": "자석센서 (MGSS-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 3g 크기 24mm 18mm 12mm ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/mgss-10/#사양"
	},
	"3926": {
		"product": "자석센서 (MGSS-10)",
		"header1": "센서 감지 범위",
		"header2": "",
		"header3": "",
		"content": "자석의 극과 센서의 정면까지의 최대 거리 5Cm 주의 자석센서의 정면을 제외한 부분은 감지거리가 5mm 보다 짧으면 감지 안될 수 있음 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/mgss-10/#센서-감지-범위"
	},
	"3927": {
		"product": "자석센서 (MGSS-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "사용안함 GND ADC 자석 인식 상태 출력 3V 5V 사용안함 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결 시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/mgss-10/#핀-배열-정보"
	},
	"3928": {
		"product": "자석센서 (MGSS-10)",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "데이터 읽기는 접촉센서와 비슷합니다 로보플러스 태스크의 접촉센서 섹션 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/mgss-10/#튜토리얼"
	},
	"3929": {
		"product": "자석센서 (MGSS-10)",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/mgss-10/#동영상"
	},
	"3930": {
		"product": "동작 감지 센서(PIR-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "움직임을 감지 할 수 있는 센서 입니다 센서의 감지 범위 내에 물체의 움직임이 발생하는 것을 알 수 있습니다 제어기별 연결장치 제어기별 연결장치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/pir-10/#개요"
	},
	"3931": {
		"product": "동작 감지 센서(PIR-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 10g 크기 18mm 30mm 8mm 측정 가능 감지 범위 20cm 2m 측정 가능 감지 각도 45 도 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/pir-10/#사양"
	},
	"3932": {
		"product": "동작 감지 센서(PIR-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "사용안함 GND ADC 물체 감지 상태 출력 3V 5V 사용안함 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결 시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/pir-10/#핀-배열-정보"
	},
	"3933": {
		"product": "온습도 센서(TMS-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "주변 환경의 온도 및 토양중의 상대습도를 감지 할 수 있는 센서입니다 센서의 다리 부분을 토양 속에 다 넣어야 정확한 상대습도를 측정할 수 있습니다 제어기별 연결장치 제어기별 연결장치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tms-10/#개요"
	},
	"3934": {
		"product": "온습도 센서(TMS-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 4g 크기 30mm 72mm 5mm 측정 가능 감지 범위 20cm 2m 측정 가능 감지 각도 45 도 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tms-10/#사양"
	},
	"3935": {
		"product": "온습도 센서(TMS-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "사용안함 GND ADC 물체 감지 상태 출력 3V 5V SIG2 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tms-10/#핀-배열-정보"
	},
	"3936": {
		"product": "온습도 센서(TMS-10)",
		"header1": "SIG2 신호에 따른 센서 기능",
		"header2": "",
		"header3": "",
		"content": "SIG ADC 온도 관련 값 상대습도 관련 값 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 전원이 켜져있는 상태에서 연결 시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tms-10/#sig2-신호에-따른-센서-기능"
	},
	"3937": {
		"product": "온도 센서(TPS-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "온도의 변화를 측정 할 수있는 센서입니다 온도 센서의 열 감지 부분에 열을 가하면 동작 합니다 제어기별 연결장치 제어기별 연결장치 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tps-10/#개요"
	},
	"3938": {
		"product": "온도 센서(TPS-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 18g 크기 케이블 포함 1M 측정 가능 온도 범위 20 120 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tps-10/#사양"
	},
	"3939": {
		"product": "온도 센서(TPS-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "사용안함 GND ADC 온도 인식 상태 출력 3V 5V 사용안함 주의 제어기의 전원이 반드시 꺼져있는 상태에서 제품을 연결해주세요 주의 전원이 켜져있는 상태에서 연결 시 오동작 및 고장을 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tps-10/#핀-배열-정보"
	},
	"3940": {
		"product": "온도 센서(TPS-10)",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/tps-10/#동영상"
	},
	"3941": {
		"product": "접촉 센서(TS-10)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "올로 OLLO 에서 물체와의 접촉을 감지하는데 사용되는 감압식 스위치식 센서입니다 범퍼카처럼 물체와의 충돌을 감지할 필요가 있는 곳에 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ts-10/#개요"
	},
	"3942": {
		"product": "접촉 센서(TS-10)",
		"header1": "사양",
		"header2": "",
		"header3": "",
		"content": "무게 4g 크기 24mm 18mm 15mm ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ts-10/#사양"
	},
	"3943": {
		"product": "접촉 센서(TS-10)",
		"header1": "핀 배열 정보",
		"header2": "",
		"header3": "",
		"content": "사용 안함 GND ADC 스위치 눌림 상태 출력 사용 안함 주의 케이블을 잘못된 방향이나 무리한 힘으로 끼우거나 빼면 커넥터가 파손될 수 있으니 주의해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ts-10/#핀-배열-정보"
	},
	"3944": {
		"product": "접촉 센서(TS-10)",
		"header1": "튜토리얼",
		"header2": "",
		"header3": "",
		"content": "로보플러스 태스크의 접촉센서 섹션 참조 ",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ts-10/#튜토리얼"
	},
	"3945": {
		"product": "접촉 센서(TS-10)",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/parts/sensor/ts-10/#동영상"
	},
	"3946": {
		"product": "Manipulator-H",
		"header1": "Manipulator-H",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/"
	},
	"3947": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "",
		"header3": "",
		"content": "manual applies Dynamixel PRO based Robotis Manipulator parameters manual based default values manipulator configuration provided ArmSDK based Windows7 Visual Studio 2010 strongly recommended proficiency Dynamixel PRO units utilized ArmSDK radians rad millimeters mm Modifying wiring components performances stated guide result adverse operations manual utilizes term arm Manipulator robot interchangeably describe product guide also refer Dynamixel Pro actuators simply Dynamixel servo motor actuator Last Updated November 2014 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#introduction"
	},
	"3948": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Safety Information",
		"header3": "",
		"content": "DANGER Information appearing DANGER concerns protection personnel immediate imminent hazards avoided result immediate serious personal injury loss life addition equipment damage Keep away robot moving Do touch robot wet hands Turn off power robot robot problematic WARNING Information appearing WARNING concerns protection personnel equipment potential hazards result personal injury loss life addition equipment damage Setup robot environment dust humidity robot always attached based powered robot wiring checked prior powering robot connection power supplly check prior powering Do change wiring Robotis Manipulator powered CAUTION Information appearing CAUTION concerns protection personnel equipment software data hazards result minor personal injury equipment damage Keep robot workspace clear object Ensure wiring tangled up every joint Make sure USB2Dynamixel PC does interfere robot moving ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#safety-information"
	},
	"3949": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Package Contents",
		"header3": "",
		"content": "Name Quantity Manipulator USB2Dyanmixel 4P Cable 500mm Power Cable 200mm 4P expansion hub Power expansion hub Gripper optional Support optional Base Plate optional 3x8 wrench bolt 20 3x12 wrench bolt 20 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#package-contents"
	},
	"3950": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Layout",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#layout"
	},
	"3951": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Layout",
		"header3": "Dimension of Manipulator-H",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#layout"
	},
	"3952": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Layout",
		"header3": "Dimension of Manipulator-L",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#layout"
	},
	"3953": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Layout",
		"header3": "Wiring",
		"content": "diagram above illustrates joints connected daisy chain serial configuration 4P Cable Joint labeled 1st connects USB2Dynamixel 4P Cable USB2Dynamixel connects PC USB hub Dynamixel Pro powered power supply power expansion hub Joints model L42 10 S300 separately powered instead power comes 4P Cable obtain 4P Power Cables ROBOTIS see section Preparation ii Cable refer Installation Manipulator info ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#layout"
	},
	"3954": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Specifications",
		"header3": "",
		"content": "Item Description DOF DOF Payload 3kg Operating voltage 24V Resolution Joint rad rad 251000 251000 pulse Joint rad rad 251000 251000 pulse Joint rad rad 251000 251000 pulse Joint rad rad 251000 251000 pulse Joint rad rad 151875 151875 pulse Joint rad rad 151875 151875 pulse Dynamixel Pro Model Name Joint H54 200 S500 Joint H54 100 S500 Joint H42 20 S300 Operating Range Joint rad rad Joint rad rad Joint rad rad Joint rad rad Joint rad rad Joint rad rad Default ID Joint ID Joint ID Joint ID Joint ID Joint ID Joint ID Motor type Brushless DC Servo H54 Series Coreless DC Motor H42 Series Position sensor type Absolute Encoder Homing Incremental Encoder Control Communications RS485 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#specifications"
	},
	"3955": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "D-H Configuration",
		"header3": "",
		"content": "DH Parameter Link Link Length mm Link Twist rad Joint Offset mm Joint Angle rad Angle rad 265 69 30 258 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#d-h-configuration"
	},
	"3956": {
		"product": "Manipulator-H",
		"header1": "Introduction",
		"header2": "Home Position",
		"header3": "",
		"content": "diagram below shows home position Dynamixel PROs Robotis Manipulator ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#home-position"
	},
	"3957": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#getting-started"
	},
	"3958": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Prerequisite",
		"header3": "",
		"content": "ArmSDK based Window OS Visual Studio 2010 ArmSDK trajectory generated MotionPlay class instance utilizes QueryPerformanceCounter requires use thread sharing said thread reach 100 highly recommended PC least dual core based Numerical IK implements Damped Least Square Method reach target acquiring joint angle allows joints go initial position point then return initial pose allow perform tests Manipulator Allow sufficient workspace prior setup clearing objects arm vicinity Always ensure Manipulator properly fixed base plate prior operations otherwise arm movements cause damage physical injury Supply power Manipulator making sure cables properly connected While powered do touch cables cause erroneous operations damage When handling Manipulator do so carefully fingers stuck frames Manipulator operates erroneously quickly cut off power turning power supply off While Manipulator operation keep out workspace ensure no objects enter workspace during operations ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#prerequisite"
	},
	"3959": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Preparation",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#preparation"
	},
	"3960": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Preparation",
		"header3": "Power Supply",
		"content": "Manipulator requires 24V operations Ensure power supply capable supplying 24V 15A higher ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#preparation"
	},
	"3961": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Preparation",
		"header3": "4P Cable",
		"content": "4P Cable connects Manipulator USB2Dynamixel ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#preparation"
	},
	"3962": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Preparation",
		"header3": "Power Cable",
		"content": "power cable supplies power Manipulator additional power 4P cables contact ROBOTIS obtain them specifications listed above ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#preparation"
	},
	"3963": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Preparation",
		"header3": "USB2Dynamixel",
		"content": "USB2Dynamixel sends ArmSDK commands Manipulator Connect USB2Dynamixel PC USB hub ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#preparation"
	},
	"3964": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Product Assembly",
		"header3": "",
		"content": "참고 content below based optional base plate differs actual base plate Rest fix joint Manipulator photo left external wiring arm Label shows pair 4P cables power connector these connect joint shown right picture Label shows 4P connector power connectors these connect power expansion hub 4P cable connects extension Once connections complete fix arm base plate shown photo above joint fixed plate joint Connect USB2Dynamixel hub 4P cable connect another port 4P hub extension 주의 Connect USB2Dynamixel PC USB hub USB hub acts isolator protect PC possible unexpected surges caused arm action ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#product-assembly"
	},
	"3965": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "USB2Dynamixel Setting",
		"header3": "",
		"content": "Communication Description TTL AX pin MX communicate pin Dynamixel RS485 RX pin MX Pro communicate pin Dynamixel RS232 CM CM 510 communicate these controllers Communicate other RS 232 devices 참고 manipulator based RS 485 communications so make sure set dongle 485 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#usb2dynamixel-setting"
	},
	"3966": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Manipulator Test",
		"header3": "",
		"content": "Test arm Dynamixel Wizard check anomalies DynamixelWizard included RoboPlus suite RoboPlus downloaded ROBOTIS home page Support Downloads http www robotis com xe download 주의 Do NOT download RoboPlus v2 Use RoboPlus v1 Manipulator Install run RoboPlus click Dynamixel Wizard button start Dynamixel Wizard ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#manipulator-test"
	},
	"3967": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Manipulator Test",
		"header3": "Operating the Manipulator",
		"content": "DANGER Before starting Dynamixel Wizard ensure arm fixed base plate then extend arm Otherwise cause physical harm USB2Dynamixel PC wiring complete From PC check COM port number USB2Dynamixel Select Port Settings tab click Advanced button change latency time 16 default After changing COM port settings supply 24V arm course means wiring complete 주의 Always ensure powering While power do change wires otherwise cause undesired operations picture left COM port number USB2Dynamixel should connected arm Click continue Once connected make sure 1000000bps box checked selected Then click Search arm default baud rate Mbps Once search complete arm components Dynamixel PROs listed left Click individual Dynamixel PRO display contents Control Table Dynamixel Pro move operate Torque Mode So always make sure Torque Mode prior sending moving commands Torque Enable located address number 562 value means means off Turn Torque Enable joints pose arm become rigid check applying small force Afterwards click joint Now verify arm moves properly changing Goal Position Move end effector joint 90 degrees move joint 90 degrees set Goal Position Dynamixel PRO model H42 20 S300 75938 L42 10 S300 1024 Once Goal Position set visually verify joint rotated 90 degrees actually get Dynamixel PRO move respective Goal Position click Apply button setting value no movement make sure Torque Enable turned set Set Goal Position back set position original position Click ID Set Goal Position 1000 500 L42 model actually get Dynamixel PRO move respective Goal Position click Apply button setting value no movement make sure Torque Enable turned set Set Goal Position back set position original position Do procedure joint ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#manipulator-test"
	},
	"3968": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Manipulator Test",
		"header3": "Goal Position Values with Respect to Rotation",
		"content": "Goal Position value determines rotational position Dynamixel PRO Model Name Relationship between angle deg position value H54 200 S500 H54 100 S500 180 180 deg 251000 251000 H42 20 S300 180 180 deg 151875 151875 L54 50 S500 180 180 deg 125700 125700 L54 30 S500 180 180 deg 144180 144180 L42 20 S300 180 180 deg 2048 2048 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#manipulator-test"
	},
	"3969": {
		"product": "Manipulator-H",
		"header1": "Getting Started",
		"header2": "Manipulator SDK",
		"header3": "",
		"content": "Preparation Before using Robotis Manipulator SDK following pre requisites ArmSDK Eigen Package http eigen tuxfamily org version Later Installation Package Download unzip Eigen Package Start Visual Studio go Project Properties VC Directories Include Directories set Eigen source directory Repeat procedure ii include examples include directories Once preparations complete press F7 key compile build ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#manipulator-sdk"
	},
	"3970": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#examples"
	},
	"3971": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "ArmMonitor",
		"header3": "",
		"content": "ArmMonitor allows viewing joint current position target position end effector pose joint parameters Velocity Acceleration Position Gain Velocity Gain Change values table below see changes Joint values table press key denote decrease shown units denote increase shown units ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armmonitor"
	},
	"3972": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "ArmMonitor",
		"header3": "How to Use ArmMonitor",
		"content": "ArmMonitor01 start ArmMonitor01 create new project once created press Ctrl F5 keys run need enter COM port number baud rate Simply enter values Succeed open USB2Dynamixel should appear onscreen followed Press key move first pose Use keyboard move arm following table list baud rate values corresponding speed Robotis Manipulator default value 1Mbps following table list baud rate values corresponding speed Robotis Manipulator default value 1Mbps Baudrate Number baudrate 400 bps 57 600 bps 115 200 bps 000 000 bps 000 000 bps 000 000 bps photo below arm arrival pose Press Ctrl F5 keys simultaneously screen should appears like picture above From ArmMonitor01 change joint target position joint parameter move arm Use directional keys move cursor Use keys lower values increase From picture screen output red area shows joints current pose Present Value end effector pose red area shows target pose Goal Value joints red area shows parameters joints Velocity Acceleration Position Gain Gain Gain Velocity Gain Gain Values joints Calc rad DYNAMIXEL rad show red ares due difference between point origin DH Configuration Calc rad calculated angle DH DYNAMIXEL rad servo cursor control Goal Value Joint Parameter Goal Value Arm의 Calc rad value enclosed red frame increased key unit 180 rad After adjusting joint check Manipulator follows ArmMonitor02 ArmMonitor02 allows direct control end effector Control end effector done ComputeIK function where moves joint solution position rad EndEffector pose table setup run ArmMonitor02 follow procedure ArmMonitor01 As ArmMonitor01 asked enter COM port number baud rate should also see Succeed open USB2Dynamixel followed Press key move first pose arm moves initial pose photo below arm arrival pose different values end effector depicted red areas screen output image above due difference Dynamixel Pro Goal Position Present Position values gear backlash DH point origin shows end effector pose calculations kinematics actual pose Press key increase end effector pose value 180 rad increases 2mm Visually verify arm movement every time changing position Arm Monitor Source Description cmd process cpp void DrawPage void printf Present Value Arm printf Calc rad unit rad EndEffector Pose printf Joint1 mm printf Joint2 mm printf Joint3 mm printf Joint4 Roll rad printf Joint5 Pitch rad printf Joint6 Yaw rad printf Goal Value Arm printf Calc rad unit rad printf Joint1 printf Joint2 printf Joint3 printf Joint4 printf Joint5 printf Joint6 printf Joint Parameter printf Velocity Acceleration Pos Pos Pos Vel Vel printf Joint1 printf Joint2 printf Joint3 printf Joint4 printf Joint5 printf Joint6 printf Status GotoCursur GOAL JOINT1 ROW CALC ANGLE RAD COL ockquote above DrawPage code ArmMonitor voidGotoCursur int row int col COORD pos col row SetConsoleCursorPosition GetStdHandle STD OUTPUT HANDLE pos ockquote allows cursor jump between rows columns These functions allows directional keys control cursor location void MoveUpCursor void MoveDownCursor void MoveLeftCursor void MoveRightCursor void UpDownValue int dir giOldRow giRow giOldCol giCol GotoCursur STATUS ROW STATUS COL printf giRow GOAL JOINT6 ROW UpDownGoalValue dir else giRow GOAL JOINT6 ROW amp amp giRow PARAMETER JOINT6 ROW UpDownJointParameter dir WriteValue GotoCursur giOldRow giOldCol giRow giOldRow giCol giOldCol ockquote UpDownValue allows cursor increase decrease values void initialize void initialize function described below gpArmComm new Pro Arm Comm Win ockquote gpArmComm class Pro Arm Comm Win Pro Arm Comm Win includes ID baud num related aspects gpArmComm Set Init Param Port Baud ockquote Sets Port Number Baudrate pointer gpRobotisArm AddJoint double LinkLength double LinkTwist double JointOffset double JointAngle double MaxAngleInRad double MinAngleInRad int MaxAngleValue int MinAngleValue double MaxAngleLimitInRad double MinAngleLimitInRad unsigned int Dynamixel ID ockquote Input joint DH joint parameters gpArmComm Arm ID Setup gpRobotisArm GetArmIDList ockquote From AddJoint rearrange ID List gpArmKinematics new Kinematics gpRobotisArm ockquote gpRobotisArm AddJoint RobotInfo Class generates Kinematics Class gpArmKinematics SetMaximumNumberOfIterationsForIK 60 ockquote function calculates IK max number iterations case 60 gpArmKinematics SetConvergenceCondition 001 ockquote Sets convergence IK 1st value determine solution second value maximum allowed gvdGoalCalculationAngleRad resize gpRobotisArm GetRobotInfo size ockquote Setup target pose value rad gvdRealCalculationAngleRad resize gpRobotisArm GetRobotInfo size ockquote Current pose value rad gvdGoalDynamixelAngleRad resize gpRobotisArm GetRobotInfo size ockquote Target joint position value rad gvdRealDynamixelAngleRad resize gpRobotisArm GetRobotInfo size ockquote Actual joint position value rad gviGoalDynamixelAngleUnit resize gpRobotisArm GetRobotInfo size ockquote Actual joint target position value value gviRealDynamixelAngleUnit resize gpRobotisArm GetRobotInfo size ockquote Actual joint position value value gviPositionPGain resize gpRobotisArm GetRobotInfo size ockquote Position Gain value gviPositionIGain resize gpRobotisArm GetRobotInfo size ockquote Position Gain value gviPositionDGain resize gpRobotisArm GetRobotInfo size ockquote Position Gain value gviVelocityPGain resize gpRobotisArm GetRobotInfo size ockquote Velocity Gain value gviVelocityIGain resize gpRobotisArm GetRobotInfo size ockquote Velocity Gain value gviDynamixelVelocity resize gpRobotisArm GetRobotInfo size ockquote Velocity value gviDynamixelAcceleration resize gpRobotisArm GetRobotInfo size ockquote Acceleration value gvdGoalCalculationAngleRad gpArmKinematics GetCurrentAngle gvdRealCalculationAngleRad gpArmKinematics GetCurrentAngle ockquote From gpArmKinematics mCurrentAngle current pose value initialize gvdGoal CalculationAngleInRad gvdRealCalculationAngleInRad gvdAngleGapCalcandDynamixelRad resize gpRobotisArm GetRobotInfo size gvdAngleGapCalcandDynamixelRad ML PI 4831 ML PI 180 ML PI 4831 ML PI 180 ockquote function introduced due differences between point origin actual joints point origin DH Configuration Once size angle adjustment assigned per joint enter difference between point origin joint actual point origin gvdGoalDynamixelAngleRad ML PI ML PI ML PI ockquote GoalDynamixelAngleRad initial pose default values gviPositionPGain fill DEFAULT POSITION GAIN gviPositionIGain fill DEFAULT POSITION GAIN gviPositionDGain fill DEFAULT POSITION GAIN ockquote Position Gain functions Default gain value 64 Gain fill contains every joint PID values individually gpArmComm Arm Torque ockquote function gets initialized moving arm initial pose gpArmComm Arm Set Position PID Gain DEFAULT POSITION GAIN DEFAULT POSITION GAIN DEFAULT POSITION GAIN ockquote Sets manipulator joints PID gain values gpArmTrajectory new TrajectoryGenerator gpArmKinematics gpArmTrajectory Set P2P gvdRealDynamixelAngleRad gvdAngleGapCalcandDynamixelRad gvdGoalDynamixelAngleRad gvdAngleGapCalcandDynamixelRad ockquote generated Kinematics StartPose EndPose TotalTime AccelTime get inputted trajectory Trajectory generated P2P StartPose current pose EndPose ArmMonitor initial pose TotalTime 0sec where AccelTime 0sec information trajectory generation go Program MotionEngine Trajectory Generator gpMotionPlayer new MotionPlay gpArmKinematics gpArmTrajectory ockquote MotionPlay CurrentTime ElapsedTime get initialized setp up MotionProfile These required variables kinematics trajectory motion gpMotionPlayer Set Time Period ockquote Motion time period 5msec tempMotionTimer Start gvdGoalCalculationAngleRad gpMotionPlayer NextStep amp ErrorStatus gvdGoalDynamixelAngleRad gvdGoalCalculationAngleRad gvdAngleGapCalcandDynamixelRad gviGoalDynamixelAngleUnit gpRobotisArm Rad2Value gvdGoalDynamixelAngleRad CommResult gpArmComm Arm Set JointPosition gviGoalDynamixelAngleUnit gvdGoalCalculationAngleRad gpMotionPlayer NextStep amp ErrorStatus gvdGoalDynamixelAngleRad gvdGoalCalculationAngleRad gvdAngleGapCalcandDynamixelRad tempMotionTimer Stop tempMotionTimer Wait Period tempMotionTimer GetElapsedTime ockquote functions above set motion time periods where functions performed loop during their duration First set Control Time Period gets matched tempMotionTimer Start tempMotionTimer Stop tempMotionTimer Wait Period tempMotionTimer GetElapsedTime ockquote Measure elapsed start stop time then subtract difference elapsed calculated time set Control Time Period 5msec case target pose current step obtained algorithm below gvdGoalCalculationAngleRad gpMotionPlayer NextStep amp ErrorStatus gvdGoalDynamixelAngleRad gvdGoalCalculationAngleRad gvdAngleGapCalcandDynamixelRad gviGoalDynamixelAngleUnit gpRobotisArm Rad2Value gvdGoalDynamixelAngleRad CommResult gpArmComm Arm Set JointPosition gviGoalDynamixelAngleUnit gvdGoalCalculationAngleRad gpMotionPlayer NextStep amp ErrorStatus gvdGoalDynamixelAngleRad gvdGoalCalculationAngleRad gvdAngleGapCalcandDynamixelRad ockquote First NextStep gets current step target angles Configuration actual Dynamixel PRO start point Configuration differ difference taken account joint Goal Position Value set again Rad2Value resulting Arm Set JointPosition moves manipulator successful manipulator communications Arm Set JointPosition returns value gvdRealDynamixelAngleRad gpRobotisArm Value2Rad gviRealDynamixelAngleUnit gvdRealCalculationAngleRad gvdRealDynamixelAngleRad gvdAngleGapCalcandDynamixelRad ockquote After motion complete print joint actual pose rad calculated pose rad gpArmKinematics Forward gvdRealCalculationAngleRad amp gRealPose gpArmKinematics Forward gvdGoalCalculationAngleRad amp gGoalPose ockquote Factor current angle goal angle Forward Kinematics end effectot actual goal pose gRealPose gGoalPose assigned gpArmComm Arm Set JointAcceleration DEFAULT JOINT ACCELERATION gviDynamixelAcceleration fill DEFAULT JOINT ACCELERATION ockquote Sets every joint acceleration value individually DEFAULT JOINT ACCELERATION values gpArmComm Arm Set JointVelocity DEFAULT JOINT VELOCITY gviDynamixelVelocity fill DEFAULT JOINT VELOCITY ockquote Sets every joint velocity value individually DEFAULT JOINT VELOCITY 9000 values void UpDownGoalValue int dir void UpDownJointParameter int dir void UpDownValue int dir ockquote UpdownGoalValue allows change goal pose UpDownJointParameter allows changes joint parameters Velocity Acceleration Position Gain Velocity Gain UpDownValue combines functions ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armmonitor"
	},
	"3973": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimplePtoP",
		"header3": "",
		"content": "WARNING Product move fast example When testing example keep safe distance able cut power off case undesired operation SimplePtoP end effector move point P1 P2 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpleptop"
	},
	"3974": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimplePtoP",
		"header3": "How to Use SimplePtoP",
		"content": "start SimplePtoP follow procedure ArmMonitor Then press Ctrl F5 keys run asked COM port number baud rate succeeded then see Succeed open USB2Dynamixel followed Press key move first pose Press key move arm initial pose Then press key begin P2P Motion photo below arm initial pose SimplePtoP displays joints pose rad SimplePtoP prssing cause motion pause Press ESC key end ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpleptop"
	},
	"3975": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimplePtoP",
		"header3": "SimplePtoP Source Description",
		"content": "vecd P1 P2 P1 resize RobotisArm GetRobotInfo size P2 resize RobotisArm GetRobotInfo size ockquote P1 P2 sets every joint position P1 fill P1 gvdAngleGapCalcandDynamixelRad P2 fill P2 gvdAngleGapCalcandDynamixelRad ockquote P1 fill P2 fill input every joint position rad individually Differences between DH Configuration point origin actual point origin taken consideration so P1 P2 adjusted accordingly ArmComm Arm Set Position PID Gain 64 ockquote Joint Position gain values respectively ArmComm Arm Set JointVelocity ockquote Joint velocity value denotes max velocity ArmComm Arm Set JointAcceleration ockquote Joint acceleration value denotes max velocity ArmTrajectory ClearMF ockquote MotionProfile clears set space ArmTrajectory Set P2P P1 P2 10 ockquote Sets P1 P2 Start EndPose case P1 rad P2 rad Trajectory P1 P2 ArmTrajectory Set P2P P2 P1 10 ockquote Sets P1 P2 Start EndPose case P1 rad P2 rad Trajectory P2 P1 MotionPlayer Info Reload ockquote MotionProfile calls Info Robot Kinematics Trajectory MoionPlayer Initialize ockquote MotionProfile Step initialized MotionPlayer Set Time Period DEFAULT Ctrl TIME PERIOD ockquote Sets time period value lesser then default value gets inputted ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpleptop"
	},
	"3976": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimpleIK",
		"header3": "",
		"content": "WARNING Use example pose safety risks When testing example keep safe distance able cut power off case undesired operation Allows operation end effector pose position orientation Roll Pitch Yaw keys SimpleIK EndEffector Pose table Control EndEffector Position 5mm orientation 180 rad Position 5mm orientation 180 rad Position Position Position Orientation Roll Orientation Pitch Orientation Yaw ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpleik"
	},
	"3977": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimpleIK",
		"header3": "How to Use SimpleIK",
		"content": "start SimpleIK start new project just like SimplePtoP Then press Ctrl F5 ekys begin SimpleIK asked COM port baud rate numbers succeeded see Succeed open USB2Dynamixel followed Press key move first pose Press key begin arm moves initial pose shown below windows pops up arms moves initial pose values printed joints angles rad Press keys ex move end effector SimpleIK key control 3rd value controls end effector position increasing delta 5mm amounts Visually verify arm movement every time changing position Press keys times key controls end effector roll orientation Roll Pitch Yaw change 180 rad per keystroke Visually verify arm movement every time changing position ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpleik"
	},
	"3978": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimpleIK",
		"header3": "SimpleIK Source Description",
		"content": "temp DesiredPose CurrentPose DesiredPose delta ArmKinematics ComputeIK DesiredPose amp angle rad angle rad amp ErrorStatus ErrorStatus ARMSDK NO ERROR cout Answer endl cout angle rad endl endl ArmComm Arm Set JointPosition RobotisArm Rad2Value angle rad gvdAngleGapCalcandDynamixelRad else ErrorStatus amp ARMSDK ACCEPTABLE ERROR cout No IK solution endl cout But calcuation result acceptable endl char answer true cout Do want make Robot move cin answer answer answer answer answer break else cout Invaild Answer endl answer answer ArmComm Arm Set JointPosition RobotisArm Rad2Value angle rad gvdAngleGapCalcandDynamixelRad else continue else cout No IK Solution endl continue ArmKinematics Forward angle rad amp CurrentPose ockquote code shows pressing key program runs press moves end effector pose coordinate delta 5mm no errors end effector move according keystroke joints radians Press key goal pose position delta incrememts Despite having errors being able get IK moving allowed Do want make Robot move appears onscreen press key move end effector coordinate 5mm Then joints pose rad displayed WARNING Product go pose fast pressing key posing safety risk When testing example keep safe distance able cut power off case undesired operation When error too large IK unrealizable No IK Solution displayed end effector remain sample code above broken down below ArmKinematics ComputeIK DesiredPose amp angle rad angle rad amp ErrorStatus joints set desired pose taking input DesiredPose angle rad Once DesiredPose values go CurrentPose then arm moves coordinate DesirePose gets set again angle rad CurrentPose consistent joints angles IK solution desired pose joint angles amp angle rad get set amp ErrorStatus error sent Dynamixel ArmComm Arm Set JointPosition RobotisArm Rad2Value angle rad gvdAngleGapCalcandDynamixelRad ockquote ComputeIK function sets array joint position amp angle rad ArmKinematics Forward angle rad amp CurrentPose ockquote Once moved desired pose angle rad array gets end effector pose runs forward kinematics then CurrentPose sets pose function returns end effectors transform matric 4x4 else temp DesiredPose CurrentPose matd DesiredRotation Algebra GetOrientationMatrix delta angle rad Algebra GetOrientationMatrix CurrentPose Roll CurrentPose Pitch CurrentPose Yaw vecd DesiredRPY Algebra GetEulerRollPitchYaw DesiredRotation DesiredPose Roll DesiredRPY DesiredPose Pitch DesiredRPY DesiredPose Yaw DesiredRPY ArmKinematics ComputeIK DesiredPose amp angle rad angle rad amp ErrorStatus ErrorStatus ARMSDK NO ERROR cout Answer endl cout angle rad endl endl ArmComm Arm Set JointPosition RobotisArm Rad2Value angle rad gvdAngleGapCalcandDynamixelRad else ErrorStatus amp ARMSDK ACCEPTABLE ERROR cout No IK solution endl cout But caluation result acceptable endl char answer true cout Do want make Robot move cin answer answer answer answer answer break else cout Invaild Answer endl answer answer ArmComm Arm Set JointPosition RobotisArm Rad2Value angle rad gvdAngleGapCalcandDynamixelRad else continue else cout No IK Solution endl continue ArmKinematics Forward angle rad amp CurrentPose ockquote goal pose runs IK my moving roll gets increased delta rad end effector moves whatever IK solved displays joint poses rad Despite having errors being able get IK moving allowed Do want make Robot move appears onscreen press key turn end effector roll axis delta angle rad Then joints pose rad displayed roll roll delta delta angle rad 180 rad When error too large IK unrealizable No IK Solution displayed end effector remain sample code above broken down below Press key move roll delta angle rad desired rotation matrix then obtain following Where code shown below matd DesiredRotation Algebra GetOrientationMatrix delta angle rad Algebra GetOrientationMatrix CurrentPose Roll CurrentPose Pitch CurrentPose Yaw ockquote CurrentPose Orientation roll increase delta angle rad GoalPose DesiredRotation vecd DesiredRPY Algebra GetEulerRollPitchYaw DesiredRotation ockquote DesiredRotation roll pitch yaw ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpleik"
	},
	"3979": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimpleTorqueFK",
		"header3": "",
		"content": "Turns Manipulator joints torque off When torque goes off Forward Kinematics runs putputs joints pose rad end effector position orientation ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpletorquefk"
	},
	"3980": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimpleTorqueFK",
		"header3": "How to Use SimpleTorqueOnOffandFK",
		"content": "start SimpleTorqueOnOffandFK start new project just like SimplePtoP Then press Ctrl F5 keys begin SimpleTorqueOnOffandFK Input COM port baud rate numbers succeeded see Succeed open USB2Dynamixel then torque gets turned off Press Enter key turn torque arm joints pose rad end effector pose rad displayed joints Press Enter again turn torque off display Torque Off Press Enter key once again turn torque values displayed again ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpletorquefk"
	},
	"3981": {
		"product": "Manipulator-H",
		"header1": "Examples",
		"header2": "SimpleTorqueFK",
		"header3": "SimpleTorqueOnOffandFK Source Description",
		"content": "true char temp getch temp 27 break else temp 13 gbArmTorque ArmComm Arm Torque Off std cout Torque Off std endl gbArmTorque false else ArmComm Arm Torque cout Torque endl ArmComm Arm Get JointPosition amp angle unit COMM RXSUCCESS printf Communication Error Occurred cout JointAngle endl angle rad RobotisArm Value2Rad angle unit cout angle rad gvdAngleGapCalcandDynamixelRad endl endl cout Angle Dynamixel endl angle rad RobotisArm Value2Rad angle unit cout angle rad endl endl cout EndEffector Pose endl Pose3D CurrentPose ArmKinematics Forward angle rad gvdAngleGapCalcandDynamixelRad amp CurrentPose cout CurrentPose endl cout CurrentPose endl cout CurrentPose endl cout roll CurrentPose Roll endl cout pitch CurrentPose Pitch endl cout yaw CurrentPose Yaw endl endl gbArmTorque true else continue ockquote program aborts without starting pressing Esc key While program running press Enter key toggle torque between off When torque gets turned joints end effector pose get outputted onscreen happens every state Press Esc key then Enter key arm remains sample code above broken down below joint angles Dynamixel angles so taken consideration Angle Dynamixel output actual angle Dynamixel ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#simpletorquefk"
	},
	"3982": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#manipulator-sdk-programming"
	},
	"3983": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3984": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "RobotInfo",
		"content": "When building Manipulator ARM SDK use Addjoint function generating Instance RobotInfo Class AddJoint gets values Parameter actuator max min turn angle rad value well actuator ID number min max turn angles joint angle limits ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3985": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Kinematics",
		"content": "Forward Kinematics FK Inverse Kinematics IK calculated once instance kinematics class generated Kinematics class get instance RobotInfo class ComputeIK factor pose end effector joint values well initial joint angle error IK result joint angles returned error status then IK properly solved Roll Pitch Yaw calculated rotation transformation matrix taken consideration entering pose ComputeIK ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3986": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Trajectory Generating",
		"content": "TrajectoryGenerator class generates instance arm trajectory SDK Point Point Linear Circular generate trajectory arm trajectory then Set PTP Set LIN Set Circular gripper then Set PTPwithHand Set LINwithHand Set CIRCwithHand ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3987": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Velocity Profile",
		"content": "SDK Velocity Profile does take max velocity max acceleration consideration Trapezoidal Velocity Profile initial final velocity always set following methods generate velocity profile Joint Space Cartesian Space where independent other ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3988": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Set_PTP",
		"content": "Set PTP function determines poses manipulator initial final factoring Trapezoidal Velocity Profile receives velocity time total time Initial final pose rad joint angle mm rad roll pitch yaw When generating trajectory recommended factor joint angles ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3989": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Set_LIN",
		"content": "Set LIN function generates point coordinates robot straight trajectory factors initial final pose Linear Euler Interpolation orientation ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3990": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Set_CIRC",
		"content": "Set CIRC function generates point coordinates robot circular trajectory factors initial final pose sets point origin area proceeds trajectory MotionPlay vector generation ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3991": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Trajectory Following",
		"content": "When moving generated trajectory TrajectorGenerator class instance just use NextStep function MotionPlay MotionPlay class accounts trajectoryGenerator class control period MotionPlay default value 8ms changed SetTimePeriod TimePeriod then 8ms default value applied ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3992": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Description",
		"header3": "Pro_Arm_Comm_Win",
		"content": "Pro Arm Comm Win utilizes DYNAMIXEL Protocol Windows version DYNAMIXEL SDK Pro Arm Comm Win functions utilizes DYNAMIXEL Pro control read write Control Table values useful writing separate code ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-description"
	},
	"3993": {
		"product": "Manipulator-H",
		"header1": "Manipulator SDK Programming",
		"header2": "SDK Flowchart",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#sdk-flowchart"
	},
	"3994": {
		"product": "Manipulator-H",
		"header1": "Firmware Recovery",
		"header2": "",
		"header3": "",
		"content": "When Dynamixel detection fails ensure properly wired problems persists restore Dynamixel firmware shown below WARNING After firmware restoration need set ID baud rate values again Always make sure set USB2Dynamixel switch 485 Restoring firmware From Dynamixel Wizard click icon begin Select corresponding COM port number USB2Dynamixel Firmware restore process steps explained Always connect one Dynamixel time Pick COM port number With incorrect number Dynamixel cannot automatically detected Always make sure get port number right Click Search Disconnect connect Dynamixel Next button should become clickable Upon successful detection Next button clickable Pick right model Pick right type list result problems During restoration While restoring LED blink Do cut power off during stage Control Table settings set default values ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#firmware-recovery"
	},
	"3995": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#references"
	},
	"3996": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "AMSDK Define",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-define"
	},
	"3997": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "AMSDK Define",
		"header3": "Pose3D",
		"content": "Data Fields double double Roll Pitch Yaw Description Position Orientation Roll Pitch Yaw elements ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-define"
	},
	"3998": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "AMSDK Define",
		"header3": "timeprofile",
		"content": "Data Fields double ta tc td totaltime double a0 a1 a2 double distance distance1 int Method Description Trapezoidal Velocity Profile elements distance1 used circular trajectory ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-define"
	},
	"3999": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "AMSDK Define",
		"header3": "MotionPose",
		"content": "Data Fields vecd StartPose EndPose Pose3D StartPose3D ViaPose3D EndPose3D Position3D CenterPosition int Method Description Declaration manipulator step StartPose EndPose trajectory method ViaPose CenterPosition circular trajectory ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-define"
	},
	"4000": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "ARMSDK Math",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-math"
	},
	"4001": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "ARMSDK Math",
		"header3": "static matd GetOrientationMatrix(double Roll, double Pitch, double Yaw)",
		"content": "Parameter double Roll double Pitch double Yaw Returns Rotation Matrix Description orientation Roll Pitch Yaw input orientation matrix output ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-math"
	},
	"4002": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "ARMSDK Math",
		"header3": "static matd GetTransformMatrix(double Roll, double Pitch, double Yaw, double x, double y, double z)",
		"content": "Parameter double Roll double Pitch double Yaw double double double Returns Transformation Matrix Description orientation Roll Pitch Yaw Position input transform Matrix output ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-math"
	},
	"4003": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "ARMSDK Math",
		"header3": "static vecd rot2omega(mat3d Rerr)",
		"content": "Parameter Rotation Matrix Returns angular velocity array Description rotation matrix gets input outputs velocity array ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-math"
	},
	"4004": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "ARMSDK Math",
		"header3": "static vecd ConvertRad2Deg(vecd q)",
		"content": "Parameter radian Array Returns Degree Array Description rad gets input change value return ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-math"
	},
	"4005": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "ARMSDK Math",
		"header3": "static vecd GetEulerRollPitchYaw(matd T)",
		"content": "Parameter rotation Matrix Transformation Matrix Returns array Roll Pitch Yaw Description vecd rpy rpy atan2 rpy atan2 sqrt rpy atan2 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#armsdk-math"
	},
	"4006": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "MotionEngine",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#motionengine"
	},
	"4007": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "MotionEngine",
		"header3": "Error.h",
		"content": "void ErrorCheck int Error Parameter int Error Return void Description No error ARMSDK NO ERROR 0x00 IK solution does exist ARMSDK NO IK SOLUTION 0x01 No IK solution allowable error ARMSDK ACCEPTABLE ERROR 0x02 Joints next previous step large difference angle ARMSDK TOO MUCH ANGLE CHANGE 0x04 Angle within JointData limit ARMSDK OUT OF JOINT RANGE 0x08 types ERROR ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#motionengine"
	},
	"4008": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "MotionEngine",
		"header3": "JointData.h",
		"content": "void SetJointID unsigned int ID Parameter unsigned int ID Return void Description Assign Joint ID void SetJointAngle double JointAngle Parameter double JointAngle Return void Description Set Joint Angle void SetMinAngleInRad double MinAngleInRad Parameter double MinAngleInRad Return void Description Set actuator min angle rad Value utilized MotionEngine iii RobotInfo rad2value function void SetMaxAngleInRad double MaxAngleInRad Parameter double MaxAngleInRad Return void Description Set actuator max angle rad Value utilized MotionEngine iii RobotInfo rad2value function void SetMinAngleInValue int Min AngleValue Parameter int Min AngleValue Return void Description Set actuator min value utilized MotionEngine iii RobotInfo rad2value value2rad functions void SetMaxAngleInValue int Max AngleValue Parameter int Max AngleValue Return void Description Set actuator max value Utilized MotionEngine iii RobotInfo rad2value value2rad functions void SetMinAngleLimitInRad double MinAngleLimitInRad Parameter double MinAngleLimitInRad Return void Description Set joint min angle rad Also sets value void SetMaxAngleLimitInRad double MaxAngleLimitInRad Parameter double MaxAngleLimitInRad Return void Description Set joint max angle rad Also sets value unsigned int GetID void Parameter void Return unsigned int ID Description Returns joint ID number void SetJointDataDH double LinkLength double LinkTwist double JointOffset double JointAngle Parameter double LinkLength double LinkTwist double JointOffset double JointAngle Return void Description Set Manipulator joint DH parameters DH Configuration double GetJointAngle void Parameter void Return double current Angle Description Returns joint angle limit rad double GetMinAngleInRad void Parameter void Return MinAngle rad Actuator Description SetMinAngleInRad returns actuator min angle rad double GetMaxAngleInRad void Parameter void Return MaxAngle rad Actuator Description SetMaxAngleInRad returns actuator max angle rad int GetMinAngleInValue void Parameter void Return MinAngle value Actuator Description SetMinAngleInValue returns actuator min angle value int GetMaxAngleInValue void Parameter void Return MaxAngle value Actuator Description SetMaxAngleInValue returns actuator max angle value double GetMinAngleLimitInRad void Parameter void Return MinAngle rad Joint Description SetMinAngleLimitInRad returns joint min angle rad double GetMaxAngleLimitInRad void Parameter void Return MaxAngle rad Joint Description SetMaxAngleLimitInRad returns joint max angle rad int GetMinAngleLimitInValue void Parameter void Return MinAngle value Joint Description SetMinAngleLimitInRad returns joint min angle value int GetMaxAngleLimitInValue void Parameter void Return MaxAngle value Joint Description SetMaxAngleLimitInRad returns joint max angle value matd GetTransformMatirx void Parameter void Return matd TransformMatrix Link Description Returns transform matrix link ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#motionengine"
	},
	"4009": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "MotionEngine",
		"header3": "RobotInfo.h",
		"content": "int AddJoint double LinkLength double LinkTwist double JointOffset double JointAngle double MaxAngleInRad double MinAngleInRad int MaxAngleValue int MinAngleValue double MaxAngleLimitInRad double MinAngleLimitInRad unsigned int Dynamixel ID Parameter LinkLength LinkTwist JointOffset JointAngle DH parameter MaxAngleInRad Maximum Angle Actuator Joint Limit MinAngleInRad Minimum Angle Actuator Joint Limit MaxAngleInValue AngleValue corresponding Maxangle MinAngleInValue AngleValie corresponding Minangle MaxAngleLimitInRad Maximum Joint Angle Limit Actuator MinAngleLimitInRad Minimum Joint Angle Limit Actuator Return Error Value Description Sets joint DH Parameter Joint Parameter values Error no error error Error happens min value greater max value JointData GetJointInfo int joint number Parameter int Joint number Return JointData Description Returns JointData AddJoint std vector GetRobotInfo void Parameter JointData Return address robotInfo Description Returns address values RobotInfomation void ClearRobotInfo void Parameter void Return void Description Clears out RobotInfo veci GetArmIDList void Parameter void Return ID List Robot Actuators Description Returns joint ID aray form inAddJoint veci Rad2Value vecd Parameter double array Actuators Angle Rad Return int array Actuators Angle Value Description Transforms joint rad value vecd Value2Rad veci Parameter int array Actuators Angle Value Return double array Actuators Angle Rad Description Transforms joint value rad ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#motionengine"
	},
	"4010": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "MotionEngine",
		"header3": "Kinematics.h",
		"content": "void RobotInfoReload void Parameter void Return void Description Calls RobotInfo matd Forward vecd angle Parameter Angle Joints rad Return 4x4 TransformMatrix form Description RobotInfoReload calls joints angles runs FK returns end effector transformation matrix matd Forward vecd angle Pose3D pose Parameter Angle Joints rad Return 4x4 EndEffector TransformMatrix form Description RobotInfoReload calls joint angles runs FK returns end effector transformation matrix also sets pose pointer pose void SetMaximumNumberOfIterationsForIK unsigned int max num Parameter unsigned int max num IK Return void Description Sets IK number iterations solution void SetConvergenceCondition double max error double max acceptable error Parameter double max error double max acceptable error Return void Description IK amount telorable error first input value max convergence error lesser value max allow solution second value max allowable error acceptable long lower value entered When value exceeds then no solution matd Jacobian void Parameter void Return Matrix Jacobian Description Returns jacobian IK solution vecd CalcError Pose3D desired matd current Parameter Pose3D goalPose TransformMatrix EndEffector Return Error between Goal Currnet Pose Description Compares end effector goal pose current pose void ComputeIK Pose3D desired vecd rad vecd Initangle rad int ErrorStatus Parameter Pose3D goalPose vecd initangle int ErrorStatus Return void Description get jacobian Damped Least Square Method IK solution desired end effector desired pose rad sets joints pose running IK Initangle rad joint angles prior running IK ErrorStatus pointer error type ErrorStatus No error ARMSDK NO ERROR 0x00 No solution IK ARMSDK NO IK SOLUTION 0x01 no solution IK allowable error ARMSDK ACCEPTABLE ERROR 0x02 joint angles exceed JointData set angles ARMSDK OUT OFF JOINT RANGE 0x08 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#motionengine"
	},
	"4011": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "MotionEngine",
		"header3": "TrajectoryGenerator.h",
		"content": "void KinematicsInfoReload void Parameter void Return void Description Calls Kinematics info void Set P2P vecd StartPose vecd EndPose double TotalTime double AccelTime Parameter vecd StartPose vecd EndPose double TotalTime double AccelTime Returns void Description sets P2P trajectory fromStartPose EndPose TotalTime AccelTime void Set P2P Pose3D StartPose Pose3D EndPose double TotalTime double AccelTime Parameter Pose3D StartPose Pose3D EndPose double TotalTime double AccelTime Returns void Description Sets P2P trajectory StartPose EndPose TotalTime AccelTime void Set LIN vecd StartPose vecd EndPose double TotalTime double AccelTime Parameter vecd StartPose vecd EndPose double TotalTime double AccelTime Returns void Description Sets linear trajectory StartPose EndPose TotalTime AccelTime void Set LIN Pose3D StartPose Pose3D EndPose double TotalTime double AccelTime Parameter Pose3D StartPose Pose3D EndPose double TotalTime double AccelTime Returns void Description Sets linear trajectory StartPose EndPose TotalTime AccelTime void Set CIRC vecd StartPose vecd ViaPose vecd EndPose double TotalTime double AccelTime Parameter vecd StartPose vecd ViaPose vecd EndPose double TotalTime double AccelTime Returns void Description Sets circular trajectory StartPose ViaPose EndPose TotalTime AccelTime void Set CIRC Pose3D StartPose Pose3D ViaPose Pose3D EndPose double TotalTime double AccelTime Parameter Pose3D StartPose Pose3D EndPose double TotalTime double AccelTime Returns void Description Sets circular trajectory fom StartPose ViaPose EndPose TotalTime AccelTime void Set P2PwithHand vecd StartPose vecd EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Parameter vecd StartPose vecd EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Returns void Description Sets P2P trajectory StartPose EndPose Start HandPose End HandPose TotalTime AccelTime void Set P2PwithHand Pose3D StartPose Pose3D EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Parameter Pose3D StartPose Pose3D EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Returns void Description Sets P2P trajectory StartPose EndPose Start HandPose End HandPose TotalTime AccelTime void Set LINwithHand vecd StartPose vecd EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Parameter vecd StartPose vecd EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Returns void Description Sets linear trajectory StartPose EndPose Start HandPose End HandPose TotalTime AccelTime void Set LINwithHand Pose3D StartPose Pose3D EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Parameter Pose3D StartPose Pose3D EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Returns void Description Sets linear trajectory StartPose EndPose Start HandPose End HandPose TotalTime AccelTime void Set CIRCwithHand vecd StartPose vecd ViaPose vecd EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Parameter vecd StartPose vecd EndPose vecd ViaPose veci Hand1 veci Hand2 double TotalTime double AccelTime Returns void Description Sets circular trajectory StartPose ViaPose EndPose Start HandPose End HandPose TotalTime AccelTime void Set CIRCwithHand Pose3D StartPose Pose3D ViaPose Pose3D EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Parameter Pose3D StartPose Pose3D ViaPose Pose3D EndPose veci Hand1 veci Hand2 double TotalTime double AccelTime Returns void Description Sets circular trajectory StartPose ViaPose EndPose Start HandPose End HandPose TotalTime AccelTime void ClearMF void Parameter void Returns void Description Clears out motion profile double GetMotionTotalTime void Parameter void Returns TotalTime sec Description Returns motion run time ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#motionengine"
	},
	"4012": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "MotionEngine",
		"header3": "MotionPlay.h",
		"content": "void Info Reload void Parameter void Returns void Description Calls motion Info RobotInfo Kinematics Trajectory void initialize void Parameter void Returns void Description Initializes motion profile done time step current time void Set Time Period int MilliSecond Parameter int MilliSecond Returns void Description Provides period time motion vecd NextStepAtTime double CurrentTime int ErrorStatus Parameter double CurrentTime int ErrorStatus Returns Joint Angle next Step Description Returns next Goal Joint Angle array ErrorStatus pointer error type veci NextStepAtTimeforHand double CurrentTime Parameter CurrentTime current time sec Returns Angle Value array Fingers next step Description Returns following Goal Joint Angle array hand Assumes hand attached arm vecd CalcIK Pose3D desiredPose int ErrorStatus Parameter Pose3D desiredPose int ErrorStatus Returns Joint Angle desiredPose Description Returns desired pose end effector IK ErrorStatus pointer error type no error ARMSDK NO ERROR 0x00 No solution IK ARMSDK NO IK SOLUTION 0x01 no solution IK allowable error ARMSDK ACCEPTABLE ERROR 0x02 joint angles exceed JointData set angles ARMSDK OUT OFF JOINT RANGE 0x08 vecd NextStep int ErrorStatus Parameter ErrorStatus Returns Angle rad array next step Description Returns next motion joint angles ErrorStatus pointer error type veci NextStepforHand void Parameter void Returns Angle Value array Fingers next step Description Returns hand next motion position vecd GetCurrentAngle void Parameter void Returns Joint Angle rad Description Returns robot current pos rad array Pose3D GetCurrentEndPose void Parameter void Returns Pose3D EndEffector Description Returns end effector current pose double Get CurrentTime void Parameter void Returns double CurrentTime Description Returns current time ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#motionengine"
	},
	"4013": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "RobotisLib",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#robotislib"
	},
	"4014": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "RobotisLib",
		"header3": "Pro_Arm_Comm_win.h",
		"content": "void Set Init Param int portnum int baudnum Parameter int portnum int baudnum Returns void Description Sets Dynamixel comms portnum baudnum int Open Parameter void Returns void Description Opens access comms DYNAMIXEL Set Init Param SerialPort Get Port void Parameter void Returns PortNumber Description Returns SerialPort pointer address void Close void Parameter void Returns void Description End communications Dynamixel void Arm ID Setup veci Arm ID LIST Parameter array ID List Returns void Description Sets arm ID list int Arm Torque void Parameter void Returns Communication Result Description Turn torque every joint COMM RXSUCCESS return int Arm Torque Off void Parameter void Returns Communication Result Description Turns torque off every joint COMM RXSUCCESS return int Arm Set JointPosition veci position Parameter joint angle array Returns Communication Result Description Sets joint angles COMM RXSUCCESS return int Arm Set JointVelocity veci velocity Parameter int joint velocity array Returns Communication Result Description Sets joint valocities COMM RXSUCCESS return int Arm Set JointVelocity int velocity Parameter int joint velocity Returns Communication Result Description Sets joint velocities COMM RXSUCCESS return int Arm Set JointAcceleration veci accel Parameter int joint Acceleration array Returns Communication Result Description Sets joint accelerations COMM RXSUCCESS return int Arm Set JointAcceleration int accel Parameter int joint Acceleration Returns Communication Result Description Sets joint accelerations COMM RXSUCCESS return int Arm Set Position PID Gain int Gain int Gain int Gain Parameter int joint Position gain Returns Communication Result Description Sets joints PID gain values COMM RXSUCCESS return int Arm Set Position PID Gain int id int Gain int Gain int Gain int ErrorStatus Parameter int id int joint Position gain Returns Communication Result Description Sets joints PID gain values ErrorStatus error pointer COMM RXSUCCESS return int Arm Get JointPosition veci position Parameter joint position array Returns Communication Result Description Access position array gets joint positions COMM RXSUCCESS return int Arm Get JointCurrent veci torque Parameter joint current array Returns Communication Result Description Reads joint electrical current flow saves torque return pointer COMM RXSUCCESS return int Arm LED void Parameter void Returns Communication Result Description Turns joints LED COMM RXSUCCESS return int Arm LED Off void Parameter void Returns Communication Result Description Turns joints LED off COMM RXSUCCESS return int Arm LED int int int Parameter int int int Returns Communication Result Description Controls DYNAMIXEL Pro RGB LED rage 255 COMM RXSUCCESS return int Arm Red LED void int Arm Green LED void int Arm Blue LED void Parameter void Returns Communication Result Description turns joints LED red Arm Red LED turns joints LED green Arm Green LED turns joints LED blue Arm Blue LED COMM RXSUCCESS return void Gripper ID Setup veci Gripper ID List Parameter ID array Returns void Description Sets ID gripper int Gripper Ping void Parameter void Returns Communication Result Description Pings comm gripperGripper COMM RXSUCCESS return int Gripper Torque void Parameter void Returns Communication Result Description Turns gripper torque COMM RXSUCCESS return int Gripper Torque Off void Parameter void Returns Communication Result Description Turns gripper torque off COMM RXSUCCESS return int Gripper Get Joint Value veci value Parameter Joint value array stored address Returns Communication Result Description Access gripper angles stored address COMM RXSUCCESS return int Gripper Set Joint Value veci value Parameter Joint value array Returns Communication Result Description Sets gripper joint value COMM RXSUCCESS return ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#robotislib"
	},
	"4015": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Timer",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#timer"
	},
	"4016": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Timer",
		"header3": "MotionTimer.h",
		"content": "time measurement fromQueryPerformanceCounter void Start void Parameter void Returns void Description Sets start time void Stop void Parameter void Returns void Description Stops time measurement double GetElapsedTime void Parameter void Returns ElapsedTime milliseconds Description Returns time start stop void Wait double millisec Parameter millisecond waiting time milliseconds want Returns void Description Waits amount time msec standby ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#timer"
	},
	"4017": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Mass Property",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#mass-property"
	},
	"4018": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Mass Property",
		"header3": "Coordinate",
		"content": "Total Mass 551g ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#mass-property"
	},
	"4019": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Mass Property",
		"header3": "Link 1",
		"content": "Mass 030 Center Gravity mm Inertia Tensor mm Ixx Ixy Ixz 4957303e 06 0000000e 00 0000000e 00 Iyx Iyy Iyz 0000000e 00 5009641e 05 0959043e 04 Izz Izy Izz 0000000e 00 0959043e 04 4874997e 06 Principal Moments mm I1 4998065e 05 I2 4876155e 06 I3 4957303e 06 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#mass-property"
	},
	"4020": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Mass Property",
		"header3": "Link 2",
		"content": "Mass 404 Center Gravity mm 17 206 Inertia Tensor mm Ixx Ixy Ixz 0627201e 07 2357497e 04 2920605e 06 Iyx Iyy Iyz 2357497e 04 0014640e 07 5798255e 05 Izz Izy Izz 2920605e 06 5798255e 05 9568681e 06 Principal Moments mm I1 7653895e 06 I2 0017530e 07 I3 0815789e 07 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#mass-property"
	},
	"4021": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Mass Property",
		"header3": "Link 3",
		"content": "Mass 236 Center Gravity mm 387 Inertia Tensor mm Ixx Ixy Ixz 1318491e 06 0760429e 03 4765806e 04 Iyx Iyy Iyz 0760429e 03 9193915e 06 2823763e 04 Izz Izy Izz 4765806e 04 2823763e 04 2402606e 05 Principal Moments mm I1 2282696e 05 I2 9201652e 06 I3 1322745e 06 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#mass-property"
	},
	"4022": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Mass Property",
		"header3": "Link 4",
		"content": "Mass 491 Center Gravity mm 514 Inertia Tensor mm Ixx Ixy Ixz 9670485e 05 3867048e 00 7608394e 01 Iyx Iyy Iyz 3867048e 00 3556702e 05 9098238e 03 Izz Izy Izz 7608394e 01 9098238e 03 9647894e 05 Principal Moments mm I1 3531708e 05 I2 9672886e 05 I3 9670487e 05 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#mass-property"
	},
	"4023": {
		"product": "Manipulator-H",
		"header1": "References",
		"header2": "Mass Property",
		"header3": "Link 5",
		"content": "Mass 454 Center Gravity mm 591 Inertia Tensor mm Ixx Ixy Ixz 7548066e 05 0000000e 00 0000000e 00 Iyx Iyy Iyz 0000000e 00 9961989e 05 4840847e 04 Izz Izy Izz 0000000e 00 4840847e 04 9795791e 05 Principal Moments mm I1 9687159e 05 I2 0070622e 05 I3 7548066e 05 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/manipulator_h/introduction/#mass-property"
	},
	"4024": {
		"product": "ROBOTIS OP",
		"header1": "DARwIn-OP",
		"header2": "",
		"header3": "",
		"content": "OP는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 DARwIn OP 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/op/getting_started/"
	},
	"4025": {
		"product": "ROBOTIS-OP2",
		"header1": "OP2",
		"header2": "",
		"header3": "",
		"content": "OP2는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 OP2 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/op2/getting_started/"
	},
	"4026": {
		"product": "ROBOTIS OP3",
		"header1": "OP3",
		"header2": "",
		"header3": "",
		"content": "OP3는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 OP3 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/op3/introduction/"
	},
	"4027": {
		"product": "오픈매니퓰레이터",
		"header1": "오픈매니퓰레이터",
		"header2": "",
		"header3": "",
		"content": "오픈매니퓰레이터는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 OpenManipulator 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/openmanipulator/"
	},
	"4028": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#예제"
	},
	"4029": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "장치 설정(RH-P12-RN)",
		"header3": "",
		"content": "예제 실행을 위해 아래와 같이 장치의 컨트롤 테이블 값을 변경해야 함 ID Baudrate Mbps 장치의 컨트롤 테이블 값을 변경하기 위해서는 윈도우의 경우 Manager 을 사용할 수 있으며 리눅스의 경우 Dynamixel SDK 에 예제 중 Monitor 를 사용할 수 있음 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#장치-설정rh-p12-rn"
	},
	"4030": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "통신포트 설정",
		"header3": "",
		"content": "윈도우의 경우 예제의 통신 포트가 기본값으로 COM4 로 되어 있음 연결된 통신 장치가 COM4 가 아닐 경우 설정에서 통신 포트를 COM4 로 변경하거나 소스 상의 DEVICE NAME 값을 변경해야 함 리눅스의 경우 예제의 통신 포트가 dev ttyUSB0 로 되어 있음 연결된 통신 장치가 dev ttyUSB0 가 아닐 경우 소스 상에서 DEVICE NAME 값을 변경해야 함 ockquote RH P12 RN Example rh p12 rn cpp defined linux define DEVICE NAME dev ttyUSB0 elif defined WIN32 defined WIN64 define DEVICE NAME COM4 endif ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#통신포트-설정"
	},
	"4031": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "윈도우즈 예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#윈도우즈-예제"
	},
	"4032": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "윈도우즈 예제",
		"header3": "다운로드",
		"content": "GIT client 프로그램으로 https github com ROBOTIS GIT RH P12 RN Example 다운로드 혹은 https github com ROBOTIS GIT RH P12 RN Example archive master zip 파일 다운로드 후 압축 해제 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#윈도우즈-예제"
	},
	"4033": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "윈도우즈 예제",
		"header3": "빌드 및 실행",
		"content": "윈도우 예제는 Visual Studio 2017 로 작성되었음 Visual Studio 를 설치하고 RH P12 RN Example win64 RH P12 RN Example sln 파일을 더블클릭하여 솔루션을 열고 솔루션 빌드 후 실행 Windows SDK 버전이 달라서 아래와 같은 에러가 발생할 경우 error MSB8036 Windows SDK 버전 10 14393 0을 를 찾을 수 없습니다 필요한 버전의 Windows SDK를 설치하거나 솔루션을 마우스 오른쪽 단추로 클릭하고 솔루션 대상 변경 을 선택하거나 프로젝트 속성 페이지에서 SDK 버전을 변경하세요 프로젝트의 속성 페이지에서 아래와 같이 Windows SDK 버전을 설치된 버전으로 변경 후 다시 빌드 후 실행 윈도우 예제를 실행하면 아래와 같이 연결된 장치의 포트 이름과 Baudrate 가 표시되며 실행 됨 실행에 실패할 경우 실패 메시지를 확인하고 장치 설정 혹은 통신 포트 설정을 변경해야 함 장치 RH P12 RN 가 전류기반 위치 제어 모드로 실행 중일 경우 아래와 같은 화면이 표시 됨 장치가 전류제어 모드로 실행 중일 경우 아래와 같은 화면이 표시 됨 위 아래 방향 커서 키를 이용하여 입력란을 이동할 수 있음 스페이스 키를 이용하여 MODE TORQUE CONTROL 을 체크 언체크 할 수 있음 안의 단축키를 누르면 해당 위치에서 스페이스 키를 누른 것과 동일하게 동작 함 PARAMETERS 값을 변경하기 위해서는 키와 키를 이용하여 씩 값을 증감시킬 수 있으며 키와 키를 이용하여 10 씩 값을 증감시킬 수 있음 각 입력란의 동작은 아래와 같음 MODE current control mode 체크 시 전류제어 모드로 동작 current based position control mode 체크 시 전류기반 위치 제어 모드로 동작 TORQUE torque ON OFF 체크 시 토크 켜짐 언체크 시 토크 꺼짐 CONTROL Open 체크 시 손가락을 열고 다시 언체크 됨 Close 체크 시 손가락을 닫고 다시 언체크 됨 Open amp Close auto repeat 체크 시 자동으로 손가락을 열었다 닫았다를 반복함 go goal position 체크 시 PARAMETERS 의 goal position 값이 변경되면 즉시 반영 됨 PARAMETERS goal current 값이 변경되면 장치의 goal current 에 해당 값을 write 함 goal velocity 값이 변경되면 장치의 goal velocity 에 해당 값을 write 함 goal acceleration 값이 변경되면 장치의 goal acceleration 에 해당 값을 write 함 goal position 위 go goal position 이 체크되어 있을 경우 값이 변경되면 장치의 goal position 에 해당 값을 write 함 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#윈도우즈-예제"
	},
	"4034": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "리눅스 예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#리눅스-예제"
	},
	"4035": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "리눅스 예제",
		"header3": "준비",
		"content": "Dynamixel SDK 가 설치되어 있어야 함 아래와 같이 다운로드 받아 설치할 것 git clone https github com ROBOTIS GIT DynamixelSDK cd DynamixelSDK build linux64 sudo make install dev ttyUSB0 의 접근 권한을 얻기 위해 아래 명령을 입력 USER ID 를 dialout 그룹에 등록하는 명령 sudo usermod aG dialout USER ID 이제 리눅스를 재시작하거나 로그아웃 후 다시 로그인 하면 USER ID 가 dialout 그룹에 등록되어 dev ttyUSB0 의 접근 권한을 얻게 됨 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#리눅스-예제"
	},
	"4036": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "리눅스 예제",
		"header3": "다운로드",
		"content": "git clone https github com ROBOTIS GIT RH P12 RN Example ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#리눅스-예제"
	},
	"4037": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "리눅스 예제",
		"header3": "빌드",
		"content": "cd RH P12 RN Example linux64 make ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#리눅스-예제"
	},
	"4038": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "리눅스 예제",
		"header3": "실행",
		"content": "rh p12 rn example 리눅스 예제를 실행하면 아래와 같이 연결된 장치의 포트 이름과 Baudrate 가 표시되며 실행 됨 실행에 실패할 경우 실패 메시지를 확인하고 장치 설정 혹은 통신 포트 설정을 변경해야 함 장치 RH P12 RN 가 전류기반 위치 제어 모드로 실행 중일 경우 아래와 같은 화면이 표시 됨 장치가 전류제어 모드로 실행 중일 경우 아래와 같은 화면이 표시 됨 각 입력란의 입력 방법 및 동작은 윈도우 예제와 동일함 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#리눅스-예제"
	},
	"4039": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "ROS GUI 예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#ROS-GUI-예제"
	},
	"4040": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "ROS GUI 예제",
		"header3": "준비",
		"content": "dev ttyUSB0 의 접근 권한을 얻기 위해 아래 명령을 입력 USER ID 를 dialout 그룹에 등록하는 명령 sudo usermod aG dialout USER ID 이제 리눅스를 재시작하거나 로그아웃 후 다시 로그인 하면 USER ID 가 dialout 그룹에 등록되어 dev ttyUSB0 의 접근 권한을 얻게 됨 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#ROS-GUI-예제"
	},
	"4041": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "ROS GUI 예제",
		"header3": "다운로드",
		"content": "cd catkin ws src git clone https github com ROBOTIS GIT DynamixelSDK git clone https github com ROBOTIS GIT ROBOTIS Framework git clone https github com ROBOTIS GIT ROBOTIS Framework msgs git clone https github com ROBOTIS GIT RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#ROS-GUI-예제"
	},
	"4042": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "ROS GUI 예제",
		"header3": "빌드",
		"content": "cd catkin ws catkin make ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#ROS-GUI-예제"
	},
	"4043": {
		"product": "RH-P12-RN",
		"header1": "예제",
		"header2": "ROS GUI 예제",
		"header3": "실행",
		"content": "터미널을 띄워 아래 명령으로 manager 실행 roslaunch rh p12 rn manager rh p12 rn manager launch 새로운 터미널을 띄워 아래 명령으로 GUI 예제 실행 rosrun rh p12 rn gui rh p12 rn gui 장치가 전류기반 위치 제어 모드로 실행 중일 경우 ROS GUI 예제 화면은 아래와 같음 장치가 전류제어 모드로 실행 중일 경우 ROS GUI 예제 화면은 아래와 같음 각 입력란의 동작은 윈도우 리눅스 예제와 동일함 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/examples/#ROS-GUI-예제"
	},
	"4044": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/gazebo-simulation"
	},
	"4045": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "Gazebo 설치",
		"header3": "",
		"content": "ROS Gazebo 패키지 설치 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/gazebo-설치"
	},
	"4046": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "Gazebo 설치",
		"header3": "Gazebo with ROS",
		"content": "Reference Gazebo Tutorials ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/gazebo-설치"
	},
	"4047": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "Gazebo 설치",
		"header3": "RH-P12-RN 패키지 설치",
		"content": "RH P12 RN 의 Gazebo 패키지를 받기 위해 아래의 명령어를 입력합니다 cd catkin ws src git clone https github com ROBOTIS GIT RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/gazebo-설치"
	},
	"4048": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "Gazebo 설치",
		"header3": "추가 설치",
		"content": "ros kinetic desktop full 로 ROS 를 설치했다면 다음 패키지들을 설치해야 합니다 sudo apt install ros kinetic ros control sudo apt install ros kinetic ros controllers sudo apt install ros kinetic gazebo ros control ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/gazebo-설치"
	},
	"4049": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "시뮬레이터 실행",
		"header3": "",
		"content": "Gazebo 시뮬레이터를 설정하고 실행하는 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/시뮬레이터-실행"
	},
	"4050": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "시뮬레이터 실행",
		"header3": "권장사항",
		"content": "Gazebo 를 제어 프로그램과 같은 PC 에서 실행할 경우 realtime factor 가 떨어질 수 있으므로 Gazebo 는 별도의 PC 를 이용할 것을 권장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/시뮬레이터-실행"
	},
	"4051": {
		"product": "RH-P12-RN",
		"header1": "Gazebo Simulation",
		"header2": "시뮬레이터 실행",
		"header3": "실행 방법",
		"content": "Gazebo 에서 RH P12 RN 을 불러오기 위한 명령 roslaunch rh p12 rn gazebo rh p12 rn gazebo launch Gazebo 의 Play 버튼을 누릅니다 움직임을 확인하기 위해 터미널을 열고 아래의 명령을 입력합니다 손가락을 열린 상태로 보내는 명령 rostopic pub rh p12 rn rh p12 rn position command std msgs Float64 data 손가락을 닫힌 상태로 보내는 명령 rostopic pub rh p12 rn rh p12 rn position command std msgs Float64 data ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/gazebo/시뮬레이터-실행"
	},
	"4052": {
		"product": "RH-P12-RN",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#개요"
	},
	"4053": {
		"product": "RH-P12-RN",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 MCU ST CORTEX M4 STM32F405 168Mhz 32bit 위치 센서 Contactless Absolute Encoder 12bit 360 Maker ams www ams com Part No AS5045 모터 Coreless 통신 속도 600 bps 10 Mbps 제어 알고리즘 PID Control 정밀도 088 동작 모드 전류제어 모드 전류기반 위치제어 모드 무게 500g 스트로크 109mm 감속비 1295 최대 파지력 170N 권장 가반하중 5kg 동작 온도 55 사용 전압 24V Command Signal Digital Packet Protocol Type RS485 Asynchronous Serial Communication 8bit 1stop No Parity Physical Connection RS485 Multidrop BUS ID 252 Feedback Position Velocity Current Temperature Input Voltage Material Full Metal Gear Metal Body Standby Current 30mA Peak Current 33A ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#주요-사양"
	},
	"4054": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#컨트롤-테이블"
	},
	"4055": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#컨트롤-테이블-데이터-주소"
	},
	"4056": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#영역-eeprom-ram"
	},
	"4057": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#크기"
	},
	"4058": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#접근권한"
	},
	"4059": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#초기값"
	},
	"4060": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 설명 접근 기본값 Model Number Model Number 35073 Model Information Model Information Firmware Version Firmware Version ID DYNAMIXEL ID Baud Rate Communication Speed Return Delay Time Response Delay Time 250 11 Operating Mode Operating Mode 17 Moving Threshold Velocity Threshold Movement Detection 10 21 Temperature Limit Maximum Internal Temperature Limit 80 22 Max Voltage Limit Maximum Input Voltage Limit 400 24 Min Voltage Limit Minimum Input Voltage Limit 150 26 Acceleration Limit Maximum Accleration Limit 255 30 Current Limit Maximum Current Limit 820 32 Velocity Limit Maximum Velocity Limit 100 36 Max Position Limit Maximum Position Limit 1150 40 Min Position Limit Minimum Position Limit 44 External Port Mode External Port Mode 45 External Port Mode External Port Mode 46 External Port Mode External Port Mode 47 External Port Mode External Port Mode 48 Shutdown Shutdown Error Information 48 49 Indirect Address Indirect Address 634 51 Indirect Address Indirect Address 635 53 Indirect Address Indirect Address 636 Indirect Address Indirect Address 559 Indirect Address 256 Indirect Address 256 889 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#eeprom-영역"
	},
	"4061": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 설명 접근 기본값 562 Torque Enable Motor Torque Off 563 LED Red Red LED Intensity Value 564 LED Green Green LED Intensity Value 565 LED Blue Blue LED Intensity Value 590 Position Gain Gain Position 592 Position Gain Gain Position 594 Position Gain Gain Position 596 Goal Position Target Position Value 600 Goal Velocity Target Velocity Value 604 Goal Current Target Current Value 606 Goal Acceleration Target Acceleration Value 610 Moving Movement Status 611 Present Position Present Position Value 615 Present Velocity Present Velocity Value 621 Present Current Present Current Value 623 Present Input Voltage Present Input Voltage 625 Present Temperature Present Internal Temperature 626 External Port Data External Port Data 628 External Port Data External Port Data 630 External Port Data External Port Data 632 External Port Data External Port Data 634 Indirect Data Indirect Data 635 Indirect Data Indirect Data 636 Indirect Data Indirect Data Indirect Data Indirect Data 889 Indirect Data 256 Indirect Data 256 890 Registered Instruction Check Reception Instruction 891 Status Return Level Select Types Status Return 892 Hardware Error Status Hardware Error Status ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#ram-영역"
	},
	"4062": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 562 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#컨트롤-테이블-설명"
	},
	"4063": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "장치의 모델 번호입니다 모델명 모델 번호 RH P12 RN 35073 0x8901 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#model-number0"
	},
	"4064": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "장치의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#firmware-version6"
	},
	"4065": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 253 0xFD 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 참고 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 64 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#id7"
	},
	"4066": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 10 5M 5M 4M 3M 2M 1M 115 200 초기값 57 600 600 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#baud-rate8"
	},
	"4067": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 기본값 250 500 sec 최대 508 sec ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#return-delay-time9"
	},
	"4068": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 Value Operating Mode Description 전류제어 모드 속도와 위치는 제어하지 않고 전류를 제어합니다 Reserved Default 전류기반 위치제어 모드 위치와 전류를 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#operating-mode11"
	},
	"4069": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(17)",
		"content": "움직임의 유무를 판단하는 기준 속도로 사용됩니다 Present Velocity 615 의 절대값이 Moving Threshold 17 보다 크면 움직임의 유무를 나타내는 Moving 610 이 이 되고 작으면 이 됩니다 값의 범위 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#moving-threshold17"
	},
	"4070": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(21)",
		"content": "동작 온도의 상한 값입니다 사용 범위는 100 이며 단위는 섭씨 온도입니다 예를 들어 값이 80이면 80 입니다 내부 온도가 이 값을 넘으면 Status Packet 중 ERROR의 Over Heating Error Bit Bit2 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 과열 Overheating 이 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 100 100 주의 온도 상한선을 초기값 보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#temperature-limit21"
	},
	"4071": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Voltage Limit(22, 24)",
		"content": "전압 동작 범위의 상한과 하한 값입니다 상한과 하한 각각 400까지 사용 가능하며 단위는 입니다 예를 들어 값이 80이면 입니다 현재 전압 값이 이 범위를 벗어날 경우 Status Packet 중 ERROR의 Voltage Range Error Bit Bit0 가 로 설정되어 반환되고 Shutdown의 플래그 flag 중 입력 전압 에러 Input Voltage Error 가 설정되어 있다면 기능이 발휘됩니다 단위 값의 범위 설명 약 400 40 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#minmax-voltage-limit22-24"
	},
	"4072": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(26)",
		"content": "목표 가속도 값의 한계 값입니다 Goal Acceleration 606 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 Goal Acceleration 606 은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다 단위 값의 범위 214 577 Rev min 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#acceleration-limit26"
	},
	"4073": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(30)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 604 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 약 02 mA 820 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#current-limit30"
	},
	"4074": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(32)",
		"content": "목표 속도 값의 한계 값입니다 Goal Velocity 600 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 114 RPM 147 483 647 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#velocity-limit32"
	},
	"4075": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Min/Max Position Limit(36, 40)",
		"content": "Goal Position 596 의 상한 값과 하한 값입니다 Goal Position 596 에 Max Position Limit 36 과 Min Position Limit 40 의 범위를 벗어난 값을 쓰려고 할 경우 Status Packet 의 Error 필드를 통해 Data Limit Error 0x06 를 전송합니다 Max Position Close Min Position Open 150 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#minmax-position-limit36-40"
	},
	"4076": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 장치는 다용도로 사용 가능한 External Port 를 제공합니다 External Port 의 용도는 External Port Mode 44 45 46 47 에 의해서 결정되고 External Port 의 신호는 External Port Data 626 628 630 632 에 의해 제어됩니다 External Port Mode 명칭 상세 초기값 AI Analogue Input External Port 신호를 12 bit Digital로 변환 DO PP Digital Output Push Pull External Port를 또는 로 출력 DI PU Digital Input Pull Up External Port 신호를 또는 의 Digital 신호로 변경 External Port에 신호가 연결되어 있지 않을 경우 DI PD Digital Input Pull Down External Port 신호를 또는 1의 Digital 신호로 변경 External Port에 신호가 연결되어 있지 않을 경우 External Port Mode 접근 기능 상세 Common mA VESD HBM kV AI Read External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 DO PP Write External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max DI PU DI PD Read External Port의 입력이 External Port의 입력이 Input level VIH min Input level VIL max Pull Up Down 40 typ VESD HBM ESD Electrostatic Discharge Voltage human body model 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 Pin Pin Pin Pin Pin Pin GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#external-port-mode"
	},
	"4077": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(48)",
		"content": "장치는 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 48 이 0x05 2진수 000 0101 로 설정되었을 경우 Input Voltage Error 2진수 0000 0001 와 Over Heating Error 2진수 0000 0100 가 발생하는 것을 모두 감지할 수 있습니다 위험상황이 감지되면 Torque Enable 562 값이 으로 변경되고 모터 출력은 가 됩니다 위험상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 562 을 Torque ON 로 설정할 수 없습니다 Shutdown 48 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Shutdown 48 의 초기값은 0x30 2진수 0011 0000 입니다 Bit 명칭 상세 설명 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 기본값 최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우 Bit Electrical Shock Error 기본값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit OverHeating Error 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit 미사용 항상 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown 이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction Packet 을 전송하는 방법 자세한 사항은 Manual의 프로토콜 을 참고해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#shutdown48"
	},
	"4078": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 49 에 563을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED RED 563 의 값 또한 255로 쓰여있습니다 또한 LED RED 563 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 596 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED 563 를 Indirect Data 634 에 할당하기 Indirect Address 49 RED LED의 주소값인 563 으로 변경 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 563 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 596 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 51 값을 Goal Position의 첫번째 주소인 596 로 변경 Indirect Address 53 값을 Goal Position의 두번째 주소인 597 로 변경 Indirect Address 55 값을 Goal Position의 세번째 주소인 598 로 변경 Indirect Address 57 값을 Goal Position의 첫번째 주소인 599 로 변경 Indirect Data 2에 250 961 0x0003D451 을 할당 Goal Position 596 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 596 0x51 636 597 0xD4 637 598 0x03 638 599 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 참고 Indirect Address 29 56와 Indirect Data 29 56는 프로토콜 0에서만 접근할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#indirect-address"
	},
	"4079": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(562)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 상세 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 132 은 Operating Mode 11 와 Torque Enable 64 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 132 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#torque-enable562"
	},
	"4080": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED(563)",
		"content": "장치의 3색 LED에 대한 밝기 값을 지정할 수 있습니다 주소 색상 값의 범위 563 Red 255 564 Green 255 565 Blue 255 참고 장치의 상태 조건 에 따른 LED의 동작입니다 상태 LED 동작 부팅 1회 점멸 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#rgb-led563"
	},
	"4081": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position PID Gain(594, 592, 590)",
		"content": "전류기반 위치 제어 모드에서 동작하는 위치 제어기의 Gain 값이며 범위는 32 767 입니다 아래 그림은 전류기반 위치 제어 모드에서의 위치 제어기와 전류 제어기 블록 다이어그램입니다 는 각각 Position Gain Position Gain Position Gain 을 나타냅니다 사용자의 요청이 그리퍼에 전달된 후 그리퍼의 손가락이 구동되기까지의 과정은 다음과 같습니다 사용자의 위치값 변경 요청이Goal Position 596 에 등록됩니다 Goal Position 596 은 Goal Velocity 600 와 Goal Acceleration 606 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 Profile PID 제어기는 목표 궤적을 기반으로 목표 전류 Target Current 를 계산합니다 Goal Current 604 는 계산된 목표 전류 Target Current 를 제한하여 최종 목표 전류를 결정합니다 전류 제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 결정합니다 최종 PWM 값은 Inverter 를 통해 모터에 적용되고 감속기를 거쳐 그리퍼의 손가락이 구동됩니다 구동 결과는 Present Position 611 Present Velocity 615 Present Current 621 에 표기됩니다 참고 A는 Anti windup Gain으로 사용자가 변경할 수 없습니다 PID제어기에 대한 설명은 다음의 사이트를 참고합니다 PID 제어기 위키피디아 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#rgb-led563"
	},
	"4082": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(596)",
		"content": "이동시키고자 하는 곳의 위치 값입니다 값의 범위는 Min Position Limit 40 Max Position Limit 36 이며 초기값은 150 0x47E 입니다 모델명 Goal Position Goal Position 740 RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#goal-position596"
	},
	"4083": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(600)",
		"content": "전류기반 위치 제어 모드에서만 사용되며 Profile 의 최대 속도를 설정합니다 Goal Velocity 600 가 인 경우 Profile 은 비활성화 되며 속도를 제한하지 않고 모터의 최대 RPM 을 사용합니다 단위 값의 범위 약 114 RPM Velocity Limit 32 Velocity Limit 32 참고 해당 모델의 최대 RPM을 확인하시기 바랍니다 Goal Velocity 600 를 최대 RPM 이상으로 설정해도 모터는 최대 RPM 이상의 속도를 낼 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#goal-velocity600"
	},
	"4084": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(604)",
		"content": "Operating Mode 11 에 따라 다른 의미로 사용됩니다 Operating Mode Goal Current 전류제어 모드 Goal Current 604 값이 목표 전류값으로 사용됩니다 전류기반 위치제어 모드 Goal Current 604 값이 최대 전류값으로 사용됩니다 Goal Current 604 는 Current Limit 30 보다 큰 값을 사용할 수 없습니다 단위 값의 범위 약 02 mA Current Limit 30 Current Limit 30 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#goal-current604"
	},
	"4085": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Acceleration(606)",
		"content": "전류기반 위치 제어 모드에서만 사용되며 Profile 의 가속도를 설정합니다 Goal Velocity 600 가 인 경우 Profile 이 비활성화 되어 Goal Acceleration 606 은 적용되지 않습니다 단위 값의 범위 214 577 Rev min Acceleration Limit 26 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#goal-acceleration606"
	},
	"4086": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(610)",
		"content": "이 값은 장치가 움직이고 있는지 여부를 알려줍니다 만약 Present Velocity 615 의 절대값이 Moving Threshold 17 에 설정된 값보다 크다면 Moving 610 은 로 설정됩니다 그렇지 않은 경우에는 Moving 610 의 값은 으로 설정됩니다 하지만 Profile이 진행중일 때 즉 Goal Position 596 명령을 수행하는 중에는 Present Velocity 615 와 무관하게 로 설정됩니다 값 설명 움직임이 감지되지 않음 움직임이 감지되었거나 Profile이 진행중인 경우 Goal Position 596 명령을 수행하는 중 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#moving610"
	},
	"4087": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(611)",
		"content": "장치의 현재 위치 값입니다 Model Goal Position Goal Position 740 RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#present-position611"
	},
	"4088": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(615)",
		"content": "현재 이동하는 속도입니다 이 값은 023 023까지 사용됩니다 023 범위의 값이면 좁히는 Grasp 방향으로 회전한다는 의미입니다 023 범위의 값이면 넓히는 Release 방향으로 회전한다는 의미입니다 이 값의 단위는 약 114 RPM 입니다 예를 들어 300으로 설정된 경우 좁히는 Grasp 방향으로 약 34 33 RPM의 속도로 이동 중이라는 의미입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#present-velocity615"
	},
	"4089": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(621)",
		"content": "현재 전류 값입니다 이 값의 단위는 약 02mA 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#present-current621"
	},
	"4090": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(623)",
		"content": "현재 공급되고 있는 전압 값이며 이 값의 단위는 1V입니다 예를 들어 값이 100이면 10V입니다 더 자세한 내용은 Min Max Voltage Limit 24 22 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#present-input-voltage623"
	},
	"4091": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(625)",
		"content": "내부의 온도 값이며 이 값의 단위는 C입니다 예를 들어 값이 85이면 현재 내부 온도는 85 입니다 더 자세한 내용은 Temperature Limit 21 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#present-temperature625"
	},
	"4092": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(890)",
		"content": "Value Description REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#registered-instruction890"
	},
	"4093": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(891)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 상세설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 와 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#status-return-level891"
	},
	"4094": {
		"product": "RH-P12-RN",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(892)",
		"content": "하드웨어 에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 48 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#hardware-error-status892"
	},
	"4095": {
		"product": "RH-P12-RN",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#조립-예시"
	},
	"4096": {
		"product": "RH-P12-RN",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#옵션프레임-조립"
	},
	"4097": {
		"product": "RH-P12-RN",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#참고자료"
	},
	"4098": {
		"product": "RH-P12-RN",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 외부포트 핀 번호 GND VDD DATA DATA GND VDD PORT PORT PORT PORT 다이어그램 하우징 JST EHR 04 MOLEX 51021 0600 PCB 헤더 JST B4B EH MOLEX 53047 0610 Crimp 터미널 JST SHE 001T P0 MOLEX 50079 8100 Wire Gauge 21 AWG 21 AWG ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#커넥터-정보"
	},
	"4099": {
		"product": "RH-P12-RN",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 RH P12 RN PDF zip 다운로드 RH P12 RN STP zip ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rn/#도면"
	},
	"4100": {
		"product": "RH-P12-RN(A)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#개요"
	},
	"4101": {
		"product": "RH-P12-RN(A)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 MCU ST CORTEX M4 STM32F405 168Mhz 32bit 위치 센서 Contactless Absolute Encoder 12bit 360 Maker ams www ams com Part No AS5045 모터 Coreless 통신 속도 600 bps 10 Mbps 제어 알고리즘 PID Control 정밀도 088 동작 모드 전류제어 모드 전류기반 위치제어 모드 무게 500g 스트로크 109mm 감속비 1295 최대 파지력 170N 권장 가반하중 5kg 동작 온도 55 사용 전압 24V Command Signal Digital Packet Protocol Type RS485 Asynchronous Serial Communication 8bit 1stop No Parity Physical Connection RS485 Multidrop Bus ID 252 Feedback Position Velocity Current Temperature Input Voltage Material Full Metal Gear Metal Body Standby Current 30mA Peak Current 33A 위험 심각한 상해 또는 사망에 이르게 할 수 있습니다 제품 주위에 가연성 물질 계면 화성제 음료수 물을 분사하거나 흡입시키지 마세요 작동 중인 제품에 손 발과 같은 신체 또는 신체의 일부를 넣지 마세요 제품에서 이상한 냄새가 나거나 연기가 발생하면 전원 연결을 즉시 끊어주세요 아이들이 제품으로 장난치지 않도록 하세요 전원의 극성을 반드시 확인 후 배선하세요 경고 상해나 제품 손상의 원인이 됩니다 제품의 사용 환경을 준수하세요 온도 작동 중인 제품 내부로 칼날 압정 불씨 등을 흡입시키지 마세요 주의 상해나 제품 손상의 원인이 됩니다 제품을 사용자 임의로 분해 또는 개조하지 마세요 제품에 강한 충격을 가하거나 떨어드리지 마세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#주요-사양"
	},
	"4102": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "",
		"header3": "",
		"content": "Control Table은 장치 내부에 존재하는 값으로서 장치의 현재 상태와 구동에 관한 Data로 구성되어 있습니다 사용자는 Instruction Packet을 통해 Control Table의 Data를 변경하는 방식으로 장치를 제어할 수 있습니다 주의 PRO 시리즈는 PRO와 다른 별개의 컨트롤 테이블을 사용합니다 PRO를 PRO 로 교체하는 경우 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#컨트롤-테이블"
	},
	"4103": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "",
		"content": "Control Table은 장치의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 장치의 상태를 파악할 수 있습니다 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 장치를 제어할 수 있습니다 Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다 장치의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다 Packet에 대한 자세한 내용은 Protocol 을 참고해주세요 참고 음수의 표현 방법은 2의 보수 Two complement 규칙을 따릅니다 2의 보수에 대한 자세한 설명은 위키피디아의 Two complement 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#컨트롤-테이블-데이터-주소"
	},
	"4104": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "영역 (EEPROM, RAM)",
		"content": "Control Table은 2가지 영역으로 구분됩니다 RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다 Volatile 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다 Non Volatile EEPROM Area에 위치한 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#영역-eeprom-ram"
	},
	"4105": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "크기",
		"content": "Data의 Size는 용도에 따라 byte로 정해져 있습니다 Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다 byte 이상의 연속된 데이터는 Little Endian 규칙에 의해 기록됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#크기"
	},
	"4106": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "접근권한",
		"content": "Control Table의 Data는 2가지 접근 속성을 갖습니다 는 읽기와 쓰기 접근이 모두 가능합니다 반면 은 읽기 전용 Read 속성을 갖습니다 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다 읽기 전용 속성 은 주로 측정 또는 모니터링 용도로 사용되고 읽기 쓰기 속성 은 장치의 제어 용도로 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#접근권한"
	},
	"4107": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블, 데이터, 주소",
		"header3": "초기값",
		"content": "장치에 전원이 인가될 때 Control Table의 각 Data는 초기값으로 설정됩니다 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값 공장 출하 설정값 입니다 사용자가 변경한 경우 초기값은 사용자가 변경한 값으로 적용됩니다 RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#초기값"
	},
	"4108": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "EEPROM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 Model Number 51 201 Model Information Firmware Version ID 252 Baud Rate Return Delay Time 250 255 sec 10 Drive Mode 11 Operating Mode 12 Sencondary ID 255 255 20 Homing Offset 150 pulse 24 Moving Threshold 80 970 01 rev min 31 Temperature Limit 80 100 32 Max Voltage Limit 350 350 34 Min Voltage Limit 150 350 36 PWM Limit 009 009 38 Current Limit 984 984 mA 40 Acceleration Limit 447 378 788 rev min 44 Velocity Limit 970 970 01 rev min 48 Max Position Limit 150 150 pulse 52 Min Position Limit 150 pulse 57 External Port Mode 56 External Port Mode 58 External Port Mode 59 External Port Mode 63 Shutdown 52 255 168 Indirect Address 634 512 023 170 Indirect Address 635 512 023 172 Indirect Address 636 512 023 422 Indirect Address 128 761 512 023 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#eeprom-영역"
	},
	"4109": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "RAM 영역",
		"header3": "",
		"content": "주소 크기 Byte 명칭 접근 기본값 범위 단위 512 Torque Enable 513 LED Red 255 514 LED Green 255 515 LED Blue 255 516 Status Return Level 517 Registered Instruction 518 Hardware Error Status 524 Velocity Gain 32 767 526 Velocity Gain 32 767 528 Position Gain 32 767 532 Position Gain 32 767 530 Position Gain 32 767 536 Feedforward 2nd Gain 32 767 538 Feedforward 1st Gain 32 767 546 Bus Watchdog 127 20 msec 548 Goal PWM PWM Limit 36 PWM Limit 36 550 Goal Current Current Limit 38 Current Limit 38 mA 552 Goal Velocity Velocity Limit 44 Velocity Limit 44 01 rev min 556 Profile Acceleration Acceleration Limit 40 rev min 560 Profile Velocity Velocity Limit 44 01 rev min 564 Goal Position Min Position Limit 52 Max Position Limit 48 pulse 568 Realtime Tick 32 767 msec 570 Moving 571 Moving Status 572 Present PWM 574 Present Current mA 576 Present Velocity 01 rev min 580 Present Position pulse 584 Velocity Trajectory 01 rev min 588 Position Trajectory pulse 592 Present Input Voltage 594 Present Temperature 600 External Port Data 095 602 External Port Data 095 604 External Port Data 095 606 External Port Data 095 634 Indirect Data 255 635 Indirect Data 255 636 Indirect Data 255 761 Indirect Data 128 255 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#ram-영역"
	},
	"4110": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "",
		"content": "주의 EEPROM Area에 존재하는 모든 Data는 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 주의 RH P12 RN 는 RH P12 RN의 개선된 firmware 입니다 두 firmware의 Control table이 다르니 사용 전에 Control table의 주소를 필히 확인해 주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#컨트롤-테이블-설명"
	},
	"4111": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Model Number(0)",
		"content": "RH P12 RN 의 모델 번호입니다 모델명 Model Number RH P12 RN 35 074 0x8902 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#model-number0"
	},
	"4112": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Firmware Version(6)",
		"content": "RH P12 RN 의 펌웨어 버전입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#firmware-version6"
	},
	"4113": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "ID(7)",
		"content": "Instruction Packet으로 장치를 식별하기 위한 고유 번호입니다 252 0xFC 까지 사용 가능하며 254 0xFE 는 브로드캐스트 Broadcast ID로 특수하게 사용됩니다 브로드캐스트 ID 254 0xFE 로 Instruction Packet을 전송하면 모든 장치에 명령을 내릴 수 있습니다 주의 연결된 장치의 ID가 중복되지 않도록 주의해야 합니다 또한 ID 는 EEPROM 영역에 존재하기 때문에 Torque Enable 512 의 값이 일 때만 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#id7"
	},
	"4114": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Baud Rate(8)",
		"content": "제어기와 통신하기 위한 통신 속도 입니다 값 통신 속도 실제 통신 속도 오차율 10 500 000 10 5M 10 500 000 000 000 000 6M 000 000 000 500 000 5M 421 053 176 000 000 4M 000 000 000 000 000 3M 000 000 000 000 000 2M 000 000 000 000 000 1M 000 000 000 115 200 115 226 023 초기값 57 600 57 613 023 600 600 000 참고 UART는 Baudrate 오차가 이내이면 통신에 지장이 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#baud-rate8"
	},
	"4115": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Return Delay Time(9)",
		"content": "제어기로부터 Instruction Packet을 받은 후 Status Packet을 반환하기까지 걸리는 시간입니다 254 0xFE 까지 사용 가능하며 단위는 sec 입니다 예를 들어 값이 10일 경우 20 sec 만큼 시간이 지난 후에 Status Packet을 응답합니다 단위 범위 상세설명 sec 254 초기값 250 500 최대 508 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#return-delay-time9"
	},
	"4116": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Drive Mode(10)",
		"content": "회전 방향을 설정할 수 있습니다 값 동작 모드 설명 CCW 회전 위치가 양수일 때 CCW 방향으로 회전합니다 CW 회전 위치가 양수일 때 CW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#drive-mode10"
	},
	"4117": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Operating Mode(11)",
		"content": "장치의 제어 모드를 설정합니다 각 제어 모드마다 특성이 다르기 때문에 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다 값 동작 모드 설명 전류제어 모드 속도와 위치는 제어하지 않고 전류를 제어합니다 Reserved Default 전류기반 위치제어 모드 위치와 전류를 제어합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#operating-mode11"
	},
	"4118": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Secondary ID(12)",
		"content": "Secondary ID 12 는 ID 과 동일하게 장치를 식별하기 위한 번호로 사용됩니다 다만 Secondary ID 12 는 ID 과 달리 고유한 번호가 아닙니다 따라서 동일한 Secondary ID 값을 갖은 장치들은 하나의 그룹을 형성하게 됩니다 Secondary ID 12 와 ID 의 차이는 다음과 같습니다 Secondary ID 12 는 ID 과 달리 고유 번호가 아닙니다 즉 다수의 장치가 동일한 Secondary ID 값을 가질 수 있습니다 Secondary ID 12 보다 ID 의 우선순위가 높습니다 따라서 Secondary ID 12 와 ID 가 같을 경우 ID 가 우선적으로 적용됩니다 Secondary ID 12 로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다 RAM 영역만 변경이 가능합니다 Instruction Packet의 ID가 Sencodary ID 12 와 같은 경우 Status Packet을 반환하지 않습니다 Secondary ID 12 의 값이 253 이상인 경우 Secondary ID 기능은 비활성화 됩니다 값 세부 설명 252 Secondary ID 기능 활성화 253 255 Secondary ID 기능 비활성화 초기값 255 다음은 ID 가 1부터 5로 설정된 5개의 장치가 있는 경우에 대한 동작 예시입니다 5개 장치의 Secondary ID 12 를 모두 로 동일하게 설정합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 ID가 인 장치는 LED를 켠 후 Status Packet을 반환합니다 Write Instruction Packet ID LED Red 513 255 을 전송합니다 5개의 장치들은 모두 LED를 켭니다 단 Status Packet은 ID가 인 장치만 반환합니다 5개 장치의 Secondary ID 12 를 모두 100 으로 동일하게 설정합니다 Write Instruction Packet ID 100 LED Red 513 을 전송합니다 5개의 장치들은 모두 LED를 끕니다 단 ID 100 인 장치가 없으므로 Status Packet은 반환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#secondary-id12"
	},
	"4119": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Homing Offset(20)",
		"content": "0점의 위치를 조절 할 수 있습니다 이 값은 Present Position 580 에 더해지게 됩니다 Present Position 실제 위치 Homing offset 20 이 됩니다 단위 값의 범위 pulse 1150 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#homing-offset20"
	},
	"4120": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Threshold(24)",
		"content": "움직임의 유무를 판별하는 기준 속도로 사용됩니다 Present Velocity 576 의 절대값이 Moving Threshold 24 보다 크면 Moving 570 이 1이 되고 작으면 0이 됩니다 단위 범위 01 rev min 970 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#moving-threshold24"
	},
	"4121": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Temperature Limit(31)",
		"content": "동작 온도의 상한 값입니다 현재 내부온도를 나타내는 Present Temperature 594 가 Temperature Limit 31 보다 높아지면 Hardware Error Status 518 의 Over Heating Error Bit 0x04 가 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Overheating Error Bit 0x04 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 100 주의 온도 상한선을 초기값보다 높게 설정하지 마십시오 온도 알람셧다운 발생시 20분이상 휴식하여 장치의 온도를 충분히 낮춘후 사용해 주세요 온도가 높은상태에서 사용시 제품이 손상될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#temperature-limit31"
	},
	"4122": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Voltage Limit(32, 34)",
		"content": "동작 전압의 상한 값과 하한 값입니다 현재 인가된 전압을 나타내는 Present Input Voltage 592 가 Max Voltage Limit 32 와 Min Voltage Limit 34 의 범위를 벗어날 경우 Hardware Error Status 518 의 Input Voltage Error Bit 0x01 이 설정되고 Status Packet은 Error 필드를 통해서 Alert Bit 0x80 을 전송합니다 Shutdown 63 에 Input Voltage Error Bit 0x10 가 설정된 경우 Torque Enable 512 은 이 되고 Torque가 OFF 됩니다 자세한 설명은 Shutdown 63 을 참고하세요 단위 범위 약 350 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#maxmin-voltage-limit32-34"
	},
	"4123": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "PWM Limit(36)",
		"content": "PWM 출력의 한계 값입니다 Goal PWM 548 에는 PWM Limit 36 보다 큰 값을 입력할 수 없습니다 PWM Limit 36 은 모든 제어 모드에 공통으로 적용되는 출력 제한 값으로써 PWM 출력을 낮추면 장치의 토크와 속도 모두 감소합니다 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요 값 설명 009 009 100 출력 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#pwm-limit36"
	},
	"4124": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Current Limit(38)",
		"content": "목표 전류 값의 한계 값입니다 Goal Current 550 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 mA 984 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#current-limit38"
	},
	"4125": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Acceleration Limit(40)",
		"content": "프로파일 가속도 값의 한계 값입니다 Profile Acceleration 556 은 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 rev min 378 788 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#acceleration-limit40"
	},
	"4126": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Limit(44)",
		"content": "목표 속도 값과 프로파일 속도 값의 한계 값입니다 Goal Velocity 552 와 Profile Velocity 560 는 이 값보다 큰 값을 쓸 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 범위 01 rev min 970 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#velocity-limit44"
	},
	"4127": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Max/Min Position Limit(48, 52)",
		"content": "전류 기반 위치 제어 모드에서 목표 위치의 제한 값으로써 150 범위 내에서 목표 위치를 제한 합니다 따라서 위치 제어 모드에서 Goal position 564 은 이 값보다 클 수 없습니다 이 값보다 큰 값을 쓰려 하면 값이 써지지 않고 Status packet의 error 에 Limit error bit가 set 됩니다 단위 값의 범위 pulse 150 주의 동작 모드가 확장 위치 제어 모드일 때는 Position Limit이 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#maxmin-position-limit48-52"
	},
	"4128": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "External Port Mode",
		"content": "External Port Data 다용도로 사용 가능한 External Port를 제공합니다 External Port의 용도는 External Port Mode 56 59 에 의해서 결정되고 External Port의 신호는 External Port Data 600 607 에 의해서 제어됩니다 External Port Data를 통해서 External Port의 신호를 제어하거나 External Port 신호의 상태를 확인할 수 있습니다 External Port는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 쉴드 케이블 Shield cable 이나 트위스트 케이블 Twist pair cable 을 사용하실 경우 보다 정밀한 측정이 가능합니다 케이블 길이는 짧을수록 정밀한 측정에 유리합니다 항목 사양 전압 VESD HBM kV 전류 mA VESD HBM ESD Electrostatic Discharge Voltage human body model 명칭 External Port Mode External Port Data 접근 비고 Analogue Input External Port 신호 signal 를 Digital로 변환 External Data signal 095 Resolution 12 bit 095 Digital Output Push Pull External Port의 출력을 로 변경 External Port의 출력을 로 변경 Output level VOH min Output level VOL max Digital Input Pull Up External Port의 입력이 External Port의 입력이 또는 Open Input level VIH min Input level VIL max Pull Up 40 typ Digital Input Pull Down 초기값 External Port의 입력이 또는 Open External Port의 입력이 Input level VIH min Input level VIL max Pull Down 40 typ 경고 External Port 는 전기적으로 절연되어 있지 않기 때문에 전기적 사양을 준수하시기 바랍니다 전기적 사양을 초과하거나 신호 연결에 문제가 있는 경우 Dynamixel이 손상될 수 있으므로 각별한 주의가 요구됩니다 External Port를 사용할 때 다음 사항들을 주의하시기 바랍니다 정전기 ESD 단락 Short circuit 단선 Open circuit 등에 의한 전기적인 충격이 발생하지 않도록 주의해 주십시오 External Port 커넥터로 물이나 먼지가 유입되지 않도록 주의해 주십시오 External Port를 사용하지 않을 때는 케이블을 제거해 주십시오 External Port에 신호를 연결 해제 할 때는 전원이 꺼진 상태에서 진행해 주십시오 External Port 의 GNDext 핀과 Dynamixel 커넥터의 GND핀을 직접 연결하지 마십시오 전원 노이즈가 External Port로 유입될 수 있습니다 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 외부 확장 포트의 위치 및 핀 기능 아래와 같이 나사를 제거하고 커버를 들어내면 외부 확장 포트가 드러납니다 핀 핀 핀 핀 핀 핀 GND 3V PORT1 PORT2 PORT3 PORT4 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#external-port-mode"
	},
	"4129": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Shutdown(63)",
		"content": "동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다 각 Bit의 기능은 OR 의 논리로 적용되기 때문에 중복 설정이 가능합니다 즉 Shutdown 63 이 0x05 진수 00000101 로 설정되었을 경우 Input Voltage Error 진수 00000001 와 Overheating Error 진수 00000100 가 발생하는 것을 모두 감지할 수 있습니다 위험 상황이 감지되면 Torque Enable 512 값이 으로 변경되고 모터 출력은 가 됩니다 제어기는 Status Packet의 Error 필드에 Alert Bit 0x80 이 설정되었는지를 확인하거나 Hardware Error Status 518 을 통해서 현재상태를 확인할 수 있습니다 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한 Torque Enable 512 을 Torque ON 로 설정할 수 없습니다 Shutdown 63 에서 감지할 수 있는 위험 상황은 아래 표와 같습니다 Bit 명칭 내용 Bit 미사용 항상 Bit 미사용 항상 Bit Overload Error 초기값 모터의 최대 출력으로 제어 할 수 없는 하중이 지속적으로 적용되는 경우 Bit Electrical Shock Error 초기값 전기적으로 회로가 충격을 받거나 입력 전력이 부족해서 모터가 정상동작하지 못하는 경우 Bit Motor Encoder Error 모터의 엔코더가 동작하지 않을 경우 Bit Overheating Error 초기값 내부 온도가 설정된 동작 온도 범위를 벗어난 경우 Bit Motor Hall Sensor Error 모터의 홀센서 값이 정상 범위를 벗어났을 경우 Bit Input Voltage Error 인가된 전압이 설정된 동작 전압 범위를 벗어났을 경우 참고 Shutdown이 발생하면 다음과 같은 방법으로 장치를 REBOOT 시킬 수 있습니다 REBOOT 전원을 껐다 켜는 방법 REBOOT REBOOT Instruction 전송하는 방법 자세한 사항은 Protocol 0의 Reboot 을 참고해주세요 Shutdown이 발생하면 1초 주기로 LED가 점멸합니다 Shutdown이 발생하면 전기적 브레이크 Dynamic brake 상태로 전환됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#shutdown63"
	},
	"4130": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Indirect Address",
		"content": "Indirect Data 사용자는 이 기능을 이용해 필요한 컨트롤 테이블을 모아서 이용할 수 있습니다 Indirect Address Table에 특정 주소를 세팅하면 Indirect Data Table은 특정 주소와 동일한 기능을 가지게 됩니다 예를 들어 Indirect Address 168 에 513을 쓰고 Indirect Data 634 에 255를 쓰게 되면 붉은 색LED에 불이 들어옵니다 LED Red 513 의 값 또한 255로 쓰여있습니다 또한 LED Red 513 에 값을 쓰면 Indirect Data 1의 값 또한 똑같이 변합니다 Indirect Address에 특정 주소를 세팅하게 되면 Indirect Data는 그것과 동일한 테이블이 됩니다 주의해야 할 점은 2byte 이상의 길이를 가진 Control Table을 Indirect Address로 설정할 때입니다 Control Table Item의 모든 byte를 Indirect Address로 세팅 해주어야 정상 동작합니다 예를 들어 Indirect Data 2를 Goal Position 564 으로 사용하고 싶을 땐 아래와 같이 세팅해야 합니다 예제 바이트 LED Red 513 를 Indirect Data 634 에 할당하기 Indirect Address 168 Red LED의 주소값인 513 으로 변경 Indirect Data 634 을 255 로 변경 LED Red 513 값 또한 255 로 변경되며 붉은색 LED가 켜짐 Indirect Data 634 을 로 변경 LED Red 513 값 또한 로 변경도며 LED가 꺼짐 예제 바이트 길이의 Goal Position 564 를 Indirect Data 635 에 할당하기 위해서는 반드시 연속된 바이트를 모두 할당해야 함 Indirect Address 170 값을 Goal Position의 첫번째 주소인 564 로 변경 Indirect Address 172 값을 Goal Position의 두번째 주소인 565 로 변경 Indirect Address 174 값을 Goal Position의 세번째 주소인 566 로 변경 Indirect Address 176 값을 Goal Position의 첫번째 주소인 567 로 변경 Indirect Data 2부터 5까지의 4바이트를 250 961 0x0003D451 로 변경 Goal Position 564 역시 250 961 0x0003D451 로 변경됨 Indirect Data 주소 Goal Position 주소 저장된 HEX 값 635 564 0x51 636 565 0xD4 637 566 0x03 638 567 0x00 참고 2바이트 이상의 데이터를 Indirect Address에 할당하기 위해서는 모든 데이터의 주소를 예제 와 같이 Indirect Address에 할당해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#indirect-address"
	},
	"4131": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Torque Enable(512)",
		"content": "Torque ON OFF를 제어합니다 을 쓰면 Torque ON 상태가 되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다 값 설명 초기값 Torque OFF Free run 상태로 변경합니다 Torque ON 상태로 변경하고 EEPROM 영역의 모든 데이터는 잠김상태로 변경됩니다 참고 Present Position 580 은 Operating Mode 11 와 Torque Enable 512 이 변경되는 시점에 초기화 될 수 있습니다 자세한 사항은 Homing Offset 20 과 Present Position 580 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#torque-enable512"
	},
	"4132": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "RGB LED",
		"content": "3색 LED에 대해 밝기 값을 지정할 수 있습니다 알람이 발생한 후에는 LED 밝기를 설정할 수 없습니다 주소 색상 값의 범위 513 Red 255 514 Green 255 515 Blue 255 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#rgb-led"
	},
	"4133": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Status Return Level(516)",
		"content": "Status Packet의 반환 방식을 결정합니다 값 응답하는 명령 설명 PING Instruction 모든 명령에 대해 반환하지 않음 PING Instruction READ Instruction READ 명령에 대해서만 반환함 Instructions 모든 명령에 대해서 반환함 참고 Instruction packet 의 ID가 Broadcast ID 인 경우는 이 값에 상관 없이 Status Packet이 반환되지 않습니다 더 자세한 설명은 Protocol 의 Status Packet 항목을 참조하심시오 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#status-return-level516"
	},
	"4134": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Registered Instruction(517)",
		"content": "값 설명 REG WRITE로 전달된 명령이 없습니다 REG WRITE로 전달된 명령이 있습니다 참고 ACTION 명령을 수행하면 이 값이 으로 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#registered-instruction517"
	},
	"4135": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Hardware Error Status(518)",
		"content": "에러 상태에 대한 정보를 표시합니다 더 자세한 정보는 Shutdown 63 를 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#hardware-error-status518"
	},
	"4136": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity PI Gain(524, 526), Position PID Gain(528,530,532), Feedforward 2nd Gains(536), Feedforward 1st Gains(538)",
		"content": "전류기반 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다 편의상 장치 내부 제어기의 Position Gain을 P로 표기하고 Control Table의 Gain은 TBL 로 표기합니다 제어기 Gain 범위 설명 Velocity Gain 524 32 767 Velocity Integral Gain Velocity Gain 526 32 767 Velocity Proportion Gain Position Gain 528 32 767 Position Differential Gain Position Gain 530 32 767 Position Integral Gain Position Gain 532 32 767 Position Proportion Gain Feedforward 2nd Gain 536 FF1st 32 767 Feedforward Acceleration Gain Feedforward 1st Gain 538 FF1st 32 767 Feedforward Velocity Gain 다음은 전류기반 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다 사용자의 요청이 장치에 전달된 후 장치의 Horn이 구동되기까지의 과정은 다음과 같습니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Goal Position은 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 Position Trajectory 588 에 표기됩니다 Feedforward와 PID 제어기는 목표 궤적을 입력받아 모터에 인가할 PWM 출력을 계산합니다 Goal PWM 548 은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다 최종 PWM값은 Inverter를 통해 모터에 적용되고 장치의 Horn이 구동됩니다 구동 결과는 Present Position 580 Present Velocity 576 Present PWM 572 Present Current 574 에 표기됩니다 참고 는 Anti windup Gain로서 사용자가 변경할 수는 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#velocity-pi-gain524-526, #position-pid-gain528-530-532, Feedforward 2nd Gains536, Feedforward 1st Gains538"
	},
	"4137": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Bus Watchdog(546)",
		"content": "Bus Watchdog 546 은 특정할 수 없는 오류에 의해 제어기와 장치의 통신 RS485 이 단절된 경우 장치를 정지시키기 위한 안전장치 Fail safe 입니다 여기서 통신이란 프로토콜에서 정의된 모든 Instruction Packet을 의미합니다 값 설명 단위 20 msec 범위 Bus Watchdog 기능 비활성화 Bus Watchdog Error 해제 범위 127 Bus Watchdog 활성화 범위 Bus Watchdog Error 상태 Bus Watchdog 기능은 Torque Enable 512 가 인 경우 제어기와 장치의 통신 간격 시간 을 감시합니다 측정된 통신 간격 시간 이 Bus Watchdog 546 보다 클 경우 장치는 정지합니다 이때 Bus Watchdog 546 은 Bus Watchdog Error 로 변경됩니다 Bus Watchdog Error 상태가 되면 Goal Value Goal PWM 548 Goal Current 550 Goal Velocity 552 Goal Position 564 의 Access 접근 속성 은 읽기 전용 Read 로 변경됩니다 따라서 Goal Value에 새로운 값을 쓸 경우 Status packet을 통해 Range Error를 회신합니다 Bus Wathdog 546 의 값을 으로 변경하면 Bus Watchdog Error는 해제됩니다 참고 Range Error에 대한 자세한 사항은 프로토콜 을 참고해주세요 다음은 Bus Watchdog 기능의 동작 예시입니다 Operating Mode 11 를 속도 제어 모드로 설정한 후 Torque Enable 512 를 로 변경 합니다 Goal Velocity 552 에 50 을 쓰면 장치는 CCW 방향으로 회전합니다 Bus Watchdog 546 의 값을 100 000 ms 으로 변경합니다 Bus Watchdog 기능 활성화 000 msec 동안 Instruction packet이 수신되지 않으면 장치는 고정된 감속도로 정지합니다 Bus Watchdog 546 의 값은 Bus Watchdog Error 으로 변경됩니다 이때 Goal Value의 접근속성 Access 은 모두 읽기전용 Read 으로 변경됩니다 Goal Velocity 552 에 150 을 쓰면 Status Packet을 통해 Range Error가 회신합니다 Bus Watchdog 546 의 값을 으로 변경하면 Bus Watchdog Error가 해제됩니다 Goal Velocity 552 에 150 을 쓰면 장치는 CCW 방향으로 회전합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#bus-watchdog546"
	},
	"4138": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal PWM(548)",
		"content": "PWM 제어 모드에서는 Goal PWM 548 값이 Inverter를 통해서 모터에 직접 인가됩니다 그 외의 제어 모드에서는 PWM 출력의 제한값으로 사용됩니다 이 값은 PWM Limit 36 보다 클 수 없습니다 제어 모드 별 Goal PWM 548 의 동작 방식은 해당 Gain의 설명 부분을 참고하세요 범위 설명 PWM Limit 36 PWM Limit 36 PWM Limit 36 의 초기값 009 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#goal-pwm548"
	},
	"4139": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Current(550)",
		"content": "전류 제어 모드에서는 목표 전류값으로 동작합니다 전류기반 위치 제어 모드에서는 전류 제어기 입력 전류 의 제한값으로 동작됩니다 이 값은 Current Limit 38 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#goal-current550"
	},
	"4140": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Velocity(552)",
		"content": "속도 제어기 입력 속도 의 제한값으로 동작됩니다 이 값은 Velocity Limit 44 보다 큰 값을 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#goal-velocity552"
	},
	"4141": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Acceleration(556)",
		"content": "프로파일 가속도를 설정합니다 동작모드가 전류기반 위치 제어 모드에서만 사용할 수 있습니다 프로파일 가속도 값의 범위는 Acceleration Limit 40 입니다 주의 Profile Velocity 560 의 값이 0일 때는 프로파일 가속도가 적용되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#profile-acceleration556"
	},
	"4142": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Profile Velocity(560)",
		"content": "Profile의 최대 속도를 설정합니다 Profile Velocity 560 는 전류기반 위치 제어 모드에서만 적용 가능합니다 Profile Velocity 560 는 Velocity Limit 44 보다 클 수 없습니다 참고로 속도 제어 모드에서는 Profile Velocity 560 는 적용되지 않고 Profile Acceleration 556 만 적용됩니다 단위 범위 설명 01 rev min Velocity Limit 44 Profile Velocity 560 이 인 경우 무한대 속도를 뜻합니다 Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다 장치는 3가지 형태의 Profile을 제공합니다 다음은 3가지 종류의 Profile을 표시합니다 기본적으로 Profile의 선택은 Profile Velocity 560 와 Profile Acceleration 556 의 조합에 의해서 결정됩니다 예외적으로 Trapezoidal Profile은 총 이동거리 Pos 목표위치와 현재위치의 차이 가 추가로 고려되어 선택됩니다 장치의 Profile은 Goal Position 564 이 주어졌을 때 현재 속도 Profile의 시작속도 를 기반으로 목표 속도 궤적을 생성합니다 따라서 장치가 Goal Position 564 로 이동하는 중에 새로운 Goal Position 564 로 목표위치가 변경되어도 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다 여기서는 수식의 단순화를 위해 Profile의 시작속도를 으로 가정합니다 다음은 Goal Position 564 명령에 대한 Profile의 동작 과정을 나타냅니다 사용자의 요청이 통신 버스를 통해 Goal Position 564 에 등록됩니다 Profile Velocity 560 와 Profile Acceleration 556 에 의해서 가속 시간 t1 이 결정됩니다 Profile Velocity 560 Profile Acceleration 556 그리고 총 이동거리 Pos 목표 위치와 현재 위치의 차이 에 의해서 Profile의 형태가 다음과 같이 결정됩니다 최종 선정된 Profile의 형태는 Moving Status 571 에 표기됩니다 Moving Status 571 참고 장치는 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다 Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory 584 와 Position Trajectory 588 에 표기됩니다 조건 프로파일 형태 Profile Velocity 560 프로파일 미사용 Step 명령 Profile Velocity 560 amp Profile Acceleration 556 사각 프로파일 Profile Velocity 560 amp Profile Acceleration 556 사다리꼴 프로파일 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다 Velocity Override 기능은 동일하게 동작합니다 이때의 가속시간 은 다음과 같습니다 600 Goal Velocity 552 Profile Acceleration 556 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#profile-velocity560"
	},
	"4143": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Goal Position(564)",
		"content": "이동시키고자 하는 곳의 위치 값입니다 값의 범위는 Min Position Limit 40 Max Position Limit 36 이며 초기값은 150 0x47E 입니다 모델명 Goal Position Goal Position 740 RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#goal-position564"
	},
	"4144": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Realtime Tick(568)",
		"content": "장치의 내부 시간을 나타냅니다 단위 범위 설명 msec 32 767 32 767 이후에는 부터 다시 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#realtime-tick568"
	},
	"4145": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving(570)",
		"content": "장치가 회전하는지 여부를 알려줍니다 Present Velocity 576 의 절대값이 Moving Threshold 24 에 설정된 값보다 크다면 Moving 570 은 로 설정되고 그렇지 않은 경우에는 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#moving570"
	},
	"4146": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Moving Status(571)",
		"content": "움직임에 대한 추가적인 정보를 제공합니다 Position Bit 0x01 은 전류기반 위치 제어 모드에서만 동작합니다 상세 설명 Bit 0x80 미사용 Bit 0x40 미사용 Bit Bit 0x30 Profile Type 0x30 Profile Type 0x10 Profile Type 0x00 사다리꼴 속도 프로파일 Trapezoidal Velocity Profile 사각 속도 프로파일 Rectangle Velocity Profile 프로파일 미사용 Step Bit 0x08 미사용 Bit 0x04 미사용 Bit 0x02 미사용 Bit 0x01 Position 목표위치에 도달 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#moving-status571"
	},
	"4147": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present PWM(572)",
		"content": "현재 장치의 모터에 인가되는 PWM 값입니다 Goal PWM 548 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#present-pwm572"
	},
	"4148": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Current(574)",
		"content": "현재 장치의 모터에 흐르는 전류 값입니다 Goal Current 550 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#present-current574"
	},
	"4149": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Velocity(576)",
		"content": "현재 장치가 회전하는 속도 값입니다 Goal Velocity 552 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#present-velocity576"
	},
	"4150": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Position(580)",
		"content": "장치의 현재 위치 값입니다 Model Goal Position Goal Position 740 RH P12 RN ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#present-position580"
	},
	"4151": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Velocity Trajectory(584)",
		"content": "Profile에 의해 생성된 목표 속도 궤적입니다 자세한 사항은 Profile Velocity 560 를 참고하세요 전류기반 위치 제어 모드 Position Trajectory 588 을 생성하기 위한 목표 속도 궤적입니다 Profile이 종료되면 Velocity Trajectory 584 은 이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#velocity-trajectory584"
	},
	"4152": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Position Trajectory(588)",
		"content": "Profile에 의해 생성된 목표 위치 궤적입니다 전류기반 위치 제어 모드에서만 동작 합니다 자세한 사항은 Profile Velocity 560 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#position-trajectory588"
	},
	"4153": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Input Voltage(592)",
		"content": "현재 장치에 공급되는 전압입니다 자세한 사항은 Max Min Voltage Limit 32 34 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#present-input-voltage592"
	},
	"4154": {
		"product": "RH-P12-RN(A)",
		"header1": "컨트롤 테이블",
		"header2": "컨트롤 테이블 설명",
		"header3": "Present Temperature(594)",
		"content": "현재 장치의 내부 온도입니다 자세한 사항은 Temperature Limit 31 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#present-temperature594"
	},
	"4155": {
		"product": "RH-P12-RN(A)",
		"header1": "조립 예시",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#조립-예시"
	},
	"4156": {
		"product": "RH-P12-RN(A)",
		"header1": "조립 예시",
		"header2": "옵션프레임 조립",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#옵션프레임-조립"
	},
	"4157": {
		"product": "RH-P12-RN(A)",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#참고자료"
	},
	"4158": {
		"product": "RH-P12-RN(A)",
		"header1": "참고자료",
		"header2": "커넥터 정보",
		"header3": "",
		"content": "항목 RS 485 외부포트 핀 번호 GND VDD DATA DATA GND VDD PORT PORT PORT PORT 다이어그램 하우징 JST EHR 04 MOLEX 51021 0600 PCB 헤더 JST B4B EH MOLEX 53047 0610 Crimp 터미널 JST SHE 001T P0 MOLEX 50079 8100 Wire Gauge 21 AWG 21 AWG ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#커넥터-정보"
	},
	"4159": {
		"product": "RH-P12-RN(A)",
		"header1": "참고자료",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 RH P12 RN PDF zip 다운로드 RH P12 RN STP zip ",
		"url": "http://emanual.robotis.com/docs/kr/platform/rh_p12_rna/#도면"
	},
	"4160": {
		"product": "로봇핸드(MX-28)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote Robot Hand FINGER HAND PHN 33C ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#개요"
	},
	"4161": {
		"product": "로봇핸드(MX-28)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 크기 손을 편 상태 167mm 164mm 98mm 무게 400g 자유도 DOF MX 28 Actuator의 최소 제어각 088 힘 손가락 끝 7kgf 16 7N 동작 온도 85 사용 전압 10 14 8V 권장 전압 12 0V 사용 전류 45A 1A 14 8V 인터페이스 RS 485 Multi Drop BUS ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#주요-사양"
	},
	"4162": {
		"product": "로봇핸드(MX-28)",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#시작하기"
	},
	"4163": {
		"product": "로봇핸드(MX-28)",
		"header1": "시작하기",
		"header2": "제품 구성",
		"header3": "",
		"content": "부품 설명 Hand 본체 1개 오른손과 왼손 옵션에 따라 다릅니다 CM 700 세트 1개 Hand와 연결되어 제어하는 장치입니다 구성품은 첨부되어 있는 문서를 참고하시기 바랍니다 USB 다운로더 LN 101 1개 PC와 CM 700을 연결하기 위한 장치입니다 실리콘 파트 세트 1개 여분으로 사용할 수 있는 실리콘 손가락 커버입니다 CABLE PWR01 1개 SMPS 직류 전원 공급 장치 를 가지고 있는 경우 연결하여 사용할 커넥터입니다 WB M2 20개 NUT M2 20개 다이나믹셀과 프레임을 체결할 수 있는 스크류세트입니다 4PCABLE 100 2개 4PCABLE 200 1개 Hand와 CM 700을 연결하거나 MX 28끼리 연결할 수 있는 케이블입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#제품-구성"
	},
	"4164": {
		"product": "로봇핸드(MX-28)",
		"header1": "시작하기",
		"header2": "설치",
		"header3": "",
		"content": "RoboPlus CD를 이용해서 PC에 RoboPlus를 설치합니다 CD가 없는 경우는 홈페이지 자료실 에서 받을 수 있습니다 Hand와 CM 700을 4P케이블을 이용해서 연결합니다 LN 101을 이용해서 CM 700과 PC를 연결합니다 LN 101 드라이버 설치 CM 700에 전원을 연결합니다 SMPS를 이용하는 경우는 CABLE PWR01을 이용합니다 직접 전원을 공급하는 경우는 권장 전압과 방향을 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#설치"
	},
	"4165": {
		"product": "로봇핸드(MX-28)",
		"header1": "시작하기",
		"header2": "작동",
		"header3": "",
		"content": "바로 실행할 수 있는 데모 프로그램을 제공하며 최초 구매시에는 설치되어 있습니다 데모 프로그램 설치 방법 PC와 연결하지 않고 바로 데모를 실행할 수 있습니다 아래 단계로 PC와 연결하여 제어할 수도 있습니다 LN 101로 PC와 CM 700이 연결된 상태에서 로보플러스 터미널 을 실행합니다 올바른 포트 번호를 이용해서 RoboPlus Terminal을 포트와 연결시킵니다 CM 700의 전원을 켭니다 RoboPlus Terminal에 메시지가 출력되면 정상입니다 help를 입력하면 사용 가능한 명령어 목록이 나오며 해당 명령을 입력하면 작동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#작동"
	},
	"4166": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "",
		"header3": "",
		"content": "개발자는 CM 700에 들어가는 Hand 제어 프로그램을 만들 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#로봇핸드-프로그래밍"
	},
	"4167": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "개발환경 구축하기",
		"header3": "",
		"content": "CM 700에서 동작하는 프로그램을 만들기 위해서는 Atmega2561 개발 환경인 WinAVR과 Atmel Studio를 설치해야 합니다 WinAVR 설치 방법 Atmel Studio 설치 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#개발환경-구축하기"
	},
	"4168": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "개발에 필요한 정보",
		"header3": "",
		"content": "개발에 필요한 정보를 얻을 수 있습니다 프로그래밍의 기초 프로그램 Hex파일 설치 방법 CM 700의 하드웨어 포트 정보 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#개발에-필요한-정보"
	},
	"4169": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "",
		"content": "AVR STUDIO4 다운로드 PHN Development v1 00 zip Atmel STUDIO6 다운로드 PHN Development v1 01 zip ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#데모-프로그램-분석"
	},
	"4170": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "소스 구조",
		"content": "공용 소스 플랫폼에 상관 없이 Hand 어플리케이션 개발을 위해 사용할 수 있는 소스 dynamixel dynamixel 다이나믹셀과 통신하기 위한 프로토콜 이 구현되어 있는 소스 hand hand Hand를 보다 쉽게 제어하기 위한 API함수 플랫폼 의존 소스 하드웨어에 의존적인 소스이며 다른 플랫폼에서 동작시키려면 포팅이 필요합니다 hal hal 실제로 다이나믹셀 패킷을 전송 수신하는 소스 serial serial PC와 통신하기위한 소스 데모 소스 demo 데모 프로그램이 구현되어 있는 소스 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#소스-구조"
	},
	"4171": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "dynamixel.h, dynamixel.c, dxl_hal.h, dxl_hal.c",
		"content": "이 소스에 대한 정보는 Dynamixel SDK 에서 보다 자세히 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#소스-구조"
	},
	"4172": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "serial.h, serial.c",
		"content": "CM 700에서 UART1을 통해서 PC와 통신하기 위한 소스가 구현되어 있습니다 PC와 통신은 다음의 설정 값으로 고정되어 있습니다 통신 속도 57 600bps Data 8bit Stop bit No parity No Flow Hardware Control 표준 입출력 방식을 지원하여 stdio 관련 함수를 사용할 수 있습니다 각 함수의 사용법은 다음과 같습니다 serial initialize UART1를 초기화합니다 통신 속도 bps 를 넘겨줍니다 serial write UART1을 통해서 데이터를 전송합니다 전송할 데이터 배열의 포인터와 길이를 넘겨줍니다 serial read 내부 통신 버퍼에서 수신된 데이터를 꺼내옵니다 저장할 배열의 포인터와 길이를 넘겨줍니다 serial get qstate 통신 버퍼에 들어있는 수신된 데이터 크기를 알려줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#소스-구조"
	},
	"4173": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "hand.h, hand.c",
		"content": "Dynamixel API를 이용해서 Hand를 보다 직관적으로 제어하기 위해 재구성한 API입니다 소스를 이해하기에 앞서서 다음을 먼저 알아야 합니다 FINGER FLAG Hand의 각 손가락을 개별 제어하기 위해 flag를 각 함수에 전달합니다 FINGER1은 엄지 손가락이고 값은 1입니다 FINGER2은 집게 손가락이고 값은 2입니다 FINGER3은 가운데 손가락이고 값은 4입니다 손가락 선택별 Flag값은 다음과 같습니다 FINGER1 FINGER2 FINGER1 FINGER3 FINGER2 FINGER3 전체 선택 컨트롤 테이블 Hand에 사용된 Actuator 내부 기능을 정의한 테이블이며 제어하기 위해 알고 있어야 합니다 각 함수의 사용법은 다음과 같습니다 hand unbend 손가락을 폅니다 FINGER FLAG와 speed 값을 넘겨줍니다 동작이 완료될 때까지 Block됩니다 동작 완료 여부는 다이나믹셀의 Moving flag 를 통해 알 수 있습니다 hand bend 손가락을 구부립니다 FINGER FLAG와 speed 값을 넘겨줍니다 동작이 완료될 때까지 Block됩니다 동작 완료 여부는 다이나믹셀의 Moving flag 를 통해 알 수 있습니다 hand set compliance 각 손가락의 Compliance 제어 특성중 Slope 값을 설정합니다 hand set torque limit 각 손가락의 토크 한계 값 을 설정합니다 hand torque hand torque off 각 손가락의 토크를 Off 시킵니다 Hand의 설정을 값을 바꾸고 싶다면 Define된 값을 수정할 수 있습니다 FINGER ID 각 손가락에 사용된 다이나믹셀의 ID입니다 공장 출하시 설정 값은 다음과 같습니다 ID 엄지 손가락 ID 집게 손가락 ID 가운데 손가락 FINGER UNBEND 손가락을 폈을때 Actuator의 위치 값 입니다 FINGER BEND 손가락을 구부렸을때 Actuator의 위치 값 입니다 FINGER DIRECTION 위치 값의 증가 방향이 UNBEND에서 BEND로 되는 것이 1이고 그 반대가 1입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#소스-구조"
	},
	"4174": {
		"product": "로봇핸드(MX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "Demo.c",
		"content": "Hand 데모 프로그램 예제가 구현되어 있습니다 프로그램의 동작 구조는 다음과 같습니다 Hand를 초기화시킵니다 serial dynamixel 통신을 초기화합니다 compliance와 torque limit값을 설정합니다 Start버튼이 눌렸는지 확인하여 데모를 실행합니다 PC연결 없이 데모 실행 기능 제공 PC로부터 문자열 입력을 기다립니다 입력된 문자열로부터 명령어를 분리하여 각 기능을 실행하는 것을 반복합니다 명령어와 파라미터는 공백 문자로 구분됩니다 help 명령어 설명을 출력합니다 disp help demo 데모를 실행합니다 demo bend 파라미터를 분리하여 hand bend를 실행합니다 unbend 파라미터를 분리하여 hand unbend를 실행합니다 compliance 파라미터를 분리하여 hand compliance를 실행합니다 limit 파라미터를 분리하여 hand torque limit를 실행합니다 torque 파라미터를 분리하여 hand torque 혹은 hand torque off를 실행합니다 exit 프로그램을 종료합니다 그 외의 명령어는 에러를 출력합니다 이 프로그램은 일반적인 터미널 프로그램을 이용해서 텍스트기반으로 제어할 수 있습니다 만약 PC로 Hand를 제어할 경우에는 시리얼 통신 프로그래밍을 통해 해당 명령어를 텍스트로 전송하여 제어 시스템을 구축할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#소스-구조"
	},
	"4175": {
		"product": "로봇핸드(MX-28)",
		"header1": "유용한 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#유용한-정보"
	},
	"4176": {
		"product": "로봇핸드(MX-28)",
		"header1": "유용한 정보",
		"header2": "Force Feedback",
		"header3": "",
		"content": "이 제품은 접촉면의 힘을 측정할 센서가 부착되어 있지 않아서 Force Feedback을 구현할 수 없습니다 하지만 관절에 사용된 Actuator인 다이나믹셀은 Load를 센싱할 수 있는 기능 이 있습니다 이 기능은 많은 제약이 있지만 아주 기초적으로 Force Feedback을 구현할 수 있습니다 다이나믹셀의 현재 하중 감지는 다음과 같은 특징이 있습니다 센서로 측정한 것이 아니라 현재의 속도와 출력을 바탕으로 유추한 값입니다 즉 실제 토크와 일치하지 않습니다 방향 CW CCW 과 크기를 알 수 있습니다 약 128msec 느린 업데이트 주기로 인해서 실시간 제어에 활용하기 어렵습니다 필요에 따라 이 기능을 이용해서 Hand가 물체를 집었는지 안 집었는지를 판단하는 용도로 사용할 수 있습니다 만약 접촉면의 힘을 꼭 측정하려면 센서를 부착할 수 있습니다 구현은 사용자가 직접 해야하며 아래의 절차를 참고하시기 바랍니다 센서를 선정한다 FSR센서 같이 ADC로 입력 받을 수 있는 간단한 센서를 추천합니다 CM 700에 연결하는 권장 회로도와 핀 정보는 아래와 같습니다 OUT 5V 포트 제어용 5V ADC 센서의 아날로그 신호 입력 있음 GND NC 사용하지 않음 Hand의 손가락에 집을 물건의 접촉이 잘 되도록 센서를 부착합니다 CM 700의 ADC 예제 를 참고하여 센서의 값을 이용해서 프로그래밍합니다 하드웨어 포트맵 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#force-feedback"
	},
	"4177": {
		"product": "로봇핸드(MX-28)",
		"header1": "유용한 정보",
		"header2": "로보플러스 사용하기",
		"header3": "",
		"content": "비 전문가를 위한 개발 환경인 RoboPlus를 이용해서 Hand를 제어할 수 있습니다 태스크 다운로드 PHN Demo KR tsk 모션 다운로드 PHN Demo KR 33C mtn 로보플러스 사용준비 CM 700 펌웨어 복구 로보플러스 태스크 프로그래밍 로보플러스 모션으로 Hand 모션 만들기 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#로보플러스-사용하기"
	},
	"4178": {
		"product": "로봇핸드(MX-28)",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#다운로드"
	},
	"4179": {
		"product": "로봇핸드(MX-28)",
		"header1": "다운로드",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 3Finger Hand PHN 33B pdf zip 다운로드 3Finger Hand PHN 33B stp zip 다운로드 Platform Hand Bottom Dimension pdf ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_mx28/#도면"
	},
	"4180": {
		"product": "로봇핸드(RX-28)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ockquote 로봇핸드 FINGER HAND PHN 33B ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#개요"
	},
	"4181": {
		"product": "로봇핸드(RX-28)",
		"header1": "주요 사양",
		"header2": "",
		"header3": "",
		"content": "항목 사양 크기 손을 편 상태 167mm 164mm 98mm 무게 400g 자유도 DOF RX 28 Actuator의 최소 제어각 29 힘 손가락 끝 2kgf 19 6N 동작 온도 85 사용 전압 12 18 5V 권장 전압 14 4V 사용 전류 45A 7A 18 5V 인터페이스 RS 485 Multi Drop BUS ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#주요-사양"
	},
	"4182": {
		"product": "로봇핸드(RX-28)",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#시작하기"
	},
	"4183": {
		"product": "로봇핸드(RX-28)",
		"header1": "시작하기",
		"header2": "제품 구성",
		"header3": "",
		"content": "부품 설명 Hand 본체 1개 오른손과 왼손 옵션에 따라 다릅니다 CM 700 세트 1개 Hand와 연결되어 제어하는 장치입니다 구성품은 첨부되어 있는 문서를 참고하시기 바랍니다 USB 다운로더 LN 101 1개 PC와 CM 700을 연결하기 위한 장치입니다 실리콘 파트 세트 1개 여분으로 사용할 수 있는 실리콘 손가락 커버입니다 CABLE PWR01 1개 SMPS 직류 전원 공급 장치 를 가지고 있는 경우 연결하여 사용할 커넥터입니다 WB M2 20개 NUT M2 20개 다이나믹셀과 프레임을 체결할 수 있는 스크류세트입니다 4PCABLE 100 2개 4PCABLE 200 1개 Hand와 CM 700을 연결하거나 RX 28끼리 연결할 수 있는 케이블입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#제품-구성"
	},
	"4184": {
		"product": "로봇핸드(RX-28)",
		"header1": "시작하기",
		"header2": "설치",
		"header3": "",
		"content": "RoboPlus CD를 이용해서 PC에 RoboPlus를 설치합니다 CD가 없는 경우는 홈페이지 자료실 에서 받을 수 있습니다 Hand와 CM 700을 4P케이블을 이용해서 연결합니다 LN 101을 이용해서 CM 700과 PC를 연결합니다 LN 101 드라이버 설치 CM 700에 전원을 연결합니다 SMPS를 이용하는 경우는 CABLE PWR01을 이용합니다 직접 전원을 공급하는 경우는 권장 전압과 방향을 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#설치"
	},
	"4185": {
		"product": "로봇핸드(RX-28)",
		"header1": "시작하기",
		"header2": "작동",
		"header3": "",
		"content": "바로 실행할 수 있는 데모 프로그램을 제공하며 최초 구매시에는 설치되어 있습니다 데모 프로그램 설치 방법 PC와 연결하지 않고 바로 데모를 실행할 수 있습니다 아래 단계로 PC와 연결하여 제어할 수도 있습니다 LN 101로 PC와 CM 700이 연결된 상태에서 로보플러스 터미널 을 실행합니다 올바른 포트 번호를 이용해서 RoboPlus Terminal을 포트와 연결시킵니다 CM 700의 전원을 켭니다 RoboPlus Terminal에 메시지가 출력되면 정상입니다 help를 입력하면 사용 가능한 명령어 목록이 나오며 해당 명령을 입력하면 작동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#작동"
	},
	"4186": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "",
		"header3": "",
		"content": "개발자는 CM 700에 들어가는 Hand 제어 프로그램을 만들 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#로봇핸드-프로그래밍"
	},
	"4187": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "개발환경 구축하기",
		"header3": "",
		"content": "CM 700에서 동작하는 프로그램을 만들기 위해서는 Atmega2561 개발 환경인 WinAVR과 Atmel Studio를 설치해야 합니다 WinAVR 설치 방법 Atmel Studio 설치 방법 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#개발환경-구축하기"
	},
	"4188": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "개발에 필요한 정보",
		"header3": "",
		"content": "개발에 필요한 정보를 얻을 수 있습니다 프로그래밍의 기초 프로그램 Hex파일 설치 방법 CM 700의 하드웨어 포트 정보 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#개발에-필요한-정보"
	},
	"4189": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "",
		"content": "AVR STUDIO4 다운로드 PHN Development v1 00 zip Atmel STUDIO6 다운로드 PHN Development v1 01 zip ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#데모-프로그램-분석"
	},
	"4190": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "소스 구조",
		"content": "공용 소스 플랫폼에 상관 없이 Hand 어플리케이션 개발을 위해 사용할 수 있는 소스 dynamixel dynamixel 다이나믹셀과 통신하기 위한 프로토콜 이 구현되어 있는 소스 hand hand Hand를 보다 쉽게 제어하기 위한 API함수 플랫폼 의존 소스 하드웨어에 의존적인 소스이며 다른 플랫폼에서 동작시키려면 포팅이 필요합니다 hal hal 실제로 다이나믹셀 패킷을 전송 수신하는 소스 serial serial PC와 통신하기위한 소스 데모 소스 demo 데모 프로그램이 구현되어 있는 소스 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#소스-구조"
	},
	"4191": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "dynamixel.h, dynamixel.c, dxl_hal.h, dxl_hal.c",
		"content": "이 소스에 대한 정보는 Dynamixel SDK 에서 보다 자세히 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#소스-구조"
	},
	"4192": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "serial.h, serial.c",
		"content": "CM 700에서 UART1을 통해서 PC와 통신하기 위한 소스가 구현되어 있습니다 PC와 통신은 다음의 설정 값으로 고정되어 있습니다 통신 속도 57 600bps Data 8bit Stop bit No parity No Flow Hardware Control 표준 입출력 방식을 지원하여 stdio 관련 함수를 사용할 수 있습니다 각 함수의 사용법은 다음과 같습니다 serial initialize UART1를 초기화합니다 통신 속도 bps 를 넘겨줍니다 serial write UART1을 통해서 데이터를 전송합니다 전송할 데이터 배열의 포인터와 길이를 넘겨줍니다 serial read 내부 통신 버퍼에서 수신된 데이터를 꺼내옵니다 저장할 배열의 포인터와 길이를 넘겨줍니다 serial get qstate 통신 버퍼에 들어있는 수신된 데이터 크기를 알려줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#소스-구조"
	},
	"4193": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "hand.h, hand.c",
		"content": "Dynamixel API를 이용해서 Hand를 보다 직관적으로 제어하기 위해 재구성한 API입니다 소스를 이해하기에 앞서서 다음을 먼저 알아야 합니다 FINGER FLAG Hand의 각 손가락을 개별 제어하기 위해 flag를 각 함수에 전달합니다 FINGER1은 엄지 손가락이고 값은 1입니다 FINGER2은 집게 손가락이고 값은 2입니다 FINGER3은 가운데 손가락이고 값은 4입니다 손가락 선택별 Flag값은 다음과 같습니다 FINGER1 FINGER2 FINGER1 FINGER3 FINGER2 FINGER3 전체 선택 컨트롤 테이블 Hand에 사용된 Actuator 내부 기능을 정의한 테이블이며 제어하기 위해 알고 있어야 합니다 각 함수의 사용법은 다음과 같습니다 hand unbend 손가락을 폅니다 FINGER FLAG와 speed 값을 넘겨줍니다 동작이 완료될 때까지 Block됩니다 동작 완료 여부는 다이나믹셀의 Moving flag 를 통해 알 수 있습니다 hand bend 손가락을 구부립니다 FINGER FLAG와 speed 값을 넘겨줍니다 동작이 완료될 때까지 Block됩니다 동작 완료 여부는 다이나믹셀의 Moving flag 를 통해 알 수 있습니다 hand set compliance 각 손가락의 Compliance 제어 특성중 Slope 값을 설정합니다 hand set torque limit 각 손가락의 토크 한계 값 을 설정합니다 hand torque hand torque off 각 손가락의 토크를 Off 시킵니다 Hand의 설정을 값을 바꾸고 싶다면 Define된 값을 수정할 수 있습니다 FINGER ID 각 손가락에 사용된 다이나믹셀의 ID입니다 공장 출하시 설정 값은 다음과 같습니다 ID 엄지 손가락 ID 집게 손가락 ID 가운데 손가락 FINGER UNBEND 손가락을 폈을때 Actuator의 위치 값 입니다 FINGER BEND 손가락을 구부렸을때 Actuator의 위치 값 입니다 FINGER DIRECTION 위치 값의 증가 방향이 UNBEND에서 BEND로 되는 것이 1이고 그 반대가 1입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#소스-구조"
	},
	"4194": {
		"product": "로봇핸드(RX-28)",
		"header1": "로봇핸드 프로그래밍",
		"header2": "데모 프로그램 분석",
		"header3": "Demo.c",
		"content": "Hand 데모 프로그램 예제가 구현되어 있습니다 프로그램의 동작 구조는 다음과 같습니다 Hand를 초기화시킵니다 serial dynamixel 통신을 초기화합니다 compliance와 torque limit값을 설정합니다 Start버튼이 눌렸는지 확인하여 데모를 실행합니다 PC연결 없이 데모 실행 기능 제공 PC로부터 문자열 입력을 기다립니다 입력된 문자열로부터 명령어를 분리하여 각 기능을 실행하는 것을 반복합니다 명령어와 파라미터는 공백 문자로 구분됩니다 help 명령어 설명을 출력합니다 disp help demo 데모를 실행합니다 demo bend 파라미터를 분리하여 hand bend를 실행합니다 unbend 파라미터를 분리하여 hand unbend를 실행합니다 compliance 파라미터를 분리하여 hand compliance를 실행합니다 limit 파라미터를 분리하여 hand torque limit를 실행합니다 torque 파라미터를 분리하여 hand torque 혹은 hand torque off를 실행합니다 exit 프로그램을 종료합니다 그 외의 명령어는 에러를 출력합니다 이 프로그램은 일반적인 터미널 프로그램을 이용해서 텍스트기반으로 제어할 수 있습니다 만약 PC로 Hand를 제어할 경우에는 시리얼 통신 프로그래밍을 통해 해당 명령어를 텍스트로 전송하여 제어 시스템을 구축할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#소스-구조"
	},
	"4195": {
		"product": "로봇핸드(RX-28)",
		"header1": "유용한 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#유용한-정보"
	},
	"4196": {
		"product": "로봇핸드(RX-28)",
		"header1": "유용한 정보",
		"header2": "Force Feedback",
		"header3": "",
		"content": "이 제품은 접촉면의 힘을 측정할 센서가 부착되어 있지 않아서 Force Feedback을 구현할 수 없습니다 하지만 관절에 사용된 Actuator인 다이나믹셀은 Load를 센싱할 수 있는 기능 이 있습니다 이 기능은 많은 제약이 있지만 아주 기초적으로 Force Feedback을 구현할 수 있습니다 다이나믹셀의 현재 하중 감지는 다음과 같은 특징이 있습니다 센서로 측정한 것이 아니라 현재의 속도와 출력을 바탕으로 유추한 값입니다 즉 실제 토크와 일치하지 않습니다 방향 CW CCW 과 크기를 알 수 있습니다 약 128msec 느린 업데이트 주기로 인해서 실시간 제어에 활용하기 어렵습니다 필요에 따라 이 기능을 이용해서 Hand가 물체를 집었는지 안 집었는지를 판단하는 용도로 사용할 수 있습니다 만약 접촉면의 힘을 꼭 측정하려면 센서를 부착할 수 있습니다 구현은 사용자가 직접 해야하며 아래의 절차를 참고하시기 바랍니다 센서를 선정한다 FSR센서 같이 ADC로 입력 받을 수 있는 간단한 센서를 추천합니다 CM 700에 연결하는 권장 회로도와 핀 정보는 아래와 같습니다 OUT 5V 포트 제어용 5V ADC 센서의 아날로그 신호 입력 있음 GND NC 사용하지 않음 Hand의 손가락에 집을 물건의 접촉이 잘 되도록 센서를 부착합니다 CM 700의 ADC 예제 를 참고하여 센서의 값을 이용해서 프로그래밍합니다 하드웨어 포트맵 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#force-feedback"
	},
	"4197": {
		"product": "로봇핸드(RX-28)",
		"header1": "유용한 정보",
		"header2": "로보플러스 사용하기",
		"header3": "",
		"content": "비 전문가를 위한 개발 환경인 RoboPlus를 이용해서 Hand를 제어할 수 있습니다 태스크 다운로드 PHN Demo KR tsk 모션 다운로드 PHN Demo KR 33C mtn 로보플러스 사용준비 CM 700 펌웨어 복구 로보플러스 태스크 프로그래밍 로보플러스 모션으로 Hand 모션 만들기 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#로보플러스-사용하기"
	},
	"4198": {
		"product": "로봇핸드(RX-28)",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#다운로드"
	},
	"4199": {
		"product": "로봇핸드(RX-28)",
		"header1": "다운로드",
		"header2": "도면",
		"header3": "",
		"content": "다운로드 3Finger Hand PHN 33B pdf zip 다운로드 3Finger Hand PHN 33B stp zip 다운로드 Platform Hand Bottom Dimension pdf ",
		"url": "http://emanual.robotis.com/docs/kr/platform/robothand_rx28/#도면"
	},
	"4200": {
		"product": "똘망3",
		"header1": "똘망3",
		"header2": "",
		"header3": "",
		"content": "똘망3는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 THORMANG3 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/thormang3/introduction/"
	},
	"4201": {
		"product": "터틀봇3",
		"header1": "터틀봇3",
		"header2": "",
		"header3": "",
		"content": "터틀봇3는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 TurtleBot3 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/platform/turtlebot3/overview/"
	},
	"4202": {
		"product": "아두이노 IDE",
		"header1": "아두이노 IDE",
		"header2": "",
		"header3": "",
		"content": "아두이노 IDE는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 Arduino IDE 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/arduino_ide/"
	},
	"4203": {
		"product": "다이나믹셀 SDK",
		"header1": "다이나믹셀 SDK",
		"header2": "",
		"header3": "",
		"content": "다이나믹셀 SDK는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 DYNAMIXEL SDK 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/dynamixel/dynamixel_sdk/overview/"
	},
	"4204": {
		"product": "다이나믹셀 워크벤치",
		"header1": "다이나믹셀 워크벤치",
		"header2": "",
		"header3": "",
		"content": "다이나믹셀 워크벤치는 현재 영문으로만 지원되고 있습니다 영문 e매뉴얼의 DYNAMIXEL Workbench 를 이용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/dynamixel/dynamixel_workbench/"
	},
	"4205": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "임베디드 C는 사용자가 직접 제어기 펌웨어를 개발할 수 있는 솔루션입니다 임베디드 C는 다음과 같은 특징이 있습니다 모든 소스가 C언어로 작성되어 있습니다 제어기 각 부분을 직접 제어하는 예제를 제공합니다 참고 임베디드 C를 사용하려면 하드웨어 및 소프트웨어에 대한 전문적인 지식이 필요합니다 초보자의 경우 전문 지식을 별도로 습득한 후 사용하는 것을 권장합니다 참고 임베디드 C를 사용하게 되면 제어기 펌웨어가 바뀌어서 로보플러스를 사용할 수 없게됩니다 다시 로보플러스를 사용하기 위해서는 로보플러스 매니저로 펌웨어 복구를 시도해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#개요"
	},
	"4206": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "",
		"header3": "",
		"content": "다운로드 CM 510 SDK 다운로드 CM 700 SDK ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#cm-510-cm-700"
	},
	"4207": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "폴더 구조",
		"header3": "",
		"content": "include 라이브러리 사용시 필요한 헤더파일이 있습니다 src 라이브러리 소스가 있습니다 lib 라이브러리 파일이 있는 곳입니다 example 제어기에서 실행할 수 있는 예제들입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#cm-510-cm-700"
	},
	"4208": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "시작하기",
		"header3": "",
		"content": "임베디드 C를 시작하기 위한 방법을 설명합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#시작하기"
	},
	"4209": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "시작하기",
		"header3": "WinAVR 설치",
		"content": "WinAVR은 AVR 프로그래밍을 위해서 필요한 프로그램입니다 WinAVR은 다음 사이트에서 다운로드 받을 수 있으며 누구나 무료로 사용 가능합니다 http winavr sourceforge net 설치 과정은 다음과 같습니다 설치 언어를 설정합니다 설치 초기 화면입니다 라이센스 관련 내용입니다 동의 하여야 설치를 진행할 수 있습니다 설치 폴더를 설정합니다 사용자가 원하는 곳으로 설정하고 Next버튼을 누릅니다 설치할 프로그램 및 환경 옵션을 선택합니다 특별한 사유가 없다면 모두 설치하는 것이 좋습니다 WinAVR 설치를 시작합니다 WinAVR설치가 완료되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#winavr-설치"
	},
	"4210": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "시작하기",
		"header3": "Atmel Studio 설치",
		"content": "Atmel Studio는 AVR 프로그래밍을 쉽게 할 수 있도록 여러가지 매크로와 라이브러리 및 통합 환경을 제공합니다 Atmel Studio는 다음 사이트에서 다운로드 받을 수 있으며 누구나 무료로 사용 가능합니다 http www atmel com dyn products tools card asp tool id 2725 Atmel Studio의 설치 과정은 다음과 같습니다 Atmel Studio설치 시작화면입니다 라이센스 관련 내용입니다 동의 하여야 설치를 진행할 수 있습니다 설치 폴더를 설정합니다 사용자가 원하는 곳으로 설정하고 Next버튼을 누릅니다 Next를 클릭하여 설치를 진행합니다 Atmel Studio 설치를 시작합니다 Atmel Studio 설치가 완료되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#atmel-studio-설치"
	},
	"4211": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "시작하기",
		"header3": "환경 설정",
		"content": "임베디드 C를 사용하려면 설치한 프로그램의 기본적인 환경을 설정해야 합니다 WinAVR을 설치하고 Atmel Studio를 설치하면 특별한 경우가 아닌 한 Atmel Studio만을 이용하여 프로그래밍을 할 수 있습니다 일반적으로 PC와 제어기가 시리얼 케이블로 연결되어 있으면 기본적인 예제 실행이 가능하며 예제에 따라 다이나믹셀이 필요하거나 그 외 외부 장치가 요구될 때도 있습니다 Debug Options Settings 를 클릭합니다 왼쪽 메뉴에서 Toolchain을 선택합니다 Atmel AVR bit language 를 선택합니다 Add Flavour을 클릭합니다 을 클릭하여 20100110버전의 WinAVR이 설치 되어 있는 폴더의 bin폴더를 선택하여 줍니다 예 WinAVR 20100110bin Win AVR 을 선택한후 OK 버튼을 누릅니다 File Open Project Solution 을 클릭합니다 예제 파일을 선택하고 열기를 클릭합니다 오른쪽 Solution Explorer에 보이는 c파일을 더블 클릭하여 선택합니다 Project Properties를 클릭 합니다 Solution Explorer가 보이지 않는다면 View 에서 Solution Explorer를 선택해주세요 왼쪽 메뉴에서 Toolchain을 클릭합니다 Directories를 클릭합니다 초록색 모양의 Add Item을 클릭합니다 Include 폴더를 선택하여 줍니다 예 embedded cm700 v1 01 include Include 폴더가 추가된 것을 확인 할 수 있습니다 오른쪽 Solution Explorer에서 프로젝트 파일을 오른쪽 클릭하여 Add Library를 클릭합니다 Browse Libraries를 클릭합니다 오른쪽 하단에 Browse 를 클릭합니다 라이브러리를 선택 하기 위해 예제에 포함되어 있는 lib 폴더를 선택하고 열기 를 클릭합니다 3개의 라이브러리를 추가하기 위해 드래그하여 모두 선택하고 오른쪽 아래 열기 를 클릭합니다 3개의 라이브러리가 추가된 것을 확인 할 수 있습니다 Build Rebuild Solution 을 클릭하여 컴파일하고 아래Output창에 Build Succeeded 가 확인되면 모든 작업이 끝나게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#환경-설정"
	},
	"4212": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "시작하기",
		"header3": "로보플러스 복구하기",
		"content": "임베디드 C로 만들어진 결과물은 제어기 펌웨어 hex 파일 입니다 이것을 설치하면 기존의 제어기 펌웨어가 지워져서 로보플러스를 사용할 수 없게됩니다 만약 로보플러스를 다시 사용하려면 공장 출하시 제어기 펌웨어를 설치해야 합니다 로보플러스 매니저를 이용하면 공장 출하시 제어기 펌웨어를 쉽게 설치할 수 있습니다 자세한 사항은 로보플러스 매니저의 펌웨어 복구하기 를 참조하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#로보플러스-복구하기"
	},
	"4213": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "프로그래밍",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#프로그래밍"
	},
	"4214": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "프로그래밍",
		"header3": "하드웨어 포트맵",
		"content": "다음은 제어기의 하드웨어 주요 핀 기능을 표현해 놓은 하드웨어 포트맵입니다 각 포트나 내부 기능은 Atmel Studio에서 제공하는 매크로 함수를 통해 간단히 접근하여 제어할 수 있습니다 CM 510 Port Name Function PORTF1 PORTF6 ADC PORTD0 Start Button PORTD1 MIC PORTD2 PORTD3 Tx Rx PORTA2 PORTA7 External Output Pin Port PORTC0 PORTC6 Controller LED Status Power PORTB5 Buzzer Control Port PORTE4 PORTE7 Direction Button PORTD4 PORTD6 Communication Control Port CM 510의 외부 포트 핀 구성은 다음과 같습니다 외부 포트 눈금 표시로 포트 포트 6을 확인할 수 있습니다 포트와 관련된 자세한 사항은 CM 510 제어기 부분을 참조하십시오 아래와 같이 5개의 핀 중 3번 ADC핀이 마이크로 컨트롤러의 PORTF1 PORTF6과 대응되어 있습니다 예를 들어 아래의 외부포트 3에 대응되는 ADC핀은 마이크로 컨트롤러의 PORTF3과 연결되어 있습니다 아래와 같이 5개의 핀 중 1번 OUT핀이 마이크로 컨트롤러의 PORTA2 PORTA7과 대응되어 있습니다 예를 들어 아래의 외부포트 3에 대응되는 OUT핀은 마이크로 컨트롤러의 PORTA4과 연결되어 있습니다 OUT 5V 출력 가능 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND NC 사용하지 않음 CM 700 Port Name Function PORTF1 PORTF6 ADC PORTD0 Start Button PORTD1 PORTD2 Tx Rx PORTA2 PORTA7 External Output Pin Port PORTC0 PORTC6 Controller LED Status Power CM 700의 외부 포트 핀 구성은 다음과 같습니다 Sub보드의 아래면에 표시된 문자로 포트 포트 6을 확인할 수 있습니다 포트와 관련된 자세한 사항은 CM 700 제어기 부분을 참조하십시오 아래와 같이 5개의 핀 중 3번 ADC핀이 마이크로 컨트롤러의 PORTF1 PORTF6과 대응되어 있습니다 아래와 같이 5개의 핀 중 1번 OUT핀이 마이크로 컨트롤러의 PORTA2 PORTA7과 대응되어 있습니다 OUT 5V 출력 가능 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND NC 사용하지 않음 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#하드웨어-포트맵"
	},
	"4215": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "프로그래밍",
		"header3": "기본 프로그래밍",
		"content": "Atmel Studio에서 간단한 임베디드 예제를 만드는 방법을 설명합니다 프로젝트 만들기 프로젝트를 만드는 과정은 다음과 같습니다 File 메뉴에서 New Project를 선택합니다 Template은 GCC Executable Project를 선택하고 Name Location Solution name 항목을 설정합니다 설정이 끝나면 OK 버튼을 클릭합니다 여러 디바이스 목록 중에서 ATmega2561을 선택합니다 CM5는 ATmega128 선택 디바이스를 선택 하였다면 OK 버튼을 클릭합니다 코드 작성 및 컴파일하기 다음 예제는 가장 기본적인 PORT 제어에 관한 내용입니다 생성된 프로젝트에 다음과 같은 코드를 작성합니다 Build 메뉴에서 Build Solution 을 클릭하여 Build 명령을 실행합니다 아래 Output 창에 Build succeeded가 나타나면 컴파일이 정상적으로 끝난 경우입니다 프로젝트 폴더 내의 default 폴더에서 펌웨어 파일인 hex 파일을 찾을 수 있습니다 hex파일 다운로드 하기 제어기에 만든 펌웨어를 설치하기 위해서는 로보플러스 터미널 과 제어기 부트로더 를 이용해야 합니다 펌웨어 설치 및 실행에 대한 자세한 내용은 부트로더에서 프로그램 설치 실행 부분을 참조하십시오 정상적으로 펌웨어가 설치되면 모든 LED가 돌아가면서 켜지는 것을 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#기본-프로그래밍"
	},
	"4216": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "프로그래밍",
		"header3": "부트로더",
		"content": "부트로더란 제어기를 사용할 수 있도록 도와주는 프로그램입니다 부트로더는 사용자가 지울 수 없으며 만약 이 프로그램이 망가진다면 제어기를 사용할 수 없게됩니다 부트로더는 공장 출하시 제어기에 설치된 상태로 생산됩니다 부트로더에서 사용할 수 있는 명령은 help 명령으로 확인할 수 있습니다 부트로더 진입 나가기 부트로더 진입 부트로더는 키보드의 키 Shift 숫자3키 를 누르고 있는 상태에서 제어기를 켜거나 리셋 스위치를 눌러주면 진입할 수 있습니다 성공하면 다음과 같이 화면이 나타납니다 부트로더 나가기 사용자 작업을 완료하면 GO명령으로 원하는 주소로 점프하거나 제어기를 리셋하여 부트로더에서 나갈 수 있습니다 APP SYS 사용법 APP SYS 명령으로 프로그램 시작 위치를 설정할 수 있습니다 프로그램 시작 위치가 설정되면 제어기의 전원을 켜거나 리셋할 때 설정된 프로그램 시작위치에서 프로그램이 실행됩니다 Atmega2561을 사용하는 제어기의 메모리맵은 다음과 같습니다 부트로더로 진입한 후 명령창에 APP 명령을 입력하면 다음번 리셋 후 유저 어플리케이션 영역부터 실행됩니다 기본 제공 펌웨어 사용자 프로그램 등 대부분의 프로그램들은 특별한 이유가 없다면 0번지부터 시작됩니다 부트로더로 진입한 후 명령창에 SYS 명령을 입력하면 다음번 리셋 후 부트로더가 실행됩니다 키를 누르지 않아도 부트로더상태로 시작됩니다 name 프로그램 설치실행 프로그램 설치 실행 제어기 펌웨어를 설치하기 위한 준비 작업은 다음과 같습니다 설치할 제어기 펌웨어 hex 파일 를 준비합니다 PC와 제어기를 연결합니다 로보플러스 터미널을 실행하여 통신 포트를 설정합니다 제어기 부트로더를 실행합니다 부트로더 진입 방법 참고 준비가 완료되면 다음과 같은 절차로 제어기 펌웨어를 설치할 수 있습니다 부트로더에서 L명령 혹은 Load 을 입력합니다 로보플러스 터미널의 Files메뉴에서 Transmit file을 선택하고 준비된 펌웨어 hex 파일 를 선택합니다 파일이 전송됩니다 파일이 전송되는 도중 제어기의 전원이 꺼지거나 케이블이 빠지지 않도록 주의하십시오 파일 전송이 완료되면 GO 명령을 사용하여 프로그램을 실행할 수 있습니다 GO명령만 입력한 경우 0번지에서 프로그램을 실행하게 됩니다 Address 와 같이 명령 뒤에 실행 주소 16진수 를 입력하면 그 위치부터 프로그램을 실행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#부트로더"
	},
	"4217": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#예제"
	},
	"4218": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "LED 제어",
		"content": "제어기의 각 LED를 제어할 수 있습니다 준비물 CM 510 혹은 700 이론 제어기의 마이크로 컨트롤러는 O포트를 통해 제어기와 연결된 LED등의 주변 장치를 제어할 수 있습니다 이 예제를 통해 제어기에 장착되어 있는 LED를 제어해 볼 수 있습니다 예제에서는 제어기의 PORTC를 사용합니다 제어기 포트맵을 확인하시기 바랍니다 소스 PORTC delay ms 250 PORTC를 제어하여 제어기의 LED를 순서대로 켭니다 결과 제어기의 모든 LED가 순차적으로 점등됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#led-제어"
	},
	"4219": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "버튼",
		"content": "제어기 버튼 입력을 받을 수 있습니다 준비물 CM 510 혹은 700 이론 제어기의 마이크로 컨트롤러의 O포트를 통해 제어기와 연결된 장치의 전기적 신호를 읽을 수 있습니다 이 예제를 통해 제어기에 장착되어 있는 스위치의 눌림 상태를 확인할 수 있습니다 제에서는 제어기의 PORTC와 PORTE를 사용합니다 제어기 포트맵을 확인하시기 바랍니다 소스 CM 510 예제 PINE amp BTN UP PORTC amp LED MANAGE else PINE amp BTN DOWN PORTC amp LED AUX else PINE amp BTN LEFT PORTC amp LED PROGRAM else PINE amp BTN RIGHT PORTC amp LED PLAY else PIND amp BTN START PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY else PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY PORTD와 PORTE를 통해 눌린 버튼을 판단하고 눌린 버튼에 따라 PORTC를 제어하여 LED를 켜고 끄는 부분입니다 PORTD와 PORTE를 통해 입력값을 얻는 방법은 PIND와 PINE 매크로 함수를 사용합니다 PIND와 PINE는 1바이트이며 각 비트에는 PORTD PORTE의 핀이 대응되어 있습니다 따라서 amp 연산 등을 통해 특정 핀의 값을 읽어낼 수 있습니다 CM 700 예제 PIND amp BTN START PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY else PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY PORTD를 통해 눌린 버튼을 판단하고 눌린 버튼에 따라 PORTC를 제어하여 LED를 켜고 끄는 부분입니다 PORTD를 통해 입력값을 얻는 방법은 PIND 매크로 함수를 사용합니다 PIND는 1바이트이며 각 비트에는 PORTD의 핀이 대응되어 있습니다 따라서 amp 연산 등을 통해 특정 핀의 값을 읽어낼 수 있습니다 결과 버튼을 누르면 눌린 버튼에 따라 서로 다른 LED가 켜집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#버튼"
	},
	"4220": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "시리얼 통신",
		"content": "PC와 제어기가 시리얼 통신을 할 수 있습니다 준비물 제어기의 시리얼 케이블이 PC와 연결된 상태 예제의 통신 속도는 57600bps로 설정되어 있습니다 이론 시리얼 통신은 제어기의 값을 PC로 전송하여 사용자에게 보여줄 수 있는 가장 기본적인 수단입니다 이 예제를 통해 제어기와 시리얼 통신을 해볼 수 있습니다 소스 serial initialize 57600 USART Initialize sei set enable interrupt 시리얼 통신을 사용하기 위해 초기화 하는 부분입니다 시리얼 초기화 함수는 serial 라이브러리에 포함되어 있으며 인자로 통신 속도를 전달 해 주면 시리얼 포트가 초기화 됩니다 sei 경우 인터럽트를 사용할 수 있도록 하는 내부 명령어입니다 unsigned char ReceivedData getchar ReceivedData Value else ReceivedData Value printf Value 받은 무선 데이터가 u인 경우 1을 더하고 d인 경우 1을 빼서 출력하는 부분입니다 getchar 함수를 이용하여 데이터를 수신합니다 만약 데이터가 수신되지 않았으면 대기합니다 결과 키보드로 키를 입력하면 제어기에서 현재 기억된 숫자에 1을 더하여 출력하며 키를 입력하면 1을 빼서 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#시리얼-통신"
	},
	"4221": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "버저",
		"content": "제어기의 버저를 사용할 수 있습니다 준비물 CM 510 CM 700은 버저가 없습니다 이론 마이크로 컨트롤러의 포트를 통해 버저 회로의 신호를 제어할 수 있습니다 버저는 신호 주파수를 조절하여 서로 다른 음계를 연주할 수 있습니다 예제에서는 제어기의 PORTB와 PORTC PORTD를 사용합니다 제어기 포트맵 을 확인하시기 바랍니다 음계과 주파수의 관계는 다음을 참조하십시오 시간은 주파수의 역수입니다 주파수를 시간으로 변환하는 공식은 다음과 같습니다 시간 초 주파수 옥타브 Scale 32 7032 65 4064 130 8128 261 6256 523 2511 1046 502 2093 005 4186 009 34 6478 69 2957 138 5913 277 1826 554 3653 1108 731 2217 461 4434 922 36 7081 73 4162 146 8324 293 6648 587 3295 1174 659 2349 318 4698 636 38 8909 77 7817 155 5635 311 1270 622 2540 1244 508 2489 016 4978 032 41 2034 82 4069 164 8138 329 6276 659 2551 1318 510 2637 020 5274 041 43 6535 87 3071 174 6141 349 2282 698 4565 1396 913 2793 826 5587 652 46 2493 92 4986 184 9972 369 9944 739 9888 1479 978 2959 955 5919 911 48 9994 97 9989 195 9977 391 9954 783 9909 1567 982 3135 963 6271 927 51 9130 103 8262 207 6523 415 3047 830 6094 1661 219 3322 438 6644 875 55 0000 110 0000 220 0000 440 0000 880 0000 1760 000 3520 000 7040 000 58 2705 116 5409 233 0819 466 1638 932 3275 1864 655 3729 310 7458 620 61 7354 123 4708 246 9417 493 8833 987 7666 1975 533 3951 066 7902 133 ockquote 단위 Hz 소스 CM 510예제입니다 버저가 없는 CM 700에서는 적용할 수 없습니다 PIND amp SW START PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY delay ms PORTB 0x20 delay ms PORTB amp 0x20 else PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY PORTB amp 0x20 PORTD를 통해 눌린 버튼을 판단하고 눌린 버튼에 따라 PORTB와 PORTC를 제어하여 LED 및 버저를 켜고 끄는 부분입니다 PORTD를 통해 입력값을 얻는 방법은 PIND 매크로 함수를 사용합니다 PIND는 1바이트이며 각 비트에는 PORTD의 핀이 대응되어 있습니다 따라서 amp 연산 등을 통해 특정 핀의 값을 읽어낼 수 있습니다 Start 버튼이 눌린 경우 모든 LED를 켬과 동시에 PORTB를 통해 버저를 울립니다 결과 Start 버튼을 누르는 동안 모든 LED가 켜지고 버저에서 같은 음으로 계속 소리가 납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#버저"
	},
	"4222": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "마이크",
		"content": "제어기의 마이크를 사용하여 외부 소리를 감지할 수 있습니다 준비물 CM 510 CM 700은 마이크가 없습니다 이론 마이크 회로는 일정 크기 이상의 소리를 감지하면 마이크로 컨트롤러의 O포트에 신호를 발생하게 됩니다 이 신호를 감지하여 외부 소리를 감지할 수 있습니다 예제에서는 제어기의 PORTC와 PORTD를 사용합니다 제어기 포트맵 을 확인하시기 바랍니다 소스 CM 510예제입니다 마이크가 없는 CM 700에서는 적용할 수 없습니다 PIND amp MIC SIGNAL PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY delay ms 1000 else PORTC LED BAT LED TxD LED RxD LED AUX LED MANAGE LED PROGRAM LED PLAY PORTD를 통해 눌린 버튼을 판단하고 눌린 버튼에 따라 PORTC를 제어하여 LED를 켜고 끄는 부분입니다 PORTD를 통해 입력값을 얻는 방법은 PIND 매크로 함수를 사용합니다 PIND는 1바이트이며 각 비트에는 PORTD의 핀이 대응되어 있습니다 따라서 amp 연산 등을 통해 특정 핀의 값을 읽어낼 수 있습니다 PORTD를 통해 마이크 신호가 감지되면 모든 LED를 켜고 1초동안 대기합니다 결과 마이크에 소리가 감지되면 1초 동안 모든 LED가 켜졌다 꺼집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#마이크"
	},
	"4223": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "적외선 센서",
		"content": "외부포트의 ADC를 사용하는 법을 배웁니다 본 예제에서는 적외선 센서를 사용하여 설명합니다 준비물 CM 510 혹은 700 적외선 센서 1번 외부포트에 연결해야 예제를 동작시킬 수 있습니다 이론 제어기의 마이크로 컨트롤러는 아날로그 신호를 디지털값으로 변경할 수 있습니다 이 예제를 통해 제어기 외부에 연결된 적외선 센서나 자이로 센서 등의 아날로그 전압값을 읽어올 수 있습니다 예제에서는 제어기의 PORTA를 사용합니다 제어기 포트맵 을 확인하시기 바랍니다 소스 serial initialize 57600 sei ADCSRA ADEN ADPS2 ADPS1 ADC Enable Clock 64div ADMUX ADC PORT ADC Port Select 시리얼 통신을 사용하기 위해 초기화 하는 부분입니다 시리얼 초기화 함수는 serial 라이브러리에 포함되어 있으며 인자로 통신 속도를 전달 해 주면 시리얼 포트가 초기화 됩니다 sei 경우 인터럽트를 사용할 수 있도록 하는 내부 명령어입니다 그외 ADC제어를 위한 레지스터 설정이 있는데 이는 Atmega2561 데이터 시트를 참조하십시오 데이터시트는 http www atmel com 에서 다운로드 받을 수 있습니다 PORTA amp 0x80 ADC Port IR ON delay us 12 Short Delay rising sensor signal ADCSRA ADIF AD Conversion Interrupt Flag Clear ADCSRA ADSC AD Conversion Start ADCSRA amp ADIF Wait until AD Conversion complete PORTA 0xFC IR LED Off printf ADC Print Value USART delay ms 50 PORTA를 통해 감지된 아날로그 신호를 분석하여 시리얼로 전송하는 부분입니다 우선 PORTA의 1번 IR LED를 켜고 수광된 빛의 양을 디지털값으로 변환을 시작합니다 변환이 끝나면 IR LED를 끄고 시리얼 통신으로 값을 전송합니다 결과 PC와 시리얼로 연결 되어있을 때 화면에 IR센서값을 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#적외선-센서"
	},
	"4224": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "다이나믹셀 읽기/쓰기",
		"content": "다이나믹셀의 위치를 읽거나 설정할 수 있습니다 보다 자세한 사항은 Dynamixel SDK를 확인 하세요 준비물 제어기와 다이나믹셀이 연결된 상태 이 예제는 다이나믹셀 ID가 1일 때 동작합니다 이론 다이나믹셀은 정해진 패킷을 전송하여 제어할 수 있습니다 제공되는 라이브러리를 활용하여 다이나믹셀의 위치 제어를 할 수 있습니다 소스 unsigned short GoalPos 1023 unsigned short wGoalPos 4095 EX series EX 106 과 같이 위치 범위가 095인 액츄에이터는 위쪽 줄을 주석처리 하고 아래 줄을 주석 해제하여 주십시오 serial initialize 57600 initialize DEFAULT BAUDNUM Not using device index sei Interrupt Enable 시리얼 통신을 사용하기 위해 초기화 하는 부분입니다 시리얼 초기화 함수는 serial 라이브러리에 포함되어 있으며 인자로 통신 속도를 전달 해 주면 시리얼 포트가 초기화 됩니다 sei 경우 인터럽트를 사용할 수 있도록 하는 내부 명령어입니다 initialize 함수의 경우 인자로 device index와 통신 속도를 넘겨주면 제어기의 통신 환경을 초기화합니다 DEFAULT BAUDNUM은 1입니다 특별한 경우가 아니면 device index는 0입니다 Check moving done bMoving read byte id MOVING CommStatus get result CommStatus COMM RXSUCCESS bMoving Change goal position index index else index Write goal position write word id GOAL POSITION GoalPos index PrintErrorCode Read present position wPresentPos read word id PRESENT POSITION printf GoalPos index wPresentPos else PrintCommStatus CommStatus 다이나믹셀을 특정 위치로 보냄과 동시에 현재 위치를 읽어오는 부분입니다 먼저 현재 움직임 상태를 읽고 모터가 움직이지 않는 상태이면 write word 함수를 통해 설정된 위치로 이동 명령을 내립니다 write word 함수의 인자는 각각 연결된 다이나믹셀 id address position 값 입니다 이후 현재 위치를 읽어와 시리얼 통신으로 전송합니다 결과 다이나믹셀이 지정된 위치를 왕복하며 현재 위치를 터미널을 통해 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#다이나믹셀-읽기쓰기"
	},
	"4225": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "다이나믹셀 동기 제어",
		"content": "여러개의 다이나믹셀을 동기화하여 제어할 수 있습니다 보다 자세한 사항은 Dynamixel SDK 를 확인 하세요 준비물 제어기와 다이나믹셀이 연결된 상태 이 예제는 다이나믹셀 ID가 1부터 순차적으로 3까지 설정되어 있을 때 동작합니다 이론 다이믹셀은 정해진 패킷을 전송하여 제어할 수 있습니다 제공되는 라이브러리를 활용하여 다이나믹셀의 위치 제어를 할 수 있습니다 소스 int AmpPos 512 int AmpPos 2048 EX series EX 106 와 같이 위치 범위가 095인 액츄에이터는 위쪽 줄을 주석처리 하고 아래 줄을 주석 해제하여 주십시오 serial initialize 57600 initialize DEFAULT BAUDNUM Not using device index sei Interrupt Enable 시리얼 통신을 사용하기 위해 초기화 하는 부분입니다 시리얼 초기화 함수는 serial 라이브러리에 포함되어 있으며 인자로 통신 속도를 전달 해 주면 시리얼 포트가 초기화 됩니다 sei 경우 인터럽트를 사용할 수 있도록 하는 내부 명령어입니다 initialize 함수의 경우 인자로 device index와 통신 속도를 넘겨주면 제어기의 통신 환경을 초기화합니다 DEFAULT BAUDNUM은 1입니다 특별한 경우가 아니면 device index는 0입니다 NUM ACTUATOR id phase PI float float NUM ACTUATOR Set goal speed write word BROADCAST ID GOAL SPEED Set goal position write word BROADCAST ID GOAL POSITION AmpPos delay ms 1000 각 다이나믹셀의 초기 위치를 계산 및 위치 초기화하는 부분입니다 write word 함수를 이용해 모든 다이나믹셀의 속도를 최대속도로 설정하고 위치를 중앙 위치로 설정합니다 Make syncwrite packet set txpacket id BROADCAST ID set txpacket instruction INST SYNC WRITE set txpacket parameter GOAL POSITION set txpacket parameter NUM ACTUATOR set txpacket parameter id GoalPos int sin theta phase float AmpPos printf GoalPos set txpacket parameter get lowbyte GoalPos set txpacket parameter get highbyte GoalPos set txpacket length NUM ACTUATOR 패킷 생성 부분입니다 패킷의 구조는 다이나믹셀 패킷 구조 를 참조하십시오 연결된 모든 액츄에이터의 패킷을 생성하고 전송합니다 printf txrx packet CommStatus get result CommStatus COMM RXSUCCESS PrintErrorCode else PrintCommStatus CommStatus theta STEP THETA theta PI theta PI delay ms CONTROL PERIOD 결과 패킷 수신 후 에러가 있다면 에러 코드를 출력합니다 위치 경계값 계산하여 경계값을 초과하면 증감 방향을 반대로 전환합니다 결과 여러개의 다이나믹셀이 지정된 위치를 왕복하며 현재 위치를 터미널을 통해 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#다이나믹셀-동기-제어"
	},
	"4226": {
		"product": "임베디드 C(CM-510/700)",
		"header1": "CM-510, CM-700",
		"header2": "예제",
		"header3": "RC100과 ZIGBee",
		"content": "RC 100을 이용하여 제어기를 동작시킬 수 있습니다 보다 자세한 사항은 Zigbee SDK 를 확인 하세요 준비물 CM 510 혹은 700 Zig 100 110 1쌍 RC 100 이론 Zig100이 장착되어있는 RC100 리모컨으로 제어기를 제어할 수 있습니다 예제에서는 제어기의 PORTC와 PORTD를 사용합니다 제어기 포트맵 을 확인하시기 바랍니다 소스 ZigBee 사용을 위한 환경 설정 PORTD의 환경을 다음과 같이 설정해야 함 PORTD amp 0x80 PORT LINK PLUGIN no pull up PORTD amp 0x20 PORT ENABLE RXD LINK PC PORTD 0x40 PORT ENABLE RXD LINK ZIGBEE ZigBee 통신을 사용하기 위해 초기화 하는 부분입니다 초기화 함수는 Zigbee 라이브러리에 포함되어 있으며 인자로 device index를 전달하면 Zigbee가 초기화 됩니다 특별한 경우가 아니면 device index는 0입니다 sei 경우 인터럽트를 사용할 수 있도록 하는 내부 명령어입니다 zgb rx check RcvData zgb rx data RcvData amp RC100 BTN PORTC amp LED MANAGE else PORTC LED MANAGE RcvData amp RC100 BTN PORTC amp LED PROGRAM else PORTC LED PROGRAM RcvData amp RC100 BTN PORTC amp LED PLAY else PORTC LED PLAY zgb rx data 함수를 이용하여 Zigbee모듈에 수신된 데이터를 읽어옵니다 수신 패킷이 RC100버튼이면 RC100의 눌린 버튼에 따라 PORTC를 제어하여 제어기의 LED를 켜거나 끕니다 주의 ZigBee와 시리얼통신 라이브러리를 같은 소스에서 사용하면 UART공유로 인해 충돌이 일어납니다 만약 동시 사용을 원한다면 소스를 수정해야 합니다 결과 Zigbee가 정상적으로 연결된 경우 RC 100의 버튼을 누를 때 마다 제어기의 LED가 켜졌다 꺼집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm510/#rc100과-zigbee"
	},
	"4227": {
		"product": "임베디드 C(CM-530)",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "임베디드 C는 사용자가 직접 제어기 펌웨어를 개발할 수 있는 솔루션입니다 임베디드 C는 다음과 같은 특징이 있습니다 모든 소스가 C언어로 작성되어 있습니다 제어기 각 부분을 직접 제어하는 예제를 제공합니다 참고 임베디드 C를 사용하려면 하드웨어 및 소프트웨어에 대한 전문적인 지식이 필요합니다 초보자의 경우 전문 지식을 별도로 습득한 후 사용하는 것을 권장합니다 참고 임베디드 C를 사용하게 되면 제어기 펌웨어가 바뀌어서 로보플러스를 사용할 수 없게됩니다 다시 로보플러스를 사용하기 위해서는 로보플러스 매니저로 펌웨어 복구를 시도해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#개요"
	},
	"4228": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "",
		"header3": "",
		"content": "다운로드 CM 530 SDK ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#cm-530"
	},
	"4229": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "폴더 구조",
		"header3": "",
		"content": "stm32f10x conf Makefile stm32 ld 세 파일 및 하기 폴더들이 있습니다 stm32f10x lib 라이브러리 파일이 있습니다 APP inc 라이브러리외 예제완성에 필요한 헤더파일이 있습니다 APP src 라이브러리외 예제완성에 필요한 소스파일이 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#cm-530"
	},
	"4230": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "시작하기",
		"header3": "",
		"content": "참고 Windows 10을 사용중 설치에 error 발생경우 여기를 클릭해 다운로드로와 압축 해제가 끝나면 파일을 WinARM utils bin 에 복사하십시요 기존에 있든 파일을 대체하면 됩니다 EX error usr bin sh fork Resource temporarily unavailable ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#시작하기"
	},
	"4231": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "시작하기",
		"header3": "JRE 설치",
		"content": "JRE Java Runtime Enviroment 는 Eclipse 구동을 위해서 필요한 프로그램입니다 만약 이미 JRE가 설치되어 있는지 확인 하시려면 실행 창에서 java 를 입력하였을 때 다음과 같은 정보가 나온다면 JRE 설치는 넘기셔도 됩니다 JRE는 다음 사이트에서 다운로드 받을 수 있습니다 http www oracle com technetwork java javase downloads index html 사용하시는 환경에 맞는 버전을 선택하여 설치해 주시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#jre-설치"
	},
	"4232": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "시작하기",
		"header3": "WinARM 설치",
		"content": "WinARM은 아래 링크에서 다운로드 받을 수 있습니다 다운로드 WinARM 다운로드된 파일은 압축 파일입니다 WinARM 에 압축을 풀어 주시면 됩니다 WinARM이 제대로 동작하려면 환경변수를 등록해야 합니다 제어판 시스템 고급 탭에서 환경 변수 버튼을 누릅니다 시스템 변수에 PATH 라는 변수가 이미 존재한다면 편집 버튼을 PATH 라는 변수가 존재하지 않는다면 새로 만들기 버튼을 누릅니다 시스템 변수 편집 창에서 변수 값에 아래 항목을 추가합니다 새로 만들기가 아니라 편집하는 경우 기존 문구 맨 마지막에 가 없으면 를 추가한 다음 아래 문구를 추가합니다 WinARM bin WinARM utils bin WinARM이 제대로 설치되었는지 확인하려면 실행 창에서 arm eabi gcc 를 입력하여 보시기 바랍니다 잘 안 되는 경우 cmd창을 끄고 재실행하고 다시 시도해보시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#winarm-설치"
	},
	"4233": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "시작하기",
		"header3": "Eclipse 설치",
		"content": "Eclipse는 다음 사이트에서 다운로드 받을 수 있습니다 다운로드 Eclipse Helios packages중 Eclipse IDE Developers 를 다운로드 하시되 사용하시는 환경에 맞는 버전을 선택하여 다운로드 받습니다 Eclipse는 따로 설치 과정이 필요 없이 압축을 푸신 후 바로 eclipse exe를 실행하시면 됩니다 link http www eclipse org downloads packages eclipse ide cc developers neonr ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#eclipse-설치"
	},
	"4234": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "시작하기",
		"header3": "설치 성공여부 확인",
		"content": "함께 제공되는 예제 프로젝트 를 열어 보겠습니다 압축을 풀어주십시오 Root는 관계없습니다 만약 Eclipse 실행 시 다음과 같은 창이 나오게 되면 바로가기를 만들 후 바로가기의 속성에서 대상에 vm Program Files Java jre7 bin javaw exe 를 뒤에 추가시키면 됩니다 폴더명에 공백이 있으면 겹따옴표 으로 감싸줘야 합니다 Eclipse를 처음 실행시키면 아래 그림과 같이Workspace에 대한 설정을 요구합니다 Default 경로 그대로 하면 project를 읽어 올 수 없는 문제가 생길 수 있기에 다른 경로로 변경하시기 바랍니다 좌측 하단 박스를 클릭하시면 다음부터 이 창이 뜨지 않습니다 Eclipse를 실행시키고 File New Makefile Project Existing Code 를 선택합니다 Browse 버튼을 누르고 압축을 풀어 놓은 폴더중 01 LED 를 선택하고 확인 을 눌러 완료합니다 프로젝트 생성 후에는 Project Clean Build 를 한 번씩 실행 해 주십시오 위와 같이 실행 후에 Console창에서 제대로 수행 되었는지 확인 할 수 있습니다 아래와 다르게 제대로 실행되지 않았을 경우에는 개발환경 설치를 다시 한번 확인해 주시기 바랍니다 참고 Windows 10을 사용중 설치에 error 발생경우 여기를 클릭해 다운로드로와 압축 해제가 끝나면 파일을 WinARM utils bin 에 복사하십시요 기존에 있든 파일을 대체하면 됩니다 EX error usr bin sh fork Resource temporarily unavailable ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#설치-성공여부-확인"
	},
	"4235": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "시작하기",
		"header3": "로보플러스 복구하기",
		"content": "임베디드 C로 만들어진 결과물은 제어기 펌웨어 bin 파일 입니다 이것을 설치하면 기존의 제어기 펌웨어가 지워져서 로보플러스를 사용할 수 없게됩니다 만약 로보플러스를 다시 사용하려면 공장 출하시 제어기 펌웨어를 설치해야 합니다 로보플러스 매니저를 이용하면 공장 출하시 제어기 펌웨어를 쉽게 설치할 수 있습니다 자세한 사항은 로보플러스 매니저의 펌웨어 복구하기 를 참조하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#로보플러스-복구하기"
	},
	"4236": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "프로그래밍",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#프로그래밍"
	},
	"4237": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "프로그래밍",
		"header3": "하드웨어 포트맵",
		"content": "다음은 제어기의 하드웨어 주요 핀 기능을 표현해 놓은 하드웨어 포트맵입니다 각 포트나 내부 기능은 STM32F10X 라이브러리에서 제공하는 매크로 함수를 통해 간단히 접근하여 제어할 수 있습니다 CM 530 핀 번호 핀 이름 NET NAME 기능설명 Vbat 33L 3V 전원 공급 PC13 LED0 LED POWER PC14 LED TX LED TX PC15 LED RX LED RX OSC IN XTAL1 크리스탈 INPUT OSC OUT XTAL2 크리스탈 OUTPUT NRST RESET RESET PC0 SIG ADC0 ADC0 INPUT PC1 ADC SELECT0 ANALOG MUX SELECT0 10 PC2 ADC SELECT1 ANALOG MUX SELECT1 11 PC3 VDD VOLT 입력전압 ADC 12 VSSA VSSA ADC 기준전압 3V 13 VDDA VDDA ADC 기준전압 0V 14 PA0 SIG MOT1 1번 외부포트 OUPUT 15 PA1 SIG MOT1 1번 외부포트 OUPUT 16 PA2 SIG MOT2 2번 외부포트 OUPUT 17 PA3 SIG MOT2 2번 외부포트 OUPUT 18 VSS4 GND 0V 기준전압 19 VDD4 33L 3V 기준전압 20 PA4 NC RESERVED 21 PA5 SIG ADC1 ADC1 INPUT 22 PA6 SIG BUZZER 버저 OUTPUT 23 PA7 NC RESERVED 24 PC4 SIG MIC 마이크신호 INPUT 25 PC5 NC RESERVED 26 PB0 NC RESERVED 27 PB1 NC RESERVED 28 PB2 BOOT1 RESERVED 29 PB10 PC TXD PC 로 전송 30 PB11 PC RXD PC 에서 수신 31 VSS1 GND 0V 기준전압 32 VDD1 33L 3V 기준전압 33 PB12 LED3 LED AUX 34 PB13 LED4 LED MANAGE 35 PB14 LED5 LED PROGRAM 36 PB15 LED6 LED PLAY 37 PC6 SIG MOT3 3번 외부포트 OUPUT 38 PC7 SIG MOT3 3번 외부포트 OUPUT 39 PC8 SIG MOT4 4번 외부포트 OUPUT 40 PC9 SIG MOT4 4번 외부포트 OUPUT 41 PA8 SIG MOT5 5번 외부포트 OUPUT 42 PA9 NC RESERVED 43 PA10 NC RESERVED 44 PA11 SIG MOT5 5번 외부포트 OUPUT 45 PA12 ZIGBEE RESET Zigbee 모듈 ENABLE 46 PA13 USB SLEEP USB 연결여부 47 VSS2 GND 0V 기준전압 48 VDD2 33L 3V 기준전압 49 PA14 SW RT 버튼 50 PA15 SW LF 버튼 51 PC10 SW DN 버튼 52 PC11 SW UP 버튼 53 PC12 ZIGBEE TXD Zigbee로 전송 54 PD2 ZIGBEE RXD Zigbee로부터 수신 55 PB3 SW START START 버튼 56 PB4 ENABLE TX 다이나믹셀로 전송 ENABLE 57 PB5 ENABLE RX 다이나믹셀로부터 수신 ENABLE 58 PB6 TXD 다이나믹셀로 전송 59 PB7 RXD 다이나믹셀로부터 수신 60 BOOT0 BOOT0 RESERVED 61 PB8 SIG MOT6 6번 외부포트 OUPUT 62 PB9 SIG MOT6 6번 외부포트 OUPUT 63 VSS3 GND 0V 기준전압 64 VDD3 33L 3V 기준전압 CM 530의 외부 포트 핀 구성은 다음과 같습니다 외부 포트 눈금 표시로 포트 포트 6을 확인할 수 있습니다 포트와 관련된 자세한 사항은 CM 530 제어기 부분을 참조하십시오 OUT1 3V 출력 가능 최대 허용 전류 3A 5V ADC 사용자가 제작한 센서의 아날로그 신호를 읽을 수 있음 GND OUT2 3V 출력 가능 최대 허용 전류 3A ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#하드웨어-포트맵"
	},
	"4238": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "프로그래밍",
		"header3": "프로젝트 열기",
		"content": "함께 제공되는 01 LED 프로젝트를 열어 보겠습니다 Eclipse를 실행시키고 File New Makefile Project Existing Code 를 선택합니다 Browse 버튼을 누르고 압축을 풀어 놓은 폴더중 01 LED 를 선택하고 확인 을 눌러 완료합니다 프로젝트 생성 후에는 Project Clean Build 를 한 번씩 실행 해 주십시오 위와 같이 실행 후에 Console창에서 제대로 수행 되었는지 확인 할 수 있습니다 아래와 다르게 제대로 실행되지 않았을 경우에는 개발환경 설치를 다시 한번 확인해 주시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#프로젝트-열기"
	},
	"4239": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "프로그래밍",
		"header3": "bin 파일 다운로드 하기",
		"content": "build에 성공하면 bin파일이 예제 폴더에 생성됩니다 제어기에 만든 펌웨어를 설치하기 위해서는 로보플러스 터미널과 제어기 부트로더를 이용해야 합니다 펌웨어 설치 및 실행에 대한 자세한 내용은 부트로더에서 프로그램 설치 실행 부분을 참조하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#bin-파일-다운로드-하기"
	},
	"4240": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "프로그래밍",
		"header3": "부트로더",
		"content": "부트로더란 제어기를 사용할 수 있도록 도와주는 프로그램입니다 부트로더는 사용자가 지울 수 없으며 만약 이 프로그램이 망가진다면 제어기를 사용할 수 없게됩니다 부트로더는 공장 출하시 제어기에 설치된 상태로 생산됩니다 부트로더에서 사용할 수 있는 명령은 help 명령으로 확인할 수 있습니다 부트로더 진입 나가기 부트로더 진입 부트로더는 키보드의 키 Shift 숫자3키 를 누르고 있는 상태에서 제어기를 켜거나 리셋 스위치를 눌러주면 진입할 수 있습니다 성공하면 다음과 같이 화면이 나타납니다 부트로더 나가기 사용자 작업을 완료하면 GO명령으로 원하는 주소로 점프하거나 제어기를 리셋하여 부트로더에서 나갈 수 있습니다 APP SYS 사용법 APP SYS 명령으로 프로그램 시작 위치를 설정할 수 있습니다 프로그램 시작 위치가 설정되면 제어기의 전원을 켜거나 리셋할 때 설정된 프로그램 시작위치에서 프로그램이 실행됩니다 Atmega2561을 사용하는 제어기의 메모리맵은 다음과 같습니다 부트로더로 진입한 후 명령창에 APP 명령을 입력하면 다음번 리셋 후 유저 어플리케이션 영역부터 실행됩니다 기본 제공 펌웨어 사용자 프로그램 등 대부분의 프로그램들은 특별한 이유가 없다면 0번지부터 시작됩니다 부트로더로 진입한 후 명령창에 SYS 명령을 입력하면 다음번 리셋 후 부트로더가 실행됩니다 키를 누르지 않아도 부트로더상태로 시작됩니다 프로그램 설치 실행 제어기 펌웨어를 설치하기 위한 준비 작업은 다음과 같습니다 설치할 제어기 펌웨어 hex 파일 를 준비합니다 PC와 제어기를 연결합니다 로보플러스 터미널을 실행하여 통신 포트를 설정합니다 제어기 부트로더를 실행합니다 부트로더 진입 방법 참고 준비가 완료되면 다음과 같은 절차로 제어기 펌웨어를 설치할 수 있습니다 부트로더에서 L명령 혹은 Load 을 입력합니다 로보플러스 터미널의 Files메뉴에서 Transmit file을 선택하고 준비된 펌웨어 hex 파일 를 선택합니다 파일이 전송됩니다 파일이 전송되는 도중 제어기의 전원이 꺼지거나 케이블이 빠지지 않도록 주의하십시오 파일 전송이 완료되면 GO 명령을 사용하여 프로그램을 실행할 수 있습니다 GO명령만 입력한 경우 0번지에서 프로그램을 실행하게 됩니다 Address 와 같이 명령 뒤에 실행 주소 16진수 를 입력하면 그 위치부터 프로그램을 실행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#부트로더"
	},
	"4241": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "프로그래밍",
		"header3": "부가설명",
		"content": "생성파일명 프로젝트를 빌드한 후 생성된 파일의 명칭은 예제 Makefile 에서 변경할 수 있습니다 아래 그림과 같이 Makefile 에서 MAIN OUT 뒤에 원하는 파일명을 적으면 됩니다 object file list 아래 그림과 같이 예제 APP src 폴더에 있는 확장자가 인 파일들에 해당하는 object file 명칭을 전부 Makefile 에 명시해야 합니다 Firmware 시작 주소 아래의 메모리 맵 일부 와 같이 부트로더 영역과 펌웨어 영역이 나뉘여져 있습니다 펌웨어의 시작주소가 기본으로 0X8003000으로 되여있으나 유저가 변경할 수 있습니다 아래의 그림은 0X8003000로 설정할 때의 예를 보여줍니다 stm32 ld 변경 Vector table 변경 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#부가설명"
	},
	"4242": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#예제"
	},
	"4243": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "LED 제어",
		"content": "제어기의 각 LED를 제어할 수 있습니다 준비물 CM 530 이론 제어기의 마이크로 컨트롤러는 O포트를 통해 제어기와 연결된 LED등의 주변 장치를 제어할 수 있습니다 이 예제를 통해 제어기에 장착되어 있는 LED를 제어해 볼 수 있습니다 포트번호와 핀번호는 01 LED APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration Configure GPIO ports GPIO Configuration SysTick Configuration GPIO SetBits PORT LED POWER PIN LED POWER GPIO ResetBits PORT LED MANAGE PIN LED MANAGE mDelay 250 GPIO SetBits PORT LED MANAGE PIN LED MANAGE GPIO ResetBits PORT LED PROGRAM PIN LED PROGRAM mDelay 250 GPIO SetBits PORT LED PROGRAM PIN LED PROGRAM GPIO ResetBits PORT LED PLAY PIN LED PLAY mDelay 250 GPIO SetBits PORT LED PLAY PIN LED PLAY GPIO ResetBits PORT LED TX PIN LED TX mDelay 250 GPIO SetBits PORT LED TX PIN LED TX GPIO ResetBits PORT LED RX PIN LED RX mDelay 250 GPIO SetBits PORT LED RX PIN LED RX GPIO ResetBits PORT LED AUX PIN LED AUX mDelay 250 GPIO SetBits PORT LED AUX PIN LED AUX GPIO ResetBits PORT LED POWER PIN LED POWER mDelay 250 return 결과 제어기의 모든 LED가 순차적으로 점등됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#led-제어"
	},
	"4244": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "버튼",
		"content": "제어기 버튼 입력을 받을 수 있습니다 준비물 CM 530 이론 제어기의 마이크로 컨트롤러의 O포트를 통해 제어기와 연결된 장치의 전기적 신호를 읽을 수 있습니다 이 예제를 통해 제어기에 장착되어 있는 스위치의 눌림 상태를 확인할 수 있습니다 포트번호와 핀번호는 02 BUTTON APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration GPIO Configuration Configure GPIO ports NVIC Configuration GPIO ResetBits PORT LED POWER PIN LED POWER GPIO ReadInputDataBit PORT SW UP PIN SW UP SET GPIO ResetBits PORT LED MANAGE PIN LED MANAGE else GPIO ReadInputDataBit PORT SW DOWN PIN SW DOWN SET GPIO ResetBits PORT LED AUX PIN LED AUX else GPIO ReadInputDataBit PORT SW LEFT PIN SW LEFT SET GPIO ResetBits PORT LED PROGRAM PIN LED PROGRAM else GPIO ReadInputDataBit PORT SW RIGHT PIN SW RIGHT SET GPIO ResetBits PORT LED PLAY PIN LED PLAY else GPIO ReadInputDataBit PORT SW START PIN SW START SET GPIO ResetBits PORT LED MANAGE PIN LED MANAGE GPIO ResetBits PORT LED PROGRAM PIN LED PROGRAM GPIO ResetBits PORT LED PLAY PIN LED PLAY GPIO ResetBits PORT LED TX PIN LED TX GPIO ResetBits PORT LED RX PIN LED RX GPIO ResetBits PORT LED AUX PIN LED AUX else GPIO SetBits PORT LED MANAGE PIN LED MANAGE GPIO SetBits PORT LED PROGRAM PIN LED PROGRAM GPIO SetBits PORT LED PLAY PIN LED PLAY GPIO SetBits PORT LED TX PIN LED TX GPIO SetBits PORT LED RX PIN LED RX GPIO SetBits PORT LED AUX PIN LED AUX return 결과 버튼을 누르면 눌린 버튼에 따라 서로 다른 LED가 켜집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#버튼"
	},
	"4245": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "시리얼 통신",
		"content": "PC와 제어기가 시리얼 통신을 할 수 있습니다 준비물 CM 530과 PC가 USB케이블을 통해 연결된 상태 예제의 통신 속도는 57600bps로 설정되어 있습니다 이론 시리얼 통신은 제어기의 값을 PC로 전송하여 사용자에게 보여줄 수 있는 가장 기본적인 수단입니다 이 예제를 통해 제어기와 시리얼 통신을 해볼 수 있습니다 제어기와 PC사이의 시리얼 통신은 USART3채널을 통해 이루어집니다 포트번호와 핀번호는 03 SERIAL COMMUNICATION APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration Configure GPIO ports GPIO Configuration SysTick Configuration USART Configuration USART Configuration 57600 GPIO ResetBits PORT LED POWER PIN LED POWER ReceivedData RxDByte PC ReceivedData TxDString Welcome else ReceivedData TxDString Goodbye return 결과 PC에서 버튼을 누르면 Welcome 버튼을 누르면 Goodbye 가 출력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#시리얼-통신"
	},
	"4246": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "버저",
		"content": "제어기의 버저를 사용할 수 있습니다 준비물 CM 530 이론 마이크로 컨트롤러의 포트를 통해 버저 회로의 신호를 제어할 수 있습니다 버저는 신호 주파수를 조절하여 서로 다른 음계를 연주할 수 있습니다 포트번호와 핀번호는 04 BUZZER APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 음계과 주파수의 관계는 다음을 참조하십시오 시간은 주파수의 역수입니다 주파수를 시간으로 변환하는 공식은 다음과 같습니다 시간 초 주파수 옥타브 Scale 32 7032 65 4064 130 8128 261 6256 523 2511 1046 502 2093 005 4186 009 34 6478 69 2957 138 5913 277 1826 554 3653 1108 731 2217 461 4434 922 36 7081 73 4162 146 8324 293 6648 587 3295 1174 659 2349 318 4698 636 38 8909 77 7817 155 5635 311 1270 622 2540 1244 508 2489 016 4978 032 41 2034 82 4069 164 8138 329 6276 659 2551 1318 510 2637 020 5274 041 43 6535 87 3071 174 6141 349 2282 698 4565 1396 913 2793 826 5587 652 46 2493 92 4986 184 9972 369 9944 739 9888 1479 978 2959 955 5919 911 48 9994 97 9989 195 9977 391 9954 783 9909 1567 982 3135 963 6271 927 51 9130 103 8262 207 6523 415 3047 830 6094 1661 219 3322 438 6644 875 55 0000 110 0000 220 0000 440 0000 880 0000 1760 000 3520 000 7040 000 58 2705 116 5409 233 0819 466 1638 932 3275 1864 655 3729 310 7458 620 61 7354 123 4708 246 9417 493 8833 987 7666 1975 533 3951 066 7902 133 ockquote 단위 Hz 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration NVIC configuration GPIO Configuration SysTick Configuration GPIO ResetBits PORT LED POWER PIN LED POWER GPIO ReadInputDataBit PORT SW UP PIN SW UP SET GPIO ResetBits PORT LED MANAGE PIN LED MANAGE GPIO ResetBits PORT LED PROGRAM PIN LED PROGRAM GPIO ResetBits PORT LED PLAY PIN LED PLAY GPIO ResetBits PORT LED TX PIN LED TX GPIO ResetBits PORT LED RX PIN LED RX GPIO ResetBits PORT LED AUX PIN LED AUX GPIO ResetBits PORT BUZZER PIN BUZZER mDelay GPIO SetBits PORT BUZZER PIN BUZZER mDelay else GPIO SetBits PORT LED MANAGE PIN LED MANAGE GPIO SetBits PORT LED PROGRAM PIN LED PROGRAM GPIO SetBits PORT LED PLAY PIN LED PLAY GPIO SetBits PORT LED TX PIN LED TX GPIO SetBits PORT LED RX PIN LED RX GPIO SetBits PORT LED AUX PIN LED AUX GPIO SetBits PORT BUZZER PIN BUZZER return 결과 Start 버튼을 누르는 동안 전원LED를 제외한 여섯 LED가 켜지고 버저에서 같은 음으로 소리가 납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#버저"
	},
	"4247": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "마이크",
		"content": "제어기의 마이크를 사용하여 외부 소리를 감지할 수 있습니다 준비물 CM 530 이론 마이크 회로는 일정 크기 이상의 소리를 감지하면 마이크로 컨트롤러의 O포트에 신호를 발생하게 됩니다 이 신호를 감지하여 외부 소리를 감지할 수 있습니다 포트번호와 핀번호는 05 MIC APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration NVIC configuration GPIO Configuration SysTick Configuration GPIO ResetBits PORT LED POWER PIN LED POWER GPIO ReadInputDataBit PORT MIC PIN MIC SET GPIO ResetBits PORT LED MANAGE PIN LED MANAGE GPIO ResetBits PORT LED PROGRAM PIN LED PROGRAM GPIO ResetBits PORT LED PLAY PIN LED PLAY GPIO ResetBits PORT LED TX PIN LED TX GPIO ResetBits PORT LED RX PIN LED RX GPIO ResetBits PORT LED AUX PIN LED AUX mDelay 1000 else GPIO SetBits PORT LED MANAGE PIN LED MANAGE GPIO SetBits PORT LED PROGRAM PIN LED PROGRAM GPIO SetBits PORT LED PLAY PIN LED PLAY GPIO SetBits PORT LED TX PIN LED TX GPIO SetBits PORT LED RX PIN LED RX GPIO SetBits PORT LED AUX PIN LED AUX return 결과 마이크에 소리가 감지되면 전원LED를 제외한 여섯 LED가 1초간 켜졌다 꺼집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#마이크"
	},
	"4248": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "올로 서보모터(회전방향 제어)",
		"content": "올로 서보모터의 회전방향을 제어하는 방법을 배웁니다 준비물 CM 530 올로 서보모터 1번 외부포트에 연결해야 예제를 동작시킬 수 있습니다 이론 제어기는 마이크로 컨트롤러의 SIG MOT1 와 SIG MOT1 핀을 통해 1번 외부포트의 MOT1 와 MOT1 핀의 값을 제어함으로써 올로 서보모터의 회전방향을 제어합니다 포트번호와 핀번호는 06 OLLO MOTOR ROTATE APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration GPIO configuration GPIO Configuration SysTick Configuration GPIO ResetBits PORT SIG MOT1P PIN SIG MOT1P GPIO ResetBits PORT SIG MOT1M PIN SIG MOT1M GPIO ResetBits PORT LED POWER PIN LED POWER GPIO SetBits PORT SIG MOT1P PIN SIG MOT1P GPIO ResetBits PORT SIG MOT1M PIN SIG MOT1M mDelay 5000 GPIO SetBits PORT SIG MOT1M PIN SIG MOT1M mDelay 5000 GPIO SetBits PORT SIG MOT1P PIN SIG MOT1P GPIO SetBits PORT SIG MOT1M PIN SIG MOT1M mDelay 2000 return 결과 1번 외부포트에 연결된 올로 서보모터는 역시침 방향으로 5초간 회전하고 순시침 방향으로 5초간 회전 한 후 2초간 정지하는 운동을 반복합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#올로-서보모터회전방향-제어"
	},
	"4249": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "올로 서보모터(위치값 읽기)",
		"content": "올로 서보모터 혼 horn 위치값을 읽는 방법을 배웁니다 준비물 CM 530 올로 서보모터 이론 제어기의 마이크로 컨트롤러는 아날로그 신호를 디지털값으로 변경할 수 있습니다 이 예제를 통해 제어기 외부에 연결된 올로 서보모터 혼 위치를 나타내는 아날로그 전압값을 AD 변환할 수 있습니다 포트번호와 핀번호는 06 OLLO MOTOR ROTATE APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 ANALOG MUX 74HC4052D 를 이용한 이유는 외부 임피던스를 차단 하고 5V 3V로 레벨 변환을 하기 위해서입니다 위의 ADC MUX회로에서 ADC SELECT0 ADC SELECT1 두 신호값 조합에 의해 SIG ADC0은 ADC1 ADC2 ADC3 중에서 하나를 선택하여 마이크로 컨트롤러에 입력하고 SIG ADC1은 ADC4 ADC5 ADC6 중에서 하나를 선택하여 마이크로 컨트롤러에 입력하고 마이크로 컨트롤러는 이 아날로그값을 AD변환합니다 포트번호와 핀번호는 07 OLLO MOTOR POSITION APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration GPIO configuration GPIO Configuration SysTick Configuration ADC configuration ADC Configuration GPIO ResetBits PORT SIG MOT1P PIN SIG MOT1P GPIO ResetBits PORT SIG MOT1M PIN SIG MOT1M GPIO ResetBits PORT SIG MOT2P PIN SIG MOT2P GPIO ResetBits PORT SIG MOT2M PIN SIG MOT2M GPIO ResetBits PORT SIG MOT3P PIN SIG MOT3P GPIO ResetBits PORT SIG MOT3M PIN SIG MOT3M GPIO ResetBits PORT SIG MOT4P PIN SIG MOT4P GPIO ResetBits PORT SIG MOT4M PIN SIG MOT4M GPIO ResetBits PORT SIG MOT5P PIN SIG MOT5P GPIO ResetBits PORT SIG MOT5M PIN SIG MOT5M GPIO ResetBits PORT SIG MOT6P PIN SIG MOT6P GPIO ResetBits PORT SIG MOT6M PIN SIG MOT6M GPIO ResetBits PORT LED POWER PIN LED POWER GPIO ResetBits PORT ADC SELECT0 PIN ADC SELECT0 GPIO ResetBits PORT ADC SELECT1 PIN ADC SELECT1 mDelay 10 Start ADC1 ADC2 Software Conversion ADC SoftwareStartConvCmd ADC1 ENABLE ADC SoftwareStartConvCmd ADC2 ENABLE mDelay 10 POT ADC GetConversionValue ADC1 POT ADC GetConversionValue ADC2 GPIO SetBits PORT ADC SELECT0 PIN ADC SELECT0 GPIO ResetBits PORT ADC SELECT1 PIN ADC SELECT1 mDelay 10 Start ADC1 ADC2 Software Conversion ADC SoftwareStartConvCmd ADC1 ENABLE ADC SoftwareStartConvCmd ADC2 ENABLE mDelay 10 POT ADC GetConversionValue ADC1 POT ADC GetConversionValue ADC2 GPIO ResetBits PORT ADC SELECT0 PIN ADC SELECT0 GPIO SetBits PORT ADC SELECT1 PIN ADC SELECT1 mDelay 10 Start ADC1 ADC2 Software Conversion ADC SoftwareStartConvCmd ADC1 ENABLE ADC SoftwareStartConvCmd ADC2 ENABLE mDelay 10 POT ADC GetConversionValue ADC1 POT ADC GetConversionValue ADC2 TxDWord16 POT TxDByte PC TxDWord16 POT TxDByte PC TxDWord16 POT TxDByte PC TxDWord16 POT TxDByte PC TxDWord16 POT TxDByte PC TxDWord16 POT TxDByte PC TxDByte PC TxDByte PC return 결과 임의의 외부포트에 올로 서보모터를 연결하면 출력되는 화면을 통해 서보모터 혼의 위치값을 알 수 있습니다 출력값 범위는 0x03FF 입니다 아래 그림은 3번 외부포트에 올로 서보모터를 연결했을 때 출력화면입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#올로-서보모터위치값-읽기"
	},
	"4250": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "적외선 센서",
		"content": "적외선 센서를 사용하는 방법을 배웁니다 준비물 CM 530과 PC를 USB케이블을 통해 연결합니다 적외선 센서 1번 외부포트에 연결해야 예제를 동작시킬 수 있습니다 이론 제어기의 마이크로 컨트롤러는 아날로그 신호를 디지털값으로 변경할 수 있습니다 이 예제를 통해 제어기 외부에 연결된 적외선 센서의 아날로그 전압값을 AD 변환할 수 있습니다 ANALOG MUX 74HC4052D 를 이용한 이유는 외부 임피던스를 차단 하고 5V 3V로 레벨 변환을 하기 위해서입니다 위의 ADC MUX회로에서 ADC SELECT0 ADC SELECT1 두 신호값 조합에 의해 SIG ADC0은 ADC1 ADC2 ADC3 중에서 하나를 선택하여 마이크로 컨트롤러에 입력하고 SIG ADC1은 ADC4 ADC5 ADC6 중에서 하나를 선택하여 마이크로 컨트롤러에 입력하고 마이크로 컨트롤러는 이 아날로그랎을 AD변환합니다 포트번호와 핀번호는 08 IR SENSOR APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration GPIO configuration GPIO Configuration SysTick Configuration ADC configuration ADC Configuration GPIO ResetBits PORT SIG MOT1P PIN SIG MOT1P GPIO ResetBits PORT SIG MOT1M PIN SIG MOT1M GPIO ResetBits PORT LED POWER PIN LED POWER GPIO SetBits PORT SIG MOT1P PIN SIG MOT1P GPIO ResetBits PORT SIG MOT1M PIN SIG MOT1M GPIO ResetBits PORT ADC SELECT0 PIN ADC SELECT0 GPIO ResetBits PORT ADC SELECT1 PIN ADC SELECT1 uDelay 30 Start ADC1 ADC2 Software Conversion ADC SoftwareStartConvCmd ADC1 ENABLE ADC SoftwareStartConvCmd ADC2 ENABLE uDelay IR ADC GetConversionValue ADC1 GPIO ResetBits PORT SIG MOT1P PIN SIG MOT1P GPIO ResetBits PORT SIG MOT1M PIN SIG MOT1M TxDWord16 IR TxDByte PC TxDByte PC mDelay return 결과 1번 외부포트에 적외선 센서를 연결하면 화면에 적외선 센서값을 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#적외선-센서"
	},
	"4251": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "다이나믹셀 읽기/쓰기",
		"content": "다이나믹셀의 위치를 읽거나 설정할 수 있습니다 보다 자세한 사항은 Dynamixel SDK 를 확인 하세요 준비물 CM 530 이 예제는 다이나믹셀 ID가 1일 때 동작합니다 이론 다이나믹셀은 정해진 패킷을 전송하여 제어할 수 있습니다 제공되는 라이브러리를 활용하여 다이나믹셀의 위치 제어를 할 수 있습니다 마이크로 컨트롤러와 다이나믹셀의 통신은 USART1 채널을 통해 이루어집니다 위의 그림은 다이나믹셀과의 통신을 위한 HALF DUPLEX BUFFER 회로 입니다 포트번호와 핀번호는 09 READ WRITE APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration GPIO configuration GPIO Configuration SysTick Configuration Timer Configuration initialize USART Configuration USART PC Baudrate PC bMoving read byte id MOVING CommStatus get result CommStatus COMM RXSUCCESS bMoving Change goal position INDEX INDEX else INDEX Write goal position write word id GOAL POSITION GoalPos INDEX PrintErrorCode Read present position wPresentPos read word id PRESENT POSITION TxDWord16 GoalPos INDEX TxDString TxDWord16 wPresentPos TxDByte PC TxDByte PC else PrintCommStatus CommStatus return 결과 다이나믹셀이 지정된 위치를 왕복하며 제어기와 PC가 연결 되였을 때 다이나믹셀의 현재 위치를 터미널을 통해 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#다이나믹셀-읽기쓰기"
	},
	"4252": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "다이나믹셀 동기 제어",
		"content": "여러개의 다이나믹셀을 동기화하여 제어할 수 있습니다 보다 자세한 사항은 Dynamixel SDK 를 확인 하세요 준비물 CM 530과 다이나믹셀이 연결된 상태 이 예제는 다이나믹셀 ID가 1부터 순차적으로 3까지 설정되어 있을 때 동작합니다 이론 다이나믹셀은 정해진 패킷을 전송하여 제어할 수 있습니다 제공되는 라이브러리를 활용하여 다이나믹셀의 위치 제어를 할 수 있습니다 마이크로 컨트롤러와 다이나믹셀의 통신은 USART1 채널을 통해 이루어집니다 위의 그림은 다이나믹셀과의 통신을 위한 HALF DUPLEX BUFFER 회로 입니다 포트번호와 핀번호는 10 SYNC WRITE APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration GPIO configuration GPIO Configuration SysTick Configuration Timer Configuration initialize USART Configuration USART PC Baudrate PC NUM ACTUATOR id Set goal speed write word BROADCAST ID GOAL SPEED Set goal position write word BROADCAST ID GOAL POSITION AmpPos mDelay 1000 Make syncwrite packet set txpacket id BROADCAST ID set txpacket instruction INST SYNC WRITE set txpacket parameter GOAL POSITION set txpacket parameter NUM ACTUATOR set txpacket parameter id set txpacket parameter get lowbyte GoalPos set txpacket parameter get highbyte GoalPos TxDByte PC TxDByte PC TxDWord16 GoalPos set txpacket length NUM ACTUATOR txrx packet CommStatus get result CommStatus COMM RXSUCCESS PrintErrorCode else PrintCommStatus CommStatus GoalPos 100 GoalPos MAX POSITION GoalPos MAX POSITION mDelay CONTROL PERIOD return 결과 여러개의 다이나믹셀이 지정된 위치를 왕복하며 현재 위치를 터미널을 통해 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#다이나믹셀-동기-제어"
	},
	"4253": {
		"product": "임베디드 C(CM-530)",
		"header1": "CM-530",
		"header2": "예제",
		"header3": "RC100과 ZIGBee",
		"content": "RC 100을 이용하여 제어기를 동작시킬 수 있습니다 보다 자세한 사항은 Zigbee SDK 를 확인 하세요 준비물 CM 530 Zig 100 110 1쌍 RC 100 이론 Zig100이 장착되어있는 RC100 리모컨으로 제어기를 제어할 수 있습니다 마이크로 컨트롤러와 RC100의 통신은 UART5 채널을 통해 이루어집니다 위 그림은 Zigbee 커넥터와 Zigbee의 전원공급회로입니다 포트번호와 핀번호는 11 RC100 ZIGBEE APP src main 또는 제어기 포트맵 을 확인하시기 바랍니다 소스 int main void System Clocks Configuration RCC Configuration NVIC configuration NVIC Configuration Configure GPIO ports GPIO Configuration SysTick Configuration zgb initialize USART Configuration USART PC 57600 GPIO ResetBits PORT LED POWER PIN LED POWER zgb rx check RcvData zgb rx data TxDWord16 RcvData TxDByte PC TxDByte PC RcvData amp RC100 BTN GPIO ResetBits PORT LED MANAGE PIN LED MANAGE else GPIO SetBits PORT LED MANAGE PIN LED MANAGE RcvData amp RC100 BTN GPIO ResetBits PORT LED PROGRAM PIN LED PROGRAM else GPIO SetBits PORT LED PROGRAM PIN LED PROGRAM RcvData amp RC100 BTN GPIO ResetBits PORT LED PLAY PIN LED PLAY else GPIO SetBits PORT LED PLAY PIN LED PLAY return 결과 Zigbee가 정상적으로 연결된 경우 RC 100의 버튼을 누를 때 마다 제어기의 LED가 켜졌다 꺼집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/embedded_c_cm530/#rc100과-zigbee"
	},
	"4254": {
		"product": "임베디드 SDK",
		"header1": "다이나믹셀 SDK",
		"header2": "",
		"header3": "",
		"content": "Protocol Protocol ROS Windows Linux OS LabVIEW MATLAB VB Java Download Dynamixel SDK ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/#다이나믹셀-sdk"
	},
	"4255": {
		"product": "임베디드 SDK",
		"header1": "로보티즈 매니퓰레이터 SDK",
		"header2": "",
		"header3": "",
		"content": "Protocol Protocol ROS Windows Linux LabVIEW MATLAB VB Java Download ROBOTIS Manipulator SDK ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/#로보티즈-매니퓰레이터-sdk"
	},
	"4256": {
		"product": "임베디드 SDK",
		"header1": "제어기 SDK",
		"header2": "",
		"header3": "",
		"content": "제어기 Protocol Protocol ROS Windows Linux LabVIEW MATLAB VB Java CM Series OpenCM CR Download CM 510 SDK Download CM 530 SDK Download CM 700 SDK ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/#제어기-sdk"
	},
	"4257": {
		"product": "임베디드 SDK",
		"header1": "ZIGBee SDK",
		"header2": "",
		"header3": "",
		"content": "SDK Protocol Protocol ROS Windows Linux LabVIEW MATLAB VB Java Plug Motion ZIGBEE Porting ZIG2Serial Windows ZIG2Serial Linux Download Plug SDK Motion Download ZIGBEE Porting SDK Download ZIG2Serial SDK 32bit Windows Download ZIG2Serial SDK 64bit Windows Download ZIG2Serial SDK Linux ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/#zigbee-sdk"
	},
	"4258": {
		"product": "ZIGBEE SDk",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "Zigbee SDK는 RoboPlus Task 코드와 통신하는 개발을 위한 표준 프로그래밍 라이브러리입니다 Zigbee SDK의 특징은 다음과 같습니다 C언어로 작성되어 플랫폼별 이식성이 뛰어납니다 플랫폼 독립적인 소스와 의존적인 소스로 작성되어 플랫폼 포팅이 쉽습니다 인터페이스를 표준화시켜서 제어기가 달라져도 개발된 W를 재사용할 수 있습니다 통신 모듈과 독립적으로 사용 가능한 SDK입니다 ZigBee 모듈뿐만 아니라 Bluetooth 모듈에서도 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#개요"
	},
	"4259": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "",
		"header3": "",
		"content": "Reference는 C언어 호출 방식을 기반으로 설명을 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#api-reference"
	},
	"4260": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "Device Control Method",
		"header3": "",
		"content": "제어기의 통신장치를 제어하는 함수 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#device-control-method"
	},
	"4261": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "Device Control Method",
		"header3": "zgb_initialize",
		"content": "제어기의 통신장치를 초기화 하여 준비 상태로 만듭니다 int zgb initialize int devIndex Parameters devIndex 현재 연결된 통신장치의 번호 입니다 플랫폼에 따라 다를수 있습니다 예를 들어 Windows의 경우 COM 포트로 장치를 구분합니다 Return Values 1이면 성공 0이면 실패를 의미합니다 Example Windows 환경에서 COM3 포트로 초기화하는 예입니다 define DEFAULT PORTNUM COM3 int result result initialize DEFAULT PORTNUM result Succeed open Zig2Serial else result Failed open Zig2Serial ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-initialize"
	},
	"4262": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "Device Control Method",
		"header3": "zgb_terminate",
		"content": "제어기의 통신장치 사용을 끝냅니다 void zgb terminate Parameters 없음 Return Values 없음 Example zgb terminate ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-terminate"
	},
	"4263": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "Communication Method",
		"header3": "",
		"content": "패킷을 전송하고 받는 함수 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#communication-method"
	},
	"4264": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "Communication Method",
		"header3": "zgb_tx_data",
		"content": "제어기의 통신장치를 초기화 하여 준비 상태로 만듭니다 int zgb tx data int data Parameters data 전송할 데이터의 값 RC 100 으로 조종하는 효과를 낼 경우 미리 선언된 버튼 값을 사용할 수 있습니다 값 명칭 내용 RC100 BTN 버튼을 누른키 값 RC100 BTN 버튼을 누른키 값 RC100 BTN 버튼을 누른키 값 RC100 BTN 버튼을 누른키 값 16 RC100 BTN 버튼을 누른키 값 32 RC100 BTN 버튼을 누른키 값 64 RC100 BTN 버튼을 누른키 값 128 RC100 BTN 버튼을 누른키 값 256 RC100 BTN 버튼을 누른키 값 512 RC100 BTN 버튼을 누른키 값 Return Values 1이면 전송성공 0이면 전송실패를 의미합니다 Example int TxData int result TxData result zgb tx data TxData result Failed transmit else result Succeed transmit ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-tx-data"
	},
	"4265": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "Communication Method",
		"header3": "zgb_rx_check",
		"content": "제어기의 통신장치에 데이터가 도착했는지 확인하는 함수 입니다 int zgb rx check Parameters 없음 Return Values 1이면 수신된 데이터가 있음이고 0이면 수신된 데이터가 없음을 의미합니다 Example int resut result zgb rx check result Succeed data recieved else result Failed data recieved ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-rx-check"
	},
	"4266": {
		"product": "ZIGBEE SDk",
		"header1": "API Reference",
		"header2": "Communication Method",
		"header3": "zgb_rx_data",
		"content": "제어기의 통신장치로 부터 데이터를 수신 받는 함수 입니다 zgb rx check 로 데이터의 수신여부를 먼저 확인해야 최신 데이터를 받을 수 있습니다 int zgb rxdata Parameters 없음 Return Values 가장 최근에 수신 받은 데이터의 값 RC 100 으로부터 버튼 값을 수신하려면 미리 선언된 버튼 값을 사용할 수 있습니다 값 명칭 내용 RC100 BTN 버튼을 누른키 값 RC100 BTN 버튼을 누른키 값 RC100 BTN 버튼을 누른키 값 RC100 BTN 버튼을 누른키 값 16 RC100 BTN 버튼을 누른키 값 32 RC100 BTN 버튼을 누른키 값 64 RC100 BTN 버튼을 누른키 값 128 RC100 BTN 버튼을 누른키 값 256 RC100 BTN 버튼을 누른키 값 512 RC100 BTN 버튼을 누른키 값 Example int RxData zgb rx check Get data verified RxData zgb rx data ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-rx-data"
	},
	"4267": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "",
		"header3": "",
		"content": "Zigbee SDK는 사용자가 직접 다양한 플랫폼에 포팅할 수 있도록 소스를 제공하고 있습니다 Download ZIGBEE SDK Porting v1 00 zip ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#플랫폼-포팅"
	},
	"4268": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "소스 구조",
		"header3": "",
		"content": "플랫폼 독립적인 소스 플랫폼 독립적인 소스는 모든 C언어 컴파일러에서 컴파일 될 수 있도록 의존적인 루틴이 없이 표준 C로 작성되어 있습니다 이 소스에는 오직 패킷을 만들고 받은 패킷을 분석하는 프로토콜 관련 내용만 구현되어있습니다 사용자는 특별한 경우가 아니라면 이 소스의 내용을 수정할 필요가 없습니다 관련 소스 파일 zigbee zigbee Build시 필요한 파일 zgb hal zgb hal 플랫폼 의존적인 소스 플랫폼 의존적인 소스에는 제어기에서 실제로 작동할 수 있도록 의존적인 루틴이 포함되어야 합니다 만약 지원하지 않는 다른 플랫폼에서 Zigbee SDK를 사용하려면 이 소스를 수정해야 합니다 관련 소스 파일 zgb hal zgb hal ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#플랫폼-포팅"
	},
	"4269": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "포팅방법",
		"header3": "",
		"content": "포팅을 하려면 플랫폼에 맞게 아래의 함수를 구현해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#플랫폼-포팅"
	},
	"4270": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_open",
		"header3": "",
		"content": "실제로 제어기의 통신장치를 초기화시켜서 사용 가능하도록 만들어주는 루틴을 구현합니다 zgb initialize 는 zgb hal open을 통해 제어기의 통신장치를 활성화시킵니다 int zgb hal open int devIndex float baudrate ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-open"
	},
	"4271": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_open",
		"header3": "Parameters",
		"content": "devIndex 현재 연결된 통신장치의 번호 입니다 플랫폼에 따라 다를수 있습니다 예를 들어 Windows의 경우 COM 포트로 장치를 구분합니다 baudrate 실제 baudrate 값 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-open"
	},
	"4272": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_open",
		"header3": "Return Values",
		"content": "함수는 성공하면 실패하면 0을 반환합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-open"
	},
	"4273": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_close",
		"header3": "",
		"content": "제어기의 통신장치를 종료시켜서 다른 응용 프로그램이 사용할 수 있도록 만들어주는 루틴을 구현합니다 zgb terminate는 이 함수를 통해 제어기의 통신장치를 종료시킵니다 void zgb hal close ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-close"
	},
	"4274": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_close",
		"header3": "Parameters",
		"content": "없음 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-close"
	},
	"4275": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_close",
		"header3": "Return Values",
		"content": "없음 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-close"
	},
	"4276": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_tx",
		"header3": "",
		"content": "제어기의 통신장치를 통해 Packet을 송신하는 루틴을 구현합니다 int zgb hal tx unsigned char pPacket int numPacket ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-tx"
	},
	"4277": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_tx",
		"header3": "Parameters",
		"content": "pPacket 전송할 데이터가 들어있는 배열의 포인터 numPacket 전송할 데이터의 갯수 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-tx"
	},
	"4278": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_tx",
		"header3": "Return Values",
		"content": "실제로 전송한 데이터의 개수를 반환합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-tx"
	},
	"4279": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_rx",
		"header3": "",
		"content": "제어기 통신장치의 수신 버퍼로부터 Packet을 꺼내오는 루틴을 구현합니다 int zgb hal rx unsigned char pPacket int numPacket ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-rx"
	},
	"4280": {
		"product": "ZIGBEE SDk",
		"header1": "플랫폼 포팅",
		"header2": "zgb_hal_rx",
		"header3": "Parameters",
		"content": "pPacket 꺼내온 데이터를 저장할 배열의 포인터 numPacket 꺼내올 데이터의 갯수 Return Values 실제로 꺼내온 데이터의 갯수를 반환합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zgb-hal-rx"
	},
	"4281": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4282": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[윈도우즈용]",
		"header3": "",
		"content": "Windows용 Zigbee SDK를 다운로드 받을 수 있습니다 Download ZIGBEE SDK Win32 v1 02 zip Download ZIGBEE SDK Win64 v1 02 zip ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4283": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[윈도우즈용]",
		"header3": "시스템 요구 사항",
		"content": "OS Windows XP Vista 32 64bit Zig2Serial 이 반드시 필요 DLL 로딩이 되지 않는 경우 Microsoft Visual 2005 재배포가능 패키지 설치 필요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4284": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[윈도우즈용]",
		"header3": "폴더 구성",
		"content": "Zigbee SDK Windows의 폴더 구조는 다음과 같습니다 bin 윈도우용 DLL파일이 들어있습니다 import 프로그래밍할때 필요한 파일들이 있습니다 src DLL 소스가 들어있습니다 example 사용자의 프로그래밍 환경에 맞게 Zigbee를 제어하는 예제들이 들어있는 곳입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4285": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[윈도우즈용]",
		"header3": "환경 변수 설정하기",
		"content": "Zigbee SDK로 개발된 프로그램이 실행하려면 zigbee dll이 반드시 필요합니다 zigbee dll은 Zigbee SDK안에 bin폴더에 들어있습니다 Windows의 환경 변수로 zigbee dll의 위치를 등록하면 프로그램 실행시 dll이 필요하지 않게 됩니다 만약 환경 변수로 dll 위치를 등록하지 않으려면 프로그램과 dll을 같이 배포해야 합니다 제어판 시스템 고급 탭에 들어가면 다음과 같이 환경 변수 버튼을 찾을 수 있습니다 시스템 변수에서 Path 항목을 찾고 편집 버튼을 클릭합니다 예제 폴더 아래 bin 폴더를 기존 변수값 끝에 세미콜론과 함께 추가합니다 기존 변수값이 변경되거나 삭제되지 않도록 주의하십시오 아래 예제는 DLL파일의 위치가 Project bin이라 가정하고 추가한 내용입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4286": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[리눅스용]",
		"header3": "",
		"content": "Linux용 Zigbee SDK를 다운로드 받을 수 있습니다 Download ZIGBEE SDK LINUX v1 00 zip ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4287": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[리눅스용]",
		"header3": "시스템 요구 사항",
		"content": "OS Linux Kernel 21 이상 권장 USB2Dynamixel 과 Zig2Serial 이 반드시 필요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4288": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[리눅스용]",
		"header3": "폴더 구성",
		"content": "Zigbee SDK Linux의 폴더 구조는 다음과 같습니다 include Zigbee SDK를 사용하기 위한 헤더 파일이 있습니다 src Zigbee SDK 소스 파일이 있습니다 lib 컴파일된 라이브러리 파일이 있습니다 example Zigbee를 제어하는 예제들이 들어있는 곳입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4289": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "[리눅스용]",
		"header3": "Zigbee SDK Build",
		"content": "ZigbeeSDK src 폴더에서 make 명령어로 build 하면 library가 빌드되어 ZigbeeSDK lib 폴더로 자동으로 복사됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#zig2serial"
	},
	"4290": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual C++",
		"header3": "",
		"content": "Visual 용 예제입니다 본 예제들은 Visual Studio 2005에서 테스트 되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-c"
	},
	"4291": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual C++",
		"header3": "환경 설정",
		"content": "예제를 실행하기 위해서는 에서 환경 설정을 해주어야 합니다 경로 등록하기 Visual Studio에 Zigbee SDK의 위치를 등록합니다 메뉴에서 도구 옵션을 선택합니다 프로젝트 및 솔루션 VC 디렉터리를 클릭 합니다 다음 파일의 디렉터리 표시 부분을 포함 파일 include 로 바꾼 후 2번 표시가 있는 부분을 클릭하여 ZigbeeSDK가 설치 된 폴더를 추가 시킵니다 예 ZigbeeSDK import 다음 파일의 디렉터리 표시 부분을 라이브러리 파일 library 로 바꾼 후 2번 표시가 있는 부분을 클릭하여 ZigbeeSDK가 설치 된 폴더를 추가 시킵니다 예 ZigbeeSDK import Zigbee SDK 사용하기 Header 파일을 포함시킵니다 소스 파일에 include zigbee 을 추가합니다 Library 파일을 포함시킵니다 소스 파일에 pragma comment lib zigbee lib 를 추가하거나 프로젝트 속성에서 Link 탭의 Input에서 Module에 zigbee lib를 추가합니다 함수를 사용합니다 소스 상에서 필요한 함수를 호출하면 됩니다 각 함수의 사용법은 API Reference 를 참고하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-c"
	},
	"4292": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual C++",
		"header3": "Send/Recieve 예제",
		"content": "준비 사용하는 Zigbee 모듈은 서로 1통신으로 설정합니다 제어기가 응답할 수 있도록 제어기 타입에 맞는 tsk파일을 다운로드 합니다 Download CM100 Echo tsk Download CM5 Echo tsk Download CM510 Echo tsk Download CM700 Echo tsk 소스 초기화 Open device zgb initialize DEFAULT PORTNUM printf Failed open Zig2Serial else printf Succeed open Zig2Serial 위 소스는 초기화가 제대로 되었는지를 확인합니다 초기화가 성공하였으면 실패할경우엔 0이 반환 되므로 if문에는 실패했을 경우에 대한 소스가 들어가게 되고 else문 안에는 성공했을 경우의 소스가 들어가게 됩니다 Zigbee API 함수중 zgb initialize 를 호출합니다 DEFAULT PORTNUM는 통신장치가 연결되어 있는 번호를 의미 합니다 DEFAULT PORTNUM 은 사용자의 시스템 상황에 맞게 설정해야 하며 COM3으로 기본 셋팅이 되어있습니다 종료 Close device zgb terminate 위 소스는 제어기 통신장치와 통신을 종료하는 소스입니다 Zigbee API 함수중 zgb terminate 를 호출합니다 패킷 보내기 zgb tx data TxData printf Failed transmit 위 소스는 Zigbee 모듈이 제어기 쪽으로 패킷을 전달 하는 소스 입니다 Zigbee API 함수중 zgb tx data 함수를 이용하여 패킷을 전달하고 전송 결과를 리턴 받는다 리턴 값이 1이면 전송성공 0이면 전송실패를 의미 합니다 TxData는 사용자가 제어기에 전달하는 값을 의미합니다 패킷 받기 TIMEOUT TIME Verify data recieved zgb rx check Get data verified RxData zgb rx data printf Recieved RxData break Sleep 위 소스는 Zigbee 모듈이 제어기로부터 패킷을 받는 소스입니다 zgb rx check 함수를 이용하여 패킷이 수신되었는지를 체크를 합니다 리턴 값이 1이면 수신성공 0이면 수신실패를 의미 합니다 패킷이 수신되면 리턴값이 1이 되면 zgb rx data 함수를 이용해 RxData 변수에 전송받은 패킷을 저장합니다 패킷을 수신받지 못하면 Sleep 함수를 이용하여 1ms의 딜레이 시간을 준 후 TIMEOUT TIME 시간 만큼 루프를 돌게 됩니다 TIMEOUT TIME 는 1000으로 초기셋팅이 되어 예제 소스에서는 1초의 시간동안 패킷이 도착하기를 기다리게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-c"
	},
	"4293": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual Basic",
		"header3": "",
		"content": "Visual Basic용 예제입니다 이 예제는 Visual Studio 2005에서 테스트 되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-basic"
	},
	"4294": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual Basic",
		"header3": "환경 설정",
		"content": "예제를 실행하기 위해서는 Visual Basic에서 환경 설정을 해주어야 합니다 Zigbee SDK사용하기 솔루션 탐색기에서 Projct File 이름 위 에서 마우스 우클릭을 하여 추가 기존항목을 선택합니다 zigbee vb 파일을 추가시킵니다 zigbee vb는 ZigbeeSDK가 저장되어 있는 폴더의 import폴더 안에 있습니다 예 ZigbeeSDK import zigbee vb zigbee vb가 추가 된것을 확인 합니다 ZigbeeAPI 함수를 사용 합니다 Zigbee 각 함수 사용법은 API Reference 를 참고하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-basic"
	},
	"4295": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual Basic",
		"header3": "Send/Recieve 예제",
		"content": "준비 사용하는 Zigbee 모듈은 서로 1통신으로 설정합니다 제어기가 응답할 수 있도록 제어기 타입에 맞는 tsk파일을 다운로드 합니다 Download CM100 Echo tsk Download CM5 Echo tsk Download CM510 Echo tsk 소스 초기화 Open device zgb initialize DEFAULT PORTNUM Then Console WriteLine Failed open Zig2Serial Exit Sub Else Console WriteLine Succeed open Zig2Serial End 위 소스는 초기화가 제대로 되었는지를 확인합니다 초기화가 성공하였으면 실패할경우엔 0이 반환 되므로 if문에는 실패했을 경우에 대한 소스가 들어가게 되고 else문 안에는 성공했을 경우의 소스가 들어가게 된빈다 Zigbee API 함수중 zgb initialize 를 호출합니다 DEFAULT PORTNUM는 통신장치가 연결되어 있는 번호를 의미 합니다 DEFAULT PORTNUM 은 사용자의 시스템 상황에 맞게 설정해야 하며 COM3으로 기본 셋팅이 되어있습니다 종료 Close device zgb terminate 위 소스는 제어기 통신장치와 통신을 종료하는 소스입니다 Zigbee API 함수중 zgb terminate 를 호출합니다 패킷 보내기 zgb tx data TxData Then Console WriteLine Failed transmit End 위 소스는 Zigbee 모듈이 제어기 쪽으로 패킷을 전달 하는 소스 입니다 Zigbee API 함수중 zgb tx data 함수를 이용하여 패킷을 전달하고 전송 결과를 리턴 받는다 리턴 값이 1이면 전송성공 0이면 전송실패를 의미 합니다 TxData는 사용자가 제어기에 전달하는 값을 의미합니다 패킷 받기 TIMEOUT TIME Verify data recieved zgb rx check Then Get data verified RxData zgb rx data Console WriteLine Recieved amp RxData amp Exit End Sleep Next 위 소스는 Zigbee 모듈이 제어기로부터 패킷을 받는 소스입니다 zgb rx check 함수를 이용하여 패킷이 수신되었는지를 체크를 합니다 리턴 값이 1이면 수신성공 0이면 수신실패를 의미 합니다 패킷이 수신되면 리턴값이 1이 되면 zgb rx data 함수를 이용해 RxData 변수에 전송받은 패킷을 저장합니다 패킷을 수신받지 못하면 Sleep 함수를 이용하여 1ms의 딜레이 시간을 준 후 TIMEOUT TIME 시간 만큼 루프를 돌게 됩니다 TIMEOUT TIME 는 1000으로 초기셋팅이 되어 예제 소스에서는 1초의 시간동안 패킷이 도착하기를 기다리게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-basic"
	},
	"4296": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual Sharp(#)",
		"header3": "",
		"content": "Visual 용 예제입니다 이 예제는 Visual Studio 2005에서 테스트 되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-c-sharp"
	},
	"4297": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual Sharp(#)",
		"header3": "환경 설정",
		"content": "예제를 실행하기 위해서는 에서 환경 설정을 해주어야 합니다 Zigbee SDK 사용하기 솔루션 탐색기에서 Projct File 이름 위 에서 마우스 우클릭을 하여 추가 기존항목을 선택합니다 Zigbee cs 파일을 추가시킵니다 Zigbee cs는 ZigbeeSDK가 저장되어 있는 폴더의 import폴더 안에 있습니다 예 ZigbeeSDK import Zigbee cs Zigbee cs가 추가 된것을 확인 합니다 using ROBOTIS를 추가 하여 ZigbeeAPI 함수를 사용 합니다 Zigbee각 함수 사용법은 API Reference 를 참고하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-c-sharp"
	},
	"4298": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "Visual Sharp(#)",
		"header3": "Send_Recieve",
		"content": "준비 사용하는 Zigbee 모듈은 서로 1통신으로 설정합니다 제어기가 응답할 수 있도록 제어기 타입에 맞는 tsk파일을 다운로드 합니다 Download CM100 Echo tsk Download CM5 Echo tsk Download CM510 Echo tsk 소스 초기화 Open device zigbee zgb initialize DEFAULT PORTNUM printf Failed open Zig2Serial else printf Succeed open Zig2Serial 위 소스는 초기화가 제대로 되었는지를 확인합니다 초기화가 성공하였으면 실패할경우엔 0이 반환 되므로 if문에는 실패했을 경우에 대한 소스가 들어가게 되고 else문 안에는 성공했을 경우의 소스가 들어가게 됩니다 Zigbee API 함수중 zgb initialize 를 호출합니다 DEFAULT PORTNUM는 통신장치가 연결되어 있는 번호를 의미합니다 DEFAULT PORTNUM 은 사용자의 시스템 상황에 맞게 설정해야 하며 COM3으로 기본 셋팅이 되어있습니다 종료 Close device zigbee zgb terminate 위 소스는 제어기 통신장치와 통신을 종료하는 소스입니다 Zigbee API 함수중 zgb terminate 를 호출합니다 패킷 보내기 zigbee zgb tx data TxData Console WriteLine Failed transmit 위 소스는 Zigbee 모듈이 제어기 쪽으로 패킷을 전달 하는 소스 입니다 Zigbee API 함수중 zgb tx data 함수를 이용하여 패킷을 전달하고 전송 결과를 리턴 받는다 리턴 값이 1이면 전송성공 0이면 전송실패를 의미 합니다 TxData는 사용자가 제어기에 전달하는 값을 의미합니다 패킷 받기 TIMEOUT TIME Verify data recieved zigbee zgb rx check Get data verified RxData zigbee zgb rx data Console WriteLine Recieved RxData break Thread Sleep 위 소스는 Zigbee 모듈이 제어기로부터 패킷을 받는 소스입니다 zgb rx check 함수를 이용하여 패킷이 수신되었는지를 체크를 합니다 리턴 값이 1이면 수신성공 0이면 수신실패를 의미 합니다 패킷이 수신되면 리턴값이 1이 되면 zgb rx data 함수를 이용해 RxData 변수에 전송받은 패킷을 저장합니다 패킷을 수신받지 못하면 Sleep 함수를 이용하여 1ms의 딜레이 시간을 준 후 TIMEOUT TIME 시간 만큼 루프를 돌게 됩니다 TIMEOUT TIME 는 1000으로 초기셋팅이 되어 예제 소스에서는 1초의 시간동안 패킷이 도착하기를 기다리게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#visual-c-sharp"
	},
	"4299": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "gcc",
		"header3": "",
		"content": "Linux gcc 를 이용한 예제입니다 ZigbeeSDK example 폴더 아래의 Send Receive 폴더로 이동하여 make 명령어를 통해 빌드하면 됩니다 모든 예제는 dev ttyUSB0 를 기본 device 로 사용하도록 되어 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#gcc"
	},
	"4300": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "gcc",
		"header3": "환경 설정",
		"content": "Zigbee API 사용하기 Header 파일 지정 소스 파일에 include zigbee 을 추가합니다 함수호출 소스 상에서 필요한 함수를 호출하면 됩니다 각 함수의 사용법은 API Reference 를 참고하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#gcc"
	},
	"4301": {
		"product": "ZIGBEE SDk",
		"header1": "ZIG2Serial",
		"header2": "gcc",
		"header3": "Send/Receive Example",
		"content": "Zigbee의 Send Receive 예제입니다 준비 USB2Dynamixel에 Zig2Serial과 ZIG 100이 연결 되어 있어야 합니다 또한 Zig2Serial에 연결된 ZIG 100 통신 모듈과 통신할 수 있는 제어기 혹은 다른 통신 장치가 있어야 합니다 소스 초기화 zgb initialize DEFAULT DEVICEINDEX printf Failed open Zig2Serial printf Press key terminate getchar return else printf Succeed open Zig2Serial 위 소스는 초기화가 제대로 되었는지를 확인합니다 초기화가 성공하였으면 실패할경우엔 0이 반환 되므로 if문에는 실패했을 경우에 대한 소스가 들어가게 되고 else문 안에는 성공했을 경우의 소스가 들어가게 됩니다 zigbee API 중 zgb initialize 함수를 호출 합니다 DEFAULT DEVICEINDEX는 리눅스 통신장치 Device Index입니다 기본값으로 1을 사용합니다 DEFAULT DEVICEINDEX는 사용자의 상황에 맞게 설정하셔야 합니다 Baud Rate는 57600으로 고정되어 있습니다 종료 Close device zgb terminate 위 소스는 종료하는 소스입니다 zigbee API 중 zgb teminate 함수를 호출하여 연결을 종료 시킵니다 데이터 전송하기 Wait user input printf Input number transmit scanf amp TxData Transmit data zgb tx data TxData printf Failed transmit 위 소스는 zigbee를 통해 사용자가 입력한 값을 전송하는 소스입니다 zigbee API 중 zgb tx data 함수를 호출 합니다 데이터 수신하기 TIMEOUT TIME Verify data recieved zgb rx check Get data verified RxData zgb rx data printf Recieved RxData break sleep 위 소스는 TIMEOUT 시간 전 까지 데이터를 받아오는 소스입니다 zigbee API 중 zgb rx check 와 zgb rx data 함수를 호출합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#gcc"
	},
	"4302": {
		"product": "ZIGBEE SDk",
		"header1": "CM-510/700용 Zigbee SDK",
		"header2": "",
		"header3": "",
		"content": "CM 510 700용 Zigbee SDK는 임베디드 C에 포함되어 있습니다 예제 바로가기는 다음과 같습니다 RC100과 ZigBee ",
		"url": "http://emanual.robotis.com/docs/kr/software/embedded_sdk/zigbee_sdk/#cm-510710용-zigbee-sdk"
	},
	"4303": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "",
		"header3": "",
		"content": "로보티즈 미니 를 작동하는데 사용되는 앱입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#로보티즈-미니-앱"
	},
	"4304": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설치",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#미니-앱-설치"
	},
	"4305": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설치",
		"header3": "소개 및 설치하기",
		"content": "로보티즈 미니는 스마트기기를 사용하여 다양한 동작을 실행시킬 수 있는 전용 앱을 기본 제공하고 있습니다 전용 앱을 사용할 수 있는 스마트기기의 사양은 아래와 같습니다 로보티즈 미니 앱 지원 사양 지원 OS 안드로이드 진저브레드 이상 하드웨어 사양 2GHz 듀얼코어 이상 RAM 1GB 이상 IOS에서 사용 하려면 BT 410을 별도로 구매해야 합니다 스마트 기기에서 Play 스토어를 실행합니다 Play 스토어는 안드로이드 마켓 앱입니다 Play 스토어에서 로보티즈 미니 또는 로보티즈 를 검색한 후 DARWIN MINI 앱을 선택하여 설치합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#소개-및-설치하기"
	},
	"4306": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설치",
		"header3": "블루투스 장치 연결 확인하기",
		"content": "제어기의 전원 스위치를 켰을 때 블루투스 BT 210 의 LED가 깜박이면 로봇과 블루투스가 정상적으로 연결된 것입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#블루투스-장치-연결-확인하기"
	},
	"4307": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설치",
		"header3": "블루투스를 통해 로봇과 앱 연결하기",
		"content": "로보티즈 미니 앱 실행 로봇의 전원을 켜고 스마트기기에서 로보티즈 미니 앱을 실행합니다 스마트기기의 블루투스가 꺼져 있는 경우 아래와 같이 사용 여부를 확인하는 창이 표시됩니다 허용 을 터치하여 스마트기기의 블루투스 기능을 활성화합니다 블루투스 BT 210 연결 확인 등록된 로봇 목록에서 로보티즈 미니에 연결된 블루투스 BT 210 윗면의 번호와 동일한 번호가 있는지 확인합니다 만약 동일한 번호가 없으면 새로운 로봇 검색 을 통해 찾아서 등록합니다 PIN 정보 입력 이때 장치와 연결 블루투스 페어링 을 위해서는 PIN 정보가 필요합니다 PIN은 0000 으로 설정되어 있습니다 0000 을 입력하고 확인 버튼을 누르면 로봇과 스마트기기가 연결되면서 왼쪽과 같은 화면이뜹니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#블루투스를-통해-로봇과-앱-연결하기"
	},
	"4308": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설치",
		"header3": "앱으로 조립 확인하기",
		"content": "화면의 오른쪽 위에 설정 메뉴에서 관절 동작 테스트 를 터치합니다 스마트기기가 로보티즈 미니와 연결되어 있으면 다음과 같이 화면에 로보티즈 미니의 모습이 나타납니다 블루투스 연결 상태와 각 관절에 이상이 없다면 각 ID를 터치했을 때 해당 관절이 약간 움직이고 LED가 빨강 녹색 파랑으로 차례대로 변하는 것을 확인할 수 있습니다 만약 터치한 ID와 동작하는 관절의 위치가 맞지 않는다면 조립이 잘못된 것이므로 ID를 변경하거나 올바른 위치에 다시 조립을 해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#앱으로-조립-확인하기"
	},
	"4309": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 사용하기",
		"header3": "",
		"content": "로보티즈 미니 앱은 스마트기기의 버튼 제스처 센서 음성 인식 메신저 기능을 이용하여 로보티즈 미니의 동작을 실행시킬 수 있는 기능을 제공합니다 버튼 화면의 버튼을 터치하여 로보티즈 미니를 동작시킬 수 있습니다 제스처 스마트기기를 쥔 손으로 특정 제스처를 취하여 로보티즈 미니를 동작시킬 수 있습니다 음성 인식 음성 인식 기능을 이용하여 로보티즈 미니를 동작시킬 수 있습니다 메신저 다른 스마트기기에서 메신저를 통해 로보티즈 미니와 연결된 스마트기기로 동작 명령을 보내어 로보티즈 미니를 동작시킬 수 있습니다 리모콘 격투게임이나 축구게임을 쉽게 할 수 있도록 스마트 기기의 화면을 가로방향의 리모콘 버튼으로 동작시킬 수 있습니다 실행 탭의 버튼 제스처 음성 각 탭의 하단에는 3개의 기본 버튼이 제공됩니다 각 버튼의 기능은 아래와 같습니다 모션정지 모션 호출 번호 0번을 호출하는 버튼으로 무한 반복 모션이나 실행시간이 긴 모션 실중에 이 버튼이 눌리면 현재 실행 중인 모션유닛까지만 실행하고 모션을 정지합니다 초기자세 모션 호출 번호 1번을 호출하는 버튼으로 기본 제공되는 모션 파일의 1번 모션은 초기자세 입니다 모션 파일의 1번 모션을 변경하면 변경된 모션이 호출됩니다 일어나기 모션 호출 번호 2번을 호출하는 버튼으로 기본 제공되는 모션 파일의 2번 모션은 일어나기 입니다 모션 파일의 2번 모션을 변경하면 변경된 모션이 호출됩니다 모션이 동작 중일 때에는 모션정지 외에 다른 모션을 실행하는 명령은 무시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#미니-앱-사용하기"
	},
	"4310": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 사용하기",
		"header3": "버튼으로 동작하기",
		"content": "버튼 탭에 등록된 버튼을 터치하면 해당 버튼에 할당된 동작을 실행할 수 있습니다 화면 상단의 편집 탭을 터치하면 버튼을 추가 수정 삭제하거나 위치를 변경할 수 있습니다 버튼 줄 편집하기 버튼 줄 추가 편집 탭에서 버튼 추가 를 터치하면 가장 위에 새로운 버튼을 한 줄 추가할 수 있습니다 버튼 줄 순서 바꾸기 순서를 바꾸려는 버튼 줄의 오른쪽 끝을 터치하여 아래위로 드래그하세요 버튼 줄 삭제 지우려는 버튼 줄의 오른쪽 끝을 터치하여 왼쪽으로 드래그하세요 버튼 수정하기 버튼 내용 수정 로 표시된 버튼을 터치하면 해당 버튼에 새로운 내용을 등록할 수 있습니다 이미 내용이 등록된 버튼을 터치하면 해당 버튼의 내용을 수정할 수 있습니다 모션 호출 번호는 로봇에 다운로드된 각 모션들에 할당된 호출 번호입니다 모션 호출 번호가 지정되지 않으면 버튼의 이름이 옅은 회색으로 표시됩니다 버튼 이름과 모션 호출 번호를 모두 삭제하면 해당 버튼이 실행 탭에 표시되지 않게 됩니다 모션 파일 설정을 이용하여 모션 호출 번호 입력하기 로보티즈 미니 앱의 설정 에서 모션 파일 설정 에 사용할 모션 파일을 지정해 두면 버튼 수정 화면에서 입력 창의 오른쪽 위에 목록 버튼이 보입니다 이 목록 을 터치하면 설정된 모션 파일 내의 모션 목록이 나타납니다 목록에서 원하는 모션을 선택하면 자동으로 버튼 이름과 모션 호출 번호가 입력됩니다 파일 설정 방법은 모션파일 설정 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#버튼으로-동작하기"
	},
	"4311": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 사용하기",
		"header3": "제스처로 동작하기",
		"content": "제스처 탭은 스마트기기의 가속도센서를 이용하는 기능으로 사용자가 스마트기기를 쥔 손으로 특정 제스처를 취하면 로보티즈 미니가 그에 맞는 동작을 취합니다 예를 들어 스마트기기를 쥔 손으로 를 그린다거나 X를 그리는 동작으로 로보티즈 미니를 걷거나 정지하게 할 수 있습니다 기본 등록된 제스처와 기울기는 오른손으로 스마트기기를 바닥과 수직이 되도록 잡은 상태를 기준으로 동작합니다 스마트기기를 쥔 손으로 미리 설정된 제스처를 취하여 로봇을 동작시킬 수 있습니다 화면 중앙의 버튼을 터치한 상태로 스마트기기를 기울여서 로봇을 동작시킬 수 있습니다 화면 아래의 있는 기본 버튼을 터치하면 버튼 탭으로 이동하지 않고도 버튼으로 로봇을 동작시킬 수 있습니다 화면 맨 아래의 기울기 를 터치하면 스마트기기를 기울이는 방향에 할당된 동작을 확인할 수 있습니다 화면 상단의 편집 탭을 터치하면 제스처를 추가 수정 삭제하거나 훈련 기능을 통해 인식 정확도를 높일 수 있습니다 또한 화면 아래의 버튼과 기울기 방향에 따른 동작도 수정할 수 있습니다 제스처 등록하기 제스처 추가 버튼을 터치하면 제스처 추가 창이 뜹니다 제스처의 이름 모션 호출 번호 제스처 동작 설명 등을 입력합니다 준비 버튼을 누른 후 스마트기기를 쥔 손을 일정 속도 이상으로 움직이며 제스처를 취합니다 움직임을 멈추면 짧은 진동과 함께 삐 소리가 나고 제스처 를 배웠습니다 라는 메시지가 표시되면서 확인 버튼이 활성화됩니다 확인 버튼을 터치하면 제스처 등록이 완료됩니다 ockquote 삐 소리가 나지 않는다면 미디어 볼륨 크기를 확인하시기 바랍니다 ockquote 제스처를 추가할 때도 설정에서 모션 프로젝트 파일을 지정해 두었다면 목록 버튼이 나타나서 쉽게 모션을 추가할 수 있습니다 제스처 수정하기 수정하려는 제스처의 수정 버튼을 터치합니다 등록할 때와 같은 방법으로 수정한 후 확인 버튼을 터치하면 됩니다 제스처 삭제하기 버튼 줄 삭제와 동일하게 삭제하려는 제스처의 오른쪽 끝을 터치하여 왼쪽으로 드래그하면 됩니다 버튼 수정하기 버튼 탭의 버튼 수정 방법과 동일하게 수정하면 됩니다 화면 아래의 버튼은 최대 3개 1줄 까지만 추가 및 편집이 가능합니다 기울기 편집하기 버튼 아래의 기울기 를 터치하면 기울이는 방향에 따라 실행할 동작을 변경할 수 있습니다 기울기 기능에서 사용될 기울기 방향은 미리 정해진 4가지 방향만 사용할 수 있습니다 4가지 방향의 버튼을 터치하면 버튼의 이름과 모션 호출 번호를 편집할 수 있습니다 미리 지정된 기울기의 방향은 아래 그림과 같이 오른손으로 스마트기기를 바닥과 수직이 되도록 잡은 자세로 앞 뒤 좌 우로 기울인 방향입니다 제스처 훈련 기능이란 등록된 제스처의 인식률을 높이기 위해 각 제스처 별로 훈련 기능을 사용할 수 있습니다 훈련하려는 제스처의 훈련 버튼을 터치합니다 준비 버튼을 터치한 후 훈련하려는 제스처의 동작을 더 크게 하거나 스마트기기의 방향이나 기울기를 다르게 하는 등의 방법으로 약간 변형하여 움직입니다 움직임을 멈추면 짧은 진동과 함께 삐 소리가 나고 제스처를 배웠습니다 라는 메시지가 표시됩니다 같은 방법으로 비슷한 동작을 약간씩 변형하며 반복 학습시킵니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#제스처로-동작하기"
	},
	"4312": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 사용하기",
		"header3": "음성 인식으로 동작하기",
		"content": "구글의 음성 인식 기능을 이용하여 로보티즈 미니를 동작시킬 수 있습니다 화면 중앙의 마이크 모양 버튼을 터치한 다음 등록된 명령얼르 말하면 됩니다 단 음성 인식 기능을 이용하기 위해서는 스마트기기가 인터넷에 연결되어 있어야 합니다 화면 상단의 편집 탭을 편집을 터치하면 음성명령을 추가 수정 삭제하거나 훈련 기능을 통해 정확도를 높일 수 있습니다 음성명령 추가하기 음성명령 추가 버튼을 터치하면 음성명령 추가 창이 뜹니다 음성 인식에 사용될 명령어와 모션 호출 번호를 입력하고 확인 버튼을 누르면 등록됩니다 음성명령 수정하기 수정하려는 체스처의 음성명령을 선택하여 수정 버튼을 터치합니다 새로운 음성명령이나 모션 호출 번호를 입력하고 확인 버튼을 터치합니다 음성명령 삭제하기 버튼 삭제와 동일하게 삭제하려는 명령의 오른쪽 끝을 터치하여 왼쪽으로 드래그합니다 음성인식 훈련 기능이란 등록된 음성명령의 인식률을 높이기 위해 각 명령어 별로 훈련 기능을 사용할 수 있습니다 훈련하려는 음성명령의 훈련 버튼을 터치합니다 스마트기기의 마이크에 해당 음성명령을 말합니다 음성 인식된 단어와 유사한 단어가 추천되어 나타납니다 확인 버튼을 터치하면 추천된 유사 단어가 해당 음성명령에 추가로 등록됩니다 주의 훈련 기능을 통해 추가된 유사 단어를 삭제하려면 해당 음성명령을 삭제하고 다시 등록해야 합니다 음성 인식 테스트 등록된 음성명령이 실제로 인식이 잘 되는지 확인하려면 실행 탭에서와 동일하게 화면 중앙의 마이크 모양의 버튼을 눌러 테스트할 수 있습니다 그러나 편집 탭에서는 음성 인식의 성공율을 테스트하기 위함이므로 명령어의 인식 여부만 알려 줄 뿐 실제로 로보티즈 미니에 동작 명령을 보내지는 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#음성-인식으로-동작하기"
	},
	"4313": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 사용하기",
		"header3": "메신저로 동작하기",
		"content": "로봇과 연결된 스마트기기에서 각종 메신저를 이용해 동작명령을 보내면 로봇을 동작시킬 수 있습니다 단 이 기능을 사용하기 위해서는 메신저로 명령을 받을 수 있도록 스마트기기가 인터넷에 연결되어 있어야 합니다 로보티즈 미니 앱이 실행중인 스마트기기에 각종 메신저를 통해 메시지가 들어오면 로보티즈 미니 앱에서 알림바에 표시되는 수신 메시지의 내용을 확인하여 음성명령에 등록된 명령어와 일치하는지 확인 후 일치할 경우 음성명령에 등록된 동작을 실행하게 됩니다 음성명령에 등록된 명령을 그대로 사용하므로 메신저를 이용한 명령어 편집은 필요 없습니다 주의 로보티즈 미니 앱이 알림바에 표시되는 메시지의 수신 내용을 확인할 수 있도록 접근성 설정을 켜 두어야 합니다 접근성 설정 방법은 로보티즈 미니 앱 설정을 참조 알림바에 메시지 수신 알람을 사용하지 않거나 메시지의 수신 내용 전체를 표시하지 않고 새 메시지 개 와 같이 표시하는 메신저에서도 동작하지 않을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#메신저로-동작하기"
	},
	"4314": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 사용하기",
		"header3": "리모콘 사용하기",
		"content": "리모콘 형태로 배치된 버튼을 이용하여 로보티즈 미니를 조종할 수 있습니다 화면 좌측의 버튼은 이동과 관련된 모션들이 설정되어 있습니다 이 버튼들에 설정된 모션은 모드와 상관없이 공통적으로 적용됩니다 화면 우측의 부터 까지의 버튼은 축구모드 공격 축구모드 수비 격투모드 에 따라 서로 다른 모션이 설정되어 있습니다 총 18 개의 모션을 각각의 모드에 따라 설정할 수 있으며 모션이 설정되어 있지 않은 경우 푸른색으로 표시됩니다 화면 상단의 버튼을 클릭하여 축구모드와 격투모드를 선택할 수 있습니다 축구모드 축구모드는 수비와 공격을 선택할 수 있습니다 초기 버튼 설정은 수비 시 왼쪽막기 오른쪽막기 막기1 막기2 가 설정되어 있으며 공격 시 왼발차기 오른발차기 왼발옆차기 오른발옆차기 가 설정되어 있습니다 격투모드 격투모드의 초기 버튼 설정은 왼쪽공격1 오른쪽공격 앞쪽공격 이 설정되어 있습니다 종료 리모콘 화면을 빠져나가기 위해서는 우측 상단의 버튼을 클릭합니다 실행 amp 편집 실행 모드에서 리모콘 탭을 실행하고 버튼을 클릭하면 로보티즈 미니를 조종할 수 있습니다 편집 모드에서 리모콘 탭을 실행하고 이미지 버튼을 클릭하면 모션 설정을 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#리모콘-사용하기"
	},
	"4315": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "",
		"content": "화면 오른쪽 상단의 설정 을 누르면 앱의 설정 화면으로 넘어갑니다 각 설정의 의미는 아래와 같습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#미니-앱-설정"
	},
	"4316": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "서버/클라이언트 설정",
		"content": "여러 대의 스마트기기로 하나의 로보티즈 미니를 조종할 경우에 설정합니다 서버 역할을 하는 스마트기기만 로보티즈 미니와 직접 연결되고 클라이언트 역할을 하는 다른 다수의 기기들은 서버에 연결되어 동작 명령을 서버 역할을 하는 기기로 보내고 서버 역할을 하는 기기는 클라이언트들에서 들어온 동작 명령을 연결된 로보티즈 미니로 전달합니다 서버 클라이언트 설정 기능을 사용하면 2대의 스마트기기에 한 대는 왼손 모션을 다른 한 대는 오른손 모션을 제스처 명령으로 넣어두고 각각 왼손과 오른손에 스마트기기를 하나씩 들고 양손으로 제스처를 취하며 로보티즈 미니를 조종하는 것과 같은 일을 할 수 있습니다 이 기능은 모바일 네트워크 3G 4G LTE 등 로는 사용할 수 없으며 서버와 클라이언트 역할을 하는 스마트기기들이 모두 동일한 네트워크에 접속되어 있어야 합니다 즉 모두 동일한 공유기에 접속되어 있거나 혹은 한 대가 휴대용 Wi Fi 핫스팟 기능을 켜고 다른 기기들이 무선랜으로 이 스마트기기에 접속되어 있어야 합니다 서버 클라이언트 설정하기 서버 역할을 하는 스마트기기만 로보티즈 미니 와 블루투스로 연결되므로 클라이언트로 설정된 스마트기기에서는 앱 실행 시 등록된 로봇 목록이 표시되지 않습니다 서버를 선택하면 현재 스마트기기의 IP Address가 표시됩니다 이 주소를 클라이언트 역할을 하는 다른 스마트기기에 입력하고 테스트 버튼을 누릅니다 정상적으로 설정된 경우 클라이언트 쪽의 테스트 버튼을 눌렀을 때 서버 쪽에서 테스트 메시지가 표시됩니다 ockquote 휴대용 Wi Fi 핫스팟 설정 방법 설정 방법은 기기마다 아래의 화면과 다를 수 있습니다 스마트기기 설정 메뉴의 무선 및 네트워크 설정 테더링 및 휴대용 핫스팟 휴대용 Wi Fi 핫스팟 체크를 통해 설정합니다 Wi Fi 핫스팟 설정 메뉴를 통해 다른 스마트기기에 표시되는 이름을 변경할 수 있습니다 이 기능을 통해 다른 스마트기기들이 연결되면 연결된 모든 스마트기기의 데이터 통신이 이 기기를 통해 이루어지므로 휴대용 핫스팟에 연결된 상태로 인터넷 연결 등 데이터를 많이 사용하게 될 경우 요금제에 따라 데이터 요금이 과다하게 청구될 수 있으니 주의하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#서버클라이언트-설정"
	},
	"4317": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "모션 사운드 설정",
		"content": "모션 호출 번호에 사운드 파일을 설정해 두면 해당 모션 번호가 실행될 때 설정된 사운드가 함께 재생됩니다 이 기능은 댄스 모션 실행 시 자동으로 스마트기기로 음악을 재생시키는 등의 용도로 사용할 수 있습니다 사운드 추가 버튼을 터치한 후 모션 호출 번호와 사운드 파일을 선택하여 등록합니다 등록된 사운드 목록에서는 사운드 파일을 재생해 보거나 수정 및 삭제를 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#모션-사운드-설정"
	},
	"4318": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "모션파일 설정",
		"content": "버튼 제스처 음성명령 등을 추가할 때 입력하는 모션 호출 번호는 로보티즈 미니에 다운로드한모션그룹에 포함된 모션들에 대한 각각의 호출 번호를 의미합니다 명령 추가 시에 모션 편집 프로그램을 이용하여 모션 파일을 열고 로보티느 미니에 다운로드한 모션그룹에 속한 모션들에 대해 일일이 모션 이름과 모션 호출 번호를 확인하고 입력하는 것은 상당히 번거로운 일입니다 따라서 이를 보다 쉽게 입력할 수 있도록 하기 위해 해당 모션 파일을 모션 파일 설정 옵션에 등록합니다 로보티즈 미니에 제공되는 기본 모션 파일이 초깃값으로 지정되어 있습니다 이렇게 로보티즈 미니에 다운로드한 모션 파일을 지정해 두면 모션 호출 번호를 입력하는 창의 오른쪽 위에 목록 이라는 버튼이 보이게 되고 해당 버튼을 터치하면 지정한 모션 파일을 분석하여 포함된 모든 모션 호출 번호가 목록으로 나타납니다 그 중 하나의 모션을 선택하면 자동으로 모션 이름과 모션 호출 번호가 입력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#모션파일-설정"
	},
	"4319": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "접근성 설정",
		"content": "접근성 설정은 로보티즈 미니 동작하기 의 메신저로 동작하기 기능을 사용하기 위해 필요한 설정입니다 메신저로 수신한 메시지가 음성명령에 등록된 명령과 일치하는지 확인하려면 로보티즈 미니 앱이 메신저로 수신한 메시지의 내용에 접근할 수 있어야 합니다 접근성 설정을 활성화하면 메신저가 수신한 메시지의 내용을 알림바에 표시할 때 로보티즈 미니 앱도 그 내용을 받아볼 수 있게 됩니다 따라서 접근성 설정을 비활성화하면 메신저로 받은 메시지의 내용을 로보티즈 미니 앱이 받아볼 수 없게 되어 메신저로 로보티즈 미니를 동작시키는 기능을 사용할 수 없습니다 이 설정은 서버 클라이언트 설정 과 달리 메신저를 이용하기 때문에 로봇과 연결된 스마트기기가 다른 스마트기기와 동일 네트워크에 연결되어 있지 않더라도 인터넷만 연결가능하면 다른 스마트기기에서 로보티즈 미니를 동작시킬 수 있습니다 환경설정의 접근성 설정을 터치 할 때 나타나는 접근성의 서비스 항목에 표시되는 목록 중 DARWINMINI를 선택하여 사용할 수 있도록 설정을 변경합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#접근성-설정"
	},
	"4320": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "제스처 오차 범위 설정",
		"content": "제스처 기능을 이용할 때 동작을 인식하는 정확도를 조정하기 위한 설정입니다 오차 범위를 작게 설정할수록 정확한 동작을 해야 인식하며 크게 설정할수록 인식률은 높아지지만 다른 동작으로 인식될 확률도 높아집니다 제스처 기능에 대해서는 로보티즈 미니 동작하기를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#제스처-오차-범위-설정"
	},
	"4321": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "관절 동작 테스트",
		"content": "화면의 오른쪽 위에 설정 메뉴에서 관절 동작 테스트 를 터치합니다 스마트기기가 로보티즈 미니와 연결 되어 있으면 다음과 같이 화면에 로보티즈 미니의 모습이 나타납니다 블루투스 연결 상태와 각 관절에 이상이 없다면 각 ID를 터치했을 때 해당 관절이 약간 움직이고 LED가 빨강 녹색 파랑으로 차례대로 변하는 것을 확인할 수 있습니다 만약 터치한 ID와 동작하는 관절의 위치가 맞지 않는다면 조립이 잘못된 것이므로 ID를 변경하거나 올바른 위치에 다시 조립을 해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#관절-동작-테스트"
	},
	"4322": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "모션 오프셋",
		"content": "오프셋이란 기준값에 대한 차이를 의미합니다 같은 로봇이라도 조립상의 오차와 모터의 편차로 인해 자세의 차이가 조금씩 생길 수 있습니다 모션 오프셋에 이 차잇값을 설정해 두면 모션 실행 시에 차잇값 만큼을 항상 적용하여 보정할 수 있습니다 로보티즈 미니 초기 자세 모션 오프셋 메뉴로 들어가면 로보티즈 미니에 저장된 오프셋값을 읽어오며 로보티즈미니에 오프셋을 적용한 초기 자세로 만들어 줍니다 이때 로보티즈 미니가 취하는 초기 자세는 아래와 같습니다 만약 각 관절의 위치가 앞의 그림에서와 같이 일치하지 않고 삐뚤어져 있는 관절이 있다면 관절의 토크 ON OFF 기능을 이용하여 관절의 위치를 수정해 줍니다 주의 관절의 정확한 위치를 확인하기 위해서는 반드시 로보티즈 미니를 들고 확인하시기 바랍니다 바닥에 세워 둔 채로 확인할 경우 로봇 자체의 무게로 인해 다리나 허리 관절의 위치가 틀려질 수 있습니다 각 관절의 ID를 터치하게 되면 해당 관절의 토크가 OFF되면서 해당 관절을 임의대로 움직일 수 있게 됩니다 또한 화면에는 ID와 함께 해당 관절의 정위치를 표시하는 그림이 나타납니다 그림을 참고하여 직접 관절을 움직여서 정위치까지 움직이고 확인 버튼을 누르면 토크 ON 상태가 되면서 해당 관절의 현재 위칫값을 읽어서 자동으로 오프셋값을 계산하여 화면에 표시해 줍니다 이때 손으로 움직이는 것으로 정확한 위치를 잡기가 어려울 경우 해당 ID를 길게 터치하면 해당 액츄에이터가 토크 ON이 되어 슬라이드 바를 움직이거나 버튼을 이용하여 오프셋값을 세밀하게 조정할 수 있습니다 상단의 오프셋 초기화 버튼을 터치하면 모든 관절의 오프셋값이 이 됩니다 상단의 초기자세 버튼을 터치하면 현재 편집 중이던 오프셋값은 버리고 로보티즈 미니에 저장된 오프셋값을 다시 읽어와서 오프셋을 적용한 초기자세를 취하게 됩니다 변경한 오프셋을 로보티즈 미니에 적용하기 위해서는 제어기로 다운로드해야 합니다 오른쪽 위의 다운로드 버튼을 눌러 로보티즈 미니로 다운로드할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#모션-오프셋"
	},
	"4323": {
		"product": "ROBOTIS MINI APP",
		"header1": "로보티즈 미니 앱",
		"header2": "미니 앱 설정",
		"header3": "초기화",
		"content": "로보티즈 미니를 조종하기 위한 버튼 제스처 음성명령들을 초기화 상태로 되돌립니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/mini_app/#초기화"
	},
	"4324": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#r-iot-어플-사용방법"
	},
	"4325": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "환경설정",
		"header3": "",
		"content": "우측 상단의 설정 버튼을 누르면 환경 설정화면으로 돌아갑니다 설정화면에서는 연결할 장치 접근성 서비스 제스쳐 오차범위 등을 설정할 수 있습니다 연결할 장치 블루투스 모듈에 적힌 주소의 마지막 2자리를 입력 후 검색합니다 검색된 리스트에서 블루투스를 선택하면 제어기 연결시 선택한 장치로 연결을 시도합니다 예제 초기화 각각의 예제를 초기화 합니다 실수로 예제에 사용된 이미지 또는 태스크 등을 삭제 하였을 때 원래 상태로 되돌릴 수 있습니다 예제를 선택한 후 초기화 할 때에 사용자가 수정한 태스크나 이미지 등은 모두 삭제 됩니다 접근성 설정 이벤트 기능을 위해서는 기능을 활성화 해야 합니다 제스쳐 오차 범위 설정 제스쳐 기능의 정확도를 설정합니다 갤러리에 예제 이미지 표시 IoT 앱에 등록된 이미지 동영상 등이 갤러리에 표시 또는 표시되지 않도록 선택할 수 있습니다 미디어 스캔 일부 스마트 기기에서는 PC 와 스마트 기기를 연결하였을 때 IoT 앱에 등록된 이미지 폴더 등이 PC 에서 정상적으로 표시되지 않을 수도 있습니다 이 경우 미디어 스캔 후 다시 연결하면 정상적으로 보일 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#환경설정"
	},
	"4326": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "R+m.Task 연동",
		"header3": "",
		"content": "편집 버튼을 누르면 기능 확인 및 수정 가능한 화면이 표시 됩니다 표시된 화면에서 Task를 클릭합니다 태스크를 선택하거나 새로운 태스크를 작성하면 Task가 실행됩니다 다운로드 버튼을 클릭하여 제어기로 태스크를 다운로드 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#rmtask-연동"
	},
	"4327": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "R+m.Motion 연동",
		"header3": "",
		"content": "로보티즈 IoT 예제에서는 모션을 사용하지 않습니다 편집버튼을 누르면 표시되는 기능 확인 및 수정 가능한 화면에서 Motion을 클릭합니다 모션을 선택하면 Motion 이 실행됩니다 Motion 과 관련된 내용은 로보플러스 모션 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#rmmotion-연동"
	},
	"4328": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "모션 오프셋 설정",
		"header3": "",
		"content": "로보티즈 IoT 예제에서는 모션 오프셋 설정을 사용하지 않습니다 편집버튼을 누르면 표시되는 기능 확인 및 수정 가능한 화면에서 모션 오프셋을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#모션-오프셋-설정"
	},
	"4329": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "프로젝트 실행",
		"header3": "",
		"content": "로봇의 시작버튼을 누르고 블루투스를 연결한 후 해당 프로젝트를 짧게 터치합니다 연결이 되지 않는 다면 재시도 를 클릭하거나 장치 선택 을 클릭해서 올바른 블루투스를 선택합니다 연결이 되면 태스크로 작성한 화면이 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#프로젝트-실행"
	},
	"4330": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "프로젝트 복사",
		"header3": "",
		"content": "편집 버튼을 누르면 표시되는 기능 확인 및 수정 가능한 화면에서 프로젝트 복사를 클릭합니다 복사할 프로젝트 이름을 입력한 후 ok 버튼을 클릭합니다 복사가 완료되면 프로젝트 이름이 변경됩니다 복사한 프로젝트는 사용자 프로젝트로 추가됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#프로젝트-복사"
	},
	"4331": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 사용방법",
		"header2": "프로젝트 이름 변경",
		"header3": "",
		"content": "편집 버튼을 누르면 표시되는 기능 확인 및 수정 가능한 화면에서 프로젝트 이름을 클릭합니다 사용자 프로젝트만 이름을 변경할 수 있습니다 새로운 프로젝트 이름을 입력한 후 ok 버튼을 클릭합니다 입력한 이름으로 프로젝트가 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#프로젝트-이름-변경"
	},
	"4332": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 기능확인/수정",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#r-iot-어플-기능확인수정"
	},
	"4333": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 기능확인/수정",
		"header2": "기능확인",
		"header3": "",
		"content": "예제 기울기 기울기를 클릭합니다 표시되는 기울기 값을 확인합니다 확인한 값은 아래의 예와 같이 태스크 작성시 참고할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#기능확인"
	},
	"4334": {
		"product": "R+ IoT",
		"header1": "R+ IoT 어플 기능확인/수정",
		"header2": "기능수정",
		"header3": "",
		"content": "예제 그림 화면 아래의 체크박스를 클릭하면 수정 가능한 기능들만 표시 됩니다 그림 을 클릭합니다 우측 상단의 상단 버튼을 클릭 갤러리에서 선택 을 클릭합니다 이미지를 선택합니다 주황색 사각형을 터치하여 크롭할 영역을 선택 후 save 버튼을 클립합니다 이미지 추가됩니다 왼쪽의 숫자 아이템 번호 를 이용하여 태스크에서 그림을 표시할 수 있습니다 왼쪽의 숫자를 클릭하면 번호 수정 재등록 삭제 등을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#기능수정"
	},
	"4335": {
		"product": "R+ IoT",
		"header1": "R+ IoT Control Table",
		"header2": "",
		"header3": "",
		"content": "주소 이름 속성 기본값 최소값 최대값 길이 값 설명 10000 디버그 정보 표시 읽기 쓰기 센서 터치 감지영역 등의 정보를 화면에 출력 끄기 비전관련 위치 색상 표시 센서 흔들림 값 표시 기울기 상하좌우 값 표시 조도 값 표시 16 자기장 값 표시 32 방향 값 표시 64 소음 값 표시 128 터치 영역 값 표시 256 음성입력 결과 값 표시 512 SMS 관련 전화번호 내용 표시 1024 상태바 값 표시 10010 화면 회전 읽기 쓰기 읽기 자동 세로 가로 쓰기 자동 세로 가로 10020 카메라 선택 읽기 쓰기 종료 후면카메라 전면카메라 10030 카메라 줌 읽기 쓰기 255 255 확대 정도 10040 카메라 기능 선택 읽기 쓰기 빈화면 얼굴감지 색감지 움직임감지 라인감지 10050 감지 색상 라인감지용 읽기 쓰기 흑 적 녹 청 10060 동영상 녹화 읽기 쓰기 녹화 정지 녹화 시작 녹화 중에는 화면 회전 설정 카메라 선택 소음기능 안됨 10070 사진 촬영 읽기 쓰기 촬영 정지 촬영 시작 10080 얼굴 감지 위치 읽기 25 25 사이의 화면 영역 10090 감지 색상 색상감지용 읽기 감지 안됨 혹은 모르는 색상 흑 적 녹 청 10100 움직임 감지 위치 읽기 25 25 사이의 화면 영역 10110 라인 감지 위치 읽기 사이의 화면 영역 10130 배경 표시 읽기 쓰기 199 읽기 마지막으로 설정된 이미지 번호 쓰기 배경 이미지로 사용할 이미지 번호 배경지움 카메라 사용 시 투명 그 외 검정 10140 그림 표시 읽기 쓰기 값 배율 65536 이미지번호 256 이미지위치 이미지위치 25 사이의 화면 영역 이미지번호 앱에 등록된 이미지 번호 읽기 마지막으로 설정된 이미지 번호와 위치 및 배율 쓰기 전경 이미지로 사용할 이미지 번호와 위치 및 배율 이미지번호 해당 위치의 이미지 삭제 배율 10 x배 확대 11 20 x배 축소 10145 그림 자동 표시 얼굴 감지시 읽기 쓰기 199 읽기 현재의 전경이미지 아이템 번호 쓰기 전경 이미지의 아이템 번호를 사용하여 자동 표시 10150 도형 표시 읽기 쓰기 값 도형색상 16777216 도형크기 65536 도형위치 256 도형번호 도형색상 알 수 없음 흰색 검은색 빨간색 녹색 청색 노랑색 옅은회색 회색 어두운 회색 도형크기 255 사이의 크기 값 도형위치 25 사이의 화면 영역 도형번호 도형 삭제 원 사각 삼각 읽기 마지막으로 설정된 도형의 정보 쓰기 화면에 표시할 도형의 정보 도형위치 도형번호 모든 도형 삭제 10160 문자 표시 읽기 쓰기 값 도형번호만 문자번호로 바뀌고 도형과 동일 문자번호 앱에 등록된 문자의 번호 문자번호 200 SMS 또는 메시지 수신시 내용 저장 10170 숫자 표시 읽기 쓰기 값 도형번호만 숫자로 바뀌고 도형과 동일 숫자 255 해당 숫자 표시 읽기 마지막으로 설정된 숫자의 정보 쓰기 화면에 표시할 숫자의 정보 숫자크기 해당 위치의 숫자 삭제 숫자위치 숫자크기 모든 숫자 삭제 10180 음성 출력 TTS 읽기 쓰기 200 읽기 동작안함 200 TTS 변환중인 문자 번호 쓰기 변환 중지 200 TTS 변환할 문자 번호 10190 악기 연주 읽기 쓰기 값 악기종류 65536 옥타브 256 음계 악기종류 앱의 악기 종류 참조 128 옥타브 10 사이의 옥타브 값 음계 12 사이의 음계 값 도 부터 반음씩 증가 10200 오디오 재생 읽기 쓰기 199 읽기 재생중인 오디오 번호 쓰기 재생 중지 199 재생할 오디오 번호 10380 오디오 재생 읽기 쓰기 199 읽기 재생중인 오디오 번호 쓰기 재생 중지 199 재생할 오디오 번호 10210 동영상 재생 읽기 쓰기 199 읽기 재생중인 동영상 번호 쓰기 재생 중지 199 재생할 동영상 번호 10410 동영상 정지 읽기 쓰기 읽기 재생중 정지중 쓰기 재생 정지 10220 동영상 정지 읽기 쓰기 읽기 동작 안함 동작 중 쓰기 동작 중지 동작 시작 10230 음성 인식 결과 읽기 쓰기 199 읽기 음성인식 결과 인식된 문자의 번호 쓰기 값 초기화 10240 볼륨 읽기 쓰기 255 볼륨 크기 10250 흔들기 읽기 255 스마트폰이 흔들리는 강도 10260 기울기 왼쪽 읽기 90 90 10261 기울기 오른쪽 읽기 90 90 10262 기울기 위쪽 읽기 90 90 10263 기울기 아래쪽 읽기 90 90 10270 조도 읽기 65535 조도 센서 값 10280 자기장 읽기 65535 자기장 센서 값 10290 방향 각도값 읽기 359 북쪽 90 동쪽 180 남쪽 270 서쪽 359 도 까지의 각도 10300 소음 db 읽기 255 소음의 정도를 db 로 읽어옴 10310 터치 위치 읽기 25 25 사이의 화면 영역 10400 터치 위치 읽기 25 25 사이의 화면 영역 10320 SMS 전화번호 읽기 쓰기 200 읽기 SMS 수신 안됨 199 SMS를 보내온 전화번호의 등록 번호 200 SMS를 보내온 전화번호가 미등록 번호 쓰기 값 초기화 10321 SMS 내용 읽기 쓰기 200 읽기 SMS 수신 안됨 199 SMS 수신된 텍스트의 등록 번호 200 SMS 는 수신했지만 미등록 텍스트 쓰기 값 초기화 10330 알림바 이벤트 읽기 쓰기 200 읽기 카톡 등 알림바 수신 안됨 199 알림바 수신된 텍스트의 등록 번호 200 알림은 수신했지만 미등록 텍스트 쓰기 값 초기화 10340 타이머 읽기 쓰기 65535 읽기 남은 시간을 반환 쓰기 초 단위 타이머 값 최대 18시간 10350 진동 시간 읽기 쓰기 255 읽기 진동 동작 안함 진동 동작 중 쓰기 진동 시킬 시간 100초 단위 10360 플래시 읽기 쓰기 플래시 꺼짐 플래시 켜짐 10370 앱 실행 읽기 쓰기 199 읽기 마지막으로 실행한 앱 번호 쓰기 실행 시킬 앱 번호 10390 현재 시간 읽기 값 분단위 10420 메일발송 읽기 쓰기 읽기 미발송 발송중 정상 발송 에러발생 쓰기 미동작 캡쳐된 최근 이미지 녹화된 최근 동영상 첨부 같은 파일 연속으로 발생 불가 촬영하면서 발송하는 경우 발송후 상태를 확인하지 않으면 스레드로 실행됨으로 상태가 부정확해짐 10430 화면출력 읽기 쓰기 Roboplus 프로그램 출력보기와 같은 기능 10440 화면출력후 줄바꿈 읽기 쓰기 Roboplus 프로그램 출력보기와 같은 기능 10450 제스쳐 읽기 쓰기 200 읽기 인식된 제스쳐 번호 쓰기 값 초기화 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#r-iot-control-table"
	},
	"4336": {
		"product": "R+ IoT",
		"header1": "R+ IoT 다운로드/설치",
		"header2": "",
		"header3": "",
		"content": "ockquote 스마트 기기에서 Play 스토어를 실행합니다 Play 스토어는 안드로이드 마켓 앱입니다 Play스토어에서 로보티즈 검색한 후 IoT 와 Task2 를 설치합니다 구글 플레이에서 로보티즈 또는 IoT로 검색해서 설치합니다 Task2도 함께 설치해 주세요 IoT 설치 후 실행하면 SD card RoboPlus IoT 에 폴더가 아래와 같이 생성됩니다 Custom 에는 사용자 프로젝트 system에는 예제 프로젝트가 기록됩니다 System에서 각 프로젝트는 다음과 같은 구조를 가집니다 Audio 프로젝트에서 사용되는 사운드 파일이 저장됩니다 Capture 프로젝트에서 캡쳐된 사진 파일이 저장됩니다 Db 프로젝트에서 사용되는 모든 파일 정보 및 제즈쳐 파일이 저장됩니다 Image 프로젝트에서 사용되는 이미지 파일이 저장됩니다 Recorded 프로젝트에 서 녹화된 동영상 파일이 저장 됩니다 Task 프로젝트 관련 태스크 파일이 저장됩니다 PC에서 태스크를 작성 하였다면 스마트 단말기를 PC 와 연결하여 작성한 태스크 파일을 해당 프로젝트의 Task 폴더에 복사하면 Task와 연동하여 사용할 수 있습니다 Video 프로젝트에서 사용되는 동영상 파일이 저장됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#r-iot-다운로드설치"
	},
	"4337": {
		"product": "R+ IoT",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#참고자료"
	},
	"4338": {
		"product": "R+ IoT",
		"header1": "참고자료",
		"header2": "모션파일 다운로드",
		"header3": "",
		"content": "로보티즈 IoT 예제에서는 모션과 모션 오프셋 기능을 사용하지 않습니다 사용자가 모션을 작성하고자 하는 경우 아래의 방법으로 모션 앱을 실행할 수 있습니다 IoT 앱을 실행시키고 작동하고자 하는 예제 그림의 편집 버튼을 터치합니다 새로 나타난 화면에서 ROBOTIS Motion 을 선택합니다 세부 메뉴 창에서 새로운 모션 작성을 선택하면 자동으로 Motion 앱이 실행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#모션파일-다운로드"
	},
	"4339": {
		"product": "R+ IoT",
		"header1": "참고자료",
		"header2": "제어기(OpenCM7.0)와 스마트기기 블루투스 연결",
		"header3": "",
		"content": "블루투스를 제어기에 연결하기 블루투스 BT 410 의 케이블을 제어기 OpenCM7 4핀 포트에 연결합니다 제어기 OpenC7 의 시작버튼을 한 번 누르고 블루투스 BT 410 의 LED가 깜빡이면 제어기와 블루투스가 정상적으로 연결된 것입니다 블루투스를 통해 제어기 OpenCM7 와 스마트기기 연결하기 IoT 앱을 실행한 후 우측 상단에 환경설정을 선택합니다 환경설정 창이 뜨면 연결할 장치 선택 을 선택합니다 연결할 장치를 선택하라는 창이 뜨면 제어기의 전원을 켜고 연결할 블루투스 BT 410 의 윗면에 있는 번호 마지막2자리를 입력 후 검색 버튼을 터치합니다 검색된 불루투스를 선택합니다 또는 실행할 예제 이미지를 터치하여 최근 연결한 블루투스와 바로 연결할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#제어기opencm70와-스마트기기-블루투스-연결"
	},
	"4340": {
		"product": "R+ IoT",
		"header1": "참고자료",
		"header2": "태스크 파일 작성/다운로드",
		"header3": "",
		"content": "IoT 앱을 실행하고 예제 이미지의 편집 버튼을 누른후 ROBOTIS Task 를 선택합니다 새로운 태스크 작성을 선택합니다 새로운 태스크 명을 입력후 확인을 터치하면 태스크 앱이 실행됩니다 태스크를 작성한 후 저장 버튼을 눌러서 저장합니다 블루투스 장치의 선택화면으로 이동합니다 이전에 다운로드한 기기에 다시 다운로드 할 경우에는 바로 다운로드 버튼을 터치 합니다 제어기의 전원을 켜고 연결할 블루투스 BT 410 의 윗면에 있는 번호 마지막2자리를 입력하고 검색 버튼을 터치합니다 검색된 블루투스를 선택하고 확인 버튼을 터치합니다 확장 메뉴를 닫고 다운로드 를 누르면 블루투스를 통해 무선으로 연결된 제어기에 task 파일이 다운로드 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplusiot/#태스크-파일-작성다운로드"
	},
	"4341": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#r-smart-어플-사용방법"
	},
	"4342": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "환경설정",
		"header3": "",
		"content": "우측 상단의 설정 버튼을 누르면 환경 설정화면으로 돌아갑니다 설정화면에서는 연결할 장치 접근성 서비스 제스쳐 오차범위 설정을 할 수 있습니다 연결할 장치 블루투스 모듈에 적힌 주소를 검색된 리스트에 서 선택하면 제어기 연결시 선택한 장치로 연결을 시도합니다 예제 초기화 각각의 예제를 초기화 합니다 실수로 예제에 사용된 이미지 또는 태스크 등을 삭제 하였을 때 원래 상태로 되돌릴 수 있습니다 예제를 선택한 후 초기화 할 때에 사용자가 수정한 태스크나 이미지 등은 모두 삭제 됩니다 접근성 설정 이벤트 기능을 위해서는 기능을 활성화 해야 합니다 제스쳐 오차 범위 설정 제스쳐 기능의 정확도를 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#환경설정"
	},
	"4343": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "R+m.Task 연동",
		"header3": "",
		"content": "프로젝트를 길게 누르고 있으면 기능 확인 및 수정 가능한 화면이 표시 됩니다 표시된 화면에서 mTask를 클릭합니다 태스크를 선택하면 Task가 실행됩니다 메뉴 버튼을 클릭하여 제어기로 태스크를 다운로드 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#rmtask-연동"
	},
	"4344": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "R+m.Motion 연동",
		"header3": "",
		"content": "프로젝트를 길게 누르고 있으면 푯기되는 기능 확인 및 수정 가능한 화면에서 Motion을 클릭합니다 모션을 선택하면 Motion 이 실행됩니다 Motion 과 관련된 내용은 로보플러스 모션 을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#rmmotion-연동"
	},
	"4345": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "모션 오프셋 설정",
		"header3": "",
		"content": "프로젝트를 길게 누르고 있으면 표시되는 기능 확인 및 수정 가능한 화면에서 모션 오프셋을 클릭합니다 연결이 되지 않는 다면 재시도 를 클릭하거나 장치 선택 을 클릭해서 올바른 블루투스를 선택합니다 모션을 사용하는 예제 스마트 4족로봇 스마트 강아지 변신 로봇 스마트 드로이드 의 경우 화살표를 클릭하면 각 관절의 위치를 다른 방향에서 확인 할 수 있습니다 오프셋 설정 방법에 따라 로봇의 각 관절을 저장한 후 모션 오프셋 설정버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#모션-오프셋-설정"
	},
	"4346": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "프로젝트 실행",
		"header3": "",
		"content": "로봇의 시작버튼을 누르고 블루투스를 연결한 후 해당 프로젝트를 짧게 클릭합니다 연결이 되지 않는 다면 재시도 를 클릭하거나 장치 선택 을 클릭해서 올바른 블루투스를 선택합니다 연결이 되면 태스크로 작성한 화면이 표시됩니다 만약 PIN 넘버를 입력하는 화면이 나오면 0000 을 입력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#프로젝트-실행"
	},
	"4347": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "프로젝트 복사",
		"header3": "",
		"content": "프로젝트를 길게 누르고 있으면 표시되는 기능 확인 및 수정 가능한 화면에서 프로젝트 복사를 클릭합니다 복사할 프로젝트 이름을 입력한 후 ok 버튼을 클릭합니다 복사가 완료되면 프로젝트 이름이 변경됩니다 복사한 프로젝트는 사용자 프로젝트로 추가됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#프로젝트-복사"
	},
	"4348": {
		"product": "R+ SMART",
		"header1": "R+ SMART 어플 사용방법",
		"header2": "프로젝트 이름 변경",
		"header3": "",
		"content": "프로젝트를 길게 누르고 있으면 표시되는 기능 확인 및 수정 가능한 화면에서 프로젝트 이름을 클릭합니다 사용자 프로젝트만 이름을 변경할 수 있습니다 새로운 프로젝트 이름을 입력한 후 ok 버튼을 클릭합니다 입력한 이름으로 프로젝트가 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#프로젝트-이름-변경"
	},
	"4349": {
		"product": "R+ SMART",
		"header1": "R+ Smart 어플 기능확인/수정",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#r-smart-어플-기능확인수정"
	},
	"4350": {
		"product": "R+ SMART",
		"header1": "R+ Smart 어플 기능확인/수정",
		"header2": "기능확인",
		"header3": "",
		"content": "예제 기울기 기울기를 클릭합니다 표시되는 기울기 값을 확인합니다 확인한 값에 따라서 태스크를 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#기능확인"
	},
	"4351": {
		"product": "R+ SMART",
		"header1": "R+ Smart 어플 기능확인/수정",
		"header2": "기능수정",
		"header3": "",
		"content": "예제 그림 화면 아래의 체크박스를 클릭하면 수정 가능한 기능들만 표시 됩니다 그림 을 클릭합니다 우측 상단의 상단 버튼을 클릭 갤러리에서 선택 을 클릭합니다 이미지를 선택합니다 주황색 사각형을 터치하여 크롭할 영역을 선택 후 save 버튼을 클립합니다 이미지 추가됩니다 왼쪽의 숫자 아이쳄 번호 를 이용하여 태스크에서 그림을 표시할 수 있습니다 왼쪽의 숫자를 클릭하면 번호 수정 재등록 삭제 등을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#기능수정"
	},
	"4352": {
		"product": "R+ SMART",
		"header1": "R+ SMART Control Table",
		"header2": "",
		"header3": "",
		"content": "주소 이름 속성 기본값 최소값 최대값 길이 값 설명 10000 디버그 정보 표시 읽기 쓰기 센서 터치 감지영역 등의 정보를 화면에 출력 끄기 비전관련 위치 색상 표시 센서 흔들림 값 표시 기울기 상하좌우 값 표시 조도 값 표시 16 자기장 값 표시 32 방향 값 표시 64 소음 값 표시 128 터치 영역 값 표시 256 음성입력 결과 값 표시 512 SMS 관련 전화번호 내용 표시 1024 상태바 값 표시 10010 화면 회전 읽기 쓰기 읽기 자동 세로 가로 쓰기 자동 세로 가로 10020 카메라 선택 읽기 쓰기 종료 후면카메라 전면카메라 10030 카메라 줌 읽기 쓰기 255 255 확대 정도 10040 카메라 기능 선택 읽기 쓰기 빈화면 얼굴감지 색감지 움직임감지 라인감지 10050 감지 색상 라인감지용 읽기 쓰기 흑 적 녹 청 10060 동영상 녹화 읽기 쓰기 녹화 정지 녹화 시작 녹화 중에는 화면 회전 설정 카메라 선택 소음기능 안됨 10070 사진 촬영 읽기 쓰기 촬영 정지 촬영 시작 10080 얼굴 감지 위치 읽기 25 25 사이의 화면 영역 10090 감지 색상 색상감지용 읽기 감지 안됨 혹은 모르는 색상 흑 적 녹 청 10100 움직임 감지 위치 읽기 25 25 사이의 화면 영역 10110 라인 감지 위치 읽기 사이의 화면 영역 10130 배경 표시 읽기 쓰기 199 읽기 마지막으로 설정된 이미지 번호 쓰기 배경 이미지로 사용할 이미지 번호 배경지움 카메라 사용 시 투명 그 외 검정 10140 그림 표시 읽기 쓰기 값 배율 65536 이미지번호 256 이미지위치 이미지위치 25 사이의 화면 영역 이미지번호 앱에 등록된 이미지 번호 읽기 마지막으로 설정된 이미지 번호와 위치 및 배율 쓰기 전경 이미지로 사용할 이미지 번호와 위치 및 배율 이미지번호 해당 위치의 이미지 삭제 배율 10 x배 확대 11 20 x배 축소 10145 그림 자동 표시 얼굴 감지시 읽기 쓰기 199 읽기 현재의 전경이미지 아이템 번호 쓰기 전경 이미지의 아이템 번호를 사용하여 자동 표시 10150 도형 표시 읽기 쓰기 값 도형색상 16777216 도형크기 65536 도형번호 256 도형위치 도형색상 알 수 없음 흰색 검은색 빨간색 녹색 청색 노랑색 옅은회색 회색 어두운 회색 도형크기 255 사이의 크기 값 도형위치 25 사이의 화면 영역 도형번호 도형 삭제 원 사각 삼각 읽기 마지막으로 설정된 도형의 정보 쓰기 화면에 표시할 도형의 정보 도형위치 도형번호 모든 도형 삭제 10160 문자 표시 읽기 쓰기 값 도형번호만 문자번호로 바뀌고 도형과 동일 문자번호 앱에 등록된 문자의 번호 문자번호 200 SMS 또는 메시지 수신시 내용 저장 10170 숫자 표시 읽기 쓰기 값 도형번호만 숫자로 바뀌고 도형과 동일 숫자 255 해당 숫자 표시 읽기 마지막으로 설정된 숫자의 정보 쓰기 화면에 표시할 숫자의 정보 숫자크기 해당 위치의 숫자 삭제 숫자위치 숫자크기 모든 숫자 삭제 10180 음성 출력 TTS 읽기 쓰기 200 읽기 동작안함 200 TTS 변환중인 문자 번호 쓰기 변환 중지 200 TTS 변환할 문자 번호 10190 악기 연주 읽기 쓰기 값 악기종류 65536 옥타브 256 음계 악기종류 앱의 악기 종류 참조 128 옥타브 10 사이의 옥타브 값 음계 12 사이의 음계 값 도 부터 반음씩 증가 10200 오디오 재생 읽기 쓰기 199 읽기 재생중인 오디오 번호 쓰기 재생 중지 199 재생할 오디오 번호 10380 오디오 재생 읽기 쓰기 199 읽기 재생중인 오디오 번호 쓰기 재생 중지 199 재생할 오디오 번호 10210 동영상 재생 읽기 쓰기 199 읽기 재생중인 동영상 번호 쓰기 재생 중지 199 재생할 동영상 번호 10410 동영상 정지 읽기 쓰기 읽기 재생중 정지중 쓰기 재생 정지 10220 동영상 정지 읽기 쓰기 읽기 동작 안함 동작 중 쓰기 동작 중지 동작 시작 10230 음성 인식 결과 읽기 쓰기 199 읽기 음성인식 결과 인식된 문자의 번호 쓰기 값 초기화 10240 볼륨 읽기 쓰기 255 볼륨 크기 10250 흔들기 읽기 255 스마트폰이 흔들리는 강도 10260 기울기 왼쪽 읽기 90 90 10261 기울기 오른쪽 읽기 90 90 10262 기울기 위쪽 읽기 90 90 10263 기울기 아래쪽 읽기 90 90 10270 조도 읽기 65535 조도 센서 값 10280 자기장 읽기 65535 자기장 센서 값 10290 방향 각도값 읽기 359 북쪽 90 동쪽 180 남쪽 270 서쪽 359 도 까지의 각도 10300 소음 db 읽기 255 소음의 정도를 db 로 읽어옴 10310 터치 위치 읽기 25 25 사이의 화면 영역 10400 터치 위치 읽기 25 25 사이의 화면 영역 10320 SMS 전화번호 읽기 쓰기 200 읽기 SMS 수신 안됨 199 SMS를 보내온 전화번호의 등록 번호 200 SMS를 보내온 전화번호가 미등록 번호 쓰기 값 초기화 10321 SMS 내용 읽기 쓰기 200 읽기 SMS 수신 안됨 199 SMS 수신된 텍스트의 등록 번호 200 SMS 는 수신했지만 미등록 텍스트 쓰기 값 초기화 10330 알림바 이벤트 읽기 쓰기 200 읽기 카톡 등 알림바 수신 안됨 199 알림바 수신된 텍스트의 등록 번호 200 알림은 수신했지만 미등록 텍스트 쓰기 값 초기화 10340 타이머 읽기 쓰기 65535 읽기 남은 시간을 반환 쓰기 초 단위 타이머 값 최대 18시간 10350 진동 시간 읽기 쓰기 255 읽기 진동 동작 안함 진동 동작 중 쓰기 진동 시킬 시간 100초 단위 10360 플래시 읽기 쓰기 플래시 꺼짐 플래시 켜짐 10370 앱 실행 읽기 쓰기 199 읽기 마지막으로 실행한 앱 번호 쓰기 실행 시킬 앱 번호 10390 현재 시간 읽기 값 분단위 10420 메일발송 읽기 쓰기 읽기 미발송 발송중 정상 발송 에러발생 쓰기 미동작 캡쳐된 최근 이미지 녹화된 최근 동영상 첨부 같은 파일 연속으로 발생 불가 촬영하면서 발송하는 경우 발송후 상태를 확인하지 않으면 스레드로 실행됨으로 상태가 부정확해짐 10430 화면출력 읽기 쓰기 Roboplus 프로그램 출력보기와 같은 기능 10440 화면출력후 줄바꿈 읽기 쓰기 Roboplus 프로그램 출력보기와 같은 기능 10450 제스쳐 읽기 쓰기 200 읽기 인식된 제스쳐 번호 쓰기 값 초기화 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#r-smart-control-table"
	},
	"4353": {
		"product": "R+ SMART",
		"header1": "R+ SMART 다운로드/설치",
		"header2": "",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS Android 3이상 하드웨어 dual core CPU 1GB RAM 이상 블루투스 및 센서 내장 기기 통신 BT 410 지원 Android 4이상 BT 210 BT 110 지원 다운로드 Android 앱 다운로드 스마트 기기에서 Play 스토어를 실행합니다 Play 스토어는 안드로이드 마켓 앱입니다 Play스토어에서 SMART 와 Task 를 검색한 후 설치합니다 제품별 버전 상이 구글 플레이에서 로보티즈 또는 Smart로 검색해서 설치합니다 Task도 함께 설치해 주세요 설치 후 실행하면 SD card Smart에 폴더가 아래와 같이 생성됩니다 Custom 에는 사용자 프로젝트 system에는 예제 프로젝트가 기록됩니다 System에서 각 프로젝트는 다음과 같은 구조를 가집니다 Audio 프로젝트에서 사용되는 사운드 파일이 저장됩니다 Capture 프로젝트t에서 캡쳐된 사진 파일이 저장됩니다 Db 프로젝트에서 사용되는 모든 파일 정보 및 제즈쳐 파일이 저장됩니다 Image 프로젝트에서 사용되는 이미지 파일이 저장됩니다 Recorded 프로젝트에 서 녹화된 동영상 파일이 저장 됩니다 Task 프로젝트 관련 태스크 파일이 저장됩니다 PC에서 태스크를 작성 하였다면 스마트 단말기를 PC 와 연결하여 작성한 태스크 파일을 해당 프로젝트의 Task 폴더에 복사하면 Task와 연동하여 사용할 수 있습니다 Video 프로젝트에서 사용되는 동영상 파일이 저장됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#r-smart-다운로드설치"
	},
	"4354": {
		"product": "R+ SMART",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#참고자료"
	},
	"4355": {
		"product": "R+ SMART",
		"header1": "참고자료",
		"header2": "모션파일 다운로드",
		"header3": "",
		"content": "SMART 앱을 실행시키고 작동하고자 하는 예제 그림을 길게 터치합니다 스마트3 앱에서는 예제 그림 하단의 편집 버튼을 선택합니다 새로 나타난 화면에서 ROBOTIS Motion 을 선택합니다 세부 메뉴 창에서 받고자 하는 모션 파일을 선택하면 자동으로 Motion 앱이 실행됩니다 제어기의 전원을 켜고 화면 왼쪽 아래에 있는 연결 버튼을 터치하면 연결할 수 있는 장치의 목록이 나타납니다 목록에서 나의 로봇에 연결된 블루투스 BT 210 을 선택하고 연결하기 를 터치합니다 이 때 스마트기기와 블루투스가 연결되어 있지 않으면 장치 선택 창 이 열리므로 블루투스를 선택하여 연결해 주면 됩니다 창이 사라지면 모션 다운로드 탭을 선택하고 모션그룹 다운로드 버튼을 터치합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#모션파일-다운로드"
	},
	"4356": {
		"product": "R+ SMART",
		"header1": "참고자료",
		"header2": "제어기(CM-200)와 스마트기기 블루투스 연결",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#제어기cm-200와-스마트기기-블루투스-연결"
	},
	"4357": {
		"product": "R+ SMART",
		"header1": "참고자료",
		"header2": "제어기(CM-200)와 스마트기기 블루투스 연결",
		"header3": "블루투스를 제어기에 연결하기",
		"content": "블루투스 BT 210 의 케이블을 제어기 CM 200 HOST LINK 에 연결합니다 제어기 CM 200 의 시작버튼을 한 번 누르고 블루투스 BT 210 의 LED가 깜빡이면 제어기와 블루투스가 정상적으로 연결된 것입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#제어기cm-200와-스마트기기-블루투스-연결"
	},
	"4358": {
		"product": "R+ SMART",
		"header1": "참고자료",
		"header2": "제어기(CM-200)와 스마트기기 블루투스 연결",
		"header3": "블루투스를 통해 제어기(CM-200)와 스마트기기 연결하기",
		"content": "SMART 앱을 실행한 후 우측 상단에 환경설정을 선택합니다 환경설정 창이 뜨면 연결할 장치 선택 을 선택합니다 연결할 장치를 선택하라는 창이 뜨면 하단의 목록 중에서 제어기에 연결된 블루투스 BT 210 의 윗면에 있는 번호와 동일한 번호를 선택합니다 만약 동일한 번호가 없으면 검색을 통해 등록합니다 이때 PIN정보가 필요합니다 PIN은 0000 으로 기본 설정되어 있습니다 참고 PIN 정보는 로보티즈 고객지원센터를 통해서만 변경이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#제어기cm-200와-스마트기기-블루투스-연결"
	},
	"4359": {
		"product": "R+ SMART",
		"header1": "참고자료",
		"header2": "태스크파일 다운로드",
		"header3": "",
		"content": "SMART 앱을 실행하고 작동하고자 하는 로봇예제 이미지를 길게 누른후 아이템 Task 를 선택합니다 스마트3 앱에서는 예제 그림 하단의 편집 버튼을 선택합니다 Task를 선택하면 해당 로봇예제의 task 파일들이 확인됩니다 이 중에서 다운받고자 하는 task 파일을 선택합니다 정상적으로 실행되면 task 파일이 열립니다 스마트기기의 메뉴를 누르고 다운로드 를 누르면 블루투스를 통해 무선으로 연결된 제어기에 task 파일이 다운로드 됩니다 이 때 스마트기기와 블루투스가 연결되어 있지 않으면 장치 선택 창 이 열리므로 블루투스를 선택하여 연결해 주면 됩니다 다운로드가 완료되면 제어기 CM 200 는 자동으로 꺼지고 스마트기기에는 다운로드가 완료되었다는 메시지가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/mobile_app/rplussmart/#태스크파일-다운로드"
	},
	"4360": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#api-references"
	},
	"4361": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "EEPROM Class",
		"header3": "",
		"content": "STM32 micro processor OpenCM9 04 read write user data directly flash memory Flash memory reads writes unit page so EEPROM Class used permanently save user data unit bytes Flash memory also preserves data power turned off From total 128Kbyte flash memory OpenCM9 04 EEPROM Class use 2Kbyte 0x0801F800 0x08001FFFF 2Kbyte corresponds Pages class EEPROM EEPROM Class predefined need create instance variable order use void EEPROM begin Performs initialization access flash memory order use EEPROM performed setup uint16 EEPROM write int vAddress int data method used write 2kbyte EEPROM field assigned flash memory STM32 EEPROM data composed address data pair address uses unsigned integer value bytes arbitrarily saves them order vAddress virtual address value composed unsigned integer value bytes Access made vAddress reading data data 2byte data saved virtual address vAddress int EEPROM read int vAddress Reads returns data saved virtual address vAddress void EEPROM erase int page Erases EEPROM unit page 1Kbyte void EEPROM eraseAll Erases pages EEPROM ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#eeprom-class"
	},
	"4362": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "EEPROM Class",
		"header3": "Example",
		"content": "An instance variable EEPROM Class defined order use EEPROM memory provided form library so necessary write include EEPROM include EEPROM EEPROM myEEPROM include EEPROM EEPROM myEEPROM void setup myEEPROM begin int 10 myEEPROM write write virtual address void loop int 10 SerialUSB print EEPROM Example SerialUSB println myEEPROM read read data virtual address ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#eeprom-class"
	},
	"4363": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "BKP Class",
		"header3": "",
		"content": "STM32 micro processor OpenCM9 04 contains ten Backup Register BKP memories 16bit save user data Backup Register memory preserves data long power maintained so processor restarted hard soft reset data preserved completely removing power make data disappear BKP memory very useful using data previous operational conditions system reset class BKP BKP Backup Register Class predefined need create instance variable order use void BKP begin Set up BKP object controlling backup register method called attempting use BKP object typically call setup function uint16 BKP write uint8 reg uint16 wData method used save 2byte 16bit data Backup Register reg Backup Register address value between 10 used wData signifies 2byte 16bit data saved Backup Register void BKP write uint8 reg uint8 bData method used save 1byte data Backup Register reg Backup Register address value between 10 used bData signifies 1byte 8bit data saved Backup Register void BKP write uint8 reg int wData method used save Integer 4byte data Backup Register does save whole 4bytes rather order 2bytes so cautious data loss reg Backup Register address value between 10 used wData signifies Integer data saved Backup Register void BKP enable use enable order write data Backup Register reading data done regardless use enable void BKP disable use disable done writing Backup Register Again reading data done regardless use disable ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#bkp-class"
	},
	"4364": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "BKP Class",
		"header3": "Example",
		"content": "An instance variable BKP Class defined order use BKP memory provided form library so necessary write include BKP include BKP BKP BKP MEMORY use enable method activate Backup Register order write access BKP memory After finish write access use disable method deactivate Backup Register use read method read data regardless use enable disable void setup Initialize clock registers BKP BKP MEMORY begin want write data BKP registers need execute enable method BKP MEMORY enable 11 BKP MEMORY write 10 CM 900 CM 904 10 BKP registers 16 bit After writing data disabled writing data BKP Register BKP MEMORY disable void loop 11 check data written setup using SerialUSB SerialUSB print BKP Memory example Just read data BKP pass BKP register number 10 read method SerialUSB println BKP MEMORY read ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#bkp-class"
	},
	"4365": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "RC100 Class",
		"header3": "",
		"content": "Class facilitates use RC100 OpenCM9 04 CM 900 operated two modes shown below Remote control using Zigbee Bluetooth Remote control using Infrared button RC100 already defined shown below making them convenient use define RC100 BTN define RC100 BTN define RC100 BTN define RC100 BTN define RC100 BTN 16 define RC100 BTN 32 define RC100 BTN 64 define RC100 BTN 128 define RC100 BTN 256 define RC100 BTN 512 class RC100 RC100 Class predefined need create instance variable order use void RC100 begin int num Initializes Serial2 order use RC100 num Decides operation mode RC100 When set operate Zigbee Bluetooth wireless module set operate Infrared wireless module void RC100 end void Finishes use devices RC100 Class disables Serial2 device int RC100 available received data RC100 then returns number bytes received data int RC100 readData Returns analyzed data received data packet int RC100 writeData int data Sends packet data RC100 RC100 cannot receive data so used exchanging data RC100 packets PC smart device void RC100 writeRaw byte temp Sends raw data packet data byte RC100 readRaw void Receives raw data without packet analysis ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#rc100-class"
	},
	"4366": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "RC100 Class",
		"header3": "Example",
		"content": "An instance variable RC100 Class defined order use RC100 Class provided form library so necessary write include RC100 include RC100 RC100 Controller As Serial device use available method detect whether received data then use readData method receive real data processed received packet data include RC100 RC100 Controller define WIRELESS MODE define IR MODE void setup pinMode BOARD LED PIN OUTPUT Controller begin IR MODE RC100 init IR mode int RcvData void loop Controller available RcvData Controller readData 패킷 데이터를 분석한 실제 데이터를 받아온다 SerialUSB print RcvData SerialUSB println RcvData RcvData amp RC100 BTN digitalWrite BOARD LED PIN RC100의 버튼1을 누르면 Status LED ON delay 100 digitalWrite BOARD LED PIN ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#rc100-class"
	},
	"4367": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Interrupt",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#interrupt"
	},
	"4368": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Interrupt",
		"header3": "attachInterrupt()",
		"content": "Used specify function call external interrupt occurs void attachInterrupt uint8 pin voidFuncPtr handler ExtIntTriggerMode mode Registers interrupt handler pin interrupt triggered given transition pin specified mode parameter handler runs interrupt context new handler replace whatever handler currently registered pin Parameters pin OpenCM GPIO pin number handler Function run upon external interrupt trigger handler should take no arguments void return type mode Type transition trigger falling rising ExtIntTriggerMode enum kind transition external pin should trigger interrupt RISING trigger interrupt pin transitions FALLING trigger interrupt pin transitions CHANGE trigger interrupt pin transitions pin changes 참고 should set pin mode desired pin input mode INPUT INPUT PULLUP INPUT PULLDOWN Because function run interrupt context inside delay won work value returned millis increment Serial data received function lost should declare volatile global variables modify within attached function Return Values None Example following example blinks LED time pin changes vice versa volatile int state declare volatile modified within blink handler void setup pinMode BOARD LED PIN OUTPUT pinMode INPUT attachInterrupt blink CHANGE void loop digitalWrite BOARD LED PIN state void blink state state else state state example function blink interrupt handler Whenever state pin changes blink gets called reacts change changing state variable then exits letting board get back calling loop loop sets LED pin whatever state changing voltage pin toggle LED Serial SerialUSB attachInterrupt method attach user interrupt using attachIntterupt method Serial1 SerialUSB void HardwareSerial attachInterrupt voidFunctionPtrUart handler Attach user interrupt Serial devices ROBOTIS implemented typedef void voidFuncPtrUart byte void HardwareSerial detachInterrupt void Disable user interrupt Serial devices ROBOTIS implemented void USBSerial attachInterrupt voidFuncPtrUsb handler Attach user interrupt USB peripheral typedef void voidFuncPtrUsb byte byte void USBSerial detachInterrupt void Disable user interrupt USB peripheral See Serial SerialUSB ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#interrupt"
	},
	"4369": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Interrupt",
		"header3": "detachInterrupt()",
		"content": "Used disable interrupt specified attachInterrupt void detachInterrupt uint8 pin Parameters pin Number pin configure Return Values None ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#interrupt"
	},
	"4370": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Interrupt",
		"header3": "interrupts()",
		"content": "Re enables interrupts they ve disabled noInterrupts Interrupts allow certain important tasks happen background certain interrupts enabled default Some functions work interrupts disabled incoming outgoing communication ignored Interrupts slightly disrupt timing code however disabled particularly critical sections code void interrupts Parameters None Return Values None Example void setup void loop noInterrupts critical time sensitive code interrupts other code ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#interrupt"
	},
	"4371": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Interrupt",
		"header3": "nolnterrupts()",
		"content": "Disables interrupts Interrupts allow certain important tasks happen background enabled default Some functions work interrupts disabled incoming communication ignored Interrupts slightly disrupt timing code however disabled particularly critical sections code void noInterrupts Parameters None Return Values None Example void setup void loop noInterrupts critical time sensitive code interrupts other code License Attribution Portions page were adapted Maple Reference Documentation released under aCreative Commons Attribution ShareAlike License ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#interrupt"
	},
	"4372": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4373": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "pinMode()",
		"content": "Configure behavior GPIO pin void pinMode uint8 pin WiringPinMode mode Parameters pin Number pin configure mode Mode corresponding desired pin behavior WiringPinMode enum OUTPUT Basic digital output pin voltage held 3v pulled down ground OUTPUT OPEN DRAIN open drain mode pin indicates accepting current flow ground providing increased impedance An example use would connect pin bus line pulled up positive voltage separate supply large resistor When pin much current flows ground line stays positive voltage pin bus drains ground small amount current constantly flowing large resistor external supply mode no current ever actually sourced pin INPUT Basic digital input pin voltage sampled closer 3v pin status closer 0v ground no external circuit pulling pin voltage tend randomly oscillate very sensitive noise breath air across pin cause state flip INPUT ANALOG special mode pin used analog digital reads Enables ADC conversion performed voltage pin INPUT PULLUP state pin mode reported way INPUT pin voltage gently pulled up towards 3v means state unless external device specifically pulling pin down ground case gentle pull up affect state input INPUT PULLDOWN state pin mode reported way INPUT pin voltage gently pulled down towards 0v means state unless external device specifically pulling pin up 3v case gentle pull down affect state input INPUT FLOATING Synonym INPUT PWM special mode pin used PWM output special case digital output PWM OPEN DRAIN Like PWM except instead alternating cycles voltage pin consists alternating cycles floating disconnected Return Values None Example example uses pinMode set up pin connected built LED output Once done digitalWrite used turn pin turn LED off void setup pinMode BOARD LED PIN OUTPUT sets LED pin output void loop digitalWrite BOARD LED PIN sets LED delay 1000 waits second digitalWrite BOARD LED PIN sets LED off delay 1000 waits second Arduino Compatibility OpenCM pinMode supports INPUT OUTPUT modes way Arduino however remember OpenCM 3V device drive 3V OUTPUT pin set instead 5V like Arduino INPUT ANALOG PWM modes were added because OpenCM doesn separate analog digital pins way Arduino does Unlike Arduino call pinMode set up pin these purposes call analogRead should add few lines setup function ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4374": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "digitalWrite()",
		"content": "Write value pin configured OUTPUT pin mode set OUTPUT OUTPUT OPEN DRAIN pin configured OUTPUT pinMode voltage set corresponding value 3V 0V ground void digitalWrite uint8 pin uint8 value Parameters pin Pin write value Either write write see pinMode Return Values None See Also pinMode 링크 digitalRead 링크 BOARD LED PIN 링크 toggleLED 링크 togglePin 링크 Example following example sets built LED pin makes one second long delay sets pin back delays again causing blinking pattern could also use toggleLED void setup pinMode BOARD LED PIN OUTPUT sets digital pin output void loop digitalWrite BOARD LED PIN sets LED delay 1000 waits second digitalWrite BOARD LED PIN sets LED off delay 1000 waits second ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4375": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "digitalRead()",
		"content": "Reads value specified digital pin either pin mode set one INPUT INPUT PULLUP INPUT PULLDOWN pin isn connected anything digitalRead return either change way seems random uint32 digitalRead uint8 pin Parameters pin Pin read see pinMode Return Values Example following example turns LED off button pressed void setup pinMode BOARD LED PIN OUTPUT pinMode BOARD BUTTON PIN INPUT PULLDOWN void loop int val digitalRead BOARD BUTTON PIN reads input pin digitalWrite BOARD LED PIN val write val BOARD LED PIN ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4376": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "analogRead()",
		"content": "Read analog value pin function blocks during ADC conversion 12 bits resolution pin mode set INPUT ANALOG Reads value specified analog pin OpenCM boards contain 16 channel 12 bit analog digital converters means converter map input voltages between volts integer values between 095 number factors interfere getting full accuracy precision Arduino board contains channel channels Mini Nano 16 Mega 10 bit analog digital converter input voltage range 0V 5V means map input voltages between volts larger OpenCM range 0V 3V integer values between 1023 smaller OpenCM range 095 uint16 analogRead uint8 pin Parameters pin Pin read see pinMode pin parameter number analog input pin read pins support analog digital conversion ANALOG IN printed silkscreen above them OpenCM9 04 PCB TOP side Return Values Converted voltage range 095 12 bit ADC conversion Example int analogPin Potentiometer wiper middle terminal connected analog pin outside leads ground 3V change value board cannot perform ADC conversion pin int val variable store value read void setup pinMode analogPin INPUT ANALOG set up pin analog input void loop val analogRead analogPin read input pin SerialUSB println val print value debugging delay 100 serial monitor ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4377": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "analogWrite()",
		"content": "analogWrite used create PWM wave pin use make LED get brighter dimmer control servomotor analogWrite alias pwmWrite set up pin PWM output using pinMode argument PWM also means later call digitalRead digitalWrite pin unless some time between use pinMode reconfigure pin INPUT OUTPUT see pinMode page information void analogWrite uint8 pin uint16 duty cycle Parameters pin PWM output pin duty cycle Duty cycle set Using Arduino analogWrite duty cycle ranges between 255 always off always Using OpenCM analogWrite pwmWrite duty cycle ranges 65 535 default Return Values None Example Sets output LED proportional value read potentiometer int analogPin potentiometer connected analog pin void setup pinMode BOARD LED PIN PWM sets LED pin output pinMode analogPin INPUT ANALOG sets potentiometer pin analog input void loop int val analogRead analogPin read input pin analogWrite BOARD LED PIN val 16 analogRead values go 4095 pwmWrite values 65535 so scale roughly Arduino Compatibility frequency PWM signal frequency complete off cycle Arduino approximately 490 Hz Maple frequency configurable defaulting 1100 Hz KHz because PWM frequency frequency timer controls PWM output particular pin PWM tutorial details application definitely requires Arduino PWM frequency then steps Figure out timer controls PWM output pin board Timer Pin Map friend Let say timer where some number ll then need put HardwareTimer timer variables described HardwareTimer reference setup put timer setPeriod 2041 set timer period approximately 2041 microseconds frequency approximately 490 Hz Be aware change period entire timer affect anything else program depends timer important examples timer interrupts PWM See Also PWM pwmWrite ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4378": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "togglepin()",
		"content": "Switches digital output pin pin mode set OUTPUT void togglePin uint8 pin Parameters pin pin toggle pin set set see pinMode Return Values None See Also toggleLED Example example uses togglePin pin 14 pin 14 connected built LED void setup pinMode 14 OUTPUT sets pin 14 output void loop togglePin 14 toggles pin 14 every 100ms intervals delay 100 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4379": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "GPIO",
		"header3": "toggleLED()",
		"content": "Toggle built LED switch off off LED mode set OUTPUT accomplished portably over OpenCM9 04 CM 900 calling pinMode BOARD LED PIN OUTPUT calling function void toggleLED Parameters None see pinMode Return Values None Example example sets up board LED pin output then toggles LED every 100 milliseconds void setup pinMode BOARD LED PIN OUTPUT void loop toggleLED delay 100 See Also BOARD LED PIN togglePin License Attribution Portions page were adapted Leaflabs Reference Documentation released under Creative Commons Attribution ShareAlike License ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#gpio"
	},
	"4380": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "OLLO Class",
		"header3": "",
		"content": "Class facilitates use pin port OpenCM9 04 Does support CM 900 class OLLO OLLO Class predefined need create instance variable order use void OLLO begin int devNum Initializes OLLO Class devNum Inputs number pin port OpenCM9 04 void OLLO begin int devNum OlloDeviceIndex device index Initializes OLLO Class devNum Inputs number pin port OpenCM9 04 device index Specifies type device connected pin port OlloDeviceIndex data type refer below typedef enum OLLO DEVICE INDEX IR SENSOR TOUCH SENSOR GYRO SENOSR DMS SENSOR PIR SENSOR MAGNETIC SENSOR COLOR SENSOR ULTRASONIC SENSOR LED DISPLAY TEMPERATURE SENSOR OlloDeviceIndex void OLLO begin int devNum OlloDeviceIndex device index voidFuncPtr handler Initializes OLLO Class initialization method useful using touch sensor interrupt method devNum Inputs number pin port OpenCM9 04 device index Specifies type device connected pin port handler Designates interrupt handler connected touch button sensor refer below handler function prototype int OLLO read int devNum Reads returns ADC value device connected corresponding port devNum Inputs number pin port OpenCM9 04 int OLLO read int devNum OlloDeviceIndex device index Reads returns ADC value device connected corresponding port devNum Inputs number pin port OpenCM9 04 device index Specifies type device connected pin port void OLLO write int devNum uint8 leftVal uint8 rightVal method digitally output SIG1 SIG2 pins corresponding port method useful device used LED Display devNum Inputs number pin port OpenCM9 04 leftVal Sets SIG1 pin put either rightVal Sets SIG2 pin put either void OLLO write int devNum uint8 leftVal uint8 centerVal uint8 rightVal method digitally output SIG1 ADC SIG2 pins corresponding port devNum Inputs number pin port OpenCM9 04 leftVal Sets SIG1 pin put either centerVal Sets ADC pin put either rightVal Sets SIG2 pin put either void OLLO writeLED int devNum uint8 leftVal uint8 rightVal method control LED module devNum Inputs number pin port OpenCM9 04 leftVal Used turn left LED off LED turned set LED turned off set rightVal Used turn right LED off LED turned set LED turned off set Example An instance variable OLLO Class defined order use OLLO memory provided form library so necessary write include OLLO include OLLO OLLO myOLLO instructions use basic sensor shown below include OLLO OLLO myOLLO define PORT1 define PORT2 void setup myOLLO begin PORT1 Performs basic initialization Port myOLLO begin PORT2 Performs basic initialization Port void loop SerialUSB print Axis ADC SerialUSB print myOLLO read PORT1 read Axis ADC value OLLO port SerialUSB print Axis ADC SerialUSB println myOLLO read PORT1 read Axis ADC value OLLO port delay 60 Prevents fast output An example using IR Sensor module shown below include OLLO OLLO myOLLO define PORT1 void setup myOLLO begin PORT1 IR SENSOR Initializes Port IR sensor module void loop SerialUSB print IR Sensor ADC SerialUSB println myOLLO read PORT1 IR SENSOR read ADC value OLLO port delay 60 Prevents fast output include OLLO OLLO myOLLO void setup myOLLO begin LED Display Module connected port void loop write port number left LED blue right LED yellow myOLLO write use myOLLO writeLED delay 100 myOLLO write use myOLLO writeLED delay 100 Color Sensor initialized COLOR SENSOR read method returns following result color value detected Color Read output Error White Black Red Green Blue Yellow include OLLO OLLO myOLLO void setup myOLLO begin COLOR SENSOR OLLO Color Module connected port void loop SerialUSB print COLOR Read SerialUSB println myOLLO read COLOR SENSOR delay 100 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/ollo-class"
	},
	"4381": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Serial Class",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#serial-class"
	},
	"4382": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Serial Class",
		"header3": "Serial Class(Seial1, Serial2, Serial3)",
		"content": "Serial objects instances HardwareSerial class documented section means use these functions Serial1 Serial2 Serial3 class HardwareSerial Serial port class Predefined instances Serial1 Serial2 Serial3 void HardwareSerial begin unsigned int baud Set up HardwareSerial object communications method called attempting use theHardwareSerial object typically call setup function void HardwareSerial end Disables USART associated object allowing associated communication pins used other purposes unsigned int HardwareSerial available Returns number bytes available reading unsigned char HardwareSerial read Returns next available unread character no available characters check withavailable call block until one becomes available void HardwareSerial flush Throw away contents serial port receiver RX buffer clears buffered characters so next character read guaranteed new void HardwareSerial print unsigned char Print given byte over USART void HardwareSerial print char Print given character over USART bit clean characters typically interpreted ASCII text void HardwareSerial print const char str Print given null terminated string over USART void HardwareSerial print int Print argument digits over USART decimal format Negative values prefixed character void HardwareSerial print unsigned int Print argument digits over USART decimal format void HardwareSerial print long Print argument digits over USART decimal format Negative values prefixed character void HardwareSerial print unsigned long Print argument digits over USART decimal format void HardwareSerial print long int base Print digits over USART base base between 16 base value corresponds binary octal 10 decimal 16 hexadecimal Negative values prefixed character void HardwareSerial print double Print accurate digits decimal point void HardwareSerial println char Like print followed void HardwareSerial println const char Like print followed void HardwareSerial println unsigned char Like print followed void HardwareSerial println int Like print followed void HardwareSerial println unsigned int Like print followed void HardwareSerial println long Like print followed void HardwareSerial println unsigned long Like print followed void HardwareSerial println long int base Like print followed void HardwareSerial println double Like print followed void HardwareSerial println Prints over USART void HardwareSerial write unsigned char ch Sends one character over USART function currently blocking level function One print println functions likely useful printing multiple characters formatting numbers printing void HardwareSerial write const char str Send given null terminated character string over USART level function One print println functions likely useful printing multiple characters formatting numbers printing void HardwareSerial write void buf unsigned int size Writes first size bytes buf over USART byte transmitted individual character level function One print println functions likely useful printing multiple characters formatting numbers printing int HardwareSerial txPin Return number TX transmit pin int HardwareSerial rxPin Return number RX receive pin void HardwareSerial attachInterrupt voidFunctionPtrUart handler Attach user interrupt Serial devices ROBOTIS implemented void HardwareSerial detachInterrupt void Disable user interrupt Serial devices ROBOTIS implemented Arduino Compatibility Unlike Arduino none OpenCM serial ports connected USB port OpenCM board want communicate using built USB port use SerialUSB instead need additional USB serial adapter communicate between USART computer Getting Started First decide serial port wish use connect pins device re communicating TX RX pins serial port labeled board silkscreen example serial port pins labeled RX3 easily use communication module 4pin communication port variable controlling serial port word Serial plus serial port number example control serial port variable Serial1 serial port Serial2 so order get started using serial port ll first need turn Do calling serial port begin function giving baud rate wish communicate Put call begin setup like following example One common use serial ports print strings other debugging information computer print numbers strings using print println loop void setup 57600 baud rate use baud rate determines fast communication goes Serial2 begin 57600 void loop Communicate using Serial2 Serial2 print First print string Then print number Serial2 print 42 Serial2 print print floating point values too Serial2 print 14 Serial2 println Using println instead print ends line Serial2 println sentence starts new line void setup Initialize Serial2 57600 bps Serial2 begin 57600 char temp void loop Serial2 available data available Serial2 temp Serial2 read read one byte data Serial2 Serial2 print temp print out data Serial2 device void setup Serial2 Serial initialize Serial2 begin 57600 attach serial interrupt also detach interrupt detachInterrupt void method Serial2 attachInterrupt serialInterrupt pinMode BOARD LED PIN OUTPUT toggleLED Pin Out Serial Interrupt type below proto type void interrupt name byte variable void serialInterrupt byte buffer Serial2 print char buffer void loop toggleLED delay 50 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#serial-class"
	},
	"4383": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Serial Class",
		"header3": "SerialUSB class",
		"content": "Used communication between OpenCM board computer addition three serial ports OpenCM STM32 microprocessor includes dedicated USB peripheral peripheral used emulate regular serial port use terminal download program board Library access emulated serial port provided SerialUSB object mostly use SerialUSB drop replacement Serial1 Serial2 Serial3 WARNING SerialUSB functionality includes 50 millisecond timeout writes does try detect USB host really connected just enumerated initialized means number calls one SerialUSB write print functions code monitoring SerialUSB computer program run much slower being monitored totally disconnected run off battery avoid behavior deciphering port status using DTR RTS line status behavior these control lines platform dependent no longer interpret them default SerialUSB object instance USBSerial class documented section means use these functions writing SerialUSB functionName arguments example print message hello world write USBSerial println hello world class USBSerial Emulated serial over USB class SerialUSB predefined singleton instance USBSerial begin Set up USB peripheral emulated serial communication peripheral configured way default calling function should necessary disabled peripheral using SerialUSB end USBSerial end Disables USB peripheral using function terminate USB communications between OpenCM PC particular implies won able download new programs without resetting board using recovery mode unsigned int USBSerial available Returns number bytes available reading unsigned char USBSerial isConnected Returns USB connected host PC otherwise returns unsigned char USBSerial read Returns next available unread character no available characters check available call block until one becomes available USBSerial print unsigned char Print given byte over USB connection USBSerial print char Print given character over USB connection bit clean characters typically interpreted ASCII text USBSerial print const char str Print given null terminated string over USB connection USBSerial print int Print argument digits over USB connection decimal format Negative values prefixed character USBSerial print unsigned int Print argument digits over USB connection decimal format USBSerial print long Print argument digits over USB connection decimal format Negative values prefixed character USBSerial print unsigned long Print argument digits over USB connection decimal format USBSerial print long int base Print digits over USB connection base base between 16 base value corresponds binary octal 10 decimal 16 hexadecimal Negative values prefixed character USBSerial print double Print accurate digits decimal point USBSerial println char Like print followed USBSerial println const char Like print followed USBSerial println unsigned char Like print followed USBSerial println int Like print followed USBSerial println unsigned int Like print followed USBSerial println long Like print followed USBSerial println unsigned long Like print followed USBSerial println long int base Like print followed USBSerial println double Like print followed USBSerial println Prints over USB connection USBSerial write unsigned char ch Sends one character over USB connection function currently blocking although nonblocking writes planned future extension level function One print println functions likely useful printing multiple characters formatting numbers printing USBSerial write const char str Send given null terminated character string over USB connection level function One print println functions likely useful printing multiple characters formatting numbers printing USBSerial write void buf unsigned int size Writes first size bytes buf over USB connection byte transmitted individual character level function One print println functions likely useful printing multiple characters formatting numbers printing void USBSerial attachInterrupt voidFuncPtrUsb handler Attach user interrupt USB peripheral typedef void voidFuncPtrUsb byte byte void USBSerial detachInterrupt void Disable user interrupt USB peripheral ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#serial-class"
	},
	"4384": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Serial Class",
		"header3": "Example",
		"content": "Safe print function should run smoothly block LED should blink roughly speed whether being monitored running battery connected monitored define LED PIN BOARD LED PIN void setup Set up LED blink pinMode LED PIN OUTPUT void loop LED stay off USB disconnected battery power blink quickly USB plugged SerialUSB isConnected digitalWrite LED PIN delay 100 digitalWrite LED PIN delay 100 volatile int nCount void setup Initialize USB Serial SerialUSB begin void loop print Hello World PC though USB Virtual COM port SerialUSB println Hello World SerialUSB print nCount display nCount variable increase nCount SerialUSB println nCount SerialUSB print delay 1000 void setup Initialize USB Serial SerialUSB begin char temp void loop SerialUSB available data available USB temp SerialUSB read read one byte data SerialUSB SerialUSB print temp print out data void setup Initialize USB Serial SerialUSB begin char temp void loop SerialUSB available data available USB temp SerialUSB read read one byte data SerialUSB SerialUSB print temp print out data void setup USB Serial initialize SerialUSB begin attach serialUSB interrupt also detach interrupt detachInterrupt void method SerialUSB attachInterrupt usbInterrupt pinMode BOARD LED PIN OUTPUT toggleLED Pin Out SerialUSB Interrupt type below proto type void interrupt name byte buffer byte nCount USB max packet data maximum 64byte so nCount exceeds 64 bytes int void usbInterrupt byte buffer byte nCount SerialUSB print nCount SerialUSB println nCount unsigned int nCount printf SerialUSB Buffer receive Data SerialUSB print char buffer SerialUSB println void loop toggleLED delay 100 License Attribution Portions page were adapted Maple Reference Documentation released under Creative Commons Attribution ShareAlike License ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#serial-class"
	},
	"4385": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "API",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#api"
	},
	"4386": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "API",
		"header3": "pinMode()",
		"content": "Configure behavior GPIO pin void pinMode uint8 pin WiringPinModemode Parameters pin Number pin configure mode Mode corresponding desired pin behavior Return Values None Example example uses pinMode set up pin connected built LED output Once done digitalWrite used turn pin turn LED off void setup pinMode BOARD LED PIN OUTPUT sets LED pin output void loop digitalWrite BOARD LED PIN sets LED delay 100 waits second digitalWrite BOARD LED PIN sets LED off delay 100 waits second ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#api"
	},
	"4387": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#utilities"
	},
	"4388": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "millis()",
		"content": "Returns number milliseconds board began running current program number overflow go back zero approximately 50 days uint32 millis void Parameters None See micros 링크 Return Values Returns time milliseconds beginning program execution overflow restarts Example following time prints value returned millis roughly once per second unsigned int time void setup void loop SerialUSB print Time time millis prints time program started SerialUSB println time wait second so send massive amounts data delay 1000 return value millis unsigned long overflow errors occur try do math other data types such aschars Also See micros delay delayMicroseconds ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4389": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "micros()",
		"content": "Returns number microseconds board began running current program number overflow go back zero approximately 70 minutes 참고 000 microseconds millisecond 000 000 microseconds second uint32 micros void Parameters None See millis Return Values Returns time microseconds beginning program execution overflow restarts Example unsigned int time void setup void loop SerialUSB print Time time micros prints time program started SerialUSB println time wait second so send massive amounts data delay 1000 Also See millis delay delayMicroseconds ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4390": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "delay()",
		"content": "Pauses program least given number milliseconds 1000 milliseconds second Interrupts cause actual number milliseconds exceed ms function return no ms milliseconds time called void delay unsigned long ms Parameters ms number milliseconds delay See delayMicroseconds Return Values None Example void setup set up built LED pin output pinMode BOARD LED PIN OUTPUT void loop digitalWrite BOARD LED PIN sets LED delay 1000 waits second digitalWrite BOARD LED PIN sets LED off delay 1000 waits second See Also millis micros delayMicroseconds ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4391": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "delayMicroseconds()",
		"content": "Pauses program amount time microseconds specified parameter thousand microseconds millisecond million microseconds second Interrupts cause actual number microseconds exceed us function return no us microseconds time called void delayMicroseconds uint32 us Parameters us number microseconds delay Return Values None Example following example shows read IR sensor module ROBOTIS OLLO library void setup pinMode 17 OUTPUT sets Emitting LED pin output pinMode INPUT ANALOG void loop digitalWrite turn emitting LED delayMicroseconds 15 waits 15us int adc value anologRead read ADC value receiving LED SerialUSB print IR ADC print out ADC value SerialUSB println adc value digitalWrite turn off emitting LED Arduino Compatibility ROBOTIS cannot guarantee behave Arduino implementation down microsecond especially smaller values us longest time delayMicroseconds delay bounded argument type STM32 clock rate 32 12 microseconds minutes longer pauses use delay possible See Also millis micros delay ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4392": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "min()",
		"content": "Macro Calculates minimum two numbers define min Parameters first number number numeric expression second number number numeric expression Return Values smaller two numbers Example sensVal min sensVal 100 assigns sensVal smaller sensVal 100 ensuring never gets above 100 Perhaps counter intuitively max often used constrain lower end variable range min used constrain upper end range WARNING Because way min implemented avoid using other functions inside parentheses lead incorrect results min 100 avoid yields incorrect results use instead min 100 keep other operations outside min Arduino Compatibility OpenCM version min compatible Arduino Maple See Also max constrain ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4393": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "max()",
		"content": "Macro Calculates maximum two numbers define min Parameters first number number numeric expression second number number numeric expression Return Values larger two parameter values Example sensVal max senVal 20 assigns sensVal larger sensVal 20 effectively ensuring least 20 Perhaps counter intuitively max often used constrain lower end variable range min used constrain upper end range WARNING Because way max implemented avoid using other functions inside parentheses lead incorrect results max avoid yields incorrect results use instead max keep other operations outside max Arduino Compatibility OpenCM version max compatible Arduino Maple See Also min constrain ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4394": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "abs()",
		"content": "Macro computes absolute value number define abs Parameters number Return Values greater equal WARNING Because way abs implemented avoid using other functions causing side effects inside parentheses lead incorrect results abs avoid yields incorrect results abs use instead keep other operations outside abs Arduino Compatibility Maple implementation abs compatible Arduino ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4395": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "constrain()",
		"content": "Macro Constrains number within range constrain Parameters number constrain lower end range upper end range Return Values between greater Example limits range sensor values between 10 150 sensVal constrain sensVal 10 150 See Also min max ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4396": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "map()",
		"content": "Re maps number one range another value equal fromStart gets mapped toStart value fromEnd toEnd other values mapped proportionately Does constrain value lie within fromStart fromEnd start value larger corresponding end ranges reversed so map 10 10 would reverse range 10 Negative numbers appear argument long map long value long fromStart long fromEnd long toStart long toEnd Parameters value value map fromStart beginning value current range fromEnd end value current range toStart beginning value mapped range toEnd end value mapped range Return Values mapped value Example Map ADC reading 12 bits 16 bit PWM 65 535 void setup pinMode INPUT ANALOG pinMode PWM void loop int val analogRead val map val 4095 65535 analogWrite val Discussion map does constrain values within range because out range values sometimes intended useful constrain macro used either function limits ranges desired lower bounds either range larger smaller upper bounds so map used reverse range numbers example map 50 50 function also handles negative numbers well so example map 50 50 100 also valid map function uses integer math arguments return values type long so generate fractions math indicate should do so Fractional remainders truncated rounded averaged See Also constrain ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4397": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "pow()",
		"content": "Calculates value number raised power double pow double double Compute exponentiation Parameters base value cannot zero value cannot negative integral value exponent Return Values raised power Example void setup void loop int SerialUSB println pow print out delay 100 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4398": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "sqrt()",
		"content": "Calculates square root number Compute square root number double sqrt double Compute exponentiation Parameters number whose square root find value cannot negative Return Values square root return value never negative Arduino Compatibility Maple versino sqrt compatible Arduino ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4399": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "sin()",
		"content": "Calculates sine angle radians double sin double Compute exponentiation Parameters radian measure angle Return Values sine value between Arduino Compatibility OpenCM version sin compatible Arduino See Also cos tan float double ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4400": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "cos()",
		"content": "Calculates cosine angle radians double cos double Compute exponentiation Parameters radian measure angle Return Values cosine value between Arduino Compatibility OpenCM version cos compatible Arduino See Also cos tan float double ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4401": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "tan()",
		"content": "Calculates tangent angle radians double tan double Compute exponentiation Parameters radian measure angle Return Values tangent no limits return value function Arduino Compatibility OpenCM version tan compatible Arduino See Also cos tan float double ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4402": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "randomSeed()",
		"content": "randomSeed initializes pseudorandom number generator causing start arbitrary point random sequence sequence very long random always void randomSeed unsigned int seed Parameters seed number used initialize seed cannot zero Return Values None Example following sketch initializes random seed based ADC reading pin pin unconnected Sketch should print different values serial monitor time run long randNumber void setup pinMode INPUT ANALOG randomSeed analogRead void loop randNumber random 300 SerialUSB println randNumber delay 50 important sequence values generated random differ subsequent executions sketch use randomSeed initialize random number generator fairly random input such analogRead unconnected pin Conversely occasionally useful use pseudorandom sequences repeat exactly accomplished callingrandomSeed fixed number starting random sequence See Also random ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4403": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "random()",
		"content": "random function generates pseudo random numbers random long max Same call random max random long min long max Generate pseudo random number given lower upper bounds Parameters min Lower bound returned value inclusive max Upper bound returned value exclusive Return Values pseudo random number range min max Example following sketch initializes random seed based ADC reading pin pin unconnected Sketch should print different values serial monitor time run long randNumber void setup pinMode INPUT ANALOG randomSeed analogRead void loop randNumber random 300 SerialUSB println randNumber delay 50 See Also randomSeed ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4404": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "lowByte()",
		"content": "Extracts order rightmost byte variable word lowByte Parameters value type non integral type used results strange Return Values byte value between 255 Example example uses lowByte highByte send byte time Goal position address Dynamixel control table Dynamixel Dxl void setup Dxl begin int goal pos 1023 void loop Dxl writeByte 30 lowByte goal pos Dxl writeByte 31 highByte goal pos delay 1000 waits second ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4405": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "highByte()",
		"content": "Macro Extracts second lowest byte integral data type highByte Parameters value integral type Return Values Second lowest byte Example example uses lowByte highByte send byte time Goal position address Dynamixel control table Dynamixel Dxl void setup Dxl begin int goal pos 1023 void loop Dxl writeByte 30 lowByte goal pos Dxl writeByte 31 highByte goal pos delay 1000 waits second Other example int 0xDEADBEEF SerialUSB println HEX prints BE ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4406": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "bitRead()",
		"content": "Macro Gets value bit number bitRead Parameters number read bit bit read starting least significant rightmost bit Return Values value bit See Also bit bitWrite bitSet bitClear ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4407": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "bitWrite()",
		"content": "Macro Writes bit numeric variable bitWrite Parameters numeric variable whose bit write bit number write starting least significant rightmost bit value write bit Return Values None See Also bit bitWrite bitSet bitClear ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4408": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "bitSet()",
		"content": "Macro Sets writes bit numeric variable bitSet Parameters numeric variable whose bit set bit set starting least significant rightmost bit Return Values None See Also bit bitRead bitWrite bitClear ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4409": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "bitClrear()",
		"content": "Macro Clears writes bit numeric variable bitClear Parameters numeric variable whose bit clear bit clear starting least significant rightmost bit Return Values None See Also bit bitRead bitWrite bitSet ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4410": {
		"product": "OpenCM IDE",
		"header1": "API References",
		"header2": "Utilities",
		"header3": "bit()",
		"content": "Macro Computes value unsigned integer specified bit set bit bit bit then 16 32 bit Parameters bit set Return Values value integer given bit set See Also bitRead bitWrite bitSet bitClear License Attribution Portions page were adapted Maple Reference Documentation released under aCreative Commons Attribution ShareAlike License ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/api_reference/#millis"
	},
	"4411": {
		"product": "OpenCM IDE",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "ROBOTIS OpenCM 은 OpenCM9 04 임베디드 보드를 쉽게 프로그래밍하고 다운로드 할 수 있는 통합개발환경 소프트웨어 입니다 ROBOTIS OpenCM에서 사용된 오픈 소스의 라이선스는 원저작자의 라이선스를 따르고 주 로보티즈에 의해 새로 만들어지거나 변형된 코드의 저작권은 주 로보티즈에 있으며 GNU GPL 혹은 LGPL을 따릅니다 자세한 사항은 OpenCM9 04의 Manual Appendix의 라이선스 부분을 참고하세요 GNU GPL GNL LGPL ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#개요"
	},
	"4412": {
		"product": "OpenCM IDE",
		"header1": "개요",
		"header2": "ROBOTIS OpenCM 소프트웨어 다운로드",
		"header3": "",
		"content": "사용 중인 OS에 따라 아래의 링크를 통해 다운로드 받을 수 있습니다 Windows XP Vista 32bit 64bit Download Mac OS Tested OS 10 12 Download Linux 64bit Tested Ubuntu 12 04 Download Linux 32bit Tested Ubuntu 10 10 Dowload ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#개요"
	},
	"4413": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#시작하기"
	},
	"4414": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "소프트웨어 설치",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#소프트웨어-설치"
	},
	"4415": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "소프트웨어 설치",
		"header3": "윈도우즈 환경 설치",
		"content": "OpenCM9 04와 USB 케이블 준비 USB 케이블은 반드시 안드로이드 폰 패드 Micro 타입 USB케이블을 준비합니다 B타입에는 구성품으로 포함되어 있고 A타입의 경우 악세사리 키트를 통해 구입가능합니다 안드로이드 스마트폰 케이블 호환됩니다 ockquote 마이크로B USB 케이블 안드로이드 스마트폰과 동일 ROBOTIS OpenCM 개발환경 Windows 릴리즈 다운로드 로보티즈 다운로드 사이트 에서 최신 버전을 다운로드 받고 압축 파일을 적당한 디렉토리에 풀면 아래와 같이 ROBOTIS OpenCM exe 실행파일과 USB 드라이버 폴더 drivers 가 나타납니다 ockquote 압축을 풀었을 때 나타나는 디렉토리 구조 참고로 ROBOTIS OpenCM은 별도의 설치 과정이 없이 압축만 풀면 실행할 수 있는 형태의 무설치 프로그램입니다 제거하고 싶으시면 간단히 디렉토리를 말끔히 지워버리면 됩니다 OpenCM9 04를 PC와 연결 USB 드라이버 설치를 위해서 간단히 아래와 같이 PC와 OpenCM9 04를 USB 케이블을 통해 연결합니다 ockquote 그림 OpenCM9 04를 PC와 연결 단 USB 허브에서 다수의 USB 장치와 함께 연결하는 경우는 되도록 피하고 가급적 PC와 직접 연결하는 방법을 추천합니다 간혹 허브에서 전류가 충분하지 않으면 다운로드를 실패하는 경우가 발생합니다 드라이버 설치 Window8 10의 경우 시작설정 업데이트 복구 복구 고급시작옵션 문제해결 고급옵션 시작설정 다시시작 드라이버 서명 하지 않음 선택 후 재부팅 설정 후 관리자 권한으로 설치 하시기 바랍니다 이전 단계에서 OpenCM 보드와 PC를 연결하면 아래와 같이 장치관리자에서 ROBOTIS Virtual COM Port 라는 장치가 나타납니다 그 장치를 선택하고 마우스 오른쪽 버튼 드라이버 소프트웨어 업데이트 를 실행 합니다 다음으로 컴퓨터에서 드라이버 소프트웨어 찾아보기 를 선택한다 찾아보기 를 클릭해서 위에서 압축을 해제한 디렉토리 ROBOTIS drivers 를 지정한다 다음을 클릭하면 설치가 진행된다 성공적으로 USB 드라이버를 설치하였다면 아래와 같이 드라이버 소프트웨어를 업데이트했습니다 라는 창이 나타난다 여기서 중요한 점은 장치관리자에서 방금 설치하였던 ROBOTIS Virtual COM Port가 COM 포트가 몇 번인지 확인해야 한다 다른 USB의 포트에 연결하면 COM포트의 번호가 변경될 수 있으니 다른 포트에 연결했다면 다시 확인하고 다운로드를 해야한다 ROBOTIS OpenCM exe 실행 압축을 푼 디렉토리 ROBOTIS 에 ROBOTIS OpenCM exe 파일을 더블클릭 한다 그러면 아래와 같이 ROBOTIS OpenCM 툴이 실행된다 Blink 예제를 Open 파일 예제 01 Basics Blinlk 순으로 선택한다 보드 선택 도구 보드에서 ROBOTIS OpenCM9 04를 선택합니다 시리얼 포트 선택 반드시 이전 단계에서 확인했던 COM 포트 번호를 선택합니다 다운로드 수행 아래에서 표시된 다운로드 버튼을 클릭합니다 다운로드가 시작되는 동안 보드의 녹색 LED가 계속 켜집니다 다운로드가 끝나면 보드가 리셋되고 Blink 예제가 실행되면서 LED가 깜빡입니다 참고 만약에 다운로드 버튼을 클릭하고도 보드의 녹색 Status LED가 켜지지 않는다면 User button을 누른상태에서 USB를 PC와 연결하십시요 보드 전원이 들어오면서 녹색 LED가 계속 켜지면 다운로드를 다시 시작하십시요 자세한 설명은 긴급 복구 모드 강제 다운로드 편을 참조하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#윈도우즈-환경-설치"
	},
	"4416": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "소프트웨어 설치",
		"header3": "맥킨토시 환경 설치",
		"content": "ROBOTIS OpenCM Mac OS release 다운로드 manual에서 Mac OS X용 설치 이미지 파일 dmg 을 다운로드 받습니다 다운로드가 완료되면 아래 dmg파일을 더블 클릭해서 Mount를 진행합니다 마운트 후 설치창이 뜨면 마우스로 ROBOTIS 아이콘을 Application 쪽으로 드래그 합니다 그러면 다음과 같이 설치가 진행됩니다 ROBOTIS OpenCM 실행 Finder를 이용해서 Application 폴더를 보면 ROBOTIS app 응용프로그램 패키지가 있고 이것을 더블클릭해서 실행합니다 아래와 같은 그림에서 Open 버튼을 선택합니다 아래와 같이 ROBOTIS OpenCM이 실행됩니다 Blink 예제 Open 파일 Examples 01 Basics Blink 순으로 선택합니다 보드 선택 ROBOTIS OpenCM9 04를 선택합니다 시리얼 포트 선택 tty usbmodemXXX로 선택합니다 뒤의 숫자는 PC마다 다릅니다 다운로드 수행 아래 그림에서 다운로드 버튼을 클릭합니다 다운로드가 시작되는 동안 보드의 녹색 LED가 계속 켜집니다 다운로드가 끝나면 보드가 리셋되고 Blink 예제가 실행되면서 LED가 깜빡입니다 참고 만약에 다운로드 버튼을 클릭하고도 보드의 녹색 Status LED가 켜지지 않는다면 User button을 누른상태에서 USB를 PC와 연결하십시요 보드 전원이 들어오면서 녹색 LED가 계속 켜지면 다운로드를 다시 시작하십시요 자세한 설명은 긴급 복구 모드 강제 다운로드 편을 참조하세요 그 외에 사용법은 윈도우즈 버전과 동일합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#맥킨토시-환경-설치"
	},
	"4417": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "소프트웨어 설치",
		"header3": "리눅스 환경 설치",
		"content": "ROBOTIS OpenCM Linux release 다운로드 사용 중인 Linux가 32bit라면 Linux 32 bit 패키지를 다운로드 받고 64bit이면 Linux 64 bit 패키지를 Manual에서 다운로드 받습니다 다운로드 받고 난 뒤 아래의 커맨드로 압축을 해제합니다 아래는 32비트 기준으로 설명합니다 압축을 풀면 아래와 같이 ROBOTIS 폴더가 생성됩니다 JRE Java Runtime Environment 설치 아두이노와 마찬가지로 ROBOTIS OpenCM 툴도 Java로 만들어진 프로그램이므로 JRE Java Runtime Environment 가 필요합니다 윈도우 패키지는 JRE가 패키지에 포함되어 있지만 리눅스 버전은 제외가 되어 있다 설치가 되어 있으면 다음으로 진행합니다 JRE 설치 확인은 아래와 같이 터미널에서 java version으로 확인할 수 있습니다 위와 같은 응답이 나온다면 JAVA JRE Java Runtime Environment 또는 JDK를 설치해야 합니다 여기서는 openjdk jre headless를 설치하는 방법을 소개합니다 sudo apt get install openjdk jre Java JRE가 성공적으로 설치되었으며 이제 ROBOTIS OpenCM을 실행할 수 있습니다 i386 라이브러리 설치하기 Linux 64bit Linux 64비트 OS에서 사용하기 위해서는 ia32 libs를 설치해야 합니다 sudo dpkg add architecture i386 sudo apt get update sudo apt get install ia32 libs 성공적으로 설치가 끝나면 아래와 같이 Processing trigger가 제대로 실행됩니다 ROBOTIS OpenCM 실행 아래와 같이 ROBOTIS OpenCM를 더블 클릭하거나 터미널에서 ROBOTIS OpenCM을 입력후 엔터를 하면 실행합니다 실행 버튼을 클릭합니다 그러면 아래와 같이 실행됩니다 Blink 예제 열기 파일 예제 01 Basics Blink 순으로 선택합니다 보드선택 도구 보드에서 ROBOTIS OpenCM9 04를 선택합니다 시리얼 포트 선택 시리얼 포트는 ttyACMX로 표시되는데 X는 사용자 PC에 따라 다른 숫자로 표시됩니다 리눅스 Mac OS 릴리즈는 커널에 USB CDC드라이버가 포함되어 있으므로 윈도우와 달리 별도의 드라이버를 설치할 필요 없이 바로 사용할 수 있습니다 다운로드 수행 아래 그림에서 가리키는 다운로드 버튼을 클릭합니다 다운로드가 시작되는 동안 보드의 녹색 LED가 계속 켜집니다 다운로드가 끝나면 보드가 리셋되고 Blink 예제가 실행되면서 LED가 깜빡입니다 참고 만약에 다운로드 버튼을 클릭하고도 보드의 녹색 Status LED가 켜지지 않는다면 User button을 누른상태에서 USB를 PC와 연결하십시요 보드 전원이 들어오면서 녹색 LED가 계속 켜지면 다운로드를 다시 시작하십시요 자세한 설명은 긴급 복구 모드 강제 다운로드 편을 참조하세요 그 외에 사용방법은 윈도우즈 버전과 동일합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#리눅스-환경-설치"
	},
	"4418": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "프로그램 실행",
		"header3": "",
		"content": "프로그램을 실행하면 다음과 같은 화면이 나타납니다 항목 설명 Menu 파일 편집 스케치 도구 도움말 선택 할 수 있는 영역 입니다 Toolbar 자주 쓰는 버튼을 단축 아이콘으로 표시한 영역 입니다 컴파일만 수행하고 실패하거나 성공할 경우 상태바 또는 콘솔에 해당 메시지가 출력됩니다 컴파일을 수행한 후 곧바로 다운로드를 수행합니다 보드가 반드시 연결된 상태로 실행해야 합니다 새 파일을 시작합니다 파일 불러오기를 수행합니다 현재 상태를 저장합니다 시리얼 모니터를 실행 합니다 에디터 Editor 소스를 편집하는 영역 입니다 상태바 Status Bar 요청된 기능에 대한 진행 상황을 시각적으로 표시하는 영역 입니다 콘솔 Console 현재 커서가 위치한 곳의 라인번호와 선택된 보드와 COM포트를 보여줍니다 탭메뉴 Tab Menu 탭을 추가하거나 삭제할 때 선택하는 메뉴 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#프로그램-실행"
	},
	"4419": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "프로그램 실행",
		"header3": "예제 살펴보기",
		"content": "ROBOTIS OpenCM 개발환경 IDE 은 OpenCM 하드웨어 보드가 제공하는 기능별로 쉬운 예제를 제공하고 있으며 파일 예제 Examples 메뉴를 보면 다음과 같이 다양한 예제를 볼 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#프로그램-실행"
	},
	"4420": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "프로그램 실행",
		"header3": "코드 편집 기능",
		"content": "Auto Highliht 기능 코드 타이핑을 할 때 등록된 키워드는 아래와 같이 검정색에서 노란색 또는 파란색으로 자동으로 하이라이트 highlight 가 됩니다 등록된 API라면 아래와 같이 색상이 변하므로 사용하려는 API 이름이 제대로 타이핑 되었는지 확인 할 수 있습니다 그리고 이러한 자동 하이라이트 Auto highlight 기능은 아래 경로의 keyword txt 파일을 이용해서 얼마든지 수정하거나 추가할 수 있습니다 자동포맷 기능 사용 도구 자동포맷 기능을 활용하면 뒤죽박죽으로 타이핑한 코드들이 보기 좋게 정렬이 됩니다 아래와 같은 코드가 Ctrl T만 누르면 한번에 보기 좋게 코드가 정렬이 됩니다 주석 처리 및 해제 아래 편집 주석추가 주석삭제를 선택하거나 단축키 Ctrl 를 누르면 주석처리가 되고 다시 한번 더 누르면 주석이 해제 됩니다 위와 같이 블록 처리를 하고 나서 Ctrl 를 누르면 아래와 같이 주석 처리가 됩니다 다시 Ctrl 를 누르면 주석이 해제 됩니다 들여쓰기 추가 및 삭제 편집 들여쓰기 추가 삭제를 누르면 현재 커서에서 들여쓰기 단계를 조절 할 수 있습니다 마찬가지로 Ctrl 를 누르면 오른쪽으로 한 탭씩 이동하고 Ctrl 를 누르면 한탭씩 들어갑니다 Ctrl 를 계속해서 눌러보면 아래와 같이 오른쪽으로 한 탭씩 이동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#프로그램-실행"
	},
	"4421": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "프로그램 실행",
		"header3": "컴파일 및 다운로드 하기",
		"content": "코드를 작성하고 나면 컴파일 메뉴를 이용해 자신이 구현한 코드가 문법에 맞는지 오류가 없는지 체크하면서 프로그래밍을 하는 것이 좋습니다 ockquote 빌드가 성공하게 되면 아래 상태 창에 빌드한 바이너리 사이즈에서 최대 바이너리 사이즈 그리고 사이즈 대비 점유율이 로 나옵니다 만약에 아래 경로의 Core 경로에 있는 코드들을 수정하였다면 반드시 미리 만들어진 Object 파일들을 지워주어야 한다 ockquote ROBOTIS hardware robotis cores robotis 도구 Clean Objects 메뉴를 클릭하고 새로 빌드를 하면된다 이 경우 처음은 약간 오래 걸리지만 두번째 부터는 처음에 빌드한 Object 파일들을 재활용하기 때문에 다시 빨라진다 Object 파일들은 아래의 Core 경로에 각각의 보드 디렉토리에 저장되어서 재활용된다 모든 코드가 에러 없이 컴파일이 잘된다면 다운로드를 해보자 간단히 아래쪽 방향의 화살표를 누르면 컴파일과 다운로드를 한번에 수행하게 된다 다운로드가 성공적으로 끝나면 상태바에 Done downloading이라는 메시지와 함께 다운로드한 코드가 OpenCM9 04에서 바로 실행된다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#프로그램-실행"
	},
	"4422": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "프로그램 실행",
		"header3": "시리얼 모니터 사용하기",
		"content": "ROBOTIS OpenCM에는 윈도우즈의 하이퍼 터미널이나 TeraTerm과 같은 터미널 프로그램을 Add 프로그램으로 기본 제공을 합니다 선택된 COM1번 포트를 통해 통신하고 싶다면 툴바 상단 오른쪽 시리얼 모니터 아이콘을 클릭하면 시리얼 모니터가 실행된다 참고로 Ctrl Shift 단축키를 눌러서 실행시킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#프로그램-실행"
	},
	"4423": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "프로그램 실행",
		"header3": "시리얼 모니터 주의사항",
		"content": "OpenCM9 04가 다운로드 중일때는 따로 USB 통신을 할 수 없습니다 다운로드 중일 때는 시리얼 모니터를 열지 마세요 다른 COM포트라면 관계 없습니다 환경설정 Preference 파일 환경설정 Preference 를 통해 환경설정을 수행합니다 스케치북 위치 사용자 기본 작업 디렉토리입니다 기본적인 스케치 파일의 저장하기 및 불러오기 경로입니다 Editor language 글꼴을 변경합니다 다음 동작중 자세한 출력 보이기 compilation에 체크를 하면 컴파일 과정중에 자세한 출력을 합니다 Download에 체크를 하면 컴파일 후 다운로드 과정을 자세히 출력합니다 컴파일 및 다운로드가 느려질 수 있으니 꼭 필요하지 않다면 선택하지 않는 것을 추천합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#프로그램-실행"
	},
	"4424": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "라이브러리 사용하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#라이브러리-사용하기"
	},
	"4425": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "라이브러리 사용하기",
		"header3": "라이브러리 설치하기",
		"content": "라이브러리 설치 방법은 아두이노와 동일합니다 라이브러리의 경로는 IDE 폴더에서 libraries 입니다 ROBOTIS libraries Mac의 경우 아래의 경로로 접근하세요 Documents ROBOTIS libraries OpenCM의 모든 라이브러리는 다음 RC100 라이브러리 구조와 같은 구조로 등록합니다 참고로 현재 널리 쓰이고 있는 아두이노 라이브러리들도 아래와 같은 구조로 되어 있으니 OpenCM으로 포팅하기 수월합니다 단 Arduino 함수나 헤더파일 이름을 OpenCM에 맞게 수정해야 합니다 위와 같이 libraries폴더 내에 RC100이라는 폴더 이름과 동일한 이름으로 RC100 cpp RC100 파일을 구성합니다 utility 폴더에는 C파일로 짜여진 코드를 넣을 수 있습니다 examples 폴더에는 해당 라이브러리로 구성된 스케치 예제가 들어갑니다 예제도 폴더 단위로 구성되며 폴더 이름과 ino파일 이름이 동일하게 해야 인식합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#라이브러리-사용하기"
	},
	"4426": {
		"product": "OpenCM IDE",
		"header1": "시작하기",
		"header2": "복구 모드",
		"header3": "",
		"content": "아래와 같이 Board responding 이라는 메시지와 함께 다운로드가 되지 않으면 복구모드를 활용해서 강제로 다운로드 가능합니다 이렇게 정상 예제를 다운로드를 한번 하고 나면 복구가 되어서 다시 정상적인 다운로드가 됩니다 OpenCM9 04의 User Button을 누른상태에서 USB 케이블로 PC와 직접 연결합니다 다른 전원 소스는 모두 제거하고 오로지 User Button을 누른 채 USB로만 연결합니다 ockquote OpenCM9 04는 User Button으로 복구 모드 진입을 할 수 있습니다 아래 그림과 같이 복구모드로 진입할 경우 녹색 LED가 계속 켜진상태로 있습니다 정상적으로 다운로드가 끝나면 보드가 리셋되면서 LED는 꺼집니다 계속 다운로드 불능상태가 지속되면 작성하신 코드에서 USB 인터럽트를 방해할 만한 코드들을 제거하셔야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#복구-모드"
	},
	"4427": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#예제"
	},
	"4428": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "센서 사용법",
		"header3": "",
		"content": "로보티즈 센서 모듈들은 모두 5핀 포트와 연결될 수 있습니다 연결 방법은 OpenCM9 04 하드웨어 설명을 참고하시면 됩니다 참고로 A타입의 경우 5핀 커넥터를 따로 납땜해야 하고 B타입 C타입은 미리 5핀 커넥터가 달려 있습니다 주의할 점은 5핀에 할당된 핀들이 양쪽 40핀 IO에도 공유가 되어 있으므로 아래 쓰고 있는 포트에 할당된 IO핀은 헤더에서 쓰지 않아야 합니다 예를 들면 1번 포트에 IR센서를 연결하면 2번 6번 7번핀은 헤더에서 쓸 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#센서-사용법"
	},
	"4429": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "센서 사용법",
		"header3": "IR 센서 모듈",
		"content": "연결도 동작원리는 manual에서 처럼 SIG2 MOT 에 High를 주면 발광 LED가 켜져서 생기는 적외선이 수광 LED에 감지가 되어서 ADC로 나타납니다 적외선 센서 모듈은 최대한 SIG2번에 트랜지스터 회로가 있는 포트1 4번에 연결하세요 2번 3번 포트는 ADC값이 작게 나옵니다 아래는 포트1번에 연결된 그림입니다 커넥터 방향은 회색선이 USB쪽으로 연결하시면 됩니다 ADC값은 약 10 15us 뒤에 읽으면 최대값을 읽을 수 있습니다 그리고 거리에 따라 감지할 수 있는 ADC값의 특성이 아래와 같기 때문에 이 점을 잘 고려해서 활용을 해야 합니다 최대 15cm 이상 떨어진 물체는 감지할 수 없으며 지나치게 가까운 물체는 적외선이 반사되어 수광부로 들어오는 각도가 맞지 않아서 센서 값이 떨어지는 구간이 생깁니다 5cm사이 구간에 해당 동작 확인 ROBOTIS OpenCM의 예제 07 Sensors IR Read 를 오픈합니다 다운로드 후에 시리얼 모니터를 열고 물체 흰색에서 최대입니다 를 갖다 대면 아래와 같이 ADC값을 볼 수 있습니다 동작 코드 IR 센서는 SIG2번에 해당하는 핀과 ADC포트만 제어하면 IR센싱을 할 수 있습니다 올로 라이브러리는 이러한 원리로 미리 코딩이 되어 있습니다 포트1번에 할당된 핀들이 7번을 확인합니다 setup 에서 SIG1 2번에 해당하는 7번 핀을 모두 LOW로 초기화 하고 2번을 아날로그 입력으로 초기화합니다 readIR이라는 함수에서 SIG2 7번핀 에서 HIGH를 주어서 발광LED를 ON하고 15us뒤에 아날로그 값을 읽으면 최적의 ADC값을 읽을 수 있습니다 그리고 다시 SIG2번을 LOW로 주면 한 사이클이 끝납니다 뒤에 30us는 없어도 상관 없습니다 참고로 올로 라이브러리는 이와 같은 원리로 미리 코딩이 되어 있으므로 편리하게 이용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#ir-센서-모듈"
	},
	"4430": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "센서 사용법",
		"header3": "DMS 센서 모듈",
		"content": "연결도 기본적으로 5핀중에 가운데 3핀만으로 전압 인가 후 ADC값을 읽어서 간단히 활용합니다 적외선 센서와 비교해서 색과 반사율이 변해도 거리에 따른 출력값 변화가 거의 없는 것이 장점입니다 OpenCM9 04의 5핀 센서 포트 중에 아무 포트나 연결해도 무방합니다 DMS 센서는 SIG1 2번을 쓰지 않기 때문에 포트를 가리지 않습니다 아래는 포트2번에 연결하였고 예제 코드도 2번 포트를 기준으로 설명합니다 동작 확인 파일 예제 07 Sensors 예제 중에 OLLO DMS Read 예제를 다운로드 후 시리얼 모니터를 통해 확인 가능합니다 동작 코드 DMS 센서 모듈과 같이 5핀 중에 3핀으로 구성된 센서는 그냥 아날로그 입력 핀만 계속 Read하면 됩니다 별다른 초기 코드가 필요 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#dms-센서-모듈"
	},
	"4431": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "센서 사용법",
		"header3": "Gyro 센서",
		"content": "연결도 및 센서 내부 구조 로보티즈 자이로 센서도 마찬가지로 OpenCM9 04의 5핀 포트에 연결해서 각속도 회전 가속도 를 측정할 수 있습니다 Gyro 센서 모듈을 OpenCM9 04의 5핀 포트 1번 2번에 각각 연결한다 아래 연결도처럼 포트1번에 X축 핀을 연결하고 포트2번에 Y축 포트를 연결한다 동작 코드 예제 07 Sensors OLLO Gyro Read 예제를 다운로드 한 뒤 시리얼 모니터를 열면 아래와 같이 Y축 회전 가속도 값을 ADC로 확인 할 수 있습니다 X축핀이 연결된 포트1번과 Y축핀이 연결된 포트2를 초기화하고 루프에서 60ms 주기로 Y축의 회전 가속도를 ADC값으로 읽습니다 DMS 센서 모듈과 동일하게 루프에서 단순히 아날로그 핀값을 읽기만 하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#gyro-센서"
	},
	"4432": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "센서 사용법",
		"header3": "LED 모듈",
		"content": "연결도 및 내부구조 LED 모듈은 센서 모듈이 아닌 단순히 LED 2개를 디스플레이 형식으로 활용하기 위한 모듈입니다 회로도를 보면 MOT 가 각각 HIGH이면 OFF LOW이면 ON이되는 Current Sink방식으로 제어를 하고 있음을 알 수 있습니다 OpenCM9 04의 5핀 포트 1번 4번의 SIG2핀은 LOW가 되지 않기 때문에 LED 모듈 사용에 제약이 있으므로 5핀 포트 2번 3번을 사용하세요 아래 그림은 포트 3번을 통해 LED 모듈을 연결하였습니다 동작 확인 파일 예제 07 Sensors 예제 중에 OLLO LED Blink 를 다운로드 후 실행하면 양쪽 LED가 교대로 깜빡이는 것을 확인할 수 있습니다 LED 모듈은 ADC 핀이 필요 없으므로 SIG1 2번 핀만 활용하면 됩니다 아래와 같이 setup 에서 포트 3번을 초기화하면 LED 모듈을 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#led-모듈"
	},
	"4433": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "센서 사용법",
		"header3": "접촉 센서",
		"content": "연결도 및 연결도 접촉 센서는 단순한 버튼과 비슷합니다 접촉 센서는 윗부분을 눌렀을 때 버튼처럼 동작해서 접촉 유무를 감지합니다 회로도 역시 자주 쓰는 버튼회로에 지나지 않습니다 버튼을 누르면 HIGH가 인가되고 떼면 LOW가 인가되는 구조입니다 연결은 OpenCM9 04의 포트2번에 연결합니다 동작 코드 OLLO 라이브러리의 OLLO TOUCH Read를 다운로드 한 뒤 시리얼 모니터를 오픈하면 결과를 확인 할 수 있습니다 1이면 버튼이 누르지 않은 상태이고 버튼을 누르면 0값이 출력됩니다 터치 센서 역시 5핀 중에 가운데 3개의 핀만 활용합니다 ADC 핀은 디지털 입력으로 선언해서 사용하는 것을 추천합니다 터치 센서 내부적으로 Pull down회로가 없기 때문에 Pull down 옵션으로 INPUT PULLDOWN을 선언해야 합니다 OLLO 라이브러리는 내부적으로 이러한 방식으로 5핀센서의 핀을 초기화합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#접촉-센서"
	},
	"4434": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "디지털 입출력",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#디지털-입출력"
	},
	"4435": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "디지털 입출력",
		"header3": "핀13번에 LED를 연결해봅니다.",
		"content": "아래와 같이 OpenCM9 04에 LED와 저항을 연결합니다 포트는 13번에 연결합니다 디지털 출력을 위해서는 반드시 setup 에서 pinMode 13 OUTPUT 을 통해 13번 핀을 OUTPUT으로 설정합니다 그리고 digitalWrite 함수로 값을 지정합니다 digitalWrite 13 13번핀에 HIGH를 출력합니다 digitalWrite 13 13번핀에 LOW를 출력합니다 핀 13번이 LOW일 때 GND 극 이 되어서 전류가 흐르기 때문에 LED가 켜집니다 반대로 핀 13번이 HIGH일 때는 3V가 되어 전류가 흐를수 없기 때문에 LED가 꺼집니다 이러한 원리로 LED가 깜빡이는 스케치 코드를 작성합니다 void setup pinMode 13 OUTPUT void loop digitalWrite 13 delay 100 초 지연 digitalWrite 13 delay 100 초 지연 1초 마다 깜빡거리는 LED를 확인하실 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#디지털-입출력"
	},
	"4436": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "디지털 입출력",
		"header3": "Status LED를 깜박이게 만들어 봅시다.",
		"content": "OpenCM9 04에는 위의 예제처럼 LED를 연결하지 않고도 보드에 내장된 녹색의 Status LED를 가지고 테스트할 수 있습니다 ockquote Status LED 위치 Status LED는 핀 14번과 연결되어 있고 미리 선언된 BOARD LED PIN을 사용해서 제어할 수 있습니다 BOARD LED PIN을 가지고 스케치 코드를 작성하면 보드가 바뀌어도 코드를 수정할 필요가 없는 장점이 있습니다 파일 예제 Basic Blink 예제를 오픈합니다 다운로드 하면 녹색의 Status LED가 깜박입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#디지털-입출력"
	},
	"4437": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "디지털 입출력",
		"header3": "핀7번에 디지털 입력을 받아봅니다.",
		"content": "아래와 같이 버튼과 풀다운 저항을 연결합니다 포트는 7번을 이용해서 디지털 입력을 받습니다 ockquote 풀다운 회로로 구성된 버튼 연결 OpenCM9 04의 IO핀에 디지털 입력을 위해서는 반드시 setup 에서 pinMode INPUT 을 통해 7번 핀을 INPUT으로 설정이 필요합니다 그리고 아래와 같이 digitalRead 함수로 값을 받습니다 int value digitalRead 7번핀을 읽어서 value변수에 할당함 전체 코드를 통해 확인합니다 버튼이 눌리면 HIGH가 감지되고 스위치가 떨어지면 LOW가 감지됩니다 버튼이 떨어졌을 때 LOW가 감지되는 것은 풀다운 저항과 연결된 GND가 있기 때문입니다 void setup pinMode INPUT SerialUSB begin void loop int value digitalRead value SerialUSB println Detected else SerialUSB println Detected delay 100 위의 회로를 아래와 같이 풀업 회로로 변경하면 반대로 동작합니다 버튼이 눌러지면 LOW가 감지되고 떨어지면 HIGH가 감지됩니다 버튼이 떨어졌을 때 HIGH가 감지되는 것은 풀업 저항과 연결된 3V전압이 때문입니다 ockquote 풀업 회로로 구성된 버튼 연결 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#디지털-입출력"
	},
	"4438": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "디지털 입출력",
		"header3": "풀업, 풀다운 저항 없이 디지털 입력을 받아 봅시다.",
		"content": "OpenCM9 04는 디지털 입력에서 풀다운이나 풀업 저항이 없이 스위치 회로 구성이 가능합니다 OpenCM9 04의 26개 GPIO핀들은 내부적으로 입력 Pull up Pull down 저항을 가지고 있고 소프트웨어적으로 설정할 수 있습니다 만약 내부 풀업이 필요하면 pinMode INPUT PULLUP 으로 설정하시고 풀다운 회로가 필요하면 pinMode INPUT PULLDOWN 으로 합니다 INPUT으로 선언하면 플로팅 된 디지털 입력을 의미하기 때문에 외부에 풀업이나 풀다운 회로가 있어야 합니다 예를 들어 봅시다 아래 회로는 핀 7을 통해 디지털 입력을 받는 회로인데 버튼이 바로 GND와 연결됩니다 이런 경우 7번핀을 INPUT PULLUP으로 선언하면 정상적으로 버튼이 동작하게 됩니다 이 경우 버튼이 눌리면 LOW가 감지되고 떨어지면 내부 풀업에 의해 HIGH가 감지됩니다 void setup pinMode INPUT PULLUP SerialUSB begin void loop int value digitalRead value SerialUSB println Detected else SerialUSB println Detected delay 100 반대의 경우 아래 연결도처럼 버튼을 3V에 바로 연결합니다 이 경우 버튼이 눌러지면 HIGH가 감지되고 떨어지면 내부 풀다운에 의해 LOW가 감지됩니다 void setup pinMode INPUT PULLDOWN SerialUSB begin void loop int value digitalRead value SerialUSB println Detected else SerialUSB println Detected delay 100 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#디지털-입출력"
	},
	"4439": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "디지털 입출력",
		"header3": "User Button을 이용해서 입력 받아 봅시다.",
		"content": "버튼도 Status LED처럼 내장된 User Button을 가지고 따로 버튼 회로를 만들 필요가 없이 사용할 수 있습니다 회로도를 보면 내장된 풀다운 입력을 사용하는 것을 알 수 있습니다 User Button은 23번 핀으로 연결되어 있으므로 23번핀을 직접 지정해도 되고 BOARD BUTTON PIN을 써도 됩니다 void setup pinMode BOARD BUTTON PIN INPUT PULLDOWN SerialUSB begin void loop int value digitalRead BOARD BUTTON PIN value SerialUSB println Detected else SerialUSB println Detected delay 100 다운로드 해보면 유저 버튼이 눌리면 HIGH가 입력되고 떨어지면 내부 풀다운 회로에 의해서 LOW가 입력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#디지털-입출력"
	},
	"4440": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "디지털 입출력",
		"header3": "Status LED를 토글 시켜봅니다.",
		"content": "1번 핀의 현재 출력이 HIGH이면 LOW가 되고 LOW이면 HIGH로 반전 시킵니다 digitalWrite 1번핀이 HIGH가 됩니다 togglePin 상태였던 1번핀이 다시 LOW가 됩니다 이러한 원리로 LED Blink 예제를 매우 간단하게 작성할 수 있습니다 간단히 Status LED 를 가지고 togglePin 을 사용해 봅니다 void setup pinMode BOARD LED PIN OUTPUT void loop togglePin BOARD LED PIN delay 100 초 지연 1초 간격으로 LED가 깜빡입니다 참고로 BOARD LED PIN만 토글하는 toggleLED 를 써도 같은 동작을 수행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#디지털-입출력"
	},
	"4441": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "아날로그 입출력",
		"header3": "",
		"content": "아날로그 입력은 반드시 OpenCM9 04 실크스크린의 ANALOG IN 영역에 위치한 0번 9번핀만 아날로그 입력이 됩니다 아날로그 출력은 TIMER를 활용한 PWM출력을 통해 아날로그 출력을 대신합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#아날로그-입출력"
	},
	"4442": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "아날로그 입출력",
		"header3": "핀3번에 가변저항으로 아날로그 입력을 받습니다.",
		"content": "아래와 같이 3번핀에 가변저항을 연결하고 전압은 3V를 연결합니다 3번 핀의 아날로그 입력을 위해서는 pinMode INPUT ANALOG 를 통해 아날로그 입력으로 핀모드 설정을 해주시면 준비는 끝납니다 설정된 3핀으로 아날로그 값을 읽기 위해서는 analogRead 를 사용합니다 int value analogRead 0번 핀에서 아날로그 입력받아서 value 변수에 할당합니다 여기서 value에 할당되는 값은 12bit ADC 값으로 095값이 됩니다 전체 코드를 통해 읽은 ADC값을 출력해봅니다 void setup pinMode INPUT ANALOG void loop int value analogRead SerialUSB println value value값을 출력합니다 delay 100 delay time USB transfer ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#아날로그-입출력"
	},
	"4443": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "아날로그 입출력",
		"header3": "핀6번에 아날로그 출력(PWM)을 합니다.",
		"content": "핀 6번에서 출력되는 PWM을 이용해서 LED를 제어합니다 아래와 같이 브레드 보드를 이용해서 LED와 저항을 연결하고 핀6과 연결합니다 6번 핀의 아날로그 pinMode PWM 으로 설정합니다 설정된 6번핀을 통해 PWM 출력은 analogWrite 를 이용합니다 analogWrite 10000 PWM출력을 통해 아날로그 출력을 대신합니다 PWM의 Duty cycle은 두 번째 인자를 통해 제어합니다 여기서는 10000이지만 65535 범위의 값으로 듀티 사이클을 지정할 수 있습니다 0이면 듀티 사이클이고 65535일 경우 100 듀티 사이클을 나타냅니다 전체 코드를 확인합니다 void setup pinMode PWM void loop int analogWrite 10000 generate pwm 10000 60000 scale delay 100 analogWrite 의 두번째 인자를 통해 아래와 같은 다양한 Duty Cycle의 PWM을 구현할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#아날로그-입출력"
	},
	"4444": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "아날로그 입출력",
		"header3": "Status LED를 천천히 꺼지도록 Dimming 시켜봅니다.",
		"content": "Status LED는 핀 14번과 연결되어 있고 핀 14번 역시 PWM 출력이 가능합니다 파일 예제 01 Basic Led Fadin을 오픈합니다 OpenCM9 04에 다운로드 해보면 Status LED가 반복적으로 천천히 켜졌다가 꺼지는 동작을 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#아날로그-입출력"
	},
	"4445": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "시리얼 통신",
		"header3": "",
		"content": "OpenCM9 04는 총 4개의 시리얼 장치가 있습니다 Serial1 Serial2 Serial3 SerialUSB가 있고 Serial1은 다이나믹셀 통신포트 전용으로 할당되어 있어서 사용상의 제한이 따릅니다 BT 210 BT 110A 같은 4핀 포트를 가진 블루투스 장치를 Serial2를 통해 사용할 수 있습니다 Serial3은 TX3 24 RX3 25 으로 PCB 뒷면에 표시되어 있습니다 ockquote Serial3 위치 SerialUSB는 OpenCM9 04에서 매우 중요합니다 ROBOTIS OpenCM에서 펌웨어 다운로드를 수행하고 Serial1 장치처럼 데이터 통신도 수행합니다 사용법은 Serial1 3과 거의 동일합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#시리얼-통신"
	},
	"4446": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "시리얼 통신",
		"header3": "시리얼 장치를 이용해서 데이터를 전송합니다.",
		"content": "아래와 같이 4핀 통신포트에 LN 101을 이용해 PC와 연결합니다 PC에는 RoboPlus Terminal이나 시리얼 모니터를 이용해서 COM포트를 오픈합니다 반드시 아래와 같이 Serial2 장치에 대한 초기화를 수행한 뒤에 loop 에서 아래의 예제를 수행합니다 void setup Serial2 begin 57600 void loop 테스트 예제 코드 데이터 전송은 print 와 println 메소드를 통해 전송하고 print 메소드는 줄바꿈이 없는 출력을 의미하고 println 은 줄바꿈이 있는 출력을 수행합니다 Serial2 print Hello World OpenCM9 04 Hello World 스트링을 Serial2 TX2 RX2 장치를 통해 출력합니다 Serial2 print OpenCM9 04 first product OpenCM Series Serial2 println println ends line Seirla2 println new line println 은 줄바꿈을 하고 새로운 라인으로 출력을 수행합니다 아래와 같은 출력을 확인할 수 있습니다 Serial2 print 12 ockquote 10진수 12를 출력합니다 int abc 128 Seial2 print abc ockquote abc변수의 값 128을 출력합니다 Serial2 print abc 16 ockquote abc변수의 값 128을 16진수 출력합니다 0x80이 출력됩니다 Serial2 print abc ockquote abc변수의 값 128을 2진수 출력을 합니다 마찬가지로 8진수는 두 번째 인자에 8을 지정하면 되고 두 번째 인자가 없으면 기본적으로 10진수를 출력합니다 Serial2 println 14 ockquote 소수점 double 타입의 14를 출력하고 줄바꿈 합니다 소수점 2자리까지 출력합니다 double 변수를 선언해서 출력할 수도 있습니다 double var 234 Serial2 println var ockquote 핀0번 1번 2번에서 읽은 아날로그 입력값을 Serial2를 통해 차례로 출력해봅니다 여러 개의 print 와 println 을 이용하면 아래와 같이 보기 좋게 출력할 수 있습니다 int sensorValue0 int sensorValue1 int sensorValue2 sensorValue0 analogRead sensorValue1 analogRead sensorValue2 analogRead Serial2 print Sensor0 Serial2 print sensorValue0 Serial2 print Sensor1 Serial2 print sensorValue1 Serial2 print Sensor2 Serial2 println sensorValue2 ockquote 마지막 sensorValue2 출력만 println 메소드를 이용해서 줄바꿈하면 3개의 아날로그 입력에 대한 깔끔한 출력을 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#시리얼-통신"
	},
	"4447": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "시리얼 통신",
		"header3": "시리얼 장치를 이용해 데이터를 받습니다.",
		"content": "시리얼 장치로 Echo 기능을 구현해 봅니다 char형 변수 temp를 통해 Serial2장치에 데이터가 오면 read 메소드로 데이터를 저장하고 바로 print 메소드로 출력하면 Echo 기능이 구현 됩니다 char temp loop Serial2 available temp Serial2 read Serial2 print temp 전체 소스는 아래와 같습니다 void setup Serial2 begin 57600 byte temp void loop Serial2 available temp Serial2 read Serial2 print temp 아래와 같이 인터럽트 방식으로 구현해 봅니다 Serial장치의 인터럽트는 아래와 같이 반환형이 없고 byte형 인자가 하나 있는 함수를 구현합니다 여기서 바로 print 메소드로 넘어오는 데이터를 출력하면 Echo 기능이 됩니다 따로 프로토타입 선언 없이 아무 위치에나 구현해서 사용합니다 void serialInterrupt byte buffer Serial2 print buffer 이렇게 구현한 serialInterrupt 를 함수 포인터 형태로setup 내에서 attachInterrupt 를 통해 설정해 줍니다 Serial2 attachInterrupt serialInterrupt 인터럽트를 활용한 Serial2 장치의 데이터 입력에 대한 전체 코드는 아래와 같습니다 void setup Serial2 begin 57600 Serial2 attachInterrupt serialInterrupt void serialInterrupt byte buffer Serial2 print buffer void loop 코드가 없어도 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#시리얼-통신"
	},
	"4448": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "시리얼 통신",
		"header3": "SerialUSB 장치를 이용해 데이터를 출력합니다.",
		"content": "아래와 같이 OpenCM9 04의 Micro USB 커넥터를 이용해서 바로 PC와 연결합니다 이번 예제는 LN 101과 같인 장치 없이 OpenCM9 04만으로 PC와 데이터 통신을 수행합니다 아래와 같이 SerialUSB 장치에 대한 초기화를 수행한 뒤에 loop 에서 아래의 예제를 수행합니다 Baud rate에 대한 지정은 없습니다 void setup SerialUSB begin void loop 테스트 예제 코드 Serial 장치와 사용법이 거의 같습니다 print println 메소드를 통해 같은 방식으로 제어 하면 됩니다 SerialUSB print CM 900 first product CM Series SerialUSB println println ends line SeirlaUSB println new line 10진수 12를 출력해봅니다 SerialUSB print 12 int형 변수를 통해 출력해봅니다 int abc 128 SerialUSB print abc 이번엔 abc 변수의 값을 16진수로 출력합니다 SerialUSB print abc 16 abc변수의 값 128이 16진수 형태인 0x80이 출력됩니다 SerialUSB print abc abc변수의 값 128을 2진수 출력을 합니다 마찬가지로 8진수는 두 번째 인자에 8을 지정하면 되고 두 번째 인자가 없으면 기본적으로 10진수를 출력합니다 SerialUSB println 14 소수점 double 타입의 14를 출력하고 줄바꿈 합니다 소수점 2자리까지 출력합니다 double 변수를 선언해서 출력해 봅니다 double var 234 SerialUSB println var ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#시리얼-통신"
	},
	"4449": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "시리얼 통신",
		"header3": "시리얼 USB장치를 이용해 데이터를 입력 받습니다.",
		"content": "시리얼 USB 장치로 Echo 기능을 구현해 봅니다 char형 변수 temp를 통해 Serial USB장치에 데이터가 오면 read 메소드로 데이터를 저장하고 바로 print 메소드로 출력하면 Echo 기능이 구현 됩니다 char temp loop SerialUSB available temp SerialUSB read SerialUSB print temp 전체 소스는 아래와 같습니다 void setup SerialUSB begin byte temp void loop SerialUSB available temp SerialUSB read SerialUSB print temp 아래와 같이 인터럽트 방식으로 구현해 봅니다 Serial USB의 인터럽트는 아래와 같이 반환형이 없고 byte형 인자와 byte 인자가 있는 함수로 구현합니다 여기서 바로 print 메소드로 넘어오는 데이터를 출력하면 Echo 기능이 됩니다 PC의 터미널로 USB COM 포트에 데이터를 쓰면 1바이트 씩 전송되기 때문에 nCount 1이고 buffer 의 index 0번 데이터만 Echo하면 충분합니다 void usbInterrupt byte nCount byte buffer SerialUSB print buffer 이렇게 구현한 usbInterrupt 를 함수 포인터 형태로setup 내에서 attachInterrupt 를 통해 설정해 줍니다 SerialUSB attachInterrupt usbInterrupt loop 함수는 아래와 같이 빈 함수로 두어도 괜찮습니다 void loop SerialUSB 장치의 인터럽트 활용한 전체 코드는 아래와 같습니다 void setup SerialUSB begin SerialUSB attachInterrupt usbInterrupt void usbInterrupt byte nCount byte buffer SerialUSB print buffer void loop 코드가 없어도 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#시리얼-통신"
	},
	"4450": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "외부 인터럽트",
		"header3": "",
		"content": "7번핀에 입력되는 신호가 변할 때 LED를 껏다 켜는 코드를 만들어 봅니다 아래와 같이 3V와 연결된 스위치를 7번핀과 연결합니다 외부 풀다운회로 없이 내부 입력 풀다운 옵션을 활용합니다 그리고 LED와 저항을 마찬가지로 3V와 연결하고 포트는 13번에 연결합니다 LED방향에 주의합니다 전역변수 하나로 플래그를 만들어서 7번핀의 신호가 변할 때 마다 인터럽트 루틴에서 플래그를 토글시키는 방법을 응용합니다 volatile int state setup 에서 외부 인터럽트는 attachInterrupt 함수로 설정하고 관련된 핀 7번은 pinMode에서 INPUT PULLDOWN으로 선언합니다 pinMode INPUT PULLDOWN attachInterrupt LedChange CHANGE LedChange 를 구현합니다 void LedChange void 타입으로 구현합니다 void LedChange state state else state loop digitalWrite BOARD LED PIN state 전체 소스는 아래와 같습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#외부-인터럽트"
	},
	"4451": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "",
		"content": "아래의 예제에 사용된 다이나믹셀은 ID 1번 통신 속도는 모두 1M bps로 초기화를 전제로 합니다 다이나믹셀 클래스 선언은 명시되어 있지 않더라도 아래와 같이 미리 선언되어 있다고 가정합니다 Dynamixel Dxl Dynamixel Bus Serial1 USART1 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4452": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "AX-12A의 모델 넘버와 펌웨어 버전을 읽습니다.",
		"content": "manual에서 AX 12A의 Control Table에서 모델넘버와 펌웨어 버전에 해당하는 주소값은 아래와 같습니다 ID가 1번인 AX 12A에서 모델 넘버의 하위바이트에 해당하는 0번 주소와 펌웨어 버전 정보에 해당하는 2번주소를 읽어보겠습니다 모두 1바이트이므로 byte형 타입의 변수를 쓰면 됩니다 byte nModel Dxl readByte 모델 번호를 읽고 byte vFirmware Dxl readByte 펌웨어 버전을 읽습니다 아래와 같이 출력합니다 SerialUSB print Model Number SerialUSB print nModel SerialUSB print Firmware Ver SerialUSB println vFirmware ockquote 출력 확인 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4453": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "ID가 1인 AX-12A의 현재 내부 온도를 읽어봅니다.",
		"content": "Control Table에서 AX 12A의 내부온도에 해당하는 주소는 아래와 같습니다 같은 방식으로 readByte 로 한바이트 읽어 봅니다 byte temp Dxl readByte 43 SerialUSB print Current Temperature SerialUSB println temp ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4454": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "AX-12의 ID를 2로 설정합니다.",
		"content": "다이나믹셀 ID에 해당하는 3번 주소에 writeByte 메소드로 1바이트 기록합니다 void setup Dxl begin delay 1000 1초정도 딜레이를 주는 것이 좋습니다 Dxl writeByte 1번 ID의 다이나믹셀을 2번 ID로 변경 void loop Dxl writeByte 25 변경된 ID로 LED Blinking delay 100 Dxl writeByte 25 delay 100 성공적으로 ID변경이 완료되면 다이나믹셀의 LED가 깜빡이게 될 것 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4455": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "Baud Rate를 57600 bps로 변경합니다.",
		"content": "다이나믹셀의 통신속도는 4번 주소의 Baud rate를 이용해 변경 가능합니다 ID 변경과 마찬가지로 writByte 메소드를 활용합니다 57 600bps는 다이나믹셀 속도 계산을 활용하면 index 값이 34가 나옵니다 다이나믹셀 프로토콜의 경우는 새로운 Baud rate 테이블을 참고하세요 57 600bps의 경우 1이 됩니다 void setup Dxl begin delay 1000 1초정도 딜레이를 주는 것이 좋습니다 Dxl writeByte 34 34 57600 bps Dxl begin 34 변경되 Baud rate로 새롭게 초기화 delay 1000 void loop Dxl writeByte 25 delay 100 Dxl writeByte 25 delay 100 Baud rate가 변경되었으므로 새롭게 Dxl begin 34 로 버스를 새롭게 초기화해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4456": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "ID가 1인 다이나믹셀의 움직임 유무를 확인합니다.",
		"content": "Control Table에서 46 0x2E 값을 이용해 현재 AX 12A의 움직임 여부를 확인할 수 있습니다 byte bMoving Dxl readByte 46 ID 1번 다이나믹셀이 현재 움직이고 있다면 bMoving이라는 변수에 1이 반환되고 움직임이 없다면 0을 반환합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4457": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "AX-12A 다이나믹셀을 150도 위치로 움직여 봅니다.",
		"content": "다이나믹셀을 목표 위치 150도 로 움직이려면 Goal Position에 해당하는 주소에 원하는 이동 위치를 넣어주면 됩니다 아래와 같이 하위 상위 2바이트로 이루어져 있으며 각각 접근하는 것 보다는 하위 바이트 30 0x1E 에 writeWord 메소드를 통해 2바이트 1워드 를 기록하는 것을 추천합니다 manual에서 150도에 해당하는 위치는 아래의 그림과 같이 512 와 매칭됨을 확인할 수 있습니다 Dxl writeWord 30 512 Dxl getResult 함수로 통신 성공 여부를 확인하시길 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4458": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "각각의 RX-64에 대해서 각각 다음의 위치와 속도로 이동합니다.",
		"content": "이동이 완료되면 모두 0위치로 원위치합니다 계속 반복적으로 이와 같은 동작을 수행합니다 각 다이나믹셀에 보내기 위한 Sync Write 패킷 데이터를 만듭니다 0위치에 대한 Sync Write 패킷 데이터와 목표위치와 속도를 저장한 패킷 데이터를 만듭니다 define PACKET LEN 12 define NUM OF DATA int SyncPage1 PACKET LEN 010 150 220 360 020 170 220 380 int SyncPage2 PACKET LEN void loop Dxl syncWrite 30 NUM OF DATA SyncPage1 PACKET LEN delay 1000 Dxl syncWrite 30 NUM OF DATA SyncPage2 PACKET LEN delay 1000 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4459": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "동작각을 0~150도로 제한합니다.",
		"content": "CCW Angle Limit이 0x3FF일 경우 300도 이므로 150도에 해당하는 0x200을 writeByte 메소드를 이용해 전송합니다 주의 8번 CCW Angle Limit을 0으로 할 경우 바퀴모드로 변경되어서 Goal position 제어가 되지 않으니 주의하세요 Dxl writeWord 0x200 Dxl getResult COMM RXSUCCESS 통신 성공 여부 체크 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4460": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "동작전압을 10V 17V로 설정합니다.",
		"content": "10V의 데이터는 100 0x64 17V는 170 0xAA 이므로 각각 writeByte 메소드를 통해 하한 상한을 기록합니다 컨트롤 테이블 주소는 각각 하한 범위 전압 12 0x0C 상한 범위 전압 13 0x0D 입니다 Dxl writeByte 12 100 Dxl writeByte 13 170 Dxl getResult COMM RXSUCCESS 통신 성공 여부 체크 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4461": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "토크를 최대값의 50%만 발휘하도록 합니다.",
		"content": "MAX Torque 값을 최대값인 0x3FF의 50 인 0x1FF로 설정합니다 Max Torque 하위 바이트 주소 14 0x0E 에 writeByte 이용해 데이터를 씁니다 Dxl writeByte 14 0x1FF Dxl getResult COMM RXSUCCESS 통신 성공 여부 체크 전원을 off 한 뒤 다시 전원을 공급해야만 Max Torque가 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4462": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "57RPM의 속도로 Position 180도에 위치시킵니다.",
		"content": "Moving Speed Address 32 0x20 512 0x200 Goal Position Address 30 0x1E 512 0x200 로 설정합니다 아래와 같이 word단위 데이터로 접근합니다 Dxl writeWord 32 512 57 RPM의 속도 설정 Dxl writeWord 30 512 180도 위치로 이동 Dxl getResult COMM RXSUCCESS 통신 성공 여부 체크 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4463": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "다이나믹셀 사용법",
		"header3": "ID가 0인 AX-12는 0°에 ID가 1인 AX-12는 위치 300°에 위치시킵니다.",
		"content": "두 개의 AX 12 를 똑같은 시점에서 구동 Syncwrite와 마찬가지로 직접 setTxPacketXXX 메소드를 활용해서 Packet을 만듭니다 이 경우 INST REG WRITE와 INST ACTION을 이용해서 Packet을 만들어 봅니다 참고로 위치 0도는 0에 해당하고 300도는 1023 0x3FF 에 해당합니다 ID Instruction INST REG WRITE Address 30 0x1E Data ID Instruction INST REG WRITE Address 30 0x1E Data 1023 Dxl setTxPacketId 0번 ID 제어를 명시합니다 Dxl setTxPacketInstruction INST REG WRITE Dxl setTxPacketParameter 30 Goal Position Address Dxl setTxPacketParameter Dxl getLowByte Byte Dxl setTxPacketParameter Dxl getHighByte Byte Dxl setTxPacketLength 전체 데이터 길이 데이터 길이 Dxl txrxPacket Dxl getResult COMM RXSUCCESS 통신 성공 여부 체크 두 번째 다이나믹셀에 대한 패킷 전송 Dxl setTxPacketId Dxl setTxPacketInstruction INST REG WRITE Dxl setTxPacketParameter 30 Goal Position Address Dxl setTxPacketParameter Dxl getLowByte 1023 Byte Dxl setTxPacketParameter Dxl getHighByte 1023 Byte Dxl setPacketLength Dxl txrxPacket Dxl getResult COMM RXSUCCESS 통신 성공 여부 체크 0번과 1번 다이나믹셀의 레지스터에 대기중인 Instruction을 바로 실행하려면 INST ACTION Packet을 전송합니다 Dxl setTxPacketId BROADCAST ID Dxl setTxPacketInstruction INST ACTION Dxl setTxPacketLength Dxl txrxPacket Dxl getResult COMM RXSUCCESS 통신 성공 여부 체크 각각 Packet을 만들어서 전송할 때마다 통신 성공 여부를 체크하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#다이나믹셀-사용법"
	},
	"4464": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "RC-100 라이브러리",
		"header3": "",
		"content": "RC100을 이용한 OpenCM9 04 연결방법 OpenCM의 RC100라이브러리를 활용하면 OpenCM9 04를 원격으로 조종할 수 있습니다 아래는 OpenCM9 04와 RC100 사이에 연결할 수 있는 다양한 무선 연결을 나타냅니다 RC100라이브러리는 OpenCM9 04의 4핀 통신포트에 통신 모듈이 연결되었을 경우만 정상 동작합니다 RC 100 통신 패킷에 대해서는 RC 100 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#rc-100-라이브러리"
	},
	"4465": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "RC-100 라이브러리",
		"header3": "RC-100B BT-100 or BT-210 을 이용한 블루투스 연결",
		"content": "ockquote 블루투스를 이용해서 RC100 조종기와 연결하기 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#rc-100-라이브러리"
	},
	"4466": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "RC-100 라이브러리",
		"header3": "RC-100B ZIG-100/ZIG-110A를 이용한 지그비 연결",
		"content": "ockquote 지그비를 활용해서 OpenCM9 04와 RC100 조종기와 연결하기 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#rc-100-라이브러리"
	},
	"4467": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "RC-100 라이브러리",
		"header3": "RC-100B IR Receiver OIR-10을 이용한 적외선 연결",
		"content": "RC 100A 또는 RC 100B의 적외선 통신 방법에 대해서는 IR 10을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#rc-100-라이브러리"
	},
	"4468": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "RC-100 라이브러리",
		"header3": "안드로이드 스마트폰 BT-210 을 이용한 블루투스 연결",
		"content": "안드로이드 스마트폰의 경우 Task 어플리케이션의 RC100 시뮬레이션을 이용하면 RC 100 패킷을 보낼 수 있습니다 Task는 구글 Play를 통해서 다운받을 수 있습니다 ockquote 블루투스로 OpenCM9 04와 스마트폰 연결하기 Task의 RC100 기능 활용 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#rc-100-라이브러리"
	},
	"4469": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "RC-100 라이브러리",
		"header3": "RC100의 버튼 1을 눌렀을 때 OpenCM9.04의 Status LED를 깜빡이게 해봅니다.",
		"content": "OpenCM9 04에서 RC100 패킷을 처리하기 위해서는 RC100 라이브러리를 사용합니다 RC100 라이브러리는 무선통신 모드와 적외선 통신 모드의 2가지 모드로 시작할 수 있습니다 무선 통신 모드 블루투스 모듈 BT 210 BT 110A 지그비 모듈 ZIG 110A 적외선 통신모드 적외선 수신기 OIR 10 무선통신 모드로 RC100 라이브러리로 초기화 합니다 include RC100 RC100 Controller Controller begin RC100 init remote mode RC100의 각 버튼에 대한 define은 아래를 참조하세요 define RC100 BTN define RC100 BTN define RC100 BTN define RC100 BTN define RC100 BTN 16 define RC100 BTN 32 define RC100 BTN 64 define RC100 BTN 128 define RC100 BTN 256 define RC100 BTN 512 RC100라이브러리를 이용해 읽은 패킷 데이터가 버튼 1일 경우에 Status LED를 LOW로 출력시킵니다 Controller available RcvData Controller readData RcvData amp RC100 BTN digitalWrite BOARD LED PIN 전체 소스는 아래와 같고 파일 예제 RC100 RC100 LED Control 을 열면 동일한소스가 나타납니다 마찬가지로 OIR 10 적외선 수신기를 이용해서 Status LED를 깜빡이도록 해봅니다 적외선 통신 모드는 아래와 같이 숫자 2로 초기화를 수행합니다 include RC100 RC100 Controller Controller begin RC100 init IR mode 나머지 동작의 이전 예제와 동일합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#rc-100-라이브러리"
	},
	"4470": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "BKP Library",
		"header3": "",
		"content": "BKP메모리는 전원이 계속 유지된 상태에서는 항상 데이터를 유지하기 때문에 사용자 데이터나 중요 데이터를 임시로 저장해서 리셋 복귀 후에 다시 데이터를 참조할 때 유용하게 사용할 수 있다 OpenCM 보드에서는 외부 라이브러리로 BKP메모리에 대한 API를 제공한다 아래와 같이 파일 예제 BKP ReadWrite 를 선택한다 예제를 선택하면 아래와 같은 코드가 나타납니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#bkp-library"
	},
	"4471": {
		"product": "OpenCM IDE",
		"header1": "예제",
		"header2": "BKP Library",
		"header3": "예제 설명",
		"content": "setup 에서 BKP 메모리를 초기화 하고 Serial2 장치를 57 600bps로 초기화 합니다 그리고 Start OpenCM9 04 BKP Memory Test 를 Serial2를 통해 출력하고 loop 를 시작합니다 OpenCM의 STM32F103CB는 16bit 레지스터가 총 10개인 BKP 메모리로 구성되어 있습니다 loop 에서는 1초 주기로 주소 1에서 10까지 데이터를 출력하다가 Serial2에 어떤 데이터가 들어오면 BKP메모리의 주소 1부터 10까지 데이터를 기록합니다 include BKP BKP BKP MEMORY int void setup Initialize clock registers BKP BKP MEMORY begin Serial2 begin 57600 Serial2 println Start OpenCM9 04 BKP Memory Test void loop delay 1000 11 Serial2 print BKP Memory Read Serial2 println BKP MEMORY read Serial2 available BKP MEMORY enable 11 BKP MEMORY write 10 BKP MEMORY disable BKP메모리의 중요한 특성은 리셋을 눌러서 CPU가 다시 시작해도 BKP메모리 값은 그대로 유지합니다 그러나 전원을 뽑았다가 다시 꽂으면 데이터가 사라집니다 아래는 그 출력값을 통해 BKP메모리의 특성을 살펴볼 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/opencm_ide/getting_started/#bkp-library"
	},
	"4472": {
		"product": "다이나믹셀 위자드",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "다이나믹셀 위자드는 다이나믹셀들을 아주 편리하게 관리해줍니다 이 프로그램의 주요 역할은 다음과 같습니다 다이나믹셀의 펌웨어를 관리합니다 다이나믹셀의 상태를 점검합니다 사용에 필요한 모드 등을 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#개요"
	},
	"4473": {
		"product": "다이나믹셀 위자드",
		"header1": "다이나믹셀 연결",
		"header2": "",
		"header3": "",
		"content": "다이나믹셀을 USB2Dynamixel을 통해 PC와 연결합니다 연결 방법은 USB2Dynamixel 정보 를 참고하세요 다이나믹셀에 인가되는 전원선은 따로 연결해 주어야 합니다 사용할 통신 포트를 선택합니다 만약 해당 통신 포트가 사용중으로 나타나면 사용중인 프로그램을 찾아 사용을 해제해야 합니다 다이나믹셀을 검색합니다 필요에 따라 검색 범위를 설정할 수 있습니다 검색되는 다이나믹셀을 왼쪽의 리스트에서 확인할 수 있습니다 관리를 시작합니다 각 다이나믹셀별로 관리 방법을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#다이나믹셀-연결"
	},
	"4474": {
		"product": "다이나믹셀 위자드",
		"header1": "펌웨어 업데이트",
		"header2": "",
		"header3": "",
		"content": "펌웨어는 다이나믹셀에 설치되어 있는 프로그램을 말하며 다이나믹셀의 제어 역할을 담당하고 있습니다 다이나믹셀 마법사는 인터넷을 통해 새 버전의 펌웨어를 자동으로 감지하여 항상 최신으로 유지시킵니다 다이나믹셀을 검색하면 다음과 같이 다이나믹셀의 아이콘이 체크되며 펌웨어 업데이트가 가능함을 알립니다 해당 다이나믹셀을 클릭하고 펌웨어 업데이트 버튼을 클릭 합니다 간단한 도움말과 함께 펌웨어 업데이트를 시작합니다 특히 업데이트 도중 연결이 끊기거나 전원이 꺼지지 않도록 유의하십시오 현재 연결된 다이나믹셀의 모델명과 펌웨어 정보를 확인할 수 있습니다 다음을 누르면 펌웨어 업데이트를 시작합니다 완료될 때 까지 전원이 꺼지거나 케이블이 빠지지 않도록 유의합니다 다이나믹셀 펌웨어 설치 결과를 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#펌웨어-업데이트"
	},
	"4475": {
		"product": "다이나믹셀 위자드",
		"header1": "펌웨어 복구",
		"header2": "",
		"header3": "",
		"content": "다이나믹셀 마법사는 다이나믹셀의 펌웨어에 문제가 있는 경우 이를 복구 할 수 있습니다 다이나믹셀 펌웨어 복구 마법사 실행 도구 모음의 펌웨어 복구 버튼을 눌러 다이나믹셀 펌웨어 마법사를 실행합니다 COM 포트가 연결되어 있는 경우 해당 버튼이 비활성화 됩니다 포트 연결을 끊고 펌웨어 복구 마법사를 실행해 주세요 간단한 도움말과 함께 다이나믹셀 펌웨어 복구 마법사를 시작합니다 다이나믹셀 펌웨어 복구시에는 반드시 한개의 다이나믹셀만 연결되어 있어야 합니다 다이나믹셀 연결 포트 선택 펌웨어를 인식하지 못하므로 다이나믹셀을 자동 검색할 수 없습니다 따라서 사용자가 다이나믹셀이 연결된 포트를 수동으로 설정해 주어야 합니다 포트가 사용중이면 다이나믹셀을 인식할 수 없으니 다른 프로그램을 종료하고 진행하십시오 USB2Dynamixel이 연결된 포트를 선택하고 찾기 버튼을 누르십시오 다이나믹셀 전원 껐다 켜기 다이나믹셀을 찾기 위해 복구할 다이나믹셀의 전원을 껐다가 켜십시오 다이나믹셀 검색에 성공한 경우 다음과 같은 화면을 볼 수 있습니다 다이나믹셀 펌웨어 선택 다이나믹셀을 찾으면 다운로드 할 수 있는 펌웨어 정보가 나옵니다 다이나믹셀 펌웨어 복구 모드에서는 모델명을 자동으로 인식할 수 없기 때문에 사용자가 정확한 모델을 선택 해 주어야 합니다 잘못된 모델을 선택하면 정상적으로 동작하지 않습니다 펌웨어 복구 다음 버튼을 클릭하면 펌웨어 복구를 시작합니다 완료될 때까지 전원이 꺼지거나 케이블이 빠지지 않도록 주의하십시오 다이나믹셀 펌웨어 복구 결과를 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#펌웨어-복구"
	},
	"4476": {
		"product": "다이나믹셀 위자드",
		"header1": "테스트 및 설정",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#테스트-및-설정"
	},
	"4477": {
		"product": "다이나믹셀 위자드",
		"header1": "테스트 및 설정",
		"header2": "관리 화면",
		"header3": "",
		"content": "다이나믹셀의 테스트 및 설정을 위한 화면은 다음과 같습니다 검색이 완료되면 검색된 다이나믹셀은 왼쪽 리스트에 출력됩니다 다음과 같이 다이나믹셀을 선택하고 테스트나 설정을 위해 테이블을 선택하면 오른쪽에 적절한 관리창이 나타납니다 관리창은 사용자가 다이나믹셀을 쉽게 관리할 수 있도록 도와줍니다 각 기능에 대한 자세한 사항은 각각의 다이나믹셀 메뉴얼을 참조하십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#관리-화면"
	},
	"4478": {
		"product": "다이나믹셀 위자드",
		"header1": "MX 시리즈 보정하기",
		"header2": "",
		"header3": "",
		"content": "기어교체등으로 인해 혼의 위치값이 틀어졌다면 Calibration 을 통해 위치를 다시 설정해 줄 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#mx-시리즈-보정하기"
	},
	"4479": {
		"product": "다이나믹셀 위자드",
		"header1": "MX 시리즈 보정하기",
		"header2": "관리 화면",
		"header3": "MX Series Calibration 방법",
		"content": "하드웨어 연결 USB2Dynamixel 에 MX시리즈를 연결해주세요 스위치는 통신방식에 따라 TTL 혹은 RS485로 향해 있어야 합니다 별도의 전원이 공급되어야 하며 Calibration Adapter가 필요합니다 Dynamixel Wizard 를 실행 후 캘리브레이션 아이콘을 클릭합니다 COM 포트가 연결되어 있는 경우 해당 버튼이 비활성화 됩니다 포트 연결 전 상태에서 캘리브레이션 아이콘을 클릭해주세 요 간단한 도움말과 함께 다이나믹셀 캘리브레이션을 시작합니다 다이나믹셀 캘리브레이션시에는 반드시 한개의 다이나믹셀만 연결되어 있어야 합니다 다이나믹셀 연결 포트 선택 펌웨어를 인식하지 못하므로 다이나믹셀을 자동 검색할 수 없습니다 따라서 사용자가 다이나믹셀이 연결된 포트를 수동으로 설정해 주어야 합니다 포트가 사용중이면 다이나믹셀을 인식할 수 없으니 다른 프로그램을 종료하고 진행하십시오 USB2Dynamixel이 연결된 포트를 선택하고 찾기 버튼을 누르십시오 다이나믹셀 전원 껐다 켜기 다이나믹셀을 찾기 위해 다이나믹셀의 전원을 껐다가 켜십시오 검색에 성공한경우 검색되었다는 메세지가 나옵니다 연결된 다이나믹셀을 선택하세요 다이나믹셀에 캘리브레이션 펌웨어를 설치합니다 첫번째 위치를 설정합니다 두번째 위치를 설정합니다 세번째 위치를 설정합니다 네번째 위치를 설정합니다 캘리브레이션이 완료되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#mx-시리즈-보정하기"
	},
	"4480": {
		"product": "다이나믹셀 위자드",
		"header1": "동영상",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#동영상"
	},
	"4481": {
		"product": "다이나믹셀 위자드",
		"header1": "동영상",
		"header2": "다이나믹셀 위자드 사용하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#다이나믹셀-위자드-사용하기"
	},
	"4482": {
		"product": "다이나믹셀 위자드",
		"header1": "동영상",
		"header2": "다이나믹셀 MX-28 셀프 캘리브레이션하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#다이나믹셀-mx28-셀프-캘리브레이션하기"
	},
	"4483": {
		"product": "다이나믹셀 위자드",
		"header1": "동영상",
		"header2": "다이나믹셀 MX-64/MX-106 셀프 캘리브레이션하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/dynamixel_wizard/#다이나믹셀-mx64mx106-셀프-캘리브레이션하기"
	},
	"4484": {
		"product": "로보플러스 매니저 1.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보플러스 매니저는 로봇을 구성하는 각 장치들을 관리해줍니다 이 프로그램의 주요 역할은 다음과 같습니다 제어기 펌웨어를 관리합니다 업데이트 및 복구 기능 제어기 및 주변 장치들의 상태를 점검합니다 테스트 기능 사용에 필요한 모드 등을 설정할 수 있습니다 설정 기능 참고 통신이 불안정하다면 전압레벨 차이 일수 있습니다 연결된 장비 및 PC가 그라운드와 연결되어 있는지 확인해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#개요"
	},
	"4485": {
		"product": "로보플러스 매니저 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "",
		"content": "다운로드 로보티즈 홈페이지 자료실 로보플러스는 모든 로보티즈 제품을 프로그래밍할 수 있는 통합 소프트웨어입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#설치하기"
	},
	"4486": {
		"product": "로보플러스 매니저 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "RoboPlus 시스템 요구 사항",
		"content": "OS Windows XP Service Pack 이상 Vista 32 64bit 32 64bit 800MHz이상의 32비트 x86 또는 64비트 x64 프로세서 3D 가속 기능을 지원하는 그래픽 카드 512MB이상 시스템 메모리 여유공간이 500MB 이상인 하드디스크 참고 로보플러스를 실행하기 위해선 NET FrameWork 5이상의 버전이 필요 합니다 로보플러스 설치시 NET FrameWork 자동설치가 실패할 경우엔 NET FreameWork를 별도로 설치하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#설치하기"
	},
	"4487": {
		"product": "로보플러스 매니저 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "RoboPlus 설치 실패시",
		"content": "대부분의 RoboPlus 설치 실패의 원인은 사용자 PC환경에 따른 NET FrameWork 자동 설치 실패 입니다 따라서 사용자가 직접 NET FrameWork 5를 수동으로 설치 하셔야 합니다 NET FrameWork 5를 수동으로 설치 하기 전에 Windows installer 1이상이 설치 되어 있어야 합니다 Windows installer와 NET Framework는 마이크로 소프트 다운로드 센터에서 다운로드가 가능합니다 다운로드 Windows installer 다운로드 NET Framework ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#설치하기"
	},
	"4488": {
		"product": "로보플러스 매니저 1.0",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#시작하기"
	},
	"4489": {
		"product": "로보플러스 매니저 1.0",
		"header1": "시작하기",
		"header2": "제어기 연결",
		"header3": "",
		"content": "제어기를 PC와 연결합니다 연결 방법은 각 제어기 정보 를 참고하세요 사용할 통신 포트를 선택합니다 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다 만약 해당 통신 포트가 사용중으로 나타나면 사용중인 프로그램을 찾아 사용을 해제해야 합니다 img assets images sw rplus1 manager connection use png RoboPlus Manager가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다 PC 와 제어기가 연결되어 있는지 확인합니다 연결 방법은 각 제어기 정보를 참고하세요 제어기의 전원이 켜져 있는지 확인합니다 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다 관리를 시작합니다 각 제어기별 관리방법 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#제어기-연결"
	},
	"4490": {
		"product": "로보플러스 매니저 1.0",
		"header1": "시작하기",
		"header2": "제어기 연결 안될시 확인사항",
		"header3": "",
		"content": "제품을 컴퓨터에 연결시 장치 관리자에게 연결장치 LN101 USB2DXL 제어기 등 의 포트가 생기는지 확인해주세요 포트가 잡힐 시 펌웨어 복구를 시도해보시길 바랍니다 펌웨어 복구 방법은 manual을 참조해 주시길 바랍니다 펌웨어복구 바로가기 OpenCM9 04 펌웨어복구 바로가기 포트가 잡혀도 펌웨어 복구가 안될시 다른 제품이나 위 사항을 확인 후에도 안될시 고객지원으로 연락을 주시거나 신청을 해주시기 바랍니다 포트가 안뜰시 CM150 CM200 해결방법 OpenCM9 04 해결방법 다른 제품이나 위 사항을 확인 후에도 안될시 고객지원으로 연락을 주시거나 신청을 해주시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#제어기-연결-안될시-확인사항"
	},
	"4491": {
		"product": "로보플러스 매니저 1.0",
		"header1": "펌웨어 관리",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#펌웨어-관리"
	},
	"4492": {
		"product": "로보플러스 매니저 1.0",
		"header1": "펌웨어 관리",
		"header2": "펌웨어 업데이트",
		"header3": "",
		"content": "펌웨어는 제어기에 설치되어 있는 프로그램을 말하며 tsk 프로그램을 실행하거나 제어기 관리 등의 역할을 담당하고 있습니다 RoboPlus Manager는 인터넷을 통해 새 버전의 펌웨어를 자동으로 감지하여 항상 최신으로 유지시킵니다 제어기와 연결되면 자동으로 제어기의 펌웨어를 검색하며 버전이 낮다면 업데이트 여부를 묻습니다 예 를 누르면 다음과 같이 제어기 펌웨어 업데이트 마법사를 시작합니다 현재 연결된 제어기의 모델명과 펌웨어 버전을 확인할 수 있습니다 다음을 누르면 펌웨어 업데이트를 시작합니다 완료될 때 까지 전원이 꺼지거나 케이블이 빠지지 않도록 유의합니다 제어기 펌웨어 설치 결과를 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#펌웨어-업데이트"
	},
	"4493": {
		"product": "로보플러스 매니저 1.0",
		"header1": "펌웨어 관리",
		"header2": "펌웨어 복구",
		"header3": "",
		"content": "로보플러스 매니저는 제어기의 펌웨어에 문제가 있는 경우 이를 복구 할 수 있습니다 CM 150 CM 200 제어기의 경우 최신 로보플러스 매니저 31 이상 버전 에서만 복구가 지원 됩니다 LN 101을 이용해서 제어기와 PC를 연결합니다 제어기 펌웨어 복구 마법사 실행 도구 모음의 제어기 복구 버튼을 눌러 제어기 펌웨어 마법사를 실행합니다 CM150 CM 200의 경우 별도의 복구모드 진입과정이 있습니다 아래 메세지를 참고하세요 제어기 연결 포트 선택 펌웨어를 인식하지 못하므로 제어기를 자동 검색할 수 없습니다 따라서 사용자가 제어기가 연결된 포트를 수동으로 설정해 주어야 합니다 포트가 사용중이면 제어기를 인식할 수 없으니 다른 프로그램을 종료하고 진행하십시오 제어기가 연결된 포트를 선택하고 찾기 버튼을 누르십시오 제어기 전원 껐다 켜기 CM 150 CM 200은 이과정이 생략됩니다 제어기를 찾기 위해 복구할 제어기의 전원을 껐다가 켜십시오 제어기 정보 확인 제어기를 찾으면 현재 제어기의 정보와 다운로드 할 펌웨어 정보가 나옵니다 모델명이 사용자가 연결한 제어기가 맞는지 확인하십시오 제어기 정보의 버전은 펌웨어 버전이 아니고 부트로더 Boot Loader 의 버전입니다 펌웨어 복구 다음 버튼을 클릭하면 펌웨어 복구를 시작합니다 완료될 때까지 전원이 꺼지거나 케이블이 빠지지 않도록 주의하십시오 제어기 펌웨어 복구 결과를 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#펌웨어-복구"
	},
	"4494": {
		"product": "로보플러스 매니저 1.0",
		"header1": "펌웨어 관리",
		"header2": "펌웨어 복구",
		"header3": "블루투스 통신을 이용한 제어기 펌웨어 복구",
		"content": "블루투스 동글을 PC USB 포트에 연결 합니다 CM 150 CM 200 블루투스 기능이 있는 노트북 사용자는 바로 3번 항목으로 진행하세요 드라이버가 설치되는 동안 대기합니다 제어기에 BT 110A 또는 BT 210 을 연결하고 전원 버튼을 5초 동안 눌러 뚜뚜뚜 3회 소리가 나면 손을 뗍니다 BT 110A 또는 BT 210 의 파란 불이 켜져있는지 확인 합니다 PC에서 주변의 블루투스 장치를 검색합니다 검색된 장치들의 ID로 제어기에 연결된 BT 110A 또는 BT 210 이 맞는지 확인 합니다 BT 110A 또는 BT 210 의ID는 모듈 윗면에 적혀 있습니다 장치가 확인 되면 장치에 연결합니다 COM 포트 번호를 기억합니다 펌웨어 복구 시 필요합니다 로보플러스 프로그램을 실행하고 매니저를 실행합니다 제어기 펌웨어 복구 마법사 실행 제어기 연결 포트 선택 STEP8에서 찾은 포트 번호를 선택하고 찾기 버튼을 누르십시오 제어기 정보 확인 제어기를 찾으면 현재 제어기의 정보가 나옵니다 모델명이 사용자가 연결한 제어기가 맞는지 확인하십시오 제어기 정보의 버전은 펌웨어 버전이 아니고 부트로더 Boot Loader 의 버전입니다 복구할 펌웨어 정보확인 제어기의 정보와 다운로드 할 펌웨어 정보가 나옵니다 펌웨어 복구 다음 버튼을 클릭하면 펌웨어 복구를 시작합니다 완료될 때까지 전원이 꺼지거나 케이블이 빠지지 않도록 주의하십시오 제어기 펌웨어 복구 결과를 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#블루투스-통신을-이용한-제어기-펌웨어-복구"
	},
	"4495": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#테스트-및-설정"
	},
	"4496": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "제어기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#제어기"
	},
	"4497": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "제어기",
		"header3": "CM-5",
		"content": "로보플러스 매니저와 CM 제어기가 연결되면 다음과 같은 화면을 볼 수 있습니다 왼쪽 창에서는 제어기와 제어기에 연결된 주변장치 목록을 확인할 수 있으며 오른쪽 창에서는 제어기 관리창을 확인할 수 있습니다 제어기의 펌웨어가 로보플러스 매니저가 가지고있는 펌웨어 버전보다 낮다면 제어기의 펌웨어를 업데이트 할 수 있습니다 제어기 펌웨어 업데이트 참조 일반 상세 검색 RoboPlus Manager는 두 가지의 검색 모드를 지원합니다 일반 검색 제어기와 1Mbps의 통신 속도로 연결된 다이나믹셀을 검색합니다 1Mbps의 속도만 검색하기 때문에 검색 속도가 빠릅니다 1Mbps의 속도로 설정되지 않은 다이나믹셀은 검색되지 않습니다 상세 검색 연결 가능한 모든 통신 속도로 제어기와 연결된 다이나믹셀을 검색합니다 연결 가능한 모든 통신 속도를 검색하기 때문에 일반 검색에 비해 시간이 오래 걸립니다 검색된 다이나믹셀의 통신 속도가 1Mbps가 아닌 경우 자동으로 1Mbps로 설정 됩니다 참고 상세 검색 후 인식되던 다이나믹셀이 인식되지 않는다면 ID 충돌이 일어났을 수 있습니다 이 경우 인식되지 않는 장치를 하나만 연결한 후 사용하지 않는 ID로 바꾸어 주시기 바랍니다 ID 바꾸기 notice Aux LED 제어기의 Aux LED를 켜거나 끌 수 있습니다 파라미터 속성 켜짐 꺼짐 버튼을 통해 제어기의 Aux LED를 동작시킬 수 있습니다 RoboPlus Task 참고 명령어 파라미터 Aux LED 상수 참 거짓 버튼 제어기의 버튼이 눌린 상태를 읽어올 수 있습니다 파라미터 속성 제어기의 버튼을 누르면 눌린 버튼 위치를 확인할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 버튼 상수 버튼 타이머 제어기의 내부 타이머를 설정하거나 읽어올 수 있습니다 파라미터 속성 타이머 값을 설정할 수 있으며 실제 시간을 같이 확인할 수 있습니다 타이머의 값은 255 사이의 숫자를 사용합니다 타이머 값을 설정하는 순간 128초 마다 씩 카운트 다운을 시작하며 남은 시간을 확인할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 타이머 상수 타이머 값 상대 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈과 무선으로 통신할 상대편 지그비 통신 모듈의 ID 값을 설정하거나 설정된 상대편 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 모듈이 연결되어 있을 경우에만 의미를 갖습니다 무선 ID 값은 65535 사이의 숫자 값을 사용할 수 있습니다 상대로봇 무선 ID 값을 65535로 설정하면 감지된 모든 지그비 모듈에 데이터를 일방적으로 전송합니다 Broadcast Mode 통신을 하려는 경우 내 로봇과 통신할 상대 로봇의 지그비 모듈 ID가 서로 정확히 맞아야 합니다 RoboPlus Task 참고 명령어 파라미터 상대로봇 무선 ID 상수 숫자 내 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 통신 모듈이 장착되지 않은 경우 0의 값이 읽혀집니다 지그비 통신 모듈이 장착되어 있는 경우 65534 사이의 숫자로 된 고유 ID 값이 읽혀집니다 RoboPlus Task 참고 명령어 파라미터 내 로봇 무선 ID ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#cm-5"
	},
	"4498": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "제어기",
		"header3": "CM-510",
		"content": "로보플러스 매니저와 CM 510 제어기가 연결되면 다음과 같은 화면을 볼 수 있습니다 왼쪽 창에서는 제어기와 제어기에 연결된 주변장치 목록을 확인할 수 있으며 오른쪽 창에서는 제어기 관리창을 확인할 수 있습니다 제어기의 펌웨어가 로보플러스 매니저가 가지고있는 펌웨어 버전보다 낮다면 제어기의 펌웨어를 업데이트 할 수 있습니다 제어기 펌웨어 업데이트 참조 일반 상세 검색 RoboPlus Manager는 두 가지의 검색 모드를 지원합니다 일반 검색 제어기와 1Mbps의 통신 속도로 연결된 다이나믹셀을 검색합니다 1Mbps의 속도만 검색하기 때문에 검색 속도가 빠릅니다 1Mbps의 속도로 설정되지 않은 다이나믹셀은 검색되지 않습니다 상세 검색 연결 가능한 모든 통신 속도로 제어기와 연결된 다이나믹셀을 검색합니다 연결 가능한 모든 통신 속도를 검색하기 때문에 일반 검색에 비해 시간이 오래 걸립니다 검색된 다이나믹셀의 통신 속도가 1Mbps가 아닌 경우 자동으로 1Mbps로 설정 됩니다 참고 상세 검색 후 인식되던 다이나믹셀이 인식되지 않는다면 ID 충돌이 일어났을 수 있습니다 이 경우 인식되지 않는 장치를 하나만 연결한 후 사용하지 않는 ID로 바꾸어 주시기 바랍니다 ID 바꾸기 notice Aux LED 제어기의 Aux LED를 켜거나 끌 수 있습니다 파라미터 속성 켜짐 꺼짐 버튼을 통해 제어기의 Aux LED를 동작시킬 수 있습니다 RoboPlus Task 참고 명령어 파라미터 Aux LED 상수 참 거짓 버튼 제어기의 버튼이 눌린 상태를 읽어올 수 있습니다 파라미터 속성 제어기의 버튼을 누르면 눌린 버튼 위치를 확인할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 버튼 상수 버튼 타이머 제어기의 내부 타이머를 설정하거나 읽어올 수 있습니다 파라미터 속성 타이머 값을 설정할 수 있으며 실제 시간을 같이 확인할 수 있습니다 타이머의 값은 255 사이의 숫자를 사용합니다 타이머 값을 설정하는 순간 128초 마다 씩 카운트 다운을 시작하며 남은 시간을 확인할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 타이머 상수 타이머 값 상대 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈과 무선으로 통신할 상대편 지그비 통신 모듈의 ID 값을 설정하거나 설정된 상대편 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 모듈이 연결되어 있을 경우에만 의미를 갖습니다 무선 ID 값은 65535 사이의 숫자 값을 사용할 수 있습니다 상대로봇 무선 ID 값을 65535로 설정하면 감지된 모든 지그비 모듈에 데이터를 일방적으로 전송합니다 Broadcast Mode 통신을 하려는 경우 내 로봇과 통신할 상대 로봇의 지그비 모듈 ID가 서로 정확히 맞아야 합니다 RoboPlus Task 참고 명령어 파라미터 상대로봇 무선 ID 상수 숫자 내 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 통신 모듈이 장착되지 않은 경우 0의 값이 읽혀집니다 지그비 통신 모듈이 장착되어 있는 경우 65534 사이의 숫자로 된 고유 ID 값이 읽혀집니다 RoboPlus Task 참고 명령어 파라미터 내 로봇 무선 ID 제어기 버저 종류 제어기 내부의 버저 종류를 설정할 수 있습니다 파라미터 속성 버저 울림 시간 파라미터의 설정값에 따라 음계 혹은 멜로디 연주 모드가 설정됩니다 연주 모드는 버저 울림 시간 파라미터를 참조 하십시오 만약 버저 울림 시간값이 멜로디 연주 모드가 아니면 멜로디를 선택하여 값을 설정해도 멜로디가 연주되지 않습니다 음계 연주 모드에서는 설정된 음계를 버저 울림 시간 파라미터에 설정된 시간만큼 연주합니다 특수 멜로디 연주 모드일 때 멜로디 값을 설정하면 멜로디가 끝날 때 까지 연주합니다 특수 멜로디는 15의 범위값을 갖으며 음계는 26 범위값을 갖습니다 버저 울림 시간값이 0이면 자동으로 3으로 설정한 후 음계를 연주합니다 RoboPlus Task 참고 명령어 파라미터 버저 종류 상수 멜로디 음계값 제어기 버저 울림 시간 제어기 내부의 버저 울림 시간과 연주 모드를 설정할 수 있습니다 파라미터 속성 버저 울림 시간값이 50 범위의 값으로 설정되어 있는 경우 음계 연주 모드로 동작하며 설정 값에 따른 음계 지속 시간을 확인할 수 있습니다 버저 울림 시간값이 255로 설정되어 있는 경우 특수 멜로디 연주 모드로 동작됩니다 음계 혹은 멜로디의 연주가 끝나면 자동으로 으로 초기화 됩니다 RoboPlus Task 참고 명령어 파라미터 버저 울림 시간 상수 멜로디 음계값 제어기 소리 감지 횟수 제어기 내부의 마이크를 통해 소리를 감지할 수 있습니다 파라미터 속성 제어기 옆에서 박수를 치거나 일정 크기 이상의 소리를 낸 후 잠시 기다리면 감지되었던 소리 횟수를 알 수 있습니다 소리감지 횟수는 최대 255까지 셀 수 있습니다 소리의 입력이 멈추어야 소리감지 횟수 파라미터에 현재까지 감지된 소리의 횟수 값이 입력됩니다 소리감지 횟수는 자동으로 초기화 되지 않기 때문에 소리감지를 시작하기 전에 사용자가 직접 으로 초기화 해 주어야 합니다 RoboPlus Task 참고 명령어 파라미터 소리 감지 횟수 제어기 현재 소리 감지 횟수 제어기 내부의 마이크를 통해 현재까지 감지한 소리 횟수를 실시간으로 알 수 있습니다 파라미터 속성 현재 소리감지 횟수는 최대 255까지 셀 수 있습니다 소리가 감지될 때 마다 실시간으로 파라미터 값이 증가합니다 일정 시간 동안 소리가 입력되지 않으면 현재 소리감지 횟수값을 소리감지 횟수 파라미터로 넘겨준 후 자동으로 으로 초기화 됩니다 RoboPlus Task 참고 명령어 파라미터 현재 소리 감지 횟수 제어기 외부 외부 장치를 지원하는 제어기에서는 적외선 센서 터치 센서 거리 센서 등의 외부 장치를 사용할 수 있습니다 파라미터 속성 기본적으로 읽기만 가능하나 사용자 장치에서 한해서 쓰기 가능합니다 외부 장치를 연결하고 종류를 설정하면 그에 따른 값을 확인할 수 있습니다 사용자 장치는 출력값을 설정할 수 있습니다 외부 장치는 자동 인식을 할 수 없으며 따라서 사용자가 연결된 포트의 장치를 수동으로 설정해야 합니다 적외선 센서 터치 센서 거리 센서 사용자 장치를 지원합니다 장치를 연결하지 않고 값을 읽어오는 경우 랜덤한 값이 출력됩니다 이 때 출력되는 값은 의미가 없습니다 사용 포트와 장치를 설정하면 주소값이 자동으로 설정되며 이 주소값은 Task 프로그래밍시에 참조할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 사용자 장치 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#cm-510"
	},
	"4499": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "제어기",
		"header3": "CM-530",
		"content": "로보플러스 매니저와 CM 530 제어기가 연결되면 다음과 같은 화면을 볼 수 있습니다 왼쪽 창에서는 제어기와 제어기에 연결된 주변장치 목록을 확인할 수 있으며 오른쪽 창에서는 제어기 관리창을 확인할 수 있습니다 제어기의 펌웨어가 로보플러스 매니저가 가지고있는 펌웨어 버전보다 낮다면 제어기의 펌웨어를 업데이트 할 수 있습니다 제어기 펌웨어 업데이트 참조 일반 상세 검색 RoboPlus Manager는 두 가지의 검색 모드를 지원합니다 일반 검색 제어기와 1Mbps의 통신 속도로 연결된 다이나믹셀을 검색합니다 1Mbps의 속도만 검색하기 때문에 검색 속도가 빠릅니다 1Mbps의 속도로 설정되지 않은 다이나믹셀은 검색되지 않습니다 상세 검색 연결 가능한 모든 통신 속도로 제어기와 연결된 다이나믹셀을 검색합니다 연결 가능한 모든 통신 속도를 검색하기 때문에 일반 검색에 비해 시간이 오래 걸립니다 검색된 다이나믹셀의 통신 속도가 1Mbps가 아닌 경우 자동으로 1Mbps로 설정 됩니다 참고 상세 검색 후 인식되던 다이나믹셀이 인식되지 않는다면 ID 충돌이 일어났을 수 있습니다 이 경우 인식되지 않는 장치를 하나만 연결한 후 사용하지 않는 ID로 바꾸어 주시기 바랍니다 ID 바꾸기 notice Aux LED 제어기의 Aux LED를 켜거나 끌 수 있습니다 파라미터 속성 켜짐 꺼짐 버튼을 통해 제어기의 Aux LED를 동작시킬 수 있습니다 RoboPlus Task 참고 명령어 파라미터 Aux LED 상수 참 거짓 버튼 제어기의 버튼이 눌린 상태를 읽어올 수 있습니다 파라미터 속성 제어기의 버튼을 누르면 눌린 버튼 위치를 확인할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 버튼 상수 버튼 타이머 제어기의 내부 타이머를 설정하거나 읽어올 수 있습니다 파라미터 속성 타이머 값을 설정할 수 있으며 실제 시간을 같이 확인할 수 있습니다 타이머의 값은 255 사이의 숫자를 사용합니다 타이머 값을 설정하는 순간 128초 마다 씩 카운트 다운을 시작하며 남은 시간을 확인할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 타이머 상수 타이머 값 정밀타이머 제어기 내부에 자동으로 카운트 다운 되는 정밀타이머의 값을 설정하거나 현재 정밀타이머 값을 읽어오기 위해 사용하는 파라미터입니다 타이머 와 달리 최소단위가 001초이므로 정밀한 시간제어를 필요로 하는 경우에 유용합니다 파라미터 속성 타이머 값 상수를 사용하여 타이머 값을 설정할 수 있습니다 실제 타이머의 값은 65535 사이의 숫자를 사용합니다 타이머 값 은 001초를 나타냅니다 타이머 파라미터에 보다 큰 값을 설정하면 설정된 순간부터 001초 마다 씩 카운트 다운을 시작합니다 RoboPlus Task 참고 명령어 파라미터 정밀타이머 상수 타이머 값 상대 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈과 무선으로 통신할 상대편 지그비 통신 모듈의 ID 값을 설정하거나 설정된 상대편 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 모듈이 연결되어 있을 경우에만 의미를 갖습니다 무선 ID 값은 65535 사이의 숫자 값을 사용할 수 있습니다 상대로봇 무선 ID 값을 65535로 설정하면 감지된 모든 지그비 모듈에 데이터를 일방적으로 전송합니다 Broadcast Mode 통신을 하려는 경우 내 로봇과 통신할 상대 로봇의 지그비 모듈 ID가 서로 정확히 맞아야 합니다 RoboPlus Task 참고 명령어 파라미터 상대로봇 무선 ID 상수 숫자 내 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 통신 모듈이 장착되지 않은 경우 0의 값이 읽혀집니다 지그비 통신 모듈이 장착되어 있는 경우 65534 사이의 숫자로 된 고유 ID 값이 읽혀집니다 RoboPlus Task 참고 명령어 파라미터 내 로봇 무선 ID 제어기 버저 종류 제어기 내부의 버저 종류를 설정할 수 있습니다 파라미터 속성 버저 울림 시간 파라미터의 설정값에 따라 음계 혹은 멜로디 연주 모드가 설정됩니다 연주 모드는 버저 울림 시간 파라미터를 참조 하십시오 만약 버저 울림 시간값이 멜로디 연주 모드가 아니면 멜로디를 선택하여 값을 설정해도 멜로디가 연주되지 않습니다 음계 연주 모드에서는 설정된 음계를 버저 울림 시간 파라미터에 설정된 시간만큼 연주합니다 특수 멜로디 연주 모드일 때 멜로디 값을 설정하면 멜로디가 끝날 때 까지 연주합니다 특수 멜로디는 15의 범위값을 갖으며 음계는 26 범위값을 갖습니다 버저 울림 시간값이 0이면 자동으로 3으로 설정한 후 음계를 연주합니다 RoboPlus Task 참고 명령어 파라미터 버저 종류 상수 멜로디 음계값 제어기 버저 울림 시간 제어기 내부의 버저 울림 시간과 연주 모드를 설정할 수 있습니다 파라미터 속성 버저 울림 시간값이 50 범위의 값으로 설정되어 있는 경우 음계 연주 모드로 동작하며 설정 값에 따른 음계 지속 시간을 확인할 수 있습니다 버저 울림 시간값이 255로 설정되어 있는 경우 특수 멜로디 연주 모드로 동작됩니다 음계 혹은 멜로디의 연주가 끝나면 자동으로 으로 초기화 됩니다 RoboPlus Task 참고 명령어 파라미터 버저 울림 시간 상수 멜로디 음계값 제어기 소리 감지 횟수 제어기 내부의 마이크를 통해 소리를 감지할 수 있습니다 파라미터 속성 제어기 옆에서 박수를 치거나 일정 크기 이상의 소리를 낸 후 잠시 기다리면 감지되었던 소리 횟수를 알 수 있습니다 소리감지 횟수는 최대 255까지 셀 수 있습니다 소리의 입력이 멈추어야 소리감지 횟수 파라미터에 현재까지 감지된 소리의 횟수 값이 입력됩니다 소리감지 횟수는 자동으로 초기화 되지 않기 때문에 소리감지를 시작하기 전에 사용자가 직접 으로 초기화 해 주어야 합니다 RoboPlus Task 참고 명령어 파라미터 소리 감지 횟수 제어기 현재 소리 감지 횟수 제어기 내부의 마이크를 통해 현재까지 감지한 소리 횟수를 실시간으로 알 수 있습니다 파라미터 속성 현재 소리감지 횟수는 최대 255까지 셀 수 있습니다 소리가 감지될 때 마다 실시간으로 파라미터 값이 증가합니다 일정 시간 동안 소리가 입력되지 않으면 현재 소리감지 횟수값을 소리감지 횟수 파라미터로 넘겨준 후 자동으로 으로 초기화 됩니다 RoboPlus Task 참고 명령어 파라미터 현재 소리 감지 횟수 제어기 외부 외부 장치를 지원하는 제어기에서는 적외선 센서 터치 센서 거리 센서 등의 외부 장치를 사용할 수 있습니다 파라미터 속성 기본적으로 읽기만 가능하나 사용자 장치에서 한해서 쓰기 가능합니다 외부 장치를 연결하고 종류를 설정하면 그에 따른 값을 확인할 수 있습니다 사용자 장치는 출력값을 설정할 수 있습니다 외부 장치는 자동 인식을 할 수 없으며 따라서 사용자가 연결된 포트의 장치를 수동으로 설정해야 합니다 적외선 센서 터치 센서 거리 센서 사용자 장치를 지원합니다 장치를 연결하지 않고 값을 읽어오는 경우 랜덤한 값이 출력됩니다 이 때 출력되는 값은 의미가 없습니다 사용 포트와 장치를 설정하면 주소값이 자동으로 설정되며 이 주소값은 Task 프로그래밍시에 참조할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 사용자 장치 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#cm-530"
	},
	"4500": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "제어기",
		"header3": "CM-700",
		"content": "일반 상세 검색 RoboPlus Manager는 두 가지의 검색 모드를 지원합니다 일반 검색 제어기와 1Mbps의 통신 속도로 연결된 다이나믹셀을 검색합니다 1Mbps의 속도만 검색하기 때문에 검색 속도가 빠릅니다 1Mbps의 속도로 설정되지 않은 다이나믹셀은 검색되지 않습니다 상세 검색 연결 가능한 모든 통신 속도로 제어기와 연결된 다이나믹셀을 검색합니다 연결 가능한 모든 통신 속도를 검색하기 때문에 일반 검색에 비해 시간이 오래 걸립니다 검색된 다이나믹셀의 통신 속도가 1Mbps가 아닌 경우 자동으로 1Mbps로 설정 됩니다 참고 상세 검색 후 인식되던 다이나믹셀이 인식되지 않는다면 ID 충돌이 일어났을 수 있습니다 이 경우 인식되지 않는 장치를 하나만 연결한 후 사용하지 않는 ID로 바꾸어 주시기 바랍니다 ID 바꾸기 notice Aux LED 제어기의 Aux LED를 켜거나 끌 수 있습니다 파라미터 속성 켜짐 꺼짐 버튼을 통해 제어기의 Aux LED를 동작시킬 수 있습니다 RoboPlus Task 참고 명령어 파라미터 Aux LED 상수 참 거짓 타이머 제어기의 내부 타이머를 설정하거나 읽어올 수 있습니다 파라미터 속성 타이머 값을 설정할 수 있으며 실제 시간을 같이 확인할 수 있습니다 타이머의 값은 255 사이의 숫자를 사용합니다 타이머 값을 설정하는 순간 128초 마다 씩 카운트 다운을 시작하며 남은 시간을 확인할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 타이머 상수 타이머 값 상대 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈과 무선으로 통신할 상대편 지그비 통신 모듈의 ID 값을 설정하거나 설정된 상대편 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 모듈이 연결되어 있을 경우에만 의미를 갖습니다 무선 ID 값은 65535 사이의 숫자 값을 사용할 수 있습니다 상대로봇 무선 ID 값을 65535로 설정하면 감지된 모든 지그비 모듈에 데이터를 일방적으로 전송합니다 Broadcast Mode 통신을 하려는 경우 내 로봇과 통신할 상대 로봇의 지그비 모듈 ID가 서로 정확히 맞아야 합니다 RoboPlus Task 참고 명령어 파라미터 상대로봇 무선 ID 상수 숫자 내 로봇 무선 ID 로봇에 장착된 지그비 통신 모듈의 ID 값을 읽어올 수 있습니다 파라미터 속성 지그비 통신 모듈이 장착되지 않은 경우 0의 값이 읽혀집니다 지그비 통신 모듈이 장착되어 있는 경우 65534 사이의 숫자로 된 고유 ID 값이 읽혀집니다 RoboPlus Task 참고 명령어 파라미터 내 로봇 무선 ID 제어기 외부 외부 장치를 지원하는 제어기에서는 적외선 센서 터치 센서 거리 센서 등의 외부 장치를 사용할 수 있습니다 파라미터 속성 기본적으로 읽기만 가능하나 사용자 장치에서 한해서 쓰기 가능합니다 외부 장치를 연결하고 종류를 설정하면 그에 따른 값을 확인할 수 있습니다 사용자 장치는 출력값을 설정할 수 있습니다 외부 장치는 자동 인식을 할 수 없으며 따라서 사용자가 연결된 포트의 장치를 수동으로 설정해야 합니다 적외선 센서 터치 센서 거리 센서 사용자 장치를 지원합니다 장치를 연결하지 않고 값을 읽어오는 경우 랜덤한 값이 출력됩니다 이 때 출력되는 값은 의미가 없습니다 사용 포트와 장치를 설정하면 주소값이 자동으로 설정되며 이 주소값은 Task 프로그래밍시에 참조할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 사용자 장치 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/cm-700"
	},
	"4501": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "",
		"content": "참고 액츄에이터 는 다이나믹셀 중 모터를 말합니다 액츄에이터의 종류는 AX DX RX EX MX Pro 시리즈 등이 있으며 제어기의 종류에 따라 연결할 수 있는 액츄에이터가 다를 수 있습니다 AX S1 은 여러가지 센서가 내장되어 있으며 로보플러스 매니저를 통해 값을 확인하거나 기능을 설정할 수 있습니다 적외선 센서 어레이 는 버저와 7개의 적외선센서가 내장되어 있으며 로보플러스 매니저를 통해 값을 확인하거나 기능을 설정할 수 있습니다 액츄에이터의 테스트 및 설정을 위한 화면은 다음과 같습니다 제어기 관리 화면에서 Scan이나 Search기능으로 검색된 다이나믹셀 목록입니다 액츄에이터 뿐만 아니라 AX S1 등의 센서류 등 제어기에 연결된 장치를 확인할 수 있습니다 왼쪽 목록에 나열된 하나의 액츄에이터를 클릭하면 해당 액츄에이터를 관리할 수 있습니다 각 장치에서 테스트 및 설정이 가능한 테이블을 볼 수 있습니다 각 행을 클릭하여 사용자가 손쉽게 테스트 및 설정을 할 수 있는 보조 창을 호출할 수 있습니다 보조창은 의미를 파악하기 어려운 수치값을 사용자가 알아보기 쉽게 표현 해 주거나 설정을 쉽게 할 수 있도록 도와줍니다 위 화면은 이동 속도 행을 클릭했을 경우 나타나는 화면입니다 이동 속도 뿐만 아니라 각 행을 클릭했을 때 왼쪽 아래에 적절한 보조 창이 호출됩니다 다만 단순히 수치만을 표현하는 경우 보조 창이 뜨지 않을 수 있습니다 참고 위치의 ID를 가진 액츄에이터를 더블 클릭하면 해당 ID를 가진 액츄에이터가 선택됨과 동시에 해당 액츄에이터의 LED가 잠시 깜박거립니다 현재 관리하고 있는 액츄에이터 위치를 확인할 때 간단히 사용할 수 있습니다 참고 액츄에이터는 그룹 관리를 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#다이나믹셀"
	},
	"4502": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "ID 설정",
		"content": "다이나믹셀은 고유 ID를 가지고 있으며 제어기는 ID를 기준으로 각각의 다이나믹셀을 제어합니다 이 명령을 통해 다이나믹셀의 ID를 관리할 수 있습니다 ID 바꾸기 설명을 참고하세요 파라미터 속성 값을 설정하면 전원을 차단해도 설정값이 저장됩니다 ID목록을 클릭하면 현재 바꿀 수 있는 ID 리스트를 확인할 수 있습니다 ID리스트에 나타나지 않는 값은 다른 다이나믹셀에서 사용하고 있는 ID입니다 ID는 제어기의 고유 ID인 200을 제외한 253까지 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#id-설정"
	},
	"4503": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "위치 제한과 모드",
		"content": "액츄에이터의 위치 제한을 하거나 동작 모드를 설정할 수 있습니다 동작모드 바꾸기 설명을 참고하세요 파라미터 속성 값을 설정하면 전원을 차단해도 설정값이 저장됩니다 순방향과 역방향의 위치 제한값을 설정할 수 있으며 목표 위치값이 이 설정값에 따라 영향을 받습니다 설정값에 따른 실제 각도를 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#위치-제한과-모드"
	},
	"4504": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "동작 모드",
		"content": "동작모드 바꾸기 설명을 참고하세요 바퀴 모드 CW 위치 제한 값과 CCW 위치 제한 값을 모두 으로 설정하면 바퀴 모드 무한 회전 모드 로 동작합니다 바퀴 모드 버튼을 누르면 자동으로 위치 제한 값에 이 입력됩니다 관절 모드 바퀴 모드 이외의 경우 관절 모드로 동작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#동작-모드"
	},
	"4505": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "온도 설정",
		"content": "다이나믹셀의 동작 한계 온도 기준값을 설정할 수 있습니다 파라미터 속성 값을 설정하면 전원을 차단해도 설정값이 저장됩니다 설정값에 따른 실제 온도를 확인할 수 있습니다 액츄에이터의 경우 온도가 한계 온도값을 넘어서면 LED 알람 설정 및 셧다운 설정 상태에 따라 LED를 깜박이거나 자동으로 동작을 멈출 수 있습니다 특별한 이유가 없다면 동작 한계 온도는 기본값을 사용하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#온도-설정"
	},
	"4506": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "현재 온도",
		"content": "다이나믹셀의 현재 온도값을 읽어올 수 있습니다 파라미터 속성 다이나믹셀의 현재 온도를 실시간으로 반영합니다 RoboPlus Task 참고 명령어 파라미터 온도 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#현재-온도"
	},
	"4507": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "전압 설정",
		"content": "다이나믹셀의 동작 한계 전압 범위를 설정할 수 있습니다 파라미터 속성 값을 설정하면 전원을 차단해도 설정값이 저장됩니다 설정값에 따른 실제 전압을 확인할 수 있습니다 설정할 수 있는 전압 값은 최대 한계 전압과 최소 한계 전압 2가지 입니다 액츄에이터의 경우 전압이 설정 범위를 넘어서면 LED 알람 설정 및 셧다운 설정 상태에 따라 LED를 깜박이거나 자동으로 동작을 멈출 수 있습니다 특별한 이유가 없다면 동작 한계 전압은 기본값을 사용하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#전압-설정"
	},
	"4508": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "현재 전압",
		"content": "다이나믹셀의 현재 전압값을 읽어올 수 있습니다 파라미터 속성 다이나믹셀의 현재 전압을 실시간으로 반영합니다 RoboPlus Task 참고 명령어 파라미터 전압 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#현재-전압"
	},
	"4509": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "알람 &amp; 셧다운 설정",
		"content": "특정 상황에서 LED 알람 및 셧다운 동작 여부를 설정할 수 있습니다 파라미터 속성 값을 설정하면 전원을 차단해도 설정값이 저장됩니다 액츄에이터의 경우 셧다운 설정을 통해 사용자 설정에 따라 동작을 자동으로 멈추게 할 수 있습니다 셧다운 설정을 통해 과전류 과열 동작범위 이탈 등 여러 상황에서 동작을 멈추게 함으로써 다이나믹셀을 보호합니다 다음과 같은 상황에서 사용자에게 LED를 이용한 알람 신호를 발생하거나 셧다운 동작을 실행 합니다 Instruction Error 잘못된 명령을 받았을 경우 OverLoad Error 액츄에이터가 받는 힘이 힘 조절값을 초과했을 경우 Checksum Error 받은 명령에 체크섬 오류가 있을 경우 Range Error 액츄에이터 위치 사용 범위를 초과한 명령을 받은 경우 OverHeating Error 현재 액츄에이터 상태가 한계 설정 온도를 초과했을 경우 Angle Limit Error 위치 제한값을 벗어난 경우 Input Voltage Error 입력 전압이 한계 전압값 범위를 벗어난 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#알람--셧다운-설정"
	},
	"4510": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "모터 켜기",
		"content": "액츄에이터를 켜거나 끌 수 있습니다 파라미터 속성 값이 0이면 액츄에이터 토크가 꺼져있는 상태이며 1이면 토크가 켜져있는 상태입니다 켜짐 꺼짐 명령을 통해 간단히 토크를 켜거나 끌 수 있습니다 액츄에이터 토크가 켜져있지 않은 상태에서 목표 위치를 설정하면 액츄에이터 토크가 켜짐과 동시에 값이 1로 설정됩니다 RoboPlus Task 참고 명령어 파라미터 모터 켜기 상수 참 거짓 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#모터-켜기"
	},
	"4511": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "LED",
		"content": "다이나믹셀의 LED를 켜거나 끌 수 있습니다 파라미터 속성 값이 0이면 LED가 꺼져있는 상태이며 1이면 켜져있는 상태입니다 켜짐 꺼짐 명령을 통해 간단히 LED를 켜거나 끌 수 있습니다 LED 알람이 발생했을 때는 제어되지 않습니다 RoboPlus Task 참고 명령어 파라미터 LED 상수 참 거짓 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#led"
	},
	"4512": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "Compliance Margin 설정",
		"content": "액츄에이터의 Compliance Margin값을 설정할 수 있습니다 파라미터 속성 값을 설정하면 목표위치를 중심으로 토크가 걸리지 않는 구간이 생기게 됩니다 Compliance Slope과 힘 조절 Compliance Margin을 적절한 값으로 설정하면 좀 더 부드러운 동작이 가능합니다 RoboPlus Task 참고 명령어 파라미터 CW CCW Margin ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#compliance-margin-설정"
	},
	"4513": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "Compliance Slope 설정",
		"content": "액츄에이터의 Compliance Slope값을 설정할 수 있습니다 파라미터 속성 CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 낮은 값을 설정하면 목표위치까지 거의 힘을 줄이지 않고 다가가며 높은 값을 설정하면 목표위치에 도달할 수록 힘을 줄이면서 다가갑니다 낮은 값을 설정하면 목표위치에서 벗어나지 않으려고 최대의 힘으로 저항을 합니다 높은 값을 설정해도 목표위치에서 너무 많이 벗어나면 점점 최대 힘으로 저항을 합니다 Compliance Slope 는 입력되는 Data 값의 범위에 따라 총 단계의 Data 대표 값으로 바뀌어 적용됩니다 즉 Data 값으로 25 를 넣더라도 실제로는 Data 대표값인 16 이 사용됩니다 단계 Data 값 Data 대표 값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance Slope과 힘 조절 Compliance Margin을 적절한 값으로 설정하면 좀 더 부드러운 동작이 가능합니다 RoboPlus Task 참고 명령어 파라미터 CW CCW Slope ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#compliance-slope-설정"
	},
	"4514": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "목표 위치",
		"content": "액츄에이터의 목표 위치값을 설정할 수 있습니다 파라미터 속성 조그 다이얼을 이용하여 목표 위치값을 설정할 수 있습니다 설정 즉시 목표 위치로 이동을 시작합니다 이동 속도 위치 제한 Compliance Slope Compliance Margin값에 영향을 받습니다 토크가 꺼져있어도 값을 설정하는 즉시 토크가 켜집니다 Center Position 버튼을 누르면 중앙값으로 설정됩니다 RoboPlus Task 참고 명령어 파라미터 목표 위치 상수 위치 값 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#목표-위치"
	},
	"4515": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "이동 속도",
		"content": "액츄에이터의 이동 속도값을 설정할 수 있습니다 파라미터 속성 액츄에이터의 동작 모드가 관절 모드일 때 이동 속도는 구간에 따라 Compliance Slope Compliance Margin값에 영향을 받습니다 액츄에이터의 동작 모드가 관절 모드일 때 이동 속도를 0으로 설정하면 최대 속도로 움직입니다 액츄에이터의 동작 모드가 무한 회전 모드일 때 이동 속도 설정값에 따라 회전 방향과 속도가 바뀌게 됩니다 동작 모드는 위치 제한값을 설정하여 바꿀 수 있습니다 동작 모드에 따라 이동 속도를 설정할 수 있는 컨트롤이 다르게 나타납니다 RoboPlus Task 참고 명령어 파라미터 이동 속도 상수 모터 제어 값 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#이동-속도"
	},
	"4516": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "힘 조절",
		"content": "액츄에이터의 최대 부하량을 설정할 수 있습니다 파라미터 속성 힘 조절 설정값 및 LED 알람 설정 셧다운 설정값에 따라 LED 알람이 발생하거나 동작이 자동으로 정지할 수 있습니다 RoboPlus Task 참고 명령어 파라미터 힘 조절 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#힘-조절"
	},
	"4517": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "현재 위치",
		"content": "액츄에이터의 현재 위치값을 읽어올 수 있습니다 파라미터 속성 액츄에이터의 움직임에 따라 실시간으로 값이 반영됩니다 RoboPlus Task 참고 명령어 파라미터 현재 위치 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#현재-위치"
	},
	"4518": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "현재 속도",
		"content": "액츄에이터의 현재 속도값을 읽어올 수 있습니다 파라미터 속성 액츄에이터의 움직임에 따라 실시간으로 값이 반영됩니다 RoboPlus Task 참고 명령어 파라미터 현재 속도 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#현재-속도"
	},
	"4519": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "현재 하중",
		"content": "액츄에이터의 현재 하중값을 읽어올 수 있습니다 파라미터 속성 액츄에이터의 움직임에 따라 실시간으로 값이 반영됩니다 모터가 꺼져있는 경우의 값은 의미가 없습니다 RoboPlus Task 참고 명령어 파라미터 현재 하중 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#현재-하중"
	},
	"4520": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "움직임 유무",
		"content": "액츄에이터의 움직임 유무를 읽어올 수 있습니다 파라미터 속성 값이 0이면 움직이지 않는 상태이고 1이면 움직이는 상태입니다 RoboPlus Task 참고 명령어 파라미터 움직임 유무 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#움직임-유무"
	},
	"4521": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "소모 전류량",
		"content": "EX 액츄에이터의 현재 소모 전류량을 알 수 있습니다 파라미터 속성 값이 512일 경우에 소모하는 전류는 0암페어이며 전류가 흐르지 않고 있다는 것을 의미합니다 데이터가 512보다 클 경우에는 모터를 시계방향으로 돌리는 전류가 흐르고 있다는 것이며 전류의 크기는 데이터의 크기와 비례합니다 값 단위 약 10mA 예를 들어 데이터가 612 일 경우 612 512 100 100x10mA 000mA 1A 전류가 모터를 시계방향으로 돌리고 있다는 것을 의미합니다 데이터가 512보다 작을 경우에는 모터를 반 시계방향으로 돌리는 전류가 흐르고 있다는 전류의 크기는 데이터의 크기와 반비례합니다 값 단위 약 10mA 예를 들어 데이터가 312일 경우 512 312 200 200x10mA 000mA 2A 의 전류가 모터를 반시계방향으로 돌리고 있다는 것을 의미합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#소모-전류량"
	},
	"4522": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "PID gain",
		"content": "다이나믹셀의 PID 값을 읽고 쓸 수 있습니다 파라미터 속성 Gain은 Propotional Gain값 입니다 Gain은 Integral Gain값 입니다 Gain은 Derivative Gain값 입니다 값의 범위는 254 입니다 RoboPlus Task 참고 명령어 파라미터 PID gain ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#pid-gain"
	},
	"4523": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "적외선 거리 감지",
		"content": "AX S1 의 적외선 거리 센서값을 읽어올 수 있습니다 파라미터 속성 AX S1의 현재 적외선 거리 센서값을 읽어올 수 있습니다 실제로는 적외선의 반사도를 측정하는 것이며 같은 거리라 하더라도 반사되는 물체 조명 외부 상황 등에 따라 값이 바뀔 수 있습니다 값의 범위는 255입니다 RoboPlus Task 참고 명령어 파라미터 왼쪽 중앙 오른쪽 거리센서값 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#적외선-거리-감지"
	},
	"4524": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "조명 감지",
		"content": "AX S1 의 조명 밝기값을 읽어올 수 있습니다 파라미터 속성 AX S1의 현재 조명 밝기값을 읽어올 수 있습니다 촛불이나 전구 등 근거리의 조명에서 나오는 적외선을 측정할 수 있습니다 값의 범위는 255입니다 RoboPlus Task 참고 명령어 파라미터 왼쪽 중앙 오른쪽 조명 밝기 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#조명-감지"
	},
	"4525": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "물체 감지",
		"content": "물체 감지 유무를 판단할 수 있습니다 파라미터 속성 AX S1의 적외선 센서값이 물체 감지 기준값을 넘어서는 경우 값의 특정 비트를 1로 설정 해줍니다 각각 0비트는 좌측 1비트는 중앙 2비트는 우측 센서에 물체가 감지되었음을 나타냅니다 값은 각 비트의 조합으로 나타내어 집니다 RoboPlus Task 참고 명령어 파라미터 물체 감지 상수 2진수 숫자 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#물체-감지"
	},
	"4526": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "물체 감지 기준값",
		"content": "물체 감지 기준값을 설정할 수 있습니다 파라미터 속성 물체 감지 유무를 판단하는 기준값을 설정합니다 값의 범위는 255입니다 근거리 감지 모드와 원거리 감지 모드가 있습니다 거리 감지 기준값을 0으로 설정하면 근거리 감지 모드로 동작하게 됩니다 RoboPlus Task 참고 명령어 파라미터 물체 감지 기준값 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#물체-감지-기준값"
	},
	"4527": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "조명 감지",
		"content": "조명 감지 유무를 판단할 수 있습니다 파라미터 속성 AX S1의 적외선 센서값이 조명 감지 기준값을 넘어서는 경우 값의 특정 비트를 1로 설정 해줍니다 각각 0비트는 좌측 1비트는 중앙 2비트는 우측 센서에 조명이 감지되었음을 나타냅니다 값은 각 비트의 조합으로 나타내어 집니다 RoboPlus Task 참고 명령어 파라미터 조명 감지 상수 2진수 숫자 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#조명-감지"
	},
	"4528": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "조명 감지 기준값",
		"content": "조명 감지 기준값을 설정할 수 있습니다 파라미터 속성 조명 감지 유무를 판단하는 기준값을 설정합니다 값의 범위는 255입니다 RoboPlus Task 참고 명령어 파라미터 조명 감지 기준값 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#조명-감지-기준값"
	},
	"4529": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "소리 크기",
		"content": "현재 감지되는 소리 크기를 확인할 수 있습니다 파라미터 속성 AX S1의 현재 감지되고 있는 소리 크기를 읽어옵니다 소음이 없을 때는 기본적으로 127 근처의 값이 읽어지며 소리가 커질 수록 소리 크기값의 변화폭이 커집니다 큰소리가 날 수록 127값을 중심으로 0과 255근처로 크게 진동하게 됩니다 소리 크기 값은 255 사이의 숫자를 사용합니다 RoboPlus Task 참고 명령어 파라미터 소리 크기 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#소리-크기"
	},
	"4530": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "최대 소리 크기",
		"content": "감지된 최대 소리 크기를 확인할 수 있습니다 파라미터 속성 AX S1에서 감지된 최대 소리 크기를 읽어옵니다 소리 크기가 최대 소리 크기 값을 넘어서는 경우 소리 크기값을 최대 소리 크기값으로 복사를 하게 됩니다 최대 소리 크기 값은 255 사이의 숫자를 사용합니다 최대 소리 크기는 자동으로 초기화 되지 않기 때문에 사용자가 직접 으로 초기화 해 주어야 합니다 RoboPlus Task 참고 명령어 파라미터 최대 소리 크기 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#최대-소리-크기"
	},
	"4531": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "소리 감지 횟수",
		"content": "AX S1은 일정 수준 이상의 큰 소리가 날 경우 1회씩 카운트 해 주는 기능이 있습니다 대표적인 예로 박수 소리의 횟수를 카운트 하는 것이 가능합니다 이 때 감지된 소리의 횟수 값을 읽어오거나 초기화할 수 있습니다 파라미터 속성 소리감지 횟수 는 255 사이의 숫자를 사용합니다 연속적인 소리의 입력이 멈추어야 소리감지 횟수 파라미터에 현재까지 감지된 소리의 횟수 값이 입력됩니다 소리감지 횟수는 자동으로 초기화 되지 않기 때문에 소리감지를 시작하기 전에 사용자가 직접 으로 초기화 해 주어야 합니다 RoboPlus Task 참고 명령어 파라미터 소리 감지 횟수 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#소리-감지-횟수"
	},
	"4532": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "버저 음계",
		"content": "AX S1 에는 버저가 장착되어 있습니다 버저 음계를 설정할 수 있습니다 파라미터 속성 버저 울림 시간을 설정하고 버저 음계를 설정하면 음계에 따른 비프음을 낼 수 있습니다 음계값은 0에서 51까지의 값을 사용합니다 특수 멜로디 값은 0에서 26까지의 값을 사용합니다 음계 혹은 특수멜로디는 버저 울림 시간 설정값에 따라 선택됩니다 RoboPlus Task 참고 명령어 파라미터 버저 음계 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#버저-음계"
	},
	"4533": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "버저 울림 시간",
		"content": "AX S1에는 버저가 장착되어 있습니다 버저 울림 시간을 설정할 수 있습니다 파라미터 속성 버저 울림 시간을 설정하고 버저 음계를 설정하면 음계에 따른 비프음을 낼 수 있습니다 0에서 50까지의 값을 사용하며 1의 값은 1초와 같습니다 254의 값으로 설정하면 소리가 멈추지 않고 계속 울리게 됩니다 255의 값으로 설정하면 특수 멜로디 연주 상태로 설정이 됩니다 멜로디 연주가 끝나면 버저 울림 시간은 0으로 초기화 됩니다 RoboPlus Task 참고 명령어 파라미터 버저 울림 시간 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#버저-울림-시간"
	},
	"4534": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "1~7번 적외선 센서 값",
		"content": "적외선 센서 어레이 의 적외선 센서값을 읽어올 수 있습니다 파라미터 속성 적외선 센서 어레이의 현재 적외선 센서값을 읽어올 수 있습니다 적외선 센서 어레이에 있는 적외선 수광부 센서에서 반사되는 적외선의 양을 측정한 것으로 벽이나 물체가 가까이 있을수록 물체 표면의 색이 밝을 수록 높은 값으로 측정됩니다 값의 범위는 1023입니다 RoboPlus Task 참고 명령어 파라미터 적외선 센서값 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#17번-적외선-센서-값"
	},
	"4535": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "감지 기준값 자동설정",
		"content": "적외선 센서 어레이 의 검은 색 감지 기준값 자동 찾기의 시작 마침 을 설정할 수 있습니다 파라미터 속성 켜짐을 누르면 LED가 깜박이며 감지기준값 설정으로 들어갑니다 흰색과 검은색을 교차시키며 적외선센서를 감지시키면 자동으로 기준값이 설정 됩니다 꺼짐을 누르면 종료합니다 RoboPlus Task 참고 명령어 파라미터 감지 기준값 자동 설정 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#감지-기준값-자동설정"
	},
	"4536": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "적외선 물체 감지 유무",
		"content": "적외선 센서 어레이 의 물체 감지 기준 값에서 지정된 거리 값 이내로 물체가 감지되었는지 유 무를 판단하기 위해 사용하는 파라미터입니다 파라미터 속성 적외선 센서 어레이의 각 적외선 센서의 감지 값이 검은 색 감지 기준값보다 작으면 검은 색을 감지하였다고 판단하여 아래와 같이 검은 색 감지 유무값의 특정 Bit을 1로 셋팅해 줍니다 동시에 해당 LED가 켜집니다 10진수 값 으로 각 감지값이 더해진 형태로 출력됩니다 진수 값 10 진수 값 검은색 감지 유무 0000001 1번 적외선 센서에 검은 색 감지 0000010 2번 적외선 센서에 검은 색 감지 0000100 3번 적외선 센서에 검은 색 감지 0001000 4번 적외선 센서에 검은 색 감지 0010000 16 5번 적외선 센서에 검은 색 감지 0100000 32 6번 적외선 센서에 검은 색 감지 1000000 64 7번 적외선 센서에 검은 색 감지 RoboPlus Task 참고 명령어 파라미터 적외선 물체 감지 유무 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#적외선-물체-감지-유무"
	},
	"4537": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "다이나믹셀",
		"header3": "적외선 감지 기준값",
		"content": "적외선 센서 어레이 가 흰 색 검은 색을 판단하는 기준값입니다 파라미터 속성 적외선 물체 감지 유무를 판단하는 기준값을 개별 설정할 수 있습니다 감지 기준값 자동 설정 파라미터를 이용 하면 전체적으 로 기준을 설정할 수 있습니다 값의 범위는 1023입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#적외선-감지-기준값"
	},
	"4538": {
		"product": "로보플러스 매니저 1.0",
		"header1": "테스트 및 설정",
		"header2": "ZIG2Serial",
		"header3": "",
		"content": "로보 플러스 매니저에서 Zig2Serial을 이용하여 Zig 100모듈을 관리할 수 있습니다 관리 방법은 다음과 같습니다 먼저 Zig2Serial에 Zig 100을 장착한 후 PC의 시리얼 포트를 Zig2Serial과 연결합니다 Zig2Serial Zig100 연결하기 다음 그림과 같이 시리얼 포트가 없는 경우 USB2Dynamixel을 이용할 수 있습니다 Zig2Serial이 연결된 포트를 선택하고 Zig2Serial 관리 아이콘을 클릭합니다 제어기와 달리 자동 찾기가 되지 않습니다 Zig2Serial 관리 아이콘을 클릭하면 다음과 같은 화면을 볼 수 있습니다 Zigbee 설정 버튼을 클릭합니다 OK버튼을 누른 후 3초 이내에 리셋 버튼을 누르십시오 Zigbee모듈이 정상적으로 인식되면 다음과 같은 화면을 볼 수 있으며 기능을 설정할 수 있습니다 현재 내 ID와 상대 ID를 확인할 수 있습니다 상대 ID를 바꿀 수 있습니다 Broadcast 모드를 설정할 수 있습니다 Wait 모드를 설정할 수 있습니다 만약 Zig100모듈을 찾지 못한 경우 모듈이 정상적으로 연결되었는지 확인 해 보십시오 다른 무선 통신 모듈과 데이터를 주고 받을 수 있으며 RC 100 리모컨 신호를 생성 및 전송할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/manager/#zig2serial"
	},
	"4539": {
		"product": "로보플러스 모션 1.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#개요"
	},
	"4540": {
		"product": "로보플러스 모션 1.0",
		"header1": "개요",
		"header2": "모션이란?",
		"header3": "",
		"content": "모션이란 로봇이 의미있는 행동을 하기 위해 필요한 관절 별 모터의 위치와 속도 데이터 집합을 의미합니다 로봇이 움직이기 위해서는 모션 파일이 필요하며 조립된 로봇에 맞는 모션 파일을 다운로드 해야 합니다 모션 파일은 PC 상에서 아래와 같은 아이콘 그림과 확장자가 mtn으로 존재합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#개요"
	},
	"4541": {
		"product": "로보플러스 모션 1.0",
		"header1": "개요",
		"header2": "모션과 태스크 코드는 어떤 관계인가요?",
		"header3": "",
		"content": "태스크 코드 Task Code 파일은 프로그램이고 모션 파일은 데이터입니다 이 관계는 MP3 플레이어와 MP3파일을 생각해보면 매우 쉽게 이해할 수 있습니다 MP3 플레이어가 없다면 MP3파일을 재생할 수 없어서 음악을 들을 수 없습니다 반대로 MP3플레이어는 있지만 MP3파일이 없어도 마찬가지로 음악을 들을 수 없습니다 만약 내가 만든 로봇을 움직이게 하려면 반드시 태스크 코드가 있어야 합니다 로봇에 다운로드한 태스크 코드가 모션 데이터를 사용한다면 반드시 모션 파일도 다운로드해야 합니다 만약 태스크 코드에서 모션을 사용하지 않는다면 모션 파일은 필요 없습니다 참고 태스크 코드에서 모션을 사용한다면 반드시 모션 파일을 다운로드해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#개요"
	},
	"4542": {
		"product": "로보플러스 모션 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "",
		"content": "다운로드 로보티즈 홈페이지 자료실 로보플러스는 모든 로보티즈 제품을 프로그래밍할 수 있는 통합 소프트웨어입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#설치하기"
	},
	"4543": {
		"product": "로보플러스 모션 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "RoboPlus 시스템 요구 사항",
		"content": "OS Windows XP Service Pack 이상 Vista 32 64bit 32 64bit 800MHz이상의 32비트 x86 또는 64비트 x64 프로세서 3D 가속 기능을 지원하는 그래픽 카드 512MB이상 시스템 메모리 여유공간이 500MB 이상인 하드디스크 참고 로보플러스를 실행하기 위해선 NET FrameWork 5이상의 버전이 필요 합니다 로보플러스 설치시 NET FrameWork 자동설치가 실패할 경우엔 NET FreameWork를 별도로 설치하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#설치하기"
	},
	"4544": {
		"product": "로보플러스 모션 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "RoboPlus 설치 실패시",
		"content": "대부분의 RoboPlus 설치 실패의 원인은 사용자 PC환경에 따른 NET FrameWork 자동 설치 실패 입니다 따라서 사용자가 직접 NET FrameWork 5를 수동으로 설치 하셔야 합니다 NET FrameWork 5를 수동으로 설치 하기 전에 Windows installer 1이상이 설치 되어 있어야 합니다 Windows installer와 NET Framework는 마이크로 소프트 다운로드 센터에서 다운로드가 가능합니다 다운로드 Windows installer 다운로드 NET Framework ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#설치하기"
	},
	"4545": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#시작하기"
	},
	"4546": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "로봇 모션",
		"header3": "",
		"content": "로봇 모션은 제어기 안에 존재하는 모션 데이터를 의미합니다 로봇 모션 창은 이 데이터를 보여주고 편집할 수 있도록 합니다 로봇 모션 창은 로봇을 연결해야만 나타납니다 로봇 연결하기 참고 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#로봇-모션"
	},
	"4547": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "파일 모션",
		"header3": "",
		"content": "파일 모션은 PC에 파일로 존재하는 모션 데이터를 의미합니다 파일 모션 창은 이 데이터를 보여주고 편집할 수 있도록 합니다 파일 모션 창은 여러 개를 띄울 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#파일-모션"
	},
	"4548": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "로봇 연결하기",
		"header3": "",
		"content": "로봇을 PC와 연결합니다 연결 방법은 각 제어기 정보 를 참고하세요 통신 포트를 선택합니다 로봇이 연결된 통신 포트를 선택합니다 만약 통신 포트를 모른다면 자동 찾기를 선택합니다 로봇에 연결합니다 연결 메뉴를 선택합니다 로봇에 연결하지 못하면 다음과 같은 문제를 확인하기 바랍니다 제어기를 PC에 연결했습니까 제어기 전원을 켰습니까 제어기가 연결된 올바른 포트를 선택했습니까 RoboPlus Motion을 사용할 수 있는 제어기입니까 CM 100의 경우는 사용할 수 없습니다 CM 5의 경우는 펌웨어 업그레이드를 해야 사용할 수 있습니다 로봇의 연결을 끊습니다 로봇의 연결을 끊으려면 해제 메뉴를 선택하거나 로봇 모션 창을 닫습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#로봇-연결하기"
	},
	"4549": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "모션 다운로드",
		"header3": "",
		"content": "특정 파일 모션을 로봇 모션으로 바꿀 수 있습니다 다운로드 할 파일 모션을 엽니다 로봇을 연결합니다 다운로드 버튼을 누르고 완료되기를 기다립니다 파일 모션의 내용이 로봇 모션에 옮겨진 것을 확인합니다 로보플러스 프로그램 다운로드 CM 510 530 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-다운로드"
	},
	"4550": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "모션 실행",
		"header3": "",
		"content": "만든 모션을 실행해볼 수 있습니다 원하는 페이지를 선택한 후 실행 메뉴를 선택합니다 모션 실행 시도시 다음과 같은 문제가 발생할 수 있습니다 이 경우는 로봇 모션 창에서 작업할 경우 나타납니다 이 문제는 Next나 Exit로 연결된 페이지가 수정되었고 제어기 메모리가 작아서 임시로 저장할 수 없기 때문입니다 ockquote 실행하기 전에 저장을 하면 이 문제는 해결이됩니다 만약 저장하지 않고 확인을 눌러 진행한다면 현재 페이지만 실행됩니다 이 경우는 파일 모션 창에서 작업할 경우 나타납니다 제어기가 아닌 PC에 데이터가 있는 경우 제어기 메모리가 작아서 Next나 Exit로 연결된 페이지를 임시로 저장할 수 없기 때문입니다 ockquote 오직 선택한 페이지만 실행 가능합니다 만약 연결된 페이지도 실행하려면 다운로드 해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-실행"
	},
	"4551": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "모션 정지",
		"header3": "",
		"content": "실행중인 모션을 정지시킵니다 모션 정지는 바로 멈추는 것이 아니라 Exit 페이지를 실행한 후 정지합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-정지"
	},
	"4552": {
		"product": "로보플러스 모션 1.0",
		"header1": "시작하기",
		"header2": "모션 비상 정지",
		"header3": "",
		"content": "실행중인 모션을 정지시킵니다 모션 정지와 달리 비상 정지는 그 즉시 멈춥니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-비상-정지"
	},
	"4553": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "",
		"header3": "",
		"content": "여기서는 모션 편집에 앞서서 미리 알아두어야 할 사항에 대해 소개하고 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-편집"
	},
	"4554": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "다이나믹셀 ID 설정",
		"header3": "",
		"content": "제어기에 내장된 모션 플레이어는 ID 0부터 25까지 총 26개의 다이나믹셀만 관리할 수 있습니다 따라서 RoboPlus Motion에서 모션을 만들기 위해서는 반드시 해당 관절의 다이나믹셀의 ID가 25사이에 할당되어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-편집"
	},
	"4555": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "제어 우선 순위",
		"header3": "",
		"content": "다이나믹셀 제어는 RoboPlus Motion과 RoboPlus Task가 모두 할 수 있습니다 일반적인 제어 우선 순위는 다음과 같습니다 RoboPlus Motion 단 해당 다이나믹셀의 ID가 25사이에 존재 RoboPlus Task 즉 모션이 실행되면 RoboPlus Task는 더이상 해당 다이나믹셀을 제어할 수 없고 오직 RoboPlus Motion만 제어가 가능해집니다 하지만 사용자는 이 제어 우선 순위를 바꿀 수 있습니다 제어 우선 순위를 바꾸는 방법은 다음과 같습니다 모션 데이터에 설정하는 방법 이 방법은 ID 사용 유무 설정 을 이용하면 됩니다 태스크 코드 Task Code 에서 설정하는 방법 이 방법은 관절 오프셋 파라미터 를 이용하면 됩니다 로봇이 상황에 따라 제어 우선 순위를 바꿀 수 있는 것이 장점입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-편집"
	},
	"4556": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "다이나믹셀 자동 꺼짐 기능",
		"header3": "",
		"content": "다이나믹셀은 자동 꺼짐 기능이 있습니다 이 기능은 과도한 사용 환경으로부터 다이나믹셀이 망가지는 것을 막기위한 것입니다 자동 꺼짐 기능은 다음과 같은 경우 작동합니다 내부 온도 상승으로 모터가 과열된 경우 과도한 힘이 일정 시간 동안 모터에 작용한 경우 자동 꺼짐 기능이 작동하면 다음과 같은 증상이 나타납니다 다이나믹셀 LED가 깜박거립니다 모터가 작동하지 않아서 힘이 생기지 않습니다 이 문제를 해결하기 위해서는 다음과 같은 조치를 취해야 합니다 자동 꺼짐 기능 작동 원인을 제거합니다 과열로 인한 경우는 일정한 휴식을 통해 열을 식혀줍니다 과부하로 인한 경우는 모터에 무리한 힘을 가하지 않습니다 다이나믹셀에 전원을 차단했다가 다시 켭니다 로봇의 모션을 만들다보면 갑자기 관절에 힘이 들어가지 않는 경우가 생깁니다 이러한 증상은 다이나믹셀 자동 꺼짐 기능이 작동한 것이고 위와 같은 원인때문입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-편집"
	},
	"4557": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "[포즈 편집]",
		"header3": "",
		"content": "포즈 Pose 란 로봇의 정지된 자세를 뜻하며 해당 자세를 취하기 위해 필요한 모터들의 위치 값의 집합으로 표현됩니다 스텝의 포즈 데이터로 저장된 상태의 포즈를 스텝의 포즈라고 부릅니다 로봇의 포즈 연결된 로봇의 관절별 위치 값들을 로봇의 포즈라고 부릅니다 로봇의 포즈는 수정하면 로봇이 움직입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-편집"
	},
	"4558": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "[포즈 편집]",
		"header3": "기본 포즈 편집기",
		"content": "기본 포즈 편집기는 어떤 형태의 로봇도 사용할 수 있는 기본적인 편집기입니다 만약 스텝의 포즈에서 사용하는 ID 개수를 변경하거나 바꾸고 싶다면 ID편집 기능 을 사용할 수 있습니다 관절 선택하기 마우스로 해당 줄을 클릭하면 1개의 관절을 선택할 수 있습니다 여러 개의 관절을 선택하는 방법은 다음과 같습니다 연속적으로 여러 관절을 선택 마우스로 드래그 Drag 합니다 Shift키를 누른 상태에서 다른 관절을 선택합니다 개별적으로 여러 관절을 선택 Ctrl키를 누른 상태에서 해당 관절을 선택합니다 전체 관절 선택 버튼을 눌러서 선택 메뉴를 선택 토크 Off 토크 Off 기능은 로봇 관절의 힘을 켜거나 끄거나해서 손으로 포즈를 잡을 수 있도록 합니다 토크 Off기능은 로봇의 포즈에서만 사용할 수 있습니다 토크 On인 상태에서는 위치 값이 출력되고 Off인 상태에서는 꺼짐 표시로 출력됩니다 토크를 Off시키는 방법은 다음과 같습니다 켜기 버튼을 누르면 선택된 관절의 토크가 On됩니다 끄기 버튼을 누르면 선택된 관절의 토크가 Off됩니다 토크 토글 Toggle 기능은 선택된 관절의 토크 Off상태를 전환시킵니다 관절 값 바꾸기 포즈에서 관절을 선택하면 해당 모터의 위치 값을 바꿀 수 있습니다 포즈 실행 포즈 실행은 스텝의 포즈를 로봇의 포즈로 옮겨서 로봇이 해당 포즈를 취하게 합니다 포즈 캡쳐 포즈 캡쳐 Capture 란 로봇의 포즈를 스텝의 포즈로 옮겨서 데이터에 저장합니다 포즈 복사 붙여넣기 포즈 복사 붙여넣기 기능은 매우 쉽게 관절 값을 교환할 수 있도록 합니다 포즈끼리의 교환은 물론 엑셀 Excel 이나 다른 문서에서 사용되는 텍스트도 교환이 가능합니다 일반 텍스트의 경우 숫자 구분자는 공백 문자 Space 와 엔터 Enter 탭 Tab 만 가능합니다 포즈 복사 메뉴를 선택하거나 Ctrl C를 눌러서 실행합니다 포즈 붙여넣기 메뉴를 선택하거나 Ctrl V를 눌러서 실행합니다 포즈 마스크 포즈 마스크 Mask 는 포즈 실행 캡쳐시 값의 사용 유무를 설정함으로써 2개의 포즈를 합쳐서 새로운 포즈를 만들어냅니다 예를 들어 A라는 포즈의 상체 포즈와 B라는 포즈의 하체 포즈를 합쳐서 C라는 포즈를 만드는 등의 작업을 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#기본-포즈-편집기"
	},
	"4559": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "[포즈 편집]",
		"header3": "포즈 유틸리티",
		"content": "포즈 유틸리티는 미리 입력된 로봇 정보를 이용해서 로봇의 포즈를 보다 쉽게 생성하기 위한 툴입니다 3D 로봇 제어 3D 로봇의 관절을 마우스로 움직여서 포즈를 만들 수 있습니다 미러 좌우 대칭 혹은 교환의 방법으로 포즈를 만들 수 있습니다 역기구학 수학적으로 계산하는 방법으로 포즈를 만들 수 있습니다 참고 포즈 유틸리티는 반드시 로봇 정보가 필요합니다 즉 리스트에 없는 로봇은 사용할 수 없습니다 로봇에 따라 3D 로봇이나 미러 역기구학 기능을 지원하지 않을 수 있습니다 포즈 유틸리티는 3D 그래픽 기술을 사용하므로 그래픽 사양이 좋지 않은 시스템에서는 프로그램 속도가 느려질 수 있습니다 로봇 선택 포즈 유틸리티를 사용하기 위해서는 먼저 포즈 유틸리티를 적용할 로봇을 선택하여야 합니다 로봇 이름의 리스트를 선택하면 적용할 로봇을 선택할 수 있습니다 참고 리스트에 없는 로봇은 포즈 유틸리티를 사용할 수 없습니다 사용자 로봇의 경우는 기본 포즈 편집기 로만 모션을 만들어야 합니다 포즈를 만들고자 하는 로봇의 이름을 선택합니다 로봇 이름 Bioloid Battle Droid 바이올로이드 중급 응용 로봇 배틀 드로이드 Bioloid Dinosaur 바이올로이드 고급 응용 로봇 공룡 Bioloid Fawn 바이올로이드 중급 응용 로봇 아기 사슴 Bioloid Gerwalk 바이올로이드 중급 응용 로봇 거웍 Bioloid Humanoid 바이올로이드 고급 응용 로봇 휴머노이드 Bioloid King Spider 바이올로이드 고급 응용 로봇 킹 스파이더 Bioloid Puppy 바이올로이드 고급 응용 로봇 강아지 Bioloid Spider 바이올로이드 중급 응용 로봇 거미 Bioloid Turtle 바이올로이드 중급 응용 로봇 거북이 Bioloid Walking Droid 바이올로이드 초급 응용 로봇 보행 드로이드 Premium Humanoid type 바이올로이드 프리미엄 휴머노이드 타입 Premium Humanoid type 바이올로이드 프리미엄 휴머노이드 타입 Premium Humanoid type 바이올로이드 프리미엄 휴머노이드 타입 초기 자세 버튼을 누르면 로봇이 각 로봇의 타입에 맞는 초기 자세를 취합니다 3D 로봇 제어 뷰 View 제어 3D 화면의 뷰 제어 기능을 이용해서 3D 로봇을 다양한 각도에서 볼 수 있습니다 줌 맞춤 Zoom Fit 뷰 각도를 초기 상태로 돌려놓습니다 물체 선택하기 마우스 커서로 관절을 선택할 수 있는 상태로 만듭니다 뷰 View 회전시키기 마우스로 뷰를 회전시킬 수 있는 상태로 만듭니다 마우스 가운데 버튼 휠 버튼 을 누른고 마우스를 움직여도 동일한 효과가 나타납니다 뷰 View 이동시키기 마우스로 뷰를 평행 이동시킬 수 있는 상태로 만듭니다 키보드의 Ctrl 키를 누른 상태에서 마우스 가운데 버튼 휠 버튼 을 누르고 마우스를 움직여도 동일한 효과가 나타납니다 뷰 View 확대 축소시키기 마우스로 뷰를 확대 축소할 수 있는 상태로 만듭니다 마우스 휠을 돌려도 동일한 효과가 나타납니다 관절 제어 로봇 위에 나타나는 숫자는 다이나믹셀의 ID를 의미합니다 ID위에 마우스를 올려 놓으면 선택할 수 있는 다이나믹셀의 색깔이 바뀝니다 해당 관절을 마우스로 클릭하면 관절 값이 나타납니다 관절 값은 모터 값이 아닌 각도로 표시됩니다 마우스 왼쪽 버튼을 누른 상태에서 좌 우로 움직이면 값이 증가하거나 감소합니다 값의 단위는 1024기반 제어인 경우 약0 29 300 1024 이고 4096의 경우 약 06 250 92 4096 이 됩니다 미러 Mirror 포즈 유틸리티의 미러 기능은 아래 두 가지 기능을 제공합니다 기능 선택 후 적용 버튼을 누르면 로봇에 적용됩니다 교환하기 교환하기는 로봇의 좌측과 우측 포즈를 서로 교환하여 거울을 보듯이 정 반대의 포즈를 만들기 위해 사용합니다 대칭 대칭은 좌 우 한 쪽의 포즈를 기준으로 좌 우 대칭이 되도록 반대쪽의 포즈를 만들어 주기 위해 사용합니다 역기구학 위치 Position 와 좌표계 Coordinate System 로봇의 움직임에 대한 기구학적 이해의 출발점은 로봇을 구성하는 각 부분의 위치를 파악하는 것에서부터 비롯됩니다 이를 위해서는 먼저 원점 Origin 이 되는 좌표를 결정하고 거기에서부터 어느 정도의 위치에 있는지를 변위로 표시해야 합니다 뷰 View 상에서의 좌표축과 원점은 아래와 같이 나타나며 격자의 단위는 20mm입니다 Origin은 Z의 좌표가 임을 의미합니다 순기구학 Kinematics 과 역기구학 Inverse Kinematics 로봇 관절의 각도나 동작으로부터 끝점의 위치나 동작을 구하는 것을 순기구학이라 합니다 즉 순기구학은 각 관절의 값이 정해지면 끝점의 위치를 어떻게 구할 것인가 하는 것입니다 간단한 예로 아래와 같이 평면에서 2개의 관절을 갖는 매니퓰레이터를 생각해 봤을 때 각 관절의 값이 정해져 있는 경우 그 끝점의 좌표 를 구하는 것을 순기구학이라 하며 순기구학의 해는 오직 하나만 존재합니다 반대로 끝점의 위치나 동작으로부터 각 관절의 위치나 각도를 구하는 것을 역기구학이라 합니다 역시 위에서와 같이 평면 2링크 매니퓰레이터를 생각해 봤을 때 끝점의 좌표 가 정해져 있는 경우 각 관절의 값은 아래 그림과 같이 가지 해가 존재합니다 역기구학에서는 경우에 따라 좌표 가 끝점이 다다를 수 없는 거리에 있거나 관절 각도 제한에 의해 해가 존재하지 않을 수도 있으며 더 많은 관절을 사용할 경우 무수히 많은 해가 존재할 수도 있습니다 끝점 End Point 제어 포즈 유틸리티의 역기구학 기능은 초기 자세에서 정해진 끝점을 어느 방향으로 얼마나 옮길 것인가를 선택하면 역기구학을 이용하여 각 관절의 값을 계산하여 자동으로 설정된 값 만큼 끝점을 이동시켜 주는 기능입니다 이 기능은 역기구학 연산을 수행하는 모듈이 있어야 합니다 현재 역기구학 연산을 지원하는 로봇은 다음과 같습니다 바이올로이드 휴머노이드 바이올로이드 프리미엄 휴머노이드 A타입 바이올로이드 프리미엄 휴머노이드 B타입 바이올로이드 프리미엄 휴머노이드 C타입 본 주제에 대한 설명은 바이올로이드 프리미엄 휴머노이드 A타입을 기준으로 진행됩니다 끝점 선택 Walking Step 두 발을 모두 움직이는 끝점이며 두 발 가운데에 위치합니다 Right Foot 오른쪽 발만 움직이는 끝점이며 발바닥 가운데에 위치합니다 Left Foot 왼쪽 발만 움직이는 끝점이며 발바닥 가운데에 위치합니다 끝점 초기화 끝점의 위치를 초기화시킵니다 끝점 움직이기 3D 공간에서 끝점은 6개의 파라미터로 제어가 가능합니다 로봇의 구조에 따라 6개의 파라미터가 모두 나오지 않는 경우도 있습니다 값을 바꾸기 위해서는 해당 파라미터를 선택한 후 다음과 같은 방법을 사용합니다 키보드의 키를 누르면 1씩 감소하고 키를 누르면 1씩 증가합니다 키보드의 Shift 키를 누른 상태에서 키를 누르면 10씩 감소하고 키를 누르면 10씩 증가합니다 마우스로 더블 클릭을 하거나 Enter 키를 누르면 값을 변경할 수 있는 컨트롤이 나타납니다 mm X축 방향으로 mm단위로 이동합니다 mm Y축 방향으로 mm단위로 이동합니다 mm Z축 방향으로 mm단위로 이동합니다 X축을 기준으로 각도 단위로 회전합니다 Y축을 기준으로 각도 단위로 회전합니다 Z축을 기준으로 각도 단위로 회전합니다 참고 각 파라미터는 최소 값과 최대 값이 있어서 그 범위에서만 변경이 가능합니다 역기구학 연산은 때때로 수학적으로 결과를 알 수 없는 경우가 발생하며 이를 해 Solution 가 없거나 무수히 많다라고 표현합니다 이로인해 파라미터 값이 범위 안에 있는데도 불구하고 변경되지 않는 경우가 발생하는데 이런 경우에는 다른 파라미터 값을 바꾸면 해결이 됩니다 예를 들어 다리를 끝까지 펴고 있는 경우 Z가 에는 혹은 Y파라미터가 변경되지 않습니다 결과 적용 스텝의 포즈가 선택된 상태에서는 데이터 상의 포즈값이 바뀌고 로봇의 포즈가 선택된 상태에서는 로봇의 포즈값이 바뀝니다 포즈 실행 캡쳐 스텝의 포즈와 로봇의 포즈 스텝의 포즈는 현재 선택된 모션 파일 상의 스텝을 의미합니다 즉 스텝의 포즈가 선택된 상태에서는 포즈 유틸리티에서 바꾼 포즈가 바로 모션 파일에 반영됩니다 로봇의 포즈는 현재 연결된 로봇을 의미합니다 즉 로봇의 포즈가 선택된 상태에서는 포즈 유틸리티에서 바꾼 포즈가 바로 로봇에 반영됩니다 참고 스텝의 포즈는 현재 선택한 페이지에 스텝이 있어야 활성화 됩니다 로봇의 포즈는 로봇이 연결되어야 활성화 됩니다 포즈 실행 캡쳐 기본 포즈 편집기의 포즈 실행 포즈 캡쳐 와 같은 기능입니다 포즈 실행 스텝의 포즈를 로봇의 포즈에 반영합니다 포즈 캡쳐 로봇의 포즈를 현재 선택한 스텝의 포즈에 반영합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#포즈-유틸리티"
	},
	"4560": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "스텝 편집",
		"header3": "",
		"content": "모션 스텝 Step 이란 연속된 모션을 재생하기 위해 필요한 키 프레임을 의미합니다 모션 스텝에는 모션의 실행 속도를 결정하는 재생 시간이 추가되어 있습니다 스텝 편집기는 스텝을 보다 편리하게 편집할 수 있는 기능을 제공합니다 스텝은 페이지 당 최대 7개까지 만들 수 있습니다 만약 만들고자 하는 모션의 스텝 개수가 7개를 넘어간다면 페이지 연결 기능을 활용하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#스텝-편집"
	},
	"4561": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "스텝 편집",
		"header3": "스텝 추가/삽입/삭제/이동",
		"content": "스텝 추가 스텝 리스트의 제일 마지막에 새로운 스텝을 추가합니다 스텝 삽입 선택한 스텝 앞에 새로운 스텝을 삽입합니다 스텝 삭제 선택한 스텝을 리스트에서 삭제합니다 스텝 이동 선택한 스텝의 순서를 바꿉니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#스텝-추가삽입삭제이동"
	},
	"4562": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "스텝 편집",
		"header3": "스텝 멈춤 시간",
		"content": "스텝 멈춤 시간은 현재 스텝을 실행한 후 다음 스텝으로 가기 전에 멈추는 시간입니다 단위는 초 sec 이며 008초 단위로 증감합니다 값의 범위는 04초입니다 아래쪽의 스크롤바로 시간을 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#스텝-멈춤-시간"
	},
	"4563": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "스텝 편집",
		"header3": "스텝 실행 시간",
		"content": "스텝 실행 시간은 이전 스텝에서 현재 스텝까지 걸리는 시간입니다 단위는 초 sec 이며 008초 단위로 증감합니다 값의 범위는 072 04초입니다 아래쪽의 스크롤바로 시간을 바꿀 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#스텝-실행-시간"
	},
	"4564": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "스텝 편집",
		"header3": "스텝 복사/잘라내기/붙여넣기",
		"content": "스텝 복사 선택한 스텝을 복사할 수 있습니다 스텝 잘라내기 선택한 스텝을 잘라냅니다 스텝 붙여넣기 복사 혹은 잘라내기한 스텝을 붙여넣습니다 붙여넣기할 때 선택한 스텝의 내용은 대체됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#스텝-복사잘라내기붙여넣기"
	},
	"4565": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "페이지 편집",
		"header3": "",
		"content": "모션 페이지란 저장된 모션을 구분하기 위한 영역 단위입니다 외부에서 저장된 모션을 사용할때는 페이지 단위로 접근합니다 모션 데이터 안에는 255개의 페이지가 존재합니다 일부 제어기는 127개만 지원합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#페이지-편집"
	},
	"4566": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "페이지 편집",
		"header3": "페이지 선택",
		"content": "마우스로 해당 페이지를 클릭하면 1개의 페이지를 선택할 수 있습니다 여러 개의 페이지를 선택하는 방법은 다음과 같습니다 연속적으로 여러 페이지를 선택 마우스로 드래그 Drag 하거나 Shift키를 누른 상태에서 다른 페이지를 선택 개별적으로 여러 페이지를 선택 Ctrl키를 누른 상태에서 해당 페이지를 선택 전체 페이지 선택 버튼을 눌러서 선택 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#페이지-선택"
	},
	"4567": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "페이지 편집",
		"header3": "페이지 연결",
		"content": "모션 페이지를 서로 연결시켜서 유기적인 관계를 갖게 만들 수 있습니다 이어지는 Next 페이지 한 페이지에는 최대 7개의 스텝만 들어갈 수 있습니다 이로인해 어떤 모션은 한 페이지에 들어가지 못합니다 한 모션을 여러 개의 페이지에 걸쳐서 넣을 때 이어지는 페이지 기능을 사용합니다 이어지는 페이지는 연결될 페이지 번호를 사용합니다 마무리 Exit 페이지 모션 정지를 명령했을 때 대부분 현재 실행 중인 모션으로 인해 로봇은 매우 불안한 상태에 놓입니다 보다 안정적인 상태로 로봇을 만들고 모션을 정지하고 싶을 때 마무리 페이지 기능을 사용합니다 마무리 페이지는 연결될 페이지 번호를 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#페이지-연결"
	},
	"4568": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "페이지 편집",
		"header3": "페이지 복사/잘라내기/붙여넣기",
		"content": "페이지 복사 선택한 페이지를 복사합니다 페이지 잘라내기 선택한 페이지를 잘라냅니다 페이지 붙여넣기 복사하거나 잘라낸 페이지를 붙여넣습니다 붙여넣기할 때 선택된 페이지의 내용은 대체됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#페이지-복사잘라내기붙여넣기"
	},
	"4569": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "페이지 편집",
		"header3": "페이지 반복/속도 설정",
		"content": "반복 횟수 모션 실행시 현재 페이지를 반복할 횟수입니다 재생 배속 모션 실행시 현재 페이지의 재생 배속입니다 스텝 실행 시간 과 달리 페이지 전체에 영향을 줍니다 0배속은 스텝 실행 시간을 그대로 사용하는 것입니다 0배속보다 작으면 전체적으로 느려집니다 0배속보다 크면 전체적으로 빨라집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#페이지-반복속도-설정"
	},
	"4570": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "페이지 편집",
		"header3": "관성력 조절",
		"content": "스텝과 스텝이 연결되는 부분은 힘이 발생하는데 이 힘은 관성의 법칙때문에 나타나며 관성력이라 부릅니다 일반적으로 관성력은 속도의 변화량인 가속도로 인해 발생합니다 즉 가속도가 크면 관성력이 커지고 가속도가 작으면 관성력은 작아집니다 가속도를 줄이려면 속도를 서서히 증감시키고 가속도를 크게하려면 속도를 급격하게 증감시키면 됩니다 관성력 조절은 이 가속도를 조절하는 것이며 값이 클수록 속도가 서서히 증감하여 가속도를 줄여줍니다 관성력은 127까지 값을 설정해서 조절할 수 있습니다 기본 값은 32입니다 0에 가까울수록 관성력은 커집니다 127에 가까울수록 관성력은 작아집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#관성력-조절"
	},
	"4571": {
		"product": "로보플러스 모션 1.0",
		"header1": "모션 편집",
		"header2": "페이지 편집",
		"header3": "관절 유연성",
		"content": "관절 유연성은 다이나믹셀의 컴플라이언스 Compliance 를 설정하는 것입니다 관절의 유연성에 따른 모션의 장단점은 다음과 같습니다 관절의 유연성이 큰 경우 장점 춤추는 팔 동작과 같이 현란한 움직임이 필요한 경우 부드럽게 움직일 수 있습니다 단점 지탱력이 많이 필요한 다리의 경우 안 좋을 수 있습니다 관절의 유연성이 작은 경우 장점 보행과 같이 몸을 지탱하는 힘이 필요한 경우 안정하게 만들 수 있습니다 단점 현란한 모션의 경우 뻣뻣하게 보일 수 있습니다 관절 유연성은 총 7단계로 설정할 수 있습니다 1단계 거의 없음 권장하지 않음 2단계 매우 낮음 3단계 낮음 4단계 약간 낮음 5단계 보통 기본 값 6단계 높음 7단계 매우 높음 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#관절-유연성"
	},
	"4572": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#기타-정보"
	},
	"4573": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "로봇 모션 업로드",
		"header3": "",
		"content": "제어기에 있는 모션 데이터를 PC로 옮기는 작업을 업로드 Upload 라 합니다 로봇을 연결하여 로봇 모션 창을 띄웁니다 로봇 모션 창을 선택한 후 다른 이름으로 저장하기 메뉴를 선택합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#로봇-모션-업로드"
	},
	"4574": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "모션 오프셋",
		"header3": "",
		"content": "오프셋 Offset 이란 기준 값에 대한 차이를 의미합니다 모션 오프셋은 기준 모션에 대한 차이를 뜻하고 기준 모션을 수행하는 로봇을 마스터 Master 로봇이라 부릅니다 같은 로봇을 여러 대 만들었을 때 같은 모션을 실행해도 로봇의 자세는 조금씩 차이가 있습니다 그 이유는 모터의 위치 편차와 조립 상의 오차때문입니다 이 차이로 인해 어떤 로봇은 넘어지기도 합니다 모션 오프셋 개념을 사용하면 모션을 수정하지 않고 로봇마다의 차이를 적용하여 같은 모션을 쓸 수 있습니다 참고 일반적으로 모션 오프셋은 무시할 정도로 작습니다 하지만 휴머노이드와 같이 중심을 잡기 어려운 로봇에서는 이 문제가 매우 크게 나타날 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-오프셋"
	},
	"4575": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "모션 오프셋",
		"header3": "모션 오프셋 편집",
		"content": "로봇의 관절 편차는 모션 오프셋 편집 기능을 이용해서 맞출 수 있습니다 참고 모션 오프셋 메뉴를 선택하면 모든 관절의 토크를 On시켜서 현재 자세를 유지시킵니다 따라서 차이를 쉽게 알 수 있는 기준 자세를 미리 취해 놓은 후에 이 기능을 실행하는 것이 좋습니다 notice 해당 관절을 선택한 후 편집기로 값을 편집할 수 있습니다 값은 모터를 기준으로 CCW방향으로 더 움직인다는 뜻입니다 값은 모터를 기준으로 CW방향으로 더 움직인다는 뜻입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-오프셋"
	},
	"4576": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "모션 오프셋",
		"header3": "모션 오프셋 초기화",
		"content": "모션 오프셋 값을 모두 0으로 초기화시킵니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-오프셋"
	},
	"4577": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "모션 오프셋",
		"header3": "모션 오프셋 저장",
		"content": "현재 수정한 오프셋을 저장시킵니다 이 기능은 오프셋 정보를 제어기 내부에 저장시킵니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-오프셋"
	},
	"4578": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "모션 오프셋",
		"header3": "모션 오프셋 파일로 저장",
		"content": "현재 로봇의 오프셋 정보를 파일로 저장하여 PC에 보관할 수 있습니다 PC상에 모션 오프셋 파일은 확장자가 ofs인 형태로 존재합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-오프셋"
	},
	"4579": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "모션 오프셋",
		"header3": "모션 오프셋 다운로드",
		"content": "PC에 보관중인 모션 오프셋 파일 ofs 을 로봇에 다운로드할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#모션-오프셋"
	},
	"4580": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "전체 페이지 편집",
		"header3": "",
		"content": "전체 페이지 편집은 모든 페이지에 수정 사항을 반영시킬 때 사용합니다 전체 페이지 편집이 필요한 경우는 다음과 같습니다 모든 모터의 값을 한꺼번에 바꿉니다 ID의 사용 유무를 바꿉니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#전체-페이지-편집"
	},
	"4581": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "전체 페이지 편집",
		"header3": "해상도 설정",
		"content": "모터의 해상도 Resolution 를 설정을 할 수 있습니다 해상도 설정은 실제 로봇이 연결되지 않은 상태에서 모션을 만들때 설정하는 값입니다 다이나믹셀이 연결된 상태에서는 각 다이나믹셀에 맞는 해상도가 자동으로 셋팅되며 변경할 수 없습니다 새롭게 추가된 EX MX시리즈 모델의 경우에는 4096으로 변환하셔야 하며 그외의 다이나믹셀은 1024 값으로 사용하시기 바랍니다 EX시리즈는 250도까지 위치제어가 가능합니다 MX시리즈는 360도까 지 위치제어가 가능합니다 해상도를 4096으로 변환 했을때 기본 포즈 편집기에서 기본값을 512 2048 로 자동 변환이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#해상도-설정"
	},
	"4582": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "전체 페이지 편집",
		"header3": "ID 사용 유무 설정",
		"content": "RoboPlus Motion은 최대 26개의 모터로 만들어진 로봇의 모션을 지원합니다 다이나믹셀 ID로 25번까지 ID 사용 유무를 설정하여 필요한 ID만 모션 편집시 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#id-사용-유무-설정"
	},
	"4583": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "전체 페이지 편집",
		"header3": "ID 교환하기",
		"content": "ID 교환은 로봇에 사용된 관절의 위치가 바뀐 경우 관절의 위치 값을 손쉽게 바꿀 수 있습니다 교환할 2개의 ID를 선택한 후 실행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#id-교환하기"
	},
	"4584": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "전체 페이지 편집",
		"header3": "값 모두 바꾸기",
		"content": "해당 ID의 관절 값을 특정 값으로 모두 바꾸고 싶을 때 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#값-모두-바꾸기"
	},
	"4585": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "전체 페이지 편집",
		"header3": "값 모두 오프셋 적용",
		"content": "오프셋 Offset 이란 기준에 대해 상대적인 차이를 의미합니다 해당 ID의 관절 값에 대해 전체적으로 값을 빼거나 더할 때 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#값-모두-바꾸기"
	},
	"4586": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "키보드 단축키 활용 팁",
		"header3": "",
		"content": "로봇의 모션을 실제로 만들다보면 한손은 로봇을 잡고 있기때문에 마우스와 키보드를 동시에 사용하는 것이 쉽지 않습니다 여기서는 키보드만으로 모션을 만들 수 있는 유용한 팁을 알려드립니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#키보드-단축키-활용-팁"
	},
	"4587": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "키보드 단축키 활용 팁",
		"header3": "편집창 방향키로 이동하기",
		"content": "페이지 편집창 스텝 편집창 포즈 편집창을 방향키로 포커스를 이동시킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#키보드-단축키-활용-팁"
	},
	"4588": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "키보드 단축키 활용 팁",
		"header3": "관절값 키보드로 바꾸기",
		"content": "키를 이용하면 해당 관절 값이 1씩 증가하거나 감소합니다 키를 Shift 키와 함께 이용하면 해당 관절 값이 10씩 증가하거나 감소합니다 Enter 키를 누르면 설정창으로 포커스가 이동되고 수정한 뒤 다시 Enter 를 누르면 돌아갑니다 이 기능이 가능한 편집창은 다음과 같습니다 스텝의 포즈 편집창 로봇의 포즈 편집창 모션 오프셋 편집창 로봇의 3D 화면 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#키보드-단축키-활용-팁"
	},
	"4589": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "키보드 단축키 활용 팁",
		"header3": "토크 On/Off 키보드로 바꾸기",
		"content": "관절을 선택하고 Space키를 누르면 토크 상태가 바뀝니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#키보드-단축키-활용-팁"
	},
	"4590": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "키보드 단축키 활용 팁",
		"header3": "스텝별로 로봇 움직이기",
		"content": "원하는 스텝을 선택하고 Enter키를 누르면 로봇이 해당 스텝의 포즈를 취합니다 로봇 모션 창의 경우만 가능 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#키보드-단축키-활용-팁"
	},
	"4591": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "사용자 로봇 만들기",
		"header3": "",
		"content": "사용자가 만든 로봇을 RoboPlus Motion 프로그램에 추가하여 사용 할 수 있습니다 주의 이 내용은 다음과 같은 전문 지식을 필요로 합니다 XML 3D Graphics Programming ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#사용자-로봇-만들기"
	},
	"4592": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "사용자 로봇 만들기",
		"header3": "폴더 구조",
		"content": "RoboPlus Motion이 설치된 폴더 안을 보면 로봇 정보 파일이 아래와 같이 존재합니다 예 Program Files ROBOTIS RoboPlus Motion Robots 로봇 정보가 기술된 파일들이 있습니다 Models 3D 그래픽을 위한 각 파트들의 모델 데이터가 있습니다 PlugIn IK 역기구학 연산 모듈들이 있습니다 사용자가 자신의 로봇을 만들어 넣기 위해서는 각 폴더에 관련 파일들을 만들어 넣어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#폴더-구조"
	},
	"4593": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "사용자 로봇 만들기",
		"header3": "로봇 정보 파일",
		"content": "로봇 정보 파일에는 RoboPlus Motion이 필요로 하는 모든 정보가 기술되어 있습니다 이 파일은 rbt라는 확장자로 존재합니다 포즈 유틸리티의 로봇 리스트는 rbt파일 리스트를 보여주는 것입니다 로봇 정보 파일은 XML형식으로 관련 정보를 기술합니다 일반 Text편집기로 파일의 내용을 보면 이를 확인할 수 있습니다 General 이 부분에는 로봇의 일반적인 정보가 기술되며 필수로 입력해야 합니다 Name 리스트에 보여질 이름을 입력합니다 culture속성을 줘서 언어별로 보여지게 할 수 있는데 RoboPlus Motion에서 지원하는 언어만 가능합니다 값 언어 kor 한국어 jpn 일본어 없음 영어 혹은 그 외의 언어 Name Premium Humanoid type Name Name culture kor Bioloid Premium Type Name ockquote 바이올로이드 프리미엄 A타입의 예 Motor 로봇에 사용되는 다이나믹셀 정보를 입력합니다 id 다이나믹셀의 ID model 모델명 init 초기 자세 버튼을 눌 러서 취할 포즈의 위치 값 Motor id model AX 12 init 205 Motor Motor id model AX 12 init 818 Motor Motor id model AX 12 init 251 Motor Motor id model AX 12 init 772 Motor Motor id model AX 12 init 512 Motor Motor id model AX 12 init 512 Motor Motor id model AX 12 init 358 Motor Motor id model AX 12 init 666 Motor Motor id model AX 12 init 512 Motor Motor id 10 model AX 12 init 512 Motor Motor id 11 model AX 12 init 475 Motor Motor id 12 model AX 12 init 549 Motor Motor id 13 model AX 12 init 437 Motor Motor id 14 model AX 12 init 587 Motor Motor id 15 model AX 12 init 549 Motor Motor id 16 model AX 12 init 475 Motor Motor id 17 model AX 12 init 512 Motor Motor id 18 model AX 12 init 512 Motor ockquote 바이올로이드 프리미엄 A타입의 예 Mirror 미러 Mirror 기능을 수행하기 위한 정보입니다 사용하지 않는다면 입력하지 않아도 됩니다 서로 대칭이 되는 다이나믹셀만 입력합니다 대칭되는 대상이 없는 경우는 입력하지 않습니다 Right 오른쪽에 해당하는 다이나믹셀 ID Left 왼쪽에 해당하는 다이나믹셀 ID Mirror Right 11 13 15 17 Right Left 10 12 14 16 18 Left Mirror ockquote 바이올로이드 프리미엄 A타입의 예 InverseKinematics 역기구학 연산을 수행할 모듈을 연결시킵니다 연산 모듈은 DLL형태로 존재하며 이것은 뒤에서 설명할 Plug SDK 프로그래밍 을 통해 만들 수 있습니다 사용하지 않는다면 없어도 됩니다 InverseKinematics Module Name PremiumHumanoidA dll Name Module InverseKinematics ockquote 바이올로이드 프리미엄 A타입의 예 Object3D 3D 디스플레이를 위한 로봇 조립 정보가 포함됩니다 로봇의 조립 정보가 트리 Tree 구조로 형성됩니다 사용하지 않는다면 없어도 됩니다 Part 로봇을 구성하는 각 파트 정보가 기술됩니다 각 파트끼리의 구속관계는 트리 Tree 구조로 표현됩니다 name 3D 모델 파일명입니다 파일 확장자는 제외하고 입력합니다 예 f3 igs라면 f3만 입력 3D 변환에 사용되는 회전과 이동 정보가 포함된 3x4 행렬입니다 각 요소는 공백 문자 Space 로 구분됩니다 id 다이나믹셀의 경우 id를 입력합니다 type 움직이는 방법에 대해 정의합니다 모터 몸체가 움직이는 경우는 type을 body 로 지정합니다 몸체는 고정되고 연결된 혼 Horn 이 움직이는 경우는 고정할 대상에 body 을 지정하고 움직일 대상에 horn 을 지정합니다 Object3D Part name f51 302 Part name f3 70 19 Part Part name f3 70 19 Part Part name f52 ockquote 바이올로이드 프리미엄 A타입의 예 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#로봇-정보-파일"
	},
	"4594": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "사용자 로봇 만들기",
		"header3": "3D 모델 데이터",
		"content": "3D 화면에 보여지는 그래픽은 3D 모델 데이터의 역할입니다 3D 모델 데이터는 여러 3D 모델링 소프트웨어들을 이용해서 만들 수 있습니다 기본적으로 제공되는 모델 데이터 외에 사용자가 설계한 데이터도 넣을 수 있습니다 RoboPlus Motion은 IGES igs 포맷만 지원하며 데이터 크기가 너무 크면 3D 화면이 느려지게 되므로 되도록이면 데이터 크기를 작게 만드는 것을 권장합니다 현재 기본으로 제공되는 모델 데이터는 다음과 같습니다 Models폴더 안에 존재하며 RoboPlus 업데이트 시 추가될 수 있습니다 이름 모양 파일 F1 f1 igs F2 f2 igs F3 f3 igs F4 f4 igs F5 f5 igs F6 f6 igs F7 f7 igs F8 f8 igs F9 f9 igs F10 f10 igs F11 f11 igs F12 f12 igs F15 F16 f15 igs F51 f51 igs F52 f52 igs F53 f53 igs F56 f56 igs F57 f57 igs F58 f58 igs F60 f60 igs WA wa igs BU bu igs CM cm igs ADAPTOR CM5 adaptor cm5 igs BATTERY battery igs AX 12 ax 12 igs AX 12 Horn ax 12 horn igs AX S1 ax s1 igs ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#3d-모델-데이터"
	},
	"4595": {
		"product": "로보플러스 모션 1.0",
		"header1": "기타 정보",
		"header2": "사용자 로봇 만들기",
		"header3": "Plug-In SDK 프로그래밍",
		"content": "사용자는 Plug SDK를 이용해서 포즈 유틸리티의 역기구학 연산 모듈을 추가할 수 있습니다 설명은 Visual Studio 2005에서 으로 개발하는 것을 예로 들었습니다 Sample 예제 첨부 Download ZIP PlugInSDK Example zip 프로젝트 생성 Visual Studio 메뉴에서 파일 새로 만들기 프로젝트 를 선택한 후 Visual Windows 클래스 라이브러리 타입의 프로젝트를 만듭니다 참조 추가 Visual Studio 메뉴에서 프로젝트 참조 추가 를 선택한 후 참조 추가 대화 상자에서 찾아보기 버튼을 눌러서 RoboPlus가 설치된 폴더에 있는 Motion PlugInSDK dll 을 선택합니다 예 Program Files ROBOTIS RoboPlus Motion PlugInSDK dll 인터페이스 구현 구현할 Class 파일에 다음과 같이 기술합니다 예 Class1 cs using ROBOTIS MotionEditor SDK namespace 추가 namespace MyPlugIn public class MyPlugIn IInverseKinematics 인터페이스 상속 커서를 IInverseKinematics 글자에 두고 오른쪽 마우스 버튼을 눌러서 인터페이스 구현 인터페이스 구현 을 선택하면 구현할 소스가 자동으로 생성됩니다 CurrentPose RoboPlus Motion과 주고 받을 Pose 데이터입니다 사용자는 다음의 규칙을 지켜야 합니다 배열의 생성은 사용자가 직접하며 개수는 26입니다 배열의 인덱스가 다이나믹셀의 ID입니다 해당 ID의 모터에 값을 전달하려면 1023 혹은 4096의 값을 넣고 그렇지 않으려면 1을 넣습니다 RoboPlus Motion이 get을 호출할 때는 역기구학 Inverse Kinematics 연산 결과를 전달해야 하며 set을 호출할 때는 넘겨준 Pose 데이터를 바탕으로 순기구학 Forward Kinematics 을 연산하여 끝점을 알아내야 합니다 EndPoints 끝점 리스트에 출력될 이름입니다 끝점 리스트 중 선택하거나 선택된 결과를 알아내기 위해서는 아래 인터페이스를 구현합니다 SelectedIndex 끝점의 인덱스 SelectedEndPoint 끝점의 이름 Roll Pitch Yaw 끝점의 3D 로봇의 중심으로부터의 위치 데이터입니다 사용자 DLL에서 최소값과 최대값을 설정할 수 있습니다 Roll은 X축 방향의 회전이고 Pitch는 Y축 방향의 회전 Yaw는 Z축 방향의 회전을 의미합니다 MinX MinY MinZ MinRoll MinPitch MinYaw 끝점 위치의 최소값입니다 MaxX MaxY MaxZ MaxRoll MaxPitch MaxYaw 끝점 위치의 최대값입니다 만약 최소값과 최대값을 같게 만든다면 해당 끝점은 사용하지 않는 것으로 간주되어 리스트에 나타나지 않습니다 Roll Pitch Yaw 끝점의 위치 값입니다 Reset RoboPlus Motion에서 초기화 버튼을 눌렀을 때 호출됩니다 끝점의 위치 값을 초기화시킵니다 Plug 추가 프로젝트를 빌드를 성공했다면 DLL파일을 RoboPlus Motion폴더내의 PlugIn 폴더에 복사합니다 예 Program Files ROBOTIS RoboPlus Motion PlugIn 로봇 정보 파일 rbt 에 역기구학 연산을 할 DLL정보를 기술합니다 RoboPlus Motion을 실행시켜서 추가시킨 로봇이 잘 동작하는지 확인합니다 InverseKinematics Module Name PremiumHumanoidA dll Name Module InverseKinematics ockquote 바이올로이드 프리미엄 A타입의 예 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/motion/#plug-in-sdk-프로그래밍"
	},
	"4596": {
		"product": "로보플러스 태스크 1.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "어떤 일을 처리하기 위한 행동들의 집합을 태스크 Task 라고 합니다 로봇이 해야할 태스크를 프로그래밍 한 소스를 로보플러스 RoboPlus 에서는 태스크 코드 Task Code 라고 합니다 로봇은 사용자가 작성한 태스크 코드에 따라 동작하게 되며 이러한 태스크 코드를 쉽게 작성할 수 있도록 도와주는 것이 로보플러스 태스크 RoboPlus Task 프로그램입니다 태스크 코드 파일은 PC 에서 tsk 라는 확장자를 가지며 좌측과 같은 아이콘으로 표시됩니다 참고 상위버젼의 Task 파일은 하위버젼에서 호환되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#개요"
	},
	"4597": {
		"product": "로보플러스 태스크 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "",
		"content": "다운로드 로보티즈 홈페이지 자료실 로보플러스는 모든 로보티즈 제품을 프로그래밍할 수 있는 통합 소프트웨어입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#설치하기"
	},
	"4598": {
		"product": "로보플러스 태스크 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "RoboPlus 시스템 요구 사항",
		"content": "OS Windows XP Service Pack 이상 Vista 32 64bit 32 64bit 800MHz이상의 32비트 x86 또는 64비트 x64 프로세서 3D 가속 기능을 지원하는 그래픽 카드 512MB이상 시스템 메모리 여유공간이 500MB 이상인 하드디스크 참고 로보플러스를 실행하기 위해선 NET FrameWork 5이상의 버전이 필요 합니다 로보플러스 설치시 NET FrameWork 자동설치가 실패할 경우엔 NET FreameWork를 별도로 설치하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#설치하기"
	},
	"4599": {
		"product": "로보플러스 태스크 1.0",
		"header1": "개요",
		"header2": "설치하기",
		"header3": "RoboPlus 설치 실패시",
		"content": "대부분의 RoboPlus 설치 실패의 원인은 사용자 PC환경에 따른 NET FrameWork 자동 설치 실패 입니다 따라서 사용자가 직접 NET FrameWork 5를 수동으로 설치 하셔야 합니다 NET FrameWork 5를 수동으로 설치 하기 전에 Windows installer 1이상이 설치 되어 있어야 합니다 Windows installer와 NET Framework는 마이크로 소프트 다운로드 센터에서 다운로드가 가능합니다 다운로드 Windows installer 다운로드 NET Framework ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#설치하기"
	},
	"4600": {
		"product": "로보플러스 태스크 1.0",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#시작하기"
	},
	"4601": {
		"product": "로보플러스 태스크 1.0",
		"header1": "시작하기",
		"header2": "명령줄 만들기",
		"header3": "",
		"content": "명령을 작성하고 싶은 빈 줄을 더블클릭하거나 마우스를 클릭 후 엔터를 입력하면 선택한 제어기에서 사용할 수 있는 명령을 입력할 수 있습니다 만약 제어기가 선택되어 있지 않다면 사용자에게 현재 프로그램에서 사용할 제어기를 묻게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#명령줄-만들기"
	},
	"4602": {
		"product": "로보플러스 태스크 1.0",
		"header1": "시작하기",
		"header2": "파라미터 만들기",
		"header3": "",
		"content": "파라미터 Parameter 는 명령이 수행되기 위해 필요한 대상입니다 아무것도 설정되지 않았다면 표시로 나타나게 됩니다 명령을 선택한 다음에는 명령줄을 완성하기 위해 파라미터를 만들어야 합니다 Enter키를 누르거나 마우스를 더블클릭하여 편집 모드로 들어갑니다 좌 우 방향키를 누르거나 마우스로 클릭하면 만들 파라미터를 선택할 수 있습니다 Enter키를 누르거나 마우스를 더블클릭하면 파라미터 선택창이 나타납니다 적절한 파라미터를 선택합니다 각 파라미터의 사용법을 익히는 것이 매우 중요합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#파라미터-만들기"
	},
	"4603": {
		"product": "로보플러스 태스크 1.0",
		"header1": "시작하기",
		"header2": "프로그램 다운로드",
		"header3": "",
		"content": "태스크 코드를 제어기에 다운로드합니다 다운로드 과정은 제어기 내부에 태스크 코드를 저장하므로 한번만 수행하면 됩니다 PC 와 제어기가 연결되어야 합니다 태스크 코드를 다운로드하기 위해서는 PC 와 제어기가 연결되어야 합니다 연결 방법은 각 제어기 정보 를 참고하세요 사용할 통신 포트를 선택해야 합니다 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다 RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다 PC 와 제어기가 연결되어 있는지 확인합니다 연결 방법은 각 제어기 정보 를 참고하세요 제어기의 전원이 켜져 있는지 확인합니다 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다 다운로드 메뉴를 선택합니다 만약 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다 룰 체크 에러 메시지 확인 다운로드를 진행합니다 만약 다운로드에 실패했다면 처음부터 다시 시도합니다 태스크 코드 Task Code 를 실행합니다 로봇의 동작을 실행 합니다 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다 태스크 코드 실행 방법은 각 제어기 정보 를 참고하세요 로보플러스 프로그램 다운로드 CM 100 로보플러스 프로그램 다운로드 CM 510 530 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#프로그램-다운로드"
	},
	"4604": {
		"product": "로보플러스 태스크 1.0",
		"header1": "시작하기",
		"header2": "프로그램 결과 출력",
		"header3": "",
		"content": "일반적으로 제어기는 PC와 같이 모니터와 같은 출력 장치가 없기 때문에 내부 상태를 확인하기 어렵습니다 따라서 터미널 Terminal 이라는 프로그램을 통해 PC 모니터를 빌려쓰는 방식을 사용합니다 RoboPlus Task에는 터미널 프로그램이 포함되어 있어서 제어기의 상태를 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#프로그램-결과-출력"
	},
	"4605": {
		"product": "로보플러스 태스크 1.0",
		"header1": "시작하기",
		"header2": "프로그램 결과 출력",
		"header3": "프로그램 출력용 모니터 창 띄우기",
		"content": "프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 띄워야 합니다 프로그램 출력용 모니터 창을 띄우는 방법은 아래와 같이 여러 가지가 있습니다 프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭 도구 모음에서 프로그램 출력 보기 버튼을 클릭 프로그램 메뉴의 프로그램 출력 보기 메뉴 선택 혹은 단축키 F5 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#프로그램-결과-출력"
	},
	"4606": {
		"product": "로보플러스 태스크 1.0",
		"header1": "시작하기",
		"header2": "가상로봇 조종",
		"header3": "",
		"content": "RboPlus Task는 RC 100 등과 같은 조종기가 없어도 조종 기능을 사용할 수 있도록 가상 로봇 조종 기능을 지원하며 조종기 버튼을 마우스로 클릭하거나 키보드를 이용하여 사용할 수 있습니다 키보드 조종은 아래 표를 참고하세요 실제 RC 100 키 가상 RC 100의 키보드 키 방향키 방향키 방향키 방향키 숫자키 숫자키 숫자키 숫자키 숫자키 숫자키 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/getting_started/#가상로봇-조종"
	},
	"4607": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#프로그래밍"
	},
	"4608": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "편집",
		"header3": "",
		"content": "RoboPlus Task에서 편집할 때 사용하는 방법들입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#편집"
	},
	"4609": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "편집",
		"header3": "여러줄 선택",
		"content": "RoboPlus Task는 프로그램 코드에서 잘라내기 복사 삭제 주석처리 등의 편집을 위해 여러줄 선택 기능을 지원합니다 프로그램 코드에서 여러줄을 선택하는 방법은 다음과 같습니다 컨트롤 Ctrl 키를 누른 상태에서 마우스 클릭으로 여러줄 선택 쉬프트 Shift 키를 누른 상태에서 선택하려는 첫 번째 명령줄을 마우스 클릭 후 마지막 명령줄을 클릭하여 여러줄 선택 마우스로 클릭 후 드래그하여 여러줄 선택하여도 같은 결과를 얻을 수 있습니다 프로그램 코드 전체를 선택하려면 마우스 오른쪽 버튼을 눌러 모두 선택 명령을 실행합니다 단축키는 컨트롤 Ctrl 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#여러줄-선택"
	},
	"4610": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "편집",
		"header3": "줄 삽입",
		"content": "프로그램 코드에 빈 줄을 삽입하는 방법은 다음과 같습니다 삽입하고자 하는 명령줄 위를 선택한 후 스페이스바 SpaceBar 를 입력합니다 삽입하고자 하는 명령줄 위를 선택한 후 마우스 오른쪽 버튼을 눌러 줄 삽입 명령을 실행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#줄-삽입"
	},
	"4611": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "편집",
		"header3": "줄 지우기",
		"content": "하나의 줄 혹은 여러 줄을 선택하여 지울 수 있습니다 프로그램 코드에서 줄을 지우는 방법은 다음과 같습니다 지우고자 하는 명령줄을 선택한 후 마우스 오른쪽 버튼을 눌러 줄 내용 지우기 명령을 실행합니다 선택된 명령줄의 내용만 지워지고 명령줄은 그대로 남아있게 됩니다 단축키는 백스페이스키 BackSpace 입니다 지우고자 하는 명령줄을 선택한 후 마우스 오른쪽 버튼을 눌러 줄 지우기 명령을 실행합니다 선택된 명령줄과 내용이 모두 삭제되며 아래줄 내용이 위로 당겨집니다 단축키는 삭제키 Delete 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#줄-지우기"
	},
	"4612": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "편집",
		"header3": "줄 활성/비활성",
		"content": "프로그램 코드에서 명령줄을 활성 비활성시키는 방법은 다음과 같습니다 활성 혹은 비활성하고자 하는 명령줄을 선택한 후 마우스 오른쪽 버튼을 눌러 줄 활성 비활성 명령을 실행합니다 활성 혹은 비활성하고자 하는 명령줄을 선택한 후 컨트롤 Ctrl 를 입력합니다 활성화 되어있는 줄에서 이 명령을 실행하면 비활성 상태로 바뀌며 비활성 상태에 있는 줄에서 이 명령을 실행하면 활성화 상태로 바뀌게 됩니다 주로 프로그램 작성 중 테스트를 위해 잠시 명령을 실행하지 않도록 하는 등의 목적으로 많이 사용됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#줄-활성비활성"
	},
	"4613": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "편집",
		"header3": "복사/잘라내기/붙여넣기",
		"content": "복사하기 하나의 줄을 선택하거나 여러줄을 선택한 후 마우스 오른쪽 버튼을 눌러 복사 명령을 실행합니다 복사하기를 실행한 줄은 그대로 남아있으며 그 내용은 임시 저장소에 저장됩니다 복사하기 명령을 실행하는 순간 기존에 임시 저장소에 저장되어 있던 내용은 삭제됩니다 단축키는 컨트롤 Ctrl 입니다 잘라내기 하나의 줄을 선택하거나 여러줄을 선택한 후 마우스 오른쪽 버튼을 눌러 잘라내기 명령을 실행합니다 잘라내기를 실행한 줄은 지워지며 그 내용은 임시 저장소에 저장됩니다 잘라내기 명령을 실행하는 순간 기존에 임시 저장소에 저장되어 있던 내용은 삭제됩니다 단축키는 컨트롤 Ctrl 입니다 붙여넣기 임시 저장소에 데이터가 저장되어 있는 경우 실행할 수 있습니다 붙여넣기를 실행 할 명령줄을 선택한 후 마우스 오른쪽 버튼을 눌러 붙여넣기 명령을 실행합니다 붙여넣기를 하여도 임시 저장소의 내용은 그대로 남아있으며 따라서 같은 내용을 여러번 붙여넣을 수 있습니다 만약 빈 명령줄이 아닌 기존에 선택된 내용 위에 붙여넣기를 하면 덮어쓰기가 됩니다 단축키는 컨트롤 Ctrl 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#복사잘라내기붙여넣기"
	},
	"4614": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "편집",
		"header3": "이름찾기",
		"content": "프로그램 코드에서 사용한 요소의 찾기 기능을 지원합니다 편집 메뉴에서 이름 찾기 명령을 실행합니다 단축키는 컨트롤 Ctrl 입니다 찾고자 하는 내용을 입력 후 다음 찾기 버튼을 누릅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#이름찾기"
	},
	"4615": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#명령어"
	},
	"4616": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "프로그램 시작",
		"content": "프로그램 시작은 말 그대로 제일 먼저 실행되는 프로그램의 시작 지점입니다 줄 번호와 상관 없이 무조건 프로그램 시작부터 명령이 실행됩니다 C언어의 main 함수와 같은 개념입니다 사용법 프로그램 시작 명령은 줄 번호와 상관 없이 실행됩니다 한 프로그램에 두 개 이상의 프로그램 시작이 있을 수 없습니다 명령 묶음 구간이 반드시 필요합니다 프로그램 시작 명령 구간의 끝을 만나면 프로그램이 종료됩니다 예제 다음과 같이 프로그램 시작 명령을 기본으로 프로그래밍을 시작합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#프로그램-시작"
	},
	"4617": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "프로그램 강제종료",
		"content": "프로그램 수행 중에 이 문장을 만나면 그대로 프로그램이 종료됩니다 프로그램이 종료되는 경우는 다음과 같습니다 프로그램 시작의 구간을 다 수행한 경우 자연 종료 프로그램 강제 종료를 만났을 경우 강제 종료 사용법 프로그램을 끝내고 싶은 지점에 만듭니다 예제 포트 3의 터치센서가 눌렸을 때 프로그램을 종료하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#프로그램-강제종료"
	},
	"4618": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "구간 시작/끝",
		"content": "구간이란 여러 개의 명령문을 묶어놓은 것을 의미합니다 구간 시작부터 끝까지 같은 명령문에 영향 받습니다 C언어의 와 같은 개념입니다 사용법 구간의 시작과 끝은 항상 짝이 맞아야 합니다 RoboPlus Task는 자동으로 구간별로 들여쓰기를 하여 짝이 맞는지 여부를 알려줍니다 구간의 시작 끝 기호의 줄이 맞지 않는경우 누락된 구간을 찾아서 적절히 수정해야 합니다 구간은 반드시 소유하는 명령이 있어야 합니다 즉 단독으로 사용할 수 없습니다 구간 시작 끝을 반드시 가져야 할 명령은 다음과 같습니다 프로그램 시작 만약 아니면 만약 아니면 무조건 반복 조건 반복 횟수 반복 콜백 함수 함수 만약에 실행문이 한줄일 경우에는 구간기호가 생략 될 수 있다 예제 프로그램 시작 명령과 무조건 반복 명령에 구간의 시작과 끝이 설정되어 있는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#구간-시작끝"
	},
	"4619": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "주석/메모",
		"content": "프로그램 코드 내에 주석이나 메모를 삽입할 수 있습니다 주석이나 메모를 적절히 사용하면 나중에 코드를 다시 해석할 때 매우 유용합니다 잊기 쉬운 내용이나 중요한 내용을 표시할 때 주로 사용합니다 주석은 프로그램 실행에 아무런 영향을 주지 않습니다 C언어의 한 줄 주석처리 기호인 와 같은 개념입니다 C언어의 여러 줄 주석 처리 기호인 는 지원하지 않습니다 사용법 주석이나 메모를 삽입하고 싶은 줄에서 명령을 실행합니다 기호가 삽입되면 마우스로 더블클릭하거나 키보드의 엔터 Enter 를 입력한 후 원하는 내용을 입력 할 수 있습니다 내용 입력 도중 ESC 키를 입력하면 작성 중에 있던 내용이 취소되고 입력 전 내용으로 복구 됩니다 내용 입력을 완료하려면 키보드의 엔터 Enter 를 입력해야 합니다 예제 화면에 10을 출력 후 줄을 바꾸는 예제입니다 아래와 같이 설명이나 메모를 프로그램에 삽입할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#주석메모"
	},
	"4620": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "계산",
		"content": "계산은 두 값을 연산하여 결과를 내는 명령어입니다 의미는 다음과 같습니다 계산 명령어에서 사용할 수 있는 연산자는 다음과 같습니다 사칙 연산 음수 연산을 지원합니다 덧셈 두 값을 더합니다 뺄셈 앞에서 뒤의 값을 뺍니다 곱셈 두 값을 곱합니다 나눗셈 앞에서 뒤의 값을 나눕니다 나머지는 무시되어 사라지고 몫만 결과로 나옵니다 비트 bit 연산 2진수 연산을 의미합니다 AND amp 두 비트를 AND연산 합니다 OR 두 비트를 OR연산 합니다 사용법 연산자를 마우스로 더블 클릭하거나 키보드의 ENTER키를 누르면 연산자 종류를 선택할 수 있습니다 명령 수행에 필요한 3개의 파라미터 결과 연산1 연산2 를 적절히 선택합니다 예제 10과 20을 더해서 화면출력하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#계산"
	},
	"4621": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "로드",
		"content": "로드 Load 의 사전적 의미는 적재하다라는 뜻입니다 즉 로드는 값을 옮기는 명령을 수행합니다 로드는 다음과 같은 의미로 사용됩니다 장치의 기능을 실행한다 값을 옮긴다 사용법 명령 수행에 필요한 2개의 파라미터 대상 원본 를 적절히 선택합니다 예제 장치의 기능 실행 용도로 사용된 경우 타이머를 약 1초로 설정합니다 값을 옮기는 용도로 사용된 경우 변수에 5를 넣습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#로드"
	},
	"4622": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "레이블/점프",
		"content": "레이블과 점프는 프로그램 분기를 위해 사용됩니다 프로그램 분기란 프로그램 수행 순서를 바꾸는 것입니다 점프는 프로그램 분기를 실행하고 레이블은 분기할 위치를 지정합니다 C언어의 label goto와 같은 개념입니다 사용법 레이블 이름은 다음의 규칙을 지켜야 합니다 레이블 이름은 중복될 수 없습니다 레이블은 프로그램 시작 구문 혹은 함수 구문 내부에 존재해야 합니다 다른 함수의 레이블로 점프할 수 없습니다 레이블 이름은 띄어쓰기와 특수 기호 등 를 사용할 수 없습니다 레이블 이름의 시작은 숫자를 사용할 수 없습니다 레이블 이름 입력시 키보드의 ESC키를 누르면 취소됩니다 레이블 이름 입력시 키보드의 ENTER키를 누르면 입력이 완료됩니다 점프의 레이블 이름 선택시 키보드의 ESC키를 누르면 취소됩니다 점프의 레이블 이름 선택시 목록을 선택하거나 키보드의 ENTER키를 누르면 입력이 완료됩니다 점프는 반드시 존재하는 레이블을 선택해야 합니다 점프는 반드시 함수 구간 내의 레이블만 선택해야 합니다 예제 프로그램을 시작하자마자 실행분기 레이블로 점프하여 루틴2를 실행하게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#레이블점프"
	},
	"4623": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "조건문",
		"content": "조건의 참 거짓 결과에 따라 프로그램 흐름을 분기하는 명령입니다 만약 조건절의 내용이 참이면 실행합니다 C언어에서 구문과 같은 개념입니다 아니면 만약 만약 에 이어서 조건을 계속 검사할 때 사용합니다 조건절의 내용이 참이면 실행합니다 C언어의 else 구문과 같은 개념입니다 아니면 만약 과 아니면 만약 의 조건 어디에도 해당되지 않으면 실행합니다 C언어의 else 구문과 같은 개념입니다 조건절이란 조건절은 결과를 참과 거짓으로 내는 수식입니다 참은 조건이 만족된 것이고 거짓은 조건이 만족되지 못한것입니다 조건절은 다음과 같이 3부분으로 구성되고 차례대로 비교 파라미터1 비교 연산자 비교 파라미터2입니다 비교 연산자의 종류는 다음과 같습니다 두 비교 값이 같다면 참입니다 두 비교 값이 다르다면 참입니다 비교 값1이 비교 값2보다 크거나 같다면 참입니다 비교 값1이 비교 값2보다 크다면 참입니다 비교 값1이 비교 값2보다 작거나 같다면 참입니다 비교 값1이 비교 값2보다 작다면 참입니다 조건절은 연결 연산자에 의해 연결되어 복합 조건절로 사용할 수 있습니다 복합 조건절은 다음과 같이 3부분으로 구성되고 차례대로 조건절1 연결 연산자 조건절2입니다 연결 연산자의 종류는 다음과 같습니다 then 아무 조건절도 연결하지 않습니다 AND amp amp 두 조건절의 결과를 AND연산합니다 OR 두 조건절의 결과를 OR연산합니다 복합 조건절은 제한 없이 연결될 수 있으며 앞에서부터 차례대로 연산되어 최종 값은 참과 거짓으로 표현됩니다 사용법 아니면 만약 과 아니면 은 반드시 먼저 만약 이 나와야 합니다 각 구문은 명령 묶음인 구간이 반드시 필요합니다 단 실행 문이 1줄일 경우에는 별도로 구간 표시를 하지않아도 자동으로 구간으로 인식합니다 예제 다음 조건별로 실행시키고자 할 때 사용되는 예제입니다 변수 값이 90보다 클 경우 변수 값이 80보다 크고 90보다 작을 경우 변수 값이 70보다 크고 80보다 작을 경우 변수 값이 60보다 크고 70보다 작을 경우 그 외의 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#조건문"
	},
	"4624": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "무조건 반복",
		"content": "무조건 반복 명령 구간 시작과 끝 사이를 계속 반복 실행합니다 사용법 명령 묶음인 구간이 반드시 필요합니다 단 실행 문이 1줄일 경우에는 별도로 구간 표시를 하지않아도 자동으로 구간을 인식합니다 반복 구문을 빠져나오려면 반복 끝내기를 사용합니다 예제 프로그램 출력 화면에 10이라는 수를 계속 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#무조건-반복"
	},
	"4625": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "조건 반복",
		"content": "조건절이 참인 동안 구간내의 명령줄을 반복합니다 C언어의 while구문과 같은 개념입니다 사용법 명령 묶음인 구간이 반드시 필요합니다 단 실행 문이 1줄일 경우에는 별도로 구간 표시를 하지않아도 자동으로 구간을 인식합니다 반복 구문을 강제로 빠져나오려면 반복 끝내기를 사용합니다 예제 프로그램 출력 화면에 변수 값이 30이 될 때까지 화면 출력을 반복합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#조건-반복"
	},
	"4626": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "횟수 반복",
		"content": "구간내의 명령줄을 횟수만큼 반복시킵니다 시작 값과 끝 값을 설정하면 지정한 변수를 1씩 증가시키면서 반복합니다 반복횟수는 다음의 식으로 알 수 있습니다 반복횟수 끝값 시작값 C언어의 for구문과 같은 개념입니다 사용법 명령 수행에 필요한 3개의 파라미터 변수 시작값 끝값 를 적절히 선택합니다 시작값은 끝값보다 작아야 합니다 만약 시작값보다 끝값이 크다면 단 한번도 반복하지 않습니다 반복 구문을 강제로 빠져나오려면 반복 끝내기를 사용합니다 예제 감지된 소리 횟수만큼 반복하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#횟수-반복"
	},
	"4627": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "반복 끝내기",
		"content": "행 중인 반복을 무조건 종료하고 싶을 때 사용합니다 C언어의 break구문과 같은 개념입니다 사용법 반드시 반복구문 안에 존재해야 합니다 예제 숫자 10을 계속 화면출력하다가 중앙 적외선 센서값이 400보다 클 때 반복 끝내기를 실행하고 화면에 30을 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#반복-끝내기"
	},
	"4628": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "조건 대기",
		"content": "조건절이 참인 동안 프로그램 수행을 멈춥니다 C언어의 구문과 같은 개념입니다 사용법 명령 묶음인 구간이 필요 없이 적절한 조건을 설정합니다 예제 타이머가 완료될 때까지 기다리는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#조건-대기"
	},
	"4629": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "함수 강제종료",
		"content": "함수 내에서 함수 강제 종료 명령을 만나면 실행 중인 함수를 즉시 종료하고 함수를 호출한 곳으로 돌아갑니다 C언어의 return과 같은 개념입니다 사용법 일반 함수와 콜백 함수 내부에서만 사용할 수 있습니다 예제 프로그램 시작 후 사용자 함수를 계속 실행합니다 사용자 함수 내부에는 함수 강제 종료 명령 복귀 이 있어 마지막 3줄을 실행하지 않고 함수를 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#함수-강제종료"
	},
	"4630": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "함수 만들기/호출",
		"content": "동일한 코드가 반복 되거나 특정 코드 영역을 역할 단위로 구분하고자 하는 경우 그 내용을 함수로 만들 수 있으며 필요한 곳에서 호출하여 사용할 수 있습니다 C언어의 함수와 같은 개념입니다 단 C언어의 함수와 달리 리턴값과 인자가 없습니다 함수를 적절히 활용하면 프로그램의 흐름을 쉽게 파악할 수 있으며 특히 반복적인 동작을 함수로 대체하면 프로그램 코드 사용량을 크게 줄일 수 있습니다 만들어진 함수는 호출을 함으로써 실행할 수 있으며 함수가 종료되면 호출한 위치로 다시 되돌아와서 프로그램을 계속 진행합니다 사용법 함수를 만들때 이름은 다음의 규칙을 지켜야 합니다 함수 이름은 중복될 수 없습니다 함수는 다른 함수 혹은 프로그램 구문 안에 만들어질 수 없으며 가장 바깥쪽에 만들어 합니다 함수의 이름은 띄어쓰기와 특수 기호 등 를 사용할 수 없습니다 함수의 이름은 첫 글자로 숫자를 사용할 수 없습니다 함수 이름 입력시 키보드의 ESC키를 누르면 취소됩니다 함수 이름 입력시 키보드의 ENTER키를 누르면 입력이 완료됩니다 호출할 함수 선택시 키보드의 ESC키를 누르면 취소됩니다 호출할 함수 선택시 목록을 선택하거나 키보드의 ENTER키를 누르면 입력이 완료됩니다 함수 내에서 자기 자신을 호출할 수 없습니다 예제 프로그램을 시작한 후 전진 후진 우회전하기 좌회전하기 함수를 계속 실행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#함수-만들기호출"
	},
	"4631": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "명렁어",
		"header3": "콜백 함수",
		"content": "콜백 Callback 함수는 일반 함수 및 메인 프로그램 루틴과 독립적으로 동작하는 함수이며 일정한 시간마다 스스로 실행됩니다 따라서 과도한 실행 시간을 요하는 코드를 넣을 수 없으며 이를 위해 반복문 사용 변수 사용량 파라미터 호출 횟수 코드 용량 등에 제한을 두고 있습니다 사용법 콜백 함수는 다른 함수 혹은 프로그램 구문 안에 만들어질 수 없으며 가장 바깥쪽에 만들어 합니다 콜백 함수는 오직 1개만 존재할 수 있습니다 콜백 함수는 이름이 없으며 호출되지 않습니다 제한 사항 무조건 반복 조건 반복 횟수 반복 레이블 점프 함수 호출 등의 명령어를 사용 할 수 없습니다 다이나믹셀과 같은 외부장치와의 통신 횟수에 제약이 있습니다 2회를 넘을 수 없습니다 코드 크기에 제약이 있습니다 최대 512byte 예제 콜백 함수에서 주기적으로 받은 무선 데이터를 변수에 저장하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_01/#콜백-함수"
	},
	"4632": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#프로그래밍"
	},
	"4633": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#제어기-파라미터"
	},
	"4634": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "보낼 무선 데이터",
		"content": "제어기에서 무선 통신 모듈 적외선 지그비 모듈 을 통해 외부로 데이터를 전송하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100 CM 150 CM 200 CM CM 510 CM 530 CM 700 OpenCm9 04 파라미터 특성 보낼 데이터는 65535 사이의 숫자 값입니다 보낼 무선 데이터 파라미터에 값을 설정하면 바로 무선으로 설정된 데이터를 전송합니다 사용 예제 무선 데이터의 수신을 기다리다가 데이터가 도착하면 그 데이터를 그대로 다시 무선으로 보내주는 예제입니다 사용 팁 일반적으로 ZIG2Serial 이 연결된 PC 의 제어용 프로그램에 응답을 보내기 위해 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#보낼-무선-데이터"
	},
	"4635": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "받은 무선 데이터",
		"content": "무선 통신 모듈 적외선 지그비 모듈 을 통해 데이터를 수신한 경우 수신한 데이터를 읽어가기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100 CM CM 510 CM 530 CM 700 파라미터 특성 데이터는 65535 사이의 숫자 값입니다 확인하지 않은 새로운 받은 데이터가 들어 있는지 여부는 새 무선 데이터 도착 을 이용하여 알 수 있습니다 수신 버퍼를 통해 최대 개의 받은 무선 데이터 값을 저장할 수 있습니다 개의 데이터가 수신 버퍼에 저장되어 있는 경우 읽기 동작을 수행하면 먼저 받은 데이터가 읽혀지고 읽혀진 데이터는 수신 버퍼에서 지워집니다 개의 데이터만 수신 버퍼에 남아 있는 경우 읽기 동작을 수행하면 가장 최근에 받았던 데이터를 얻게 됩니다 사용 예제 RC 100 을 사용하여 이동 방향을 조종하고자 할 경우 아래와 같이 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#받은-무선-데이터"
	},
	"4636": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "새 무선 데이터",
		"content": "무선 통신 모듈 적외선 지그비 모듈 을 통해 수신한 데이터 중 확인하지 않은 데이터가 남아 있는지 여부를 나타내는 파라미터 입니다 사용 가능 제어기 CM 100 CM CM 510 CM 530 CM 700 파라미터 특성 참 거짓 상수를 사용합니다 참 TRUE 숫자 확인하지 않은 새 무선 데이터가 수신 버퍼에 들어 있음을 나타냅니다 거짓 FALSE 숫자 받은 무선 데이터 파라미터를 사용하여 수신 버퍼의 모든 데이터를 확인하였음을 나타냅니다 사용 예제 RC 100 을 이용하여 이동 방향을 조종하고자 할 경우 사용 팁 일반적으로 무선으로 데이터를 받아 처리하기 위해 데이터 수신 여부를 파악하는데 주로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#새-무선-데이터"
	},
	"4637": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "임의의 숫자",
		"content": "최대값 최대값은 사용자가 255 사이의 값으로 설정할 수 있음 사이의 임의의 숫자를 생성합니다 사용 가능 제어기 CM 150 CM 200 OpenCm9 04 파라미터 특성 최대값 사이의 임의의 숫자를 생성합니다 최대값은 기본으로 255로 설정되어 있습니다 최대 값은 사용자가 255사이의 값으로 변경할 수 있습니다 무작위 한 행동 예하면 게임을 만들 때 을 만들 때 유용하게 사용할 수 있습니다 사용 예제 9사이의 임의의 숫자를 생성하고 그 숫자가 사이이면 1번 모션을 실행하고 이면 2번 모션을 실행합니다 결과적으로 70 의 확률로 1번 모션을 실행하게 되고 30 의 확률로 2번 모션을 실행하게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#임의의-숫자"
	},
	"4638": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "Aux LED",
		"content": "제어기의 Aux LED 상태를 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 530 CM 700 파라미터 특성 참 거짓 상수를 사용합니다 참 TRUE 숫자 확인하지 않은 새 무선 데이터가 수신 버퍼에 들어 있음을 나타냅니다 거짓 FALSE 숫자 받은 무선 데이터 파라미터를 사용하여 수신 버퍼의 모든 데이터를 확인하였음을 나타냅니다 사용 예제 Aux LED 를 1초간 켰다가 1초간 끄는 동작을 3회 반복하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#aux-led"
	},
	"4639": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "버튼",
		"content": "제어기의 버튼 상태를 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 530 OpenCM9 04 파라미터 특성 CM CM 510 CM 530 인 경우 버튼 값은 숫자로 읽혀지며 각 버튼의 코드 값은 아래와 같습니다 버튼 버튼 버튼 버튼 START 버튼 16눌린 버튼이 여러 개일 경우 각 버튼의 코드값이 합산되어 읽혀집니다 버튼 상수를 사용하면 버튼 값 비교 시 각 버튼의 코드값을 몰라도 쉽게 확인이 가능합니다 OpenCM9 04 인 경우 참 거짓 상수를 사용합니다 사용자 버튼이 눌린 경우는 참 버튼이 눌리지 않은 경우는 거짓 입니다 사용 예제 CM CM 510 CM 530 인 경우 제어기의 버튼이 각각 눌렸을 때 동작을 다르게 하는 예제입니다 OpenCM9 04 인 경우 제어기의 사용자 버튼이 각각 눌렸을 때 동작을 다르게 하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#버튼"
	},
	"4640": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "타이머",
		"content": "제어기 내부에 자동으로 카운트 다운 되는 타이머의 값을 설정하거나 현재 타이머 값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A CM 150 CM 200 CM CM 510 CM 530 CM 700 OpenCM9 04 파라미터 특성 타이머 값 상수를 사용하여 타이머 값을 설정할 수 있습니다 10진수의 값을 입력하면 자동으로 타이머 시간 값으로 변환되어 표시됩니다 실제 타이머의 값은 255 사이의 숫자를 사용합니다 타이머 값 은 128초를 나타냅니다 타이머 파라미터에 보다 큰 값을 설정하면 설정된 순간부터 128초 마다 씩 카운트 다운을 시작합니다 사용 예제 1초에 한 번씩 중앙 적외선 센서 값을 화면에 출력하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#타이머"
	},
	"4641": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "정밀타이머",
		"content": "제어기 내부에 자동으로 카운트 다운 되는 정밀타이머의 값을 설정하거나 현재 정밀타이머 값을 읽어오기 위해 사용하는 파라미터입니다 타이머 와 달리 최소단위가 001초이므로 정밀한 시간제어를 필요로 하는 경우에 유용합니다 사용 가능 제어기 CM 530 파라미터 특성 타이머 값 상수를 사용하여 타이머 값을 설정할 수 있습니다 10진수의 값을 입력하면 자동으로 정밀타이머 시간 값으로 변환되어 표시됩니다 실제 타이머의 값은 65535 사이의 숫자를 사용합니다 타이머 값 은 001초를 나타냅니다 타이머 파라미터에 보다 큰 값을 설정하면 설정된 순간부터 001초 마다 씩 카운트 다운을 시작합니다 사용 예제 고속직진 하다가 길목 검은 선 을 감지하면 짧은 시간 더 직진하여 두 바퀴가 길목에 놓이도록 한 후 멈추는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#정밀타이머"
	},
	"4642": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "상대 로봇 무선ID",
		"content": "로봇에 장착된 지그비 통신 모듈과 무선으로 통신할 상대편 지그비 통신 모듈의 ID 값을 설정하거나 설정된 상대편 지그비 통신 모듈의 ID 값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 530 CM 700 파라미터 특성 무선 ID 값은 65535 사이의 숫자 값을 사용합니다 상대로봇 무선 ID 값을 65535 16진수 0xFFFF 로 설정하면 무선 ID 에 상관없이 모든 지그비 모듈이 수신할 수 있도록 데이터를 전송합니다 브로드 캐스팅 모드 사용 예제 상대로봇 무선 ID 를 123 으로 설정하고 확인을 위해 값을 읽어와서 화면에 출력하는 예제입니다 사용 팁 지그비 통신이 원활히 이루어 지려면 통신을 연결하려는 상대편 지그비의 정확한 ID 값을 넣어주어야 합니다 브로드 캐스팅 모드를 잘못 사용할 경우 여러 가지 문제를 일으킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#상대-로봇-무선ID"
	},
	"4643": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "내 로봇 무선ID",
		"content": "CM 100A ZIG 110 모듈 장착 여부를 판단하기 위해 사용하는 파라미터입니다 그 외 제어기 로봇에 장착된 지그비 통신 모듈의 ID 값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100 CM CM 510 CM 530 CM 700 파라미터 특성 CM 100A ZIG 110 무선 통신 모듈이 장착되어 있는 경우 참 TRUE 숫자 장착되지 않은 경우 거짓 FALSE 숫자 의 값을 가집니다 그 외 제어기 지그비 통신 모듈이 장착되어 있는 경우 65534 사이의 숫자로 된 ID 값이 읽혀집니다 장착되지 않은 경우 65535 16진수로 0xFFFF 의 값이 읽혀집니다 사용 예제 CM 100A 제어기에 ZIG 110 모듈 장착 여부를 체크하여 장착되지 않은 경우 RC 100 채널을 시작 버튼 눌림 횟수에 맞춰 설정하는 예제입니다 CM 100A 을 제외한 그 외 제어기에 장착된 지그비 모듈의 ID 를 화면에 출력하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#내-로봇-무선ID"
	},
	"4644": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "화면출력/줄바꿈",
		"content": "태스크 코드에 화면 출력 파라미터를 사용하면 원하는 값을 볼 수 있습니다 화면 출력 값을 출력하고 커서를 옆으로 한 칸 이동시킵니다 화면 출력 후 줄바꿈 값을 출력하고 커서를 다음 줄로 이동시킵니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#화면출력줄바꿈"
	},
	"4645": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "화면 출력 내용",
		"content": "제어기 자체 출력 내용 프로그램 시작 메시지가 처음에 출력됩니다 프로그램 수행 중 에러 메시지 에러 메시지 종류 보기 태스크 코드 출력 내용 32767 32767 범위의 10진수로 표시됩니다 글자는 출력할 수 없습니다 숫자를 출력하는 경우 센서 값을 출력하는 경우 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#화면출력줄바꿈"
	},
	"4646": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "화면 지우기",
		"content": "화면의 내용을 지울 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#화면출력줄바꿈"
	},
	"4647": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "왼쪽/중앙/오른쪽 적외선 센서",
		"content": "제어기의 적외선 센서 값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A 파라미터 특성 적외선 센서 값은 1023 사이의 값을 갖습니다 같은 색의 물체라면 거리가 가까울 수록 1023 에 가까운 값 큰 값 을 가지며 거리가 멀 수록 에 가까운 값 작은 값 을 가집니다 같은 거리의 물체라면 밝은 색 흰 색 에 가까울 수록 1023 에 가까운 값 큰 값 을 가지며 어두운 색 검은색 에 가까울 수록 에 가까운 값 작은 값 을 가집니다 사용 예제 왼쪽 적외선 센서에만 물체가 감지될 경우와 오른쪽 적외선 센서에만 물체가 감지될 경우에 특정 행동을 하도록 하는 예제 사용 팁 햇빛이나 형광등과 같은 적외선을 발산하는 외부 조명에 의해 센서 값이 변화할 수 있습니다 물체의 색상에 따라 주변 조명의 상태에 따라 적외선 센서 값은 차이가 있을 수 있으므로 물체와의 정확한 거리를 측정하기 위해 적외선 센서를 사용하는 것은 적합하지 않습니다 위에서와 같이 같은 거리의 물체라도 색상에 따라 적외선 센서 값이 달라지는 특성을 이용하여 흰 색과 검은 색을 구분하는 용도로 적외선 센서를 사용할 수 있습니다 라인트레이서에 활용 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#왼쪽중앙오른쪽-적외선-센서"
	},
	"4648": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "부저 종류",
		"content": "제어기에 내장된 부저를 통해 연주할 음계 또는 멜로디 번호를 지정하거나 현재 연주 중인 음계 또는 멜로디 번호를 얻어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A CM 510 CM 530 파라미터 특성 부저 울림 시간 과 반드시 함께 사용되어야 하며 부저 울림 시간 을 먼저 설정하고 난 후 부저 종류 를 설정해야 설정에 맞게 소리가 납니다 순서 중요 부저 울림시간 에서 대한 자세한 정보를 참고하세요 부저 울림 시간 설정 값에 따라 멜로디 상수나 음계 값 상수를 사용하여 부저 종류 를 설정할 수 있습니다 부저 울림 시간 값이 255 인 경우 특수 멜로디 연주 모드 부저 종류 에 멜로디 상수를 사용하여 15 번 사이의 16가지 멜로디 중 하나를 선택하여 연주합니다 부저 울림 시간 값이 254 사이의 값인 경우 음계 연주 모드 부저 종류 에 음계 값 상수를 사용하여 26 사이의 음계 값을 넣어 하나의 음계를 부저 울림 시간 에 설정된 시간만큼 연주합니다 사용 예제 멜로디3 을 연주하는 예제입니다 3초씩 도미솔 을 연주하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#부저-종류"
	},
	"4649": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "부저 울림시간",
		"content": "제어기에 내장된 부저를 통해 연주할 음계 또는 멜로디의 연주 시간을 설정하거나 현재 남은 연주 시간을 얻어 오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A CM 510 CM 530 파라미터 특성 부저 종류 와 반드시 함께 사용되어야 하며 부저 울림 시간 을 먼저 설정하고 난 후 부저 종류 를 설정해야 설정에 맞게 소리가 납니다 순서 중요 부저 종류 에서 자세한 정보를 참고하세요 부저 울림 시간 값 상수를 사용하여 부저 울림 시간 을 설정할 수 있습니다 실제 부저 울림 시간 값은 255 사이의 숫자를 사용합니다 숫자 은 연주 시간 초를 의미하며 최소 부저 울림 시간은 1초 최대 부저 울림 시간은 5초입니다 따라서 50 254 사이의 값을 입력하면 부저는 최대 울림 시간인 5초간 울리게 됩니다 부저 울림 시간 값이 255 인 경우 특수 멜로디 연주 모드 부저 종류 에 멜로디 상수를 사용하여 15 번 사이의 16가지 멜로디 중 하나를 선택하여 연주합니다 멜로디의 연주가 끝나면 자동으로 부저 울림 시간 값이 으로 초기화 됩니다 부저 울림 시간 값이 254 사이의 값인 경우 음계 연주 모드 부저 종류 에 음계 값 상수를 사용하여 26 사이의 음계 값을 넣어 하나의 음계를 부저 울림 시간 에 설정된 시간만큼 연주합니다 사용 예제 멜로디3 을 연주하는 예제입니다 부저 종류 예제와 동일 3초씩 도미솔 을 연주하는 예제입니다 부저 종류 예제와 동일 사용 팁 부저 연주 중에는 연주 시간을 다시 설정할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#부저-울림시간"
	},
	"4650": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "제어기 파라미터",
		"header3": "최종 소리감지 횟수",
		"content": "마이크가 내장된 제어기에는 일정 수준 이상의 큰 소리가 날 경우 1회씩 카운트 해 주는 기능이 있습니다 대표적인 예로 박수 소리의 횟수를 카운트 하는 것이 가능합니다 이 때 감지된 소리의 횟수 값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A CM 150 CM 200 CM 510 CM 530 파라미터 특성 최종 소리감지 횟수 는 255 사이의 숫자를 사용합니다 따라서 최대 소리감지 횟수도 255 회가 됩니다 연속적인 소리의 입력이 멈추어야 최종 소리감지 횟수 파라미터에 현재까지 감지된 소리의 횟수 값이 입력됩니다 소리감지 횟수는 자동으로 초기화 되지 않기 때문에 소리감지를 시작하기 전에 사용자가 직접 으로 초기화 해주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#최종-소리감지-횟수"
	},
	"4651": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "#### 사용 예제",
		"header3": "",
		"content": "소리를 감지하고 감지한 횟수 만큼 특정 행동을 반복하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#최종-소리감지-횟수"
	},
	"4652": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "#### 사용 팁",
		"header3": "",
		"content": "제어기와 연결된 감속 모터 등이 움직이는 소리는 아주 큰 소리로 입력되기 때문에 감지 횟수가 정상적으로 입력되지 않을 수 있습니다 따라서 올로의 움직임이 완전히 멈춘 상태에서만 소리감지를 사용하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#최종-소리감지-횟수"
	},
	"4653": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "#### 사용 팁",
		"header3": "실시간 소리감지 횟수",
		"content": "마이크가 내장된 제어기에서 일정 수준 이상의 큰 소리가 날 경우 1회씩 카운트 해 주는 기능이 있습니다 대표적인 예로 박수 소리의 횟수를 카운트 하는 것이 가능합니다 이 때 실시간으로 현재까지 카운트 된 감지 횟수 값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A CM 150 CM 200 CM 510 CM 530 파라미터 특성 실시간 소리감지 횟수 는 255 사이의 숫자를 사용합니다 따라서 최대 소리감지 횟수도 255 회가 됩니다 소리가 감지될 때 마다 실시간으로 파라미터 값이 증가합니다 초간 더 이상 소리가 입력되지 않으면 실시간 소리감지 횟수 값을 최종 소리감지 횟수 파라미터로 넘겨주고 실시간 소리감지 횟수 값은 자동으로 으로 초기화 됩니다 사용 예제 실시간 소리 감지 횟수를 감지횟수 변수에 저장하는 예제입니다 실시간 소리 감지 횟수가 0인 동안 대기하도록 하는 예제입니다 실시간 소리 감지 횟수가 3인 경우 특정 구간을 실행하도록 하는 예제입니다 사용 팁 제어기와 연결된 감속 모터 등이 움직이는 소리는 아주 큰 소리로 입력되기 때문에 감지 횟수가 정상적으로 입력되지 않을 수 있습니다 따라서 올로의 움직임이 완전히 멈춘 상태에서만 소리감지를 사용하는 것이 좋습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#실시간-소리감지-횟수"
	},
	"4654": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "#### 사용 팁",
		"header3": "시작버튼 눌림횟수",
		"content": "최초 제어기를 켤 때 연속으로 시작 버튼을 누른 횟수를 얻어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A 파라미터 특성 시작 버튼 눌림 횟수 는 255 사이의 숫자를 사용합니다 따라서 시작 버튼 눌림 최대 카운트 횟수는 255 회가 됩니다 사용 예제 시작 버튼을 누른 횟수에 따라 1회 2회 3회 이상으로 나누어 다른 동작을 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#시작버튼-눌림횟수"
	},
	"4655": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "#### 사용 팁",
		"header3": "자동꺼짐 타이머",
		"content": "제어기의 절전 모드로 설정된 시간만큼의 시간이 지나면 자동으로 꺼지도록 타이머를 설정할 수 있습니다 자동 꺼짐 타이머의 시간을 설정하거나 남은 시간을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A CM 150 파라미터 특성 자동꺼짐 시간 상수를 사용하여 자동꺼짐 타이머 의 시간을 설정할 수 있습니다 자동꺼짐 타이머 의 실제 값은 255 사이의 숫자를 사용합니다 숫자 은 시간 값 1분을 의미합니다 제어기 작동 시 자동꺼짐 타이머 의 기본 설정 값은 5분 입니다 자동꺼짐 타이머 값을 0분으로 설정하면 자동꺼짐 기능이 동작하지 않습니다 자동꺼짐 타이머의 남은 시간은 항상 분 단위로 읽혀집니다 즉 50초가 남아 있어도 1분으로 읽혀집니다 사용 예제 2분 이내에 무선 통신으로 데이터가 들어오지 않으면 자동으로 꺼지고 무선 통신으로 데이터가 들어오면 다시 2분간 기다리는 예제입니다 사용 팁 특정 동작이 일어나면 꺼지지 않도록 하기 위해서는 수동으로 자동꺼짐 타이머 값을 다시 설정해 주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#자동꺼짐-타이머"
	},
	"4656": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "#### 사용 팁",
		"header3": "RC-100 채널",
		"content": "제어기에 연결된 적외선 수신기와 RC 100 사이의 적외선 통신 채널을 설정하거나 현재 채널을 확인하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM 100A CM 150 CM 200 CM 510 CM 530 파라미터 특성 RC 100 채널 상수를 사용하여 채널 값을 설정합니다 실제 RC 100 채널 값은 사이의 숫자를 사용합니다 채널 번은 모든 채널과 통신하는 특수한 채널입니다 사용 예제 시작 버튼이 눌린 횟수에 따라 RC 100 채널을 설정하는 예제입니다 사용 팁 RC 100 무선 조종기 의 채널 설정 방법을 참고하여 채널을 설정하고 동일한 채널을 제어기에 연결된 적외선 수신기에 설정해 주어야 적외선 무선 통신이 원활히 이루어 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#rc-100-채널"
	},
	"4657": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "모션 파라미터",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#모션-파라미터"
	},
	"4658": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "모션 파라미터",
		"header3": "모션 페이지",
		"content": "모션을 실행시키는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 530 CM 700 파라미터 특성 모션 페이지 번호를 쓰면 해당 모션이 실행됩니다 모션 페이지를 읽으면 현재 실행 중인 페이지 번호를 알 수 있습니다 특정 페이지 번호를 사용하면 실행 중인 모션을 정지시킬 수 있습니다 정지 명령이 실행되면 페이지 반복 횟수는 무시됩니다 모션이 완전히 정지되었음을 알기 위해서는 모션 상태를 확인해야 합니다 페이지 번호를 0으로 입력하면 마무리 Exit 페이지까지 실행하고 멈춥니다 페이지 번호를 1으로 입력하면 현재 페이지까지만 실행하고 멈춥니다 해당 페이지에 모션이 없으면 에러가 발생합니다 에러 메시지 보기 255번까지의 페이지 번호를 사용합니다 일부 제어기의 경우 127번까지만 사용됩니다 사용 예제 모션 호출 번호 3번을 실행합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#모션-페이지"
	},
	"4659": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "모션 파라미터",
		"header3": "모션 상태",
		"content": "모션 실행 상태를 알 수 있는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 530 CM 700 파라미터 특성 모션이 실행 중이면 1이고 실행 중이지 않으면 0을 반환합니다 참 거짓 상수를 사용할 수 있습니다 참 모션 실행 중 거짓 모션 실행 중이 아님 사용 예제 모션 페이지 3번을 실행하고 완료 될때까지 기다립니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#모션-상태"
	},
	"4660": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "모션 파라미터",
		"header3": "관절 오프셋",
		"content": "모션 실행시 관절별로 영향을 줄 수 있는 파라미터입니다 주의 관절 오프셋이 로봇에 적용되기 위해서는 관절 오프셋 값 설정 후 모션이 실행되어야 합니다 notice warning 사용 가능 제어기 CM CM 510 CM 530 CM 700 파라미터 특성 255 255 값이 설정된 관절의 위치 값에 오프셋이 적용됩니다 예 모션 데이터의 관절 ID 의 위치 값이 300 400 500 으로 설정된 경우 ID 의 관절 오프셋이 100 이라면 모션이 실행될 때 ID 에 해당하는 관절의 값은 200 300 400 으로 변경되어 동작합니다 1024 관절 오프셋 값에 1024 를 입력하면 해당 관절은 모션 실행 시 모션 데이터 값에 영향을 받지 않습니다 예 그리퍼와 같이 모션이 아닌 직접 위치 제어를 하려는 경우 모션이 실행되어도 움직이지 않도록 하기 위해 사용할 수 있습니다 사용 예제 특정 관절에 오프셋 값 적용 모션 페이지 3번 실행시에 ID 4번 관절에 100만큼 오프셋을 주고 모션이 완료 될때까지 기다립니다 특정 관절을 모션 실행 시 모션 데이터 값의 영향을 받지 않도록 함 ID 4번 관절을 모션 실행시 모션 데이터의 영향을 받지 않도록 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#관절-오프셋"
	},
	"4661": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "모션 파라미터",
		"header3": "관절 LED 자동켜기",
		"content": "모션을 실행하는 도중에 XL 320의 LED가 깜박이는 기능을 사용 할 지를 결정합니다 사용 가능 제어기 OpenCM9 04 파라미터 특성 참 거짓 상수를 사용합니다 참 이면 모션을 실행하는 도중에 XL 320의 목표 위치 값에 따라 RGB LED가 부동한 색상으로 깜박입니다 거짓 이면 모션을 실행하는 도중에 XL 320의 RGB LED가 목표 위치 값에 따라 깜박이지 않습니다 단 과부하인 경우 XL 320의 빨간색 LED가 깜박일 수 있습니다 사용 예제 1번 모션을 실행할 때 관절 LED가 깜박입니다 2번 모션을 실행할 때 관절 LED가 깜박이지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#관절-led-자동켜기"
	},
	"4662": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#주변장치"
	},
	"4663": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "감속모터",
		"content": "감속모터의 회전 방향과 출력 속도 을 제어하기 위해 사용하는 파라미터입니다 감속 모터 부품 설명을 보시려면 여기를 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 모터 제어 값 상수를 사용하여 감속모터 제어 값을 입력할 수 있습니다 감속 모터의 회전 방향과 출력을 같이 입력합니다 CW Clock Wise 시계 방향 역방향 CCW Counter Clock Wise 반시계 방향 정방향 CCW CCW 1023 10진수로 1023 CW CW 1023 10진수로 1024 2047 실제 제어 값은 2047 사이의 숫자를 사용합니다 사용 예제 포트 에 연결된 감속모터를 정방향 최대 출력으로 1초간 회전시키고 다시 역방향 최대출력으로 1초간 회전시키는 것을 반복하는 예제입니다 사용 팁 제어기에 연결한 포트 번호를 정확히 확인하고 사용하세요 속도 값과 방향을 각각 따로 제어하려면 10진수로 된 실제 모터 제어 값을 참고하여 아래와 같이 사용할 수 있습니다 아래와 같이 설정하면 포트 의 감속모터는 CCW 700 으로 설정되고 포트 의 감속모터는 CW 700 으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#감속모터"
	},
	"4664": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "서보모터",
		"content": "서보모터의 동작을 설정하기 위해 사용하는 파라미터입니다 서보모터 파라미터에는 3가지 동작 모드 속도 위치 의 서브 파라미터들이 있어서 서보모터의 동작을 좀 더 세부적으로 설정할 수 있도록 해 줍니다 서보모터 부품 설명을 보시려면 여기를 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 동작 모드 설정을 위해 참 거짓 상수를 사용할 수 있습니다 참 TRUE 숫자 관절 모드로 동작합니다 관절 모드에서는 속도 파라미터로 출력을 설정할 수 있으며 위치 파라미터로 원하는 위치로 이동할 수 있습니다 거짓 FALSE 숫자 회전 모드로 동작합니다 회전 모드에서는 속도 파라미터만 사용하여 감속모터와 동일하게 동작할 수 있습니다 위치 파라미터는 무시됩니다 속도 출력 제어를 위해 모터 제어값 상수를 사용할 수 있습니다 CW Clock Wise 시계 방향 역방향 CCW Counter Clock Wise 반시계 방향 정방향 CCW CCW 1023 10진수로 1023 CW CW 1023 10진수로 1024 2047 관절 모드에서 위치 제어를 위해 위치값 상수를 사용할 수 있습니다 1023 사이의 10진수를 사용합니다 빨간 원의 위치가 10진수 값의 실제 위치입니다 빨간 원을 조그 다이얼 식으로 마우스 드래그로 돌려서 값을 설정할 수 있습니다 실제 최대 제어 각은 300도 입니다 따라서 최소 제어각 즉 위치값 의 단위는 약 29도 300도 1024 29도 입니다 제어각에 대한 보다 자세한 정보는 서보모터 부품 설명 페이지를 참고하세요 사용 예제 포트 3의 서보모터를 회전 모드로 설정한 후 시계 방향으로 600의 출력으로 회전시키는 예제입니다 포트 3의 서보모터를 관절 모드로 설정한 후 최대 출력으로 500의 위치로 이동시키는 예제입니다 사용 팁 제어기에 서보모터가 연결된 포트 번호를 정확히 확인하고 사용하세요 서보모터와 포트 호환이 되는 다른 모듈 LED 모듈 적외선 센서 모듈 등 을 연결한 포트를 서보모터 제어 방식으로 제어하는 프로그램을 실행할 경우 모듈이 손상될 수 있으니 주의하세요 다이나믹셀 Dynamixel 에 비해 정밀도가 떨어지고 출력 토크 이 낮기 때문에 정밀한 제어가 요구되는 곳에 사용하기에는 무리가 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#서보모터"
	},
	"4665": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "접촉센서",
		"content": "접촉센서의 상태 접촉 여부 를 읽어오기 위해 사용하는 파라미터입니다 접촉센서 부품 설명을 보시려면 여기를 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 값을 읽었을 때 참 TRUE 숫자 일 경우 접촉 상태이며 거짓 FALSE 숫자 일 경우 비접촉 상태입니다 사용 예제 포트 3의 접촉센서가 눌린 경우 특정 구간을 실행하도록 하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#접촉센서"
	},
	"4666": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "LED모듈",
		"content": "LED 모듈의 왼쪽과 오른쪽 LED 를 ON OFF 하거나 현재 상태를 읽어오기 위해 사용하는 파라미터입니다 LED 모듈 부품 설명을 보시려면 여기를 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 특성 LED 모듈 출력 상수를 사용할 수 있습니다 실제 제어값은 사이의 숫자를 사용하며 LED모듈 값을 설정하거나 읽어왔을 때 각 값이 나타내는 의미는 아래와 같습니다 양 쪽 LED 모두 꺼짐 오른쪽 LED 만 켜짐 왼쪽 LED 만 켜짐 양 쪽 LED 모두 켜짐 사용 예제 포트 3의 LED모듈을 모두 켜는 예제입니다 사용 팁 LED 모듈과 포트 호환이 되는 다른 모듈 적외선센서 모듈 서보모터 등 을 연결한 포트를 LED 모듈 제어 방식으로 제어하는 프로그램을 실행할 경우 모듈이 손상될 수 있으니 주의하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#led모듈"
	},
	"4667": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "적외선센서",
		"content": "적외선 센서 모듈의 센서 값을 읽어오기 위해 사용하는 파라미터입니다 적외선센서 부품 설명을 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 적외선 센서 값은 1023 사이의 값을 갖습니다 같은 색의 물체라면 거리가 가까울 수록 1023 에 가까운 값 큰 값 을 가지며 거리가 멀 수록 에 가까운 값 작은 값 을 가집니다 같은 거리의 물체라면 밝은 색 흰 색 에 가까울 수록 1023 에 가까운 값 큰 값 을 가지며 어두운 색 검은 색 에 가까울 수록 에 가까운 값 작은 값 을 가집니다 사용 예제 포트 3의 적외선 센서값이 500보다 작을 경우 특정 구간을 실행하도록 하는 예제입니다 사용 팁 적외선센서 모듈과 포트 호환이 되는 다른 모듈 LED 모듈 서보모터 등 을 연결한 포트를 적외선센서 모듈 제어 방식으로 제어하는 프로그램을 실행할 경우 모듈이 손상될 수 있으니 주의하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#적외선센서"
	},
	"4668": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "컬러센서",
		"content": "컬러센서 전방의 물체 색상을 감지합니다 컬러센서 부품 설명을 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 특성 값을 읽었을 때 사용 예제 포트 3의 컬러센서가 빨간 색을 감지한 경우 특정 구간을 실행하도록 하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#컬러센서"
	},
	"4669": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "자석센서",
		"content": "자석센서의 가까이에 자석이 있는지를 알려주는 파라미터입니다 자석센서 부품 설명을 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 특성 값을 읽었을 때 참 TRUE 숫자 일 경우 가까이에 자석이 있으며 거짓 FALSE 숫자 일 경우 가까이에 자석이 없는 상태입니다 사용 예제 포트 3의 자석센서에 자석이 감지된 경우 특정 구간을 실행하도록 하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#자석센서"
	},
	"4670": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "절대거리센서",
		"content": "절대 거리 센서값 을 읽어올 때 사용하는 파라미터 입니다 절대거리 센서 부품 설명을 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 절대거리센서 값은 1023 사이의 값을 갖습니다 같은 색의 물체라면 거리가 가까울 수록 1023 에 가까운 값을 가지며 거리가 멀 수록 에 가까운 값을 가집니다 적외선 센서와 달리 색에 거의 영향을 받지 않습니다 사용 예제 포트 3의 거리 센서값이 500보다 작을 경우 특정 구간을 실행하도록 하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#절대거리센서"
	},
	"4671": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "주변장치",
		"header3": "사용자 장치",
		"content": "사용자 장치값을 읽어오거나 설정할 때 사용하는 파라미터 입니다 사용자 센서 제작 에 대한 설명을 참고하세요 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 값을 읽을 때와 쓸 때는 사용하는 주소값은 같지만 포트핀이 물리적으로 다릅니다 사용자 장치 포트핀 정보 확인하기 사용자 장치값을 읽어오면 입력 포트를 통해 들어오는 전압의 레벨값을 출력합니다 값을 읽었을 때 범위는 1023입니다 사용자 장치에 1을 설정하면 출력 포트로 5V가 출력됩니다 사용자 장치를 1로 설정한다 해도 읽었을 때 1이 읽혀지는 것은 아닙니다 사용자 장치 출력을 위해 포트 값 상수를 사용할 수 있습니다 사용 예제 포트 3의 사용자 장치에 을 설정합니다 포트 3에서 읽어온 값이 500보다 작을 경우 출력포트에 을 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#사용자-장치"
	},
	"4672": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#다이나믹셀-파라미터"
	},
	"4673": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "모터 켜기",
		"content": "모터를 켜거나 끄기 위해 사용하는 파라미터입니다 또한 현재 모터의 켜짐 꺼짐 상태를 읽어올 수 있습니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 참 거짓 상수를 사용합니다 참 TRUE 숫자 모터 켜기 파라미터에 참을 설정하면 모터가 켜집니다 파라미터 값을 읽었을 때 값이 참이면 모터가 켜져 있는 상태임을 나타냅니다 거짓 FALSE 숫자 모터 켜기 파라미터에 거짓을 설정하면 모터가 꺼집니다 파라미터 값을 읽었을 때 값이 거짓이면 모터가 꺼져 있는 상태임을 나타냅니다 사용 예제 제어기의 버튼 R이 눌리면 ID1의 액츄에이터를 켜고 L이 눌리면 끕니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#모터-켜기"
	},
	"4674": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "LED",
		"content": "다이나믹셀의 LED 상태를 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 참 거짓 상수를 사용합니다 참 TRUE 숫자 LED 파라미터에 참을 설정하면 LED 가 켜집니다 파라미터 값을 읽었을 때 값이 참이면 LED 가 켜져 있는 상태임을 나타냅니다 거짓 FALSE 숫자 LED 파라미터에 거짓을 설정하면 LED 가 꺼집니다 파라미터 값을 읽었을 때 값이 거짓이면 LED 가 꺼져 있는 상태임을 나타냅니다 사용 예제 LED 를 1초간 켰다가 끕니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#led"
	},
	"4675": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "PID 제어",
		"content": "액츄에이터의 PID 설정값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 Gain은 Propotional Gain값 입니다 작은 값일수록 유격이 커지고 목표위치 근처에서의 출력정도가 약해집니다 Gain은 Integral Gain값 입니다 Gain은 Derivative Gain값 입니다 값의 범위는 254 입니다 사용 예제 P값과 I값을 32로 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#pid-제어"
	},
	"4676": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "CW/CCW Margin",
		"content": "액츄에이터의 Margin 설정값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 700 파라미터 특성 Margin값은 254 사이의 숫자 값을 사용합니다 목표 위치값을 중심으로 Margin설정값만큼 아무런 힘이 걸리지 않는 구간이 생기게 됩니다 권장값은 1입니다 특별한 경우가 아니면 기본 설정값을 바꾸지 않는 것이 좋습니다 사용 예제 Margin값을 모두 1로 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#cwccw-margin"
	},
	"4677": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "CW/CCW Slope",
		"content": "액츄에이터의 Slope설정값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 700 파라미터 특성 CW CCW 방향 별로 존재하며 목표 위치 근처에서 출력의 정도를 설정합니다 낮은 값을 설정하면 목표위치까지 거의 힘을 줄이지 않고 다가가며 높은 값을 설정하면 목표위치에 도달할 수록 힘을 줄이면서 다가갑니다 낮은 값을 설정하면 목표위치에서 벗어나지 않으려고 최대의 힘으로 저항을 합니다 높은 값을 설정해도 목표위치에서 너무 많이 벗어나면 점점 최대 힘으로 저항을 합니다 Compliance Slope 는 입력되는 Data 값의 범위에 따라 총 단계의 Data 대표 값으로 바뀌어 적용됩니다 즉 Data 값으로 25 를 넣더라도 실제로는 Data 대표값인 16 이 사용됩니다 단계 Data 값 Data 대표 값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 Compliance Slope과 힘 조절 Compliance Margin을 적절한 값으로 설정하면 좀 더 부드러운 동작이 가능합니다 사용 예제 Slope값을 모두 32로 설정합니다 기본 상수는 2진수로 표현됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#cwccw-slope"
	},
	"4678": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "목표 위치",
		"content": "액츄에이터의 목표 위치값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 위치 값 상수를 사용합니다 값 입력창에 원하는 설정값을 직접 입력할 수 있으며 다이얼을 돌려 원하는 위치를 설정할 수 있습니다 AX DX RX series 의 위치 값 범위는 1023입니다 MX EX series 의 위치 값 범위는 095입니다 사용 예제 제어기의 버튼 R이 눌리면 ID1의 액츄에이터 목표 위치를 0으로 설정하고 L이 눌리면 1023으로 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#목표-위치"
	},
	"4679": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "이동 속도",
		"content": "액츄에이터의 이동 속도를 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 모터 제어 값 상수를 사용합니다 관절 모드에서 회전 방향값은 의미가 없고 출력값만 반영됩니다 관절 모드에서 값이 0일 때는 최대 출력으로 설정됩니다 무한 회전 모드에서는 회전 방향과 출력값을 같이 설정합니다 관절 모드와 무한 회전 모드는 로보플러스 매니저에서 설정할 수 있습니다 액츄에이터 모드 설정 참조 사용 예제 제어기의 버튼 R이 눌리면 ID1의 액츄에이터 이동 속도를 0으로 설정하고 L이 눌리면 500으로 설정합니다 만약 액츄에이터가 관절 모드인 경우 이동 속도 0은 최대 출력으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#이동-속도"
	},
	"4680": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "힘 조절",
		"content": "액츄에이터의 힘 조절 상태를 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 힘 조절 값은 1023 사이의 숫자 값을 사용합니다 사용 예제 ID 1인 액츄에이터에 동작 최대 힘을 500으로 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#힘-조절"
	},
	"4681": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "현재 위치",
		"content": "액츄에이터의 현재 위치를 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 액츄에이터의 현재 위치를 읽어올 수 있습니다 사용 예제 ID가 1로 설정된 액츄에이터의 현재 위치를 화면출력 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#현재-위치"
	},
	"4682": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "현재 속도",
		"content": "액츄에이터의 현재 위치를 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 액츄에이터의 현재 속도를 읽어올 수 있습니다 사용 예제 ID가 1로 설정된 액츄에이터의 현재 속도를 화면출력 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#현재-속도"
	},
	"4683": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "현재 하중",
		"content": "액츄에이터의 현재 하중을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 액츄에이터의 현재 하중을 읽어올 수 있습니다 사용 예제 ID가 1로 설정된 액츄에이터의 현재 하중을 화면출력 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#현재-하중"
	},
	"4684": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "전압",
		"content": "다이나믹셀의 현재 전압을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 다이나믹셀의 현재 전압을 읽어올 수 있습니다 실제 전압값은 10으로 나눈 값입니다 출력값이 115인 경우 11 5V를 의미합니다 사용 예제 ID가 1로 설정된 다이나믹셀의 현재 전압값을 화면출력 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#전압"
	},
	"4685": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "온도",
		"content": "다이나믹셀의 현재 온도를 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 다이나믹셀의 현재 온도를 읽어올 수 있습니다 사용 예제 ID가 1로 설정된 다이나믹셀의 현재 온도를 화면출력 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#온도"
	},
	"4686": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "움직임 유무",
		"content": "액츄에이터의 현재 움직임 유무를 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 액츄에이터의 현재 움직임 유무를 읽어올 수 있습니다 현재 움직이는 상태면 1값이 읽어지며 움직이지 않으면 0값이 읽어집니다 사용 예제 ID가 1로 설정된 액츄에이터의 목표 위치를 0으로 설정하고 움직임이 멈출 때 까지 대기합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#움직임-유무"
	},
	"4687": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "다이나믹셀 파라미터",
		"header3": "소모 전류량",
		"content": "소모 전류량을 확인하기 위한 파라미터 입니다 현재 다이나믹셀이 소모하고 있는 전류를 읽어올 수 있습니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 값이 512일 경우에 소모하는 전류는 0암페어이며 전류가 흐르지 않고 있다는 것을 의미합니다 데이터가 512보다 클 경우에는 모터를 시계방향으로 돌리는 전류가 흐르고 있다는 것이며 전류의 크기는 데이터의 크기와 비례합니다 값 단위 약 10mA 예를 들어 데이터가 612 일 경우 612 512 100 100x10mA 000mA 1A 전류가 모터를 시계방향으로 돌리고 있다는 것을 의미합니다 데이터가 512보다 작을 경우에는 모터를 반 시계방향으로 돌리는 전류가 흐르고 있다는 전류의 크기는 데이터의 크기와 반비례합니다 값 단위 약 10mA 예를 들어 데이터가 312일 경우 512 312 200 200x10mA 000mA 2A 의 전류가 모터를 반시계방향으로 돌리고 있다는 것을 의미합니다 사용 예제 ID가 1인 EX 모터의 소모 전류량이 시계방향으로 1A 이상 흐른다면 모터의 LED를 켜고 2A이상 흐른다면 모터의 토크를 끕니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#소모-전류량"
	},
	"4688": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#통합센서-s1"
	},
	"4689": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "거리센서 값",
		"content": "통합센서 S1 의 현재 거리센서값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 통합센서 S1 의 현재 거리 센서값을 읽어올 수 있습니다 물체의 색상에 따라 주변 조명의 상태에 따라 적외선 센서 값은 차이가 있을 수 있으므로 물체와의 정확한 거리를 측정하기 위해 적외선 센서를 사용하는 것은 적합하지 않습니다 위에서와 같이 같은 거리의 물체라도 색상에 따라 적외선 센서 값이 달라지는 특성을 이용하여 흰 색과 검은 색을 구분하는 용도로 적외선 센서를 사용할 수 있습니다 라인트레이서에 활용 거리 센서 값은 255 사이의 범위를 갖습니다 사용 예제 왼쪽 적외선 센서에만 물체가 감지될 경우와 오른쪽 적외선 센서에만 물체가 감지될 경우에 특정 행동을 하도록 하는 예제 사용 팁 햇빛이나 형광등과 같은 적외선을 발산하는 외부 조명에 의해 센서 값이 변화할 수 있습니다 물체의 색상에 따라 주변 조명의 상태에 따라 적외선 센서 값은 차이가 있을 수 있으므로 물체와의 정확한 거리를 측정하기 위해 적외선 센서를 사용하는 것은 적합하지 않습니다 위에서와 같이 같은 거리의 물체라도 색상에 따라 적외선 센서 값이 달라지는 특성을 이용하여 흰 색과 검은 색을 구분하는 용도로 적외선 센서를 사용할 수 있습니다 라인트레이서에 활용 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#거리센서-값"
	},
	"4690": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "조명 밝기",
		"content": "통합센서 S1 의 현재 조명 밝기값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 통합센서 S1 의 현재 조명 밝기값을 읽어올 수 있습니다 촛불이나 전구 등 근거리의 조명에서 나오는 광량을 측정할 수 있습니다 조명 밝기 값은 255 사이의 범위를 갖습니다 사용 예제 왼쪽 조명센서에 50보다 큰 조명값이 감지될 때 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#조명-밝기"
	},
	"4691": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "물체감지",
		"content": "통합센서 S1 의 적외선 센서 왼쪽 중앙 오른쪽 에 물체 감지 기준 값에서 지정된 거리 값 이내로 물체가 감지되었는지 유 무를 판단하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 통합센서 S1 의 각 적외선 센서에 물체 감지 기준 값에 지정된 거리 값 이내로 물체가 감지되면 아래와 같은 값을 발생시킵니다 아래 값은 bit 값으로 2진수 숫자 값을 사용할 수 있습니다 진수 값 10 진수 값 물체 감지 유무 명령어에서의 의미 000 물체가 감지 안됨 001 왼쪽 센서에서 감지 됨 010 중앙 센서에서 감지 됨 011 왼쪽과 중앙 센서에서 감지 됨 100 오른쪽 센서에서 감지 됨 101 오른쪽과 왼쪽 센서에서 감지 됨 110 오른쪽과 중앙 센서에서 감지 됨 111 모든 방향의 센서에서 감지 됨 사용 예제 물체값지 기준값을 50으로 설정하고 왼쪽 거리센서에 물체가 감지되었을 경우 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#물체감지"
	},
	"4692": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "조명감지",
		"content": "통합센서 S1 의 조명 센서 왼쪽 중앙 오른쪽 에 조명 감지 기준 값에서 지정된 거리 값 이내로 조명이 감지되었는지 유 무를 판단하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 통합센서 S1 의 각 조명 센서에 조명 감지 기준 값에 지정된 조명센서 값 이내로 조명이 감지되면 아래와 같은 값을 발생시킵니다 아래 값은 bit 값으로 2진수 숫자 값을 사용할 수 있습니다 진수 값 10 진수 값 조명 감지 유무 명령어에서의 의미 000 조명 감지 안됨 001 왼쪽 조명 센서에서 감지 됨 010 중앙 조명 센서에서 감지 됨 011 왼쪽과 중앙 조명 센서에서 감지 됨 100 오른쪽 조명 센서에서 감지 됨 101 오른쪽과 왼쪽 조명 센서에서 감지 됨 110 오른쪽과 중앙 조명 센서에서 감지 됨 111 모든 방향의 조명 센서에서 감지 됨 사용 예제 조명값지 기준값을 50으로 설정하고 왼쪽 조명센서에 빛이 감지되었을 경우 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#조명감지"
	},
	"4693": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "최대 소리 크기",
		"content": "통합센서 S1 의 최대 소리크기를 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 통합센서 S1 에서 감지된 최대 소리 크기를 읽어옵니다 소리 크기가 최대 소리 크기 값을 넘어서는 경우 소리 크기값을 최대 소리 크기값으로 복사를 하게 됩니다 최대 소리 크기 값은 255 사이의 숫자를 사용합니다 최대 소리 크기는 자동으로 초기화 되지 않기 때문에 사용자가 직접 으로 초기화 해 주어야 합니다 사용 예제 최대 소리 크기를 0으로 초기화 하고 최대 소리 크기가 200을 넘었을 때 실행되는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#최대-소리-크기"
	},
	"4694": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "소리 크기",
		"content": "통합센서 S1 의 현재 소리 크기값을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 700 파라미터 특성 통합센서 S1 의 소리 크기값을 읽어올 수 있습니다 소음이 없을 때는 기본적으로 127 근처의 값이 읽어지며 소리가 커질 수록 소리 크기값의 변화폭이 커집니다 큰소리가 날 수록 127값을 중심으로 0과 255근처로 크게 진동하게 됩니다 소리 크기 값은 255 사이의 값이 출력됩니다 사용 예제 현재 소리 크기를 화면출력 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#소리-크기"
	},
	"4695": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "소리감지 횟수",
		"content": "통합센서 S1 의 소리감지 횟수를 읽어오거나 초기화하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 소리감지 횟수 는 255 사이의 숫자를 사용합니다 연속적인 소리의 입력이 멈추어야 소리감지 횟수 파라미터에 현재까지 감지된 소리의 횟수 값이 입력됩니다 소리감지 횟수는 자동으로 초기화 되지 않기 때문에 소리감지를 시작하기 전에 사용자가 직접 으로 초기화 해 주어야 합니다 사용 예제 소리감지 횟수를 0으로 초기화 하고 소리가 감지될 때까지 대기합니다 이 후 연주하기 함수를 호출합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#소리감지-횟수"
	},
	"4696": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "소리발생 시간",
		"content": "통합센서 S1 의 소리발생 시간을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 소리 발생 시간 은 65535 사이의 숫자를 사용합니다 소리감지 횟수를 0으로 초기화 하면 소리 발생 시간값도 0으로 초기화 됩니다 사용 예제 두 개의 AX S1센서를 이용해 소리가 난 방향을 찾는 예제 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#소리발생-시간"
	},
	"4697": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "부저 음계",
		"content": "통합센서 S1 의 버저 음계값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 버저 울림 시간 과 반드시 함께 사용되어야 하며 버저 울림 시간 을 먼저 설정하고 난 후 버저 종류 를 설정해야 설정에 맞게 소리가 납니다 순서 중요 버저 울림 시간 에 대한 자세한 정보는 여기를 참고하세요 버저 울림 시간 설정 값에 따라 멜로디 상수나 음계 값 상수를 사용하여 버저 종류 를 설정할 수 있습니다 버저 울림 시간 값이 255 인 경우 특수 멜로디 연주 모드 버저 종류 에 멜로디 상수를 사용하여 25 번 사이의 26가지 멜로디 중 하나를 선택하여 연주합니다 버저 울림 시간 값이 254 사이의 값인 경우 음계 연주 모드 버저 종류 에 음계 값 상수를 사용하여 51 사이의 음계 값을 넣어 하나의 음계를 버저 울림 시간 에 설정된 시간만큼 연주합니다 사용 예제 멜로디3 을 연주하는 예제입니다 3초씩 도미솔 을 연주하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#부저-음계"
	},
	"4698": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "부저 울림시간",
		"content": "통합센서 S1 의 버저 울림 시간을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 700 파라미터 특성 버저 종류 와 반드시 함께 사용되어야 하며 버저 울림 시간 을 먼저 설정하고 난 후 버저 종류 를 설정해야 설정에 맞게 소리가 납니다 순서 중요 버저 종류 에 대한 자세한 정보는 여기를 참고하세요 버저 울림 시간 값 상수를 사용하여 버저 울림 시간 을 설정할 수 있습니다 실제 버저 울림 시간 값은 255 사이의 숫자를 사용합니다 숫자 은 연주 시간 초를 의미하며 최소 버저 울림 시간은 1초 최대 버저 울림 시간은 5초 입니다 따라서 50 254 사이의 값을 입력하면 버저는 최대 울림 시간인 5초간 울리게 됩니다 버저 울림 시간 값이 255 인 경우 특수 멜로디 연주 모드 버저 종류 에 멜로디 상수를 사용하여 25 번 사이의 26가지 멜로디 중 하나를 선택하여 연주합니다 멜로디의 연주가 끝나면 자동으로 버저 울림 시간 값이 0으로 초기화 됩니다 버저 울림 시간 값이 254사이의 값인 경우 음계 연주 모드 버저 종류 에 음계 값 상수를 사용하여 50 사이의 음계값을 넣어 하나의 음계를 버저 울림 시간 에 설정된 시간만큼 연주합니다 254의 값으로 설정하면 소리가 멈추지 않고 계속 울리게 됩니다 사용 예제 멜로디3 을 연주하는 예제입니다 3초씩 도미솔 을 연주하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#부저-울림시간"
	},
	"4699": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "새 리모컨 데이터",
		"content": "무선 통신 모듈을 통해 수신한 데이터 중 확인하지 않은 데이터가 남아 있는지 여부를 나타내는 파라미터 입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 숫자 확인하지 않은 새 무선 데이터가 수신 버퍼에 들어 있음을 나타냅니다 숫자 받은 리모컨 데이터 파라미터를 사용하여 수신 버퍼의 모든 데이터를 확인하였음을 나타냅니다 사용 예제 새 리모컨 데이터가 도착할 때까지 대기한 후 받은 리모컨 데이터가 100일 때 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#새-리모컨-데이터"
	},
	"4700": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "받은 리모컨 데이터",
		"content": "무선 통신 모듈을 통해 데이터를 수신한 경우 수신한 데이터를 읽어가기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 530 CM 700 파라미터 특성 데이터는 65535 사이의 숫자 값입니다 확인하지 않은 새로운 받은 데이터가 들어 있는지 여부는 새 리모컨 데이터 도착 을 이용하여 알 수 있습니다 수신 버퍼를 통해 최대 개의 받은 무선 데이터 값을 저장할 수 있습니다 개의 데이터가 수신 버퍼에 저장되어 있는 경우 읽기 동작을 수행하면 먼저 받은 데이터가 읽혀지고 읽혀진 데이터는 수신 버퍼에서 지워집니다 개의 데이터만 수신 버퍼에 남아 있는 경우 읽기 동작을 수행하면 가장 최근에 받았던 데이터를 얻게 됩니다 사용 예제 새 리모컨 데이터가 도착할 때까지 대기한 후 받은 리모컨 데이터가 100일 때 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#받은-리모컨-데이터"
	},
	"4701": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "보낼 리모컨 데이터",
		"content": "제어기에서 무선 통신 모듈을 통해 외부로 데이터를 전송하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 530 CM 700 파라미터 특성 보낼 데이터는 65535 사이의 숫자 값입니다 보낼 무선 데이터 파라미터에 값을 설정하면 바로 무선으로 설정된 데이터를 전송합니다 사용 예제 무선 데이터의 수신을 기다리다가 데이터가 도착하면 그 데이터를 그대로 다시 무선으로 보내주는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#보낼-리모컨-데이터"
	},
	"4702": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "물체감지 기준값",
		"content": "통합센서 S1 의 물체감지 기준값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 물체감지 유무를 판단하는 기준값을 설정합니다 근거리 감지 모드와 원거리 감지 모드가 있습니다 거리 감지 기준값을 0으로 설정하면 근거리 감지 모드로 동작하게 됩니다 사용 예제 물체값지 기준값을 50으로 설정하고 왼쪽 거리센서에 물체가 감지되었을 경우 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#물체감지-기준값"
	},
	"4703": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "통합센서 S1",
		"header3": "조명감지 기준값",
		"content": "통합센서 S1 의 조명감지 기준값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 CM CM 510 CM 700 파라미터 특성 조명감지 유무를 판단하는 기준값을 설정합니다 사용 예제 조명값지 기준값을 50으로 설정하고 왼쪽 조명센서에 빛이 감지되었을 경우 실행하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#조명감지-기준값"
	},
	"4704": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "적외선 센서 어레이",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#적외선-센서-어레이"
	},
	"4705": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "적외선 센서 어레이",
		"header3": "적외선 센서 값",
		"content": "적외선 센서 어레이의 적외선 센서 값 을 읽어오기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 적외선 센서 어레이의 1번부터 7번까지의 현재 적외선센서값을 읽어올 수 있습니다 5cm 이내에서 사용하도록 최적화 되었습니다 적외선 측정 방식이기 때문에 벽이나 물체의 표면 색이나 질감에 따라 적외선 반사율이 차이가 있으므로 측정값에 차이가 생길 수 있습니다 센서 값은 1023 사이의 범위를 갖습니다 사용 예제 어레이 번호에 따라 센서값이 감지되면다른 음계를 소리냅니다 사용 팁 햇빛이나 형광등과 같은 적외선을 발산하는 외부 조명에 의해 센서 값이 변화할 수 있습니다 물체의 색상에 따라 주변 조명의 상태에 따라 적외선 센서 값은 차이가 있을 수 있으므로 물체와의 정확한 거리를 측정하기 위해 적외선 센서를 사용하는 것은 적합하지 않습니다 위에서와 같이 같은 거리의 물체라도 색상에 따라 적외선 센서 값이 달라지는 특성을 이용하여 흰 색과 검은 색을 구분하는 용도로 적외선 센서를 사용할 수 있습니다 라인트레이서에 활용 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#적외선-센서-값"
	},
	"4706": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "적외선 센서 어레이",
		"header3": "IR 어레이 부저 음계",
		"content": "적외선 센서 어레이의 버저 음계값을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 버저 울림 시간 과 반드시 함께 사용되어야 하며 버저 울림 시간 을 먼저 설정하고 난 후 버저 종류 를 설정해야 설정에 맞게 소리가 납니다 순서 중요 버저 울림 시간 에 대한 자세한 정보는 여기를 참고하세요 버저 울림 시간 설정 값에 따라 멜로디 상수나 음계 값 상수를 사용하여 버저 종류 를 설정할 수 있습니다 버저 울림 시간 값이 255 인 경우 특수 멜로디 연주 모드 버저 종류 에 멜로디 상수를 사용하여 25 번 사이의 26가지 멜로디 중 하나를 선택하여 연주합니다 버저 울림 시간 값이 254 사이의 값인 경우 음계 연주 모드 버저 종류 에 음계 값 상수를 사용하여 51 사이의 음계 값을 넣어 하나의 음계를 버저 울림 시간 에 설정된 시간만큼 연주합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#ir-어레이-부저-음계"
	},
	"4707": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "적외선 센서 어레이",
		"header3": "IR 어레이 부저 울림시간",
		"content": "적외선 센서 어레이의 버저 울림 시간을 읽어오거나 설정하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 버저 종류 와 반드시 함께 사용되어야 하며 버저 울림 시간 을 먼저 설정하고 난 후 버저 종류 를 설정해야 설정에 맞게 소리가 납니다 순서 중요 버저 종류 에 대한 자세한 정보는 여기를 참고하세요 버저 울림 시간 값 상수를 사용하여 버저 울림 시간 을 설정할 수 있습니다 실제 버저 울림 시간 값은 255 사이의 숫자를 사용합니다 숫자 은 연주 시간 초를 의미하며 최소 버저 울림 시간은 1초 최대 버저 울림 시간은 5초 입니다 따라서 50 254 사이의 값을 입력하면 버저는 최대 울림 시간인 5초간 울리게 됩니다 버저 울림 시간 값이 255 인 경우 특수 멜로디 연주 모드 버저 종류 에 멜로디 상수를 사용하여 25 번 사이의 26가지 멜로디 중 하나를 선택하여 연주합니다 멜로디의 연주가 끝나면 자동으로 버저 울림 시간 값이 0으로 초기화 됩니다 버저 울림 시간 값이 254사이의 값인 경우 음계 연주 모드 버저 종류 에 음계 값 상수를 사용하여 50 사이의 음계값을 넣어 하나의 음계를 버저 울림 시간 에 설정된 시간만큼 연주합니다 254의 값으로 설정하면 소리가 멈추지 않고 계속 울리게 됩니다 사용 예제 멜로디3 을 연주하는 예제입니다 3초씩 도미솔 을 연주하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#ir-어레이-부저-울림시간"
	},
	"4708": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "적외선 센서 어레이",
		"header3": "감지 기준값 자동설정",
		"content": "검은 색 감지 기준값 자동 찾기의 시작 마침 을 설정하는 파라미터 입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 에서 로 변할 때 자동찾기를 시작하고 에서 으로 변할 때 자동찾기를 마칩니다 중간에 타이머를 설정해서 자동찾기를 하는 시간을 할당 해야 합니다 사용 예제 감지 기준값을 1로 설정하고 LED가 깜박일때 흰색과 검은색을 감지시키면 자동으로 기준값이 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#감지-기준값-자동설정"
	},
	"4709": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "적외선 센서 어레이",
		"header3": "적외선 물체감지",
		"content": "적외선 센서 어레이의 물체 감지 기준 값에서 지정된 거리 값 이내로 물체가 감지되었는지 유 무를 판단하기 위해 사용하는 파라미터입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 적외선 센서 어레이의 각 적외선 센서의 감지 값이 검은 색 감지 기준값보다 작으면 검은 색을 감지하였다고 판단하여 아래와 같이 검은 색 감지 유무값의 특정 Bit을 1로 셋팅해 줍니다 동시에 해당 LED가 켜집니다 진수 값 10 진수 값 검은색 감지 유무 0000001 1번 적외선 센서에 검은 색 감지 0000010 2번 적외선 센서에 검은 색 감지 0000100 3번 적외선 센서에 검은 색 감지 0001000 4번 적외선 센서에 검은 색 감지 0010000 16 5번 적외선 센서에 검은 색 감지 0100000 32 6번 적외선 센서에 검은 색 감지 1000000 64 7번 적외선 센서에 검은 색 감지 제품그림을 보며 직접 2진수 값을 체크할 수 있습니다 사용 예제 1번 센서의 적외선 감지 기준값을 100 으로 설정하고 1번센서에 검은색이 감지되면 특정행동을 하도록 하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#적외선-물체감지"
	},
	"4710": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "적외선 센서 어레이",
		"header3": "적외선감지 기준값",
		"content": "적외선 센서 어레이가 흰 색 검은 색을 판단하는 기준값입니다 사용 가능 제어기 제어기별 연결장치 바로가기 파라미터 특성 흰 색 과 검은색 을 판단하는 기준값 입니다 적외선 센서값과 검은 색 감지 기준값에 따라 아래와 같이 행동합니다 검은색 감지 유무 LED 센서값 기준값 해당 BIT ON 센서값 기준값 해당 BIT OFF 사용 예제 1번 센서의 적외선 감지 기준값을 100 으로 설정하고 1번센서에 검은색이 감지되면 특정행동을 하도록 하는 예제 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#적외선감지-기준값"
	},
	"4711": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "직접 지정",
		"header3": "",
		"content": "다이나믹셀 등의 외부 장치의 주소를 직접 접근하여 읽기와 쓰기 작업을 진행할 수 있습니다 사용 가능 제어기 제어기별 연결장치 바로가기 특성 사용자가 설정한 주소를 바이트 워드 단위 중 하나를 선택하여 읽거나 쓰기를 할 수 있습니다 사용 예제 ID가 105로 설정된 다이나믹셀의 25번 워드형 주소 값에 0을 기록합니다 ID가 105로 설정된 다이나믹셀의 25번 워드형 주소의 값을 화면출력 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#직접-지정"
	},
	"4712": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "변수",
		"header3": "",
		"content": "프로그램 내부의 저장 공간입니다 여러가지 데이터를 저장 수정 읽기가 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#변수"
	},
	"4713": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "변수",
		"header3": "특성",
		"content": "같은 이름의 변수가 존재하면 새로 만들어지는 것이 아니라 기존의 변수를 사용하는 것입니다 띄어쓰기를 할 수 없습니다 이름의 첫 글자로 숫자를 사용할 수 없습니다 특수 기호 등 를 사용할 수 없습니다 단 는 제외 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#변수"
	},
	"4714": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "변수",
		"header3": "사용 예제",
		"content": "다음과 같이 여러가지 방법으로 변수를 활용할 수 있으며 만들어진 변수를 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#변수"
	},
	"4715": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "변수",
		"header3": "사용 팁",
		"content": "숫자를 기억하고 있어야 하는 경우나 특정 상황에 따라 값을 바꾸어야 하는 경우 혹은 공통된 값을 한꺼번에 변경해야 할 경우에 유용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/programming_02/#변수"
	},
	"4716": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#프로그래밍"
	},
	"4717": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "스마트앱 파라미터",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#스마트앱-파라미터"
	},
	"4718": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "스마트앱 파라미터",
		"header3": "기본정보",
		"content": "파라미터 예제 프로젝트 사용 방법 파라미터 예제 프로젝트를 다운로드 압축을 풀어서 Smart 가 설치된 폴더 SD card 의 RoboPlus Smart Custom 에 복사합니다 예제 태스크는 파라미터 예제 폴더 안에 있는 Task 폴더에서 확인 할 수 있습니다 다운로드 파라미터 예제 파라미터 값 입력 방법 파라미터의 값을 입력하는 방법은 악기 연주 값 화면표시 위치 화면표시 위치 아이템 크기 화면표시 위치 아이템 크기 색상 을 사용하여 입력하거나 파라미터 설명을 참고하여 직접 입력해야 합니다 악기 연주 값은 악기 연주 파라미터를 사용하기 위해 사용됩니다 화면표시 위치 아이템 크기 은 그림 표시를 위해 사용합니다 화면표시 위치 아이템 크기 색상 은 문자 표시 도형 표시 숫자 표시 등을 위해 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#기본정보"
	},
	"4719": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "스마트앱 파라미터",
		"header3": "디버그 정보 표시(읽기/쓰기)",
		"content": "주요기능들의 값을 화면에 표시하여 확인하기 위한 파라미터입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 하위 비트 우측 부터 로 설정시 다음의 정보를 스마트 기기의 화면에 표시합니다 번째 비트 비전 관련 위치 색상 표시 정수 입력시 번째 비트 센서 흔들림 값 표시 정수 입력시 번째 비트 기울기 상하좌우 값 표시 정수 입력시 번째 비트 조도 값 표시 정수 입력시 번째 비트 자기장 값 표시 정수 입력시 16 번째 비트 방향 값 표시 정수 입력시 32 번째 비트 소음 값 표시 정수 입력시 64 번째 비트 터치 영역 값 표시 정수 입력시 128 번째 비트 음성입력 결과 값 표시 정수 입력시 256 10 번째 비트 SNS 관련 전화번호 내용 표시 정수 입력시 512 사용 예제 1초에 한 번씩 디버그 정보를 표시하는 예제입니다 예제를 실행시키면 다음과 같이 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#디버그-정보-표시읽기쓰기"
	},
	"4720": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "스마트앱 파라미터",
		"header3": "화면 회전(읽기/쓰기)",
		"content": "스마트 기기의 화면 방향을 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 자동 세로 가로 의 값을 사용합니다 사용 예제 1초에 한 번씩 화면을 회전하는 예제입니다 예제를 실행시키면 다음과 같이 표시됩니다 사용 팁 예제에서는 스마트 기기와 연결되었는지 확인하는 용도로도 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#화면-회전읽기쓰기"
	},
	"4721": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "스마트앱 파라미터",
		"header3": "카메라 선택(읽기/쓰기)",
		"content": "스마트 기기의 카메라를 사용하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 카메라 화면 미표시 스마트 기기 뒤쪽의 카메라 영상을 표시 후면 카메라 스마트 기기 화면쪽의 카메라 영상을 표시 전면 카메라 의 숫자 값을 사용합니다 사용 예제 1초에 한 번씩 후면 카메라 전면 카메라를 설정하는 예제입니다 예제를 실행시키면 다음과 같이 후면 카메라 화면 전면 카메라 화면이 번갈아 가며 표시됩니다 사용 팁 스마트 기기에 따라 후면 또는 전면 카메라만 지원하는 경우도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#카메라-선택읽기쓰기"
	},
	"4722": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "스마트앱 파라미터",
		"header3": "카메라 줌(읽기/쓰기)",
		"content": "스마트 기기의 카메라 줌을 설정하기 위한 파라미터 입니다 사용가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 255 사이의 숫자 값을 사용합니다 설정한 값에 따라 카메라를 통해 표시되는 화면을 확대 줌 인 축소 줌 아웃 할 수 있습니다 사용 예제 후면 카메라를 이용하여 1초에 한 번씩 까지 줌 값을 반복 설정하는 예제입니다 예제를 실행시키면 다음과 같이 표시됩니다 줌 값 인 경우 줌 값 인 경우 사용 팁 스마트 기기의 종류 전면 후면 카메라 설정에 따라 설정할 수 있는 줌 값이 다릅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#카메라-줌읽기쓰기"
	},
	"4723": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "스마트앱 파라미터",
		"header3": "카메라 기능 선택(읽기/쓰기)",
		"content": "스마트 기기의 카메라 영상을 처리하여 얼굴 감지 색상 감지 움직임 감지 라인 감지와 같은 비전 기능을 사용하기 위한 파라미터 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#카메라-기능-선택읽기쓰기"
	},
	"4724": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "",
		"content": "CM 150 CM 200 OpenCM9 04 파라미터 특성 비전 기능 미사용 얼굴 감지 기능 색상 감지 기능 움직임 감지 기능 라인 감지 기능 의 숫자 값을 사용합니다 사용 예제 얼굴 감지 위치 감지된 색상 동작 감지 위치 라인 감지 색상 라인 감지 위치 파라미터 설명의 예제를 참고 하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#카메라-기능-선택읽기쓰기"
	},
	"4725": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "얼굴 감지 위치(읽기)",
		"content": "얼굴 감지 기능을 사용하는 경우 카메라 기능 선택 감지된 얼굴의 위치를 읽기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 25 화면 위치 사이의 의 숫자 값을 사용합니다 화면이 세로인 경우 화면이 가로인 경우 사용 예제 후면 카메라를 이용 얼굴이 감지된 위치에 빨간색 원을 표시하는 예제입니다 예제를 실행시키면 다음과 같이 얼굴이 감지된 위치에 빨간색 원이 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#얼굴-감지-위치읽기"
	},
	"4726": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "감지된 색상(읽기)",
		"content": "색상 감지 기능을 사용하는 경우 카메라 기능 선택 화면 가운데 부분 화면 13번 영역 에 표시되는 색상을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 색상은 감지 불가 검정색 빨간색 녹색 파란색 의 숫자 값을 사용합니다 사용 예제 후면 카메라를 이용하여 색상을 감지 화면 중앙에 감지된 색상의 원을 표시하는 예제입니다 예제를 실행시키면 다음과 같이 감지된 색상의 원이 화면 가운데에 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#감지된-색상읽기"
	},
	"4727": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "동작 감지 위치(읽기)",
		"content": "동작 감지 기능을 사용하는 경우 카메라 기능 선택 동작이 감지된 위치를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 25 화면 위치 사이의 숫자 값을 사용합니다 화면이 세로인 경우 화면이 가로인 경우 사용 예제 후면 카메라를 이용 동작이 감지된 위치에 빨간색 원을 표시하는 예제입니다 예제를 실행시키면 다음과 같이 동작이 감지된 위치에 빨간색 원이 표시됩니다 사용 팁 스마트 기기가 고정된 상태에서 사용해야 정확한 값을 얻을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#동작-감지-위치읽기"
	},
	"4728": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "라인 감지 색상(읽기/쓰기)",
		"content": "라인 감지 기능을 사용하는 경우 카메라 기능 선택 감지할 라인의 색상을 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 색상은 검정색 빨간색 녹색 파란색 의 숫자 값을 사용합니다 사용 예제 라인 감지 위치 파라미터 설명의 예제를 참고 하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#라인-감지-색상읽기쓰기"
	},
	"4729": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "라인 감지 위치(읽기)",
		"content": "라인 감지 기능을 사용하는 경우 카메라 기능 선택 감지된 라인의 색상을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 화면 위치 사이 의 숫자 값을 사용합니다 화면이 세로인 경우 화면이 가로인 경우 사용 예제 후면 카메라를 이용 녹색 라인을 감지 감지된 위치에 빨간색 원을 표시하는 예제입니다 예제를 실행시키면 다음과 같이 녹색 라인이 감지된 위치에 빨간색 원이 표시됩니다 사용 팁 감지할 라인이 화면의 위치 값 사이에 위치한 경우에만 위치를 찾을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#라인-감지-위치읽기"
	},
	"4730": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "동영상 녹화(읽기/쓰기)",
		"content": "스마트 기기의 카메라를 사용하여 동영상을 녹화하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 녹화중지 녹화시작 의 숫자 값을 사용합니다 사용 예제 후면 카메라를 이용 동작이 감지되면 5초간 동영상을 녹화하는 예제입니다 예제를 실행시키면 다음과 SD card 의 RoboPlus Smart Custom 또는 System프로젝트명 Recorded 폴더에 동영상들이 저장됩니다 사용 팁 동영상 녹화 중에는 화면회전 카메라 선택 소음 측정 음성 인식 기능을 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#동영상-녹화읽기쓰기"
	},
	"4731": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "사진 촬영(읽기/쓰기)",
		"content": "스마트 기기의 카메라를 사용하여 사진을 촬영하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 대기 촬영 의 숫자 값을 사용합니다 사용 예제 후면 카메라를 이용 동작이 감지되면 사진을 촬영하는 예제입니다 예제를 실행시키면 다음과 SD card 의 RoboPlus Smart Custom 또는 System프로젝트명 Captured 폴더에 사진들이 저장됩니다 사용 예제 사진을 촬영한 후에는 값이 자동으로 0이 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#사진-촬영읽기쓰기"
	},
	"4732": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "배경 표시(읽기/쓰기)",
		"content": "배경 이미지를 표시하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 크기와 상관없이 화면에 가득 채워서 표시합니다 배경 지움 199 배경 번호 사이의 숫자 값을 사용합니다 사용 예제 화면에 표시하는 예제입니다 예제를 실행시키면 다음과 같이 표시됩니다 사용 팁 배경이 등록되어 있어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#배경-표시읽기쓰기"
	},
	"4733": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "그림 표시(읽기/쓰기)",
		"content": "그림을 지정한 위치에 표시하기 위한 파라미터 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#그림-표시읽기쓰기"
	},
	"4734": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "",
		"content": "CM 150 CM 200 OpenCM9 04 파라미터 특성 그림 표시의 파라미터는 위치 번호 256 배율 65536 과 같은 형태로 구성됩니다 위치 25 화면 위치 사이의 숫자 값을 사용합니다 번호 지우기 199 그림 번호 사이의 숫자 값을 사용합니다 배율 10 은 기본값 10배 확대 11 20 10배 축소 의 숫자 값을 사용합니다 삭제 위치 25 를 지정하고 번호가 인 경우 해당 위치의 그림을 지웁니다 위치 및 번호가 인 경우 화면에 표시된 모든 그림을 지웁니다 사용 예제 배경위에 그림을 표시하고 좌에서 우로 이동시키는 예제 입니다 예제를 실행시키면 다음과 같이 그림이 이동되며 표시됩니다 사용 팁 그림이 등록되어 있어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#그림-표시읽기쓰기"
	},
	"4735": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "감지된 얼굴 그림 표시(읽기/쓰기)",
		"content": "얼굴 감지 기능을 사용하는 경우 얼굴이 감지된 위치에 선택한 그림을 자동으로 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 선택한 그림이 얼굴 감지 위치에 자동으로 표시 확대 축소 됩니다 자동 표시 그림 지움 199 그림 번호 사이의 숫자 값을 사용합니다 사용 예제 얼굴이 감지된 위치에 그림을 자동으로 표시하는 예제입니다 예제를 실행시키면 다음과 표시됩니다 사용 팁 그림이 등록되어 있어야 합니다 크기나 위치는 얼굴 감지위치에 따라 자동으로 설정됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#감지된-얼굴-그림-표시읽기쓰기"
	},
	"4736": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "사용 가능 제어기",
		"header3": "도형 표시(읽기/쓰기)",
		"content": "선택한 도형을 지정한 위치에 표시하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#도형-표시읽기쓰기"
	},
	"4737": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "",
		"content": "도형 표시의 파라미터는 위치 번호 256 크기 65536 색상 16777216 과 같은 형태로 구성됩니다 위치 25 화면 위치 사이의 숫자 값을 사용합니다 번호 도형 지우기 원 사각형 삼각형 의 숫자 값을 사용합니다 크기 255 사이의 숫자 값을 사용합니다 색상 알 수 없음 흰색 검은색 빨간색 녹색 파란색 노랑색 옅은 회색 회색 어두운 회색 의 숫자 값을 사용합니다 삭제 위치 25 를 지정하고 번호가 인 경우 해당 위치의 도형을 지웁니다 위치 및 번호가 인 경우 화면에 표시된 모든 도형을 지웁니다 사용 예제 도형의 색상과 모양을 바꾸며 또는 빨간색 원을 표시하는 예제입니다 예제를 실행시키면 다음과 같이 도형의 색상과 모양이 바뀌며 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#도형-표시읽기쓰기"
	},
	"4738": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "문자 표시(읽기/쓰기)",
		"content": "선택한 문자를 지정한 위치에 표시하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 문자 표시의 파라미터는 위치 번호 256 크기 65536 색상 167772216 과 같은 형태로 구성됩니다 위치 25 화면 위치 사이의 숫자 값을 사용합니다 번호 문자 지우기 199 문자 번호 200 SMS 내용 알림바 이벤트 내용 자동 저장 의 숫자 값을 사용합니다 크기 255 사이의 숫자 값을 사용합니다 색상 알 수 없음 흰색 검은색 빨간색 녹색 파란색 노랑색 옅은 회색 회색 어두운 회색 의 숫자 값을 사용합니다 삭제 위치 25 를 지정하고 번호가 인 경우 해당 위치의 문자 지웁니다 위치 및 번호가 인 경우 화면에 표시된 모든 문자를 지웁니다 사용 예제 문자를 화면의 11 15 위치에 차례로 표시하고 지우는 예제입니다 예제를 실행시키면 다음과 같이 차례로 문자가 화면 위치 11 부터 15 까지 표시되고 다시 11 부터 15 까지 표시된 문자를 지웁니다 사용 팁 문자가 등록되어 있어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#문자-표시읽기쓰기"
	},
	"4739": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "숫자 표시(읽기/쓰기)",
		"content": "숫자를 지정한 위치에 표시하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 숫자 표시의 파라미터는 위치 숫자 256 크기 65536 색상 167772216 과 같은 형태로 구성됩니다 위치 25 화면 위치 사이의 숫자 값을 사용합니다 번호 255 사이의 숫자 값을 사용합니다 크기 255 사이의 숫자 값을 사용합니다 색상 알 수 없음 흰색 검은색 빨간색 녹색 파란색 노랑색 옅은 회색 회색 어두운 회색 의 숫자 값을 사용합니다 삭제 위치 25 를 지정하고 크기가 인 경우 해당 위치의 숫자 지웁니다 위치 숫자 크기가 인 경우 화면에 표시된 모든 문자를 지웁니다 사용 예제 숫자를 부터 255 까지 증가시키며 표시하는 예제입니다 예제를 실행시키면 다음과 숫자가 증가하며 표시됩니다 사용 팁 숫자를 지우기 위해서는 크기를 으로 설정해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#숫자-표시읽기쓰기"
	},
	"4740": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "문자음성 자동변환 TTS(읽기/쓰기)",
		"content": "문자음성 자동변환 TTS 읽기 쓰기 문자를 음성으로 출력하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 음성 출력 중지 199 문자 번호 200 자동 저장된 문자 의 숫자 값을 사용합니다 사용 예제 두 개의 등록된 문자를 번갈아 가며 음성 출력하는 예제입니다 사용 팁 문자가 등록되어 있어야 합니다 일부 스마트 기기에서는 한글로의 음성 변환이 지원되지 않을 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#문자음성-자동변환--tts읽기쓰기"
	},
	"4741": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "악기 연주(읽기/쓰기)",
		"content": "연주할 악기를 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 악기 연주의 파라미터는 음계 옥타브 256 악기종류 65536 과 같은 형태로 구성됩니다 연주 중지 음계 12 사이의 숫자 값을 사용합니다 옥타브 10 사이의 숫자 값을 사용합니다 기본 악기종류 128 사이의 숫자 값을 사용합니다 사용 예제 어쿠스틱 피아노를 이용하여 도레미파솔라시도 를 연주하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#악기-연주읽기쓰기"
	},
	"4742": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "오디오 재생 1.2(읽기/쓰기)",
		"content": "재생할 오디오를 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 재생 중지 199 오디오 번호 사이의 숫자 값을 사용합니다 사용 예제 오디오 재생 은 한번만 재생하고 오디오 재생 는 반복 재생하는 예제입니다 사용 팁 오디오가 등록되어 있어야 합니다 재생할 수 있는 오디오는 스마트 기기마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#오디오-재생-12읽기쓰기"
	},
	"4743": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "동영상 재생(읽기/쓰기)",
		"content": "재생할 동영상을 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 재생 중지 199 동영상 번호 사이의 숫자 값을 사용합니다 사용 예제 동영상 일시 정지 파라미터 설명의 예제를 참고 하세요 사용 팁 동영상이 등록되어 있어야 합니다 재생할 수 있는 동영상은 스마트 기기마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#동영상-재생읽기쓰기"
	},
	"4744": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "동영상 일시 정지(읽기/쓰기)",
		"content": "동영상 중지 또는 중지 후 다시 재생을 설정하기 위한 파라미터 입니다 사용가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 재생 일시 정지 의 숫자 값을 사용합니다 사용 예제 동영상을 재생하는 중 화면을 터치하면 일시 정지하는 예제입니다 사용 팁 동영상이 등록되어 있어야 합니다 재생할 수 있는 동영상은 스마트 기기마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#동영상-일시-정지읽기쓰기"
	},
	"4745": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "음성 인식(읽기/쓰기)",
		"content": "음성 인식 기능을 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 음성 인식 동작 중지 음성 인식 동작 의 숫자 값을 사용합니다 사용 예제 음성 인식 결과 파라미터 설명의 예제를 참고 하세요 사용 팁 문자가 등록되어 있어야 합니다 음성 인식 중에는 동영상 녹화 또는 소음 측정을 사용할 수 없습니다 훈련 기능을 통해 음성 인식률을 높일 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#음성-인식읽기쓰기"
	},
	"4746": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "음성 인식 결과(읽기/쓰기)",
		"content": "음성 인식 결과 값을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 결과 값 없음 199 문자 번호 사이의 숫자 값을 사용합니다 사용 예제 화면을 터치하면 음성 인식 창이 표시되고 인식된 음성을 표시하는 예제입니다 예제를 실행시키면 다음과 표시됩니다 사용 팁 문자가 등록되어 있어야 합니다 을 입력해야만 값이 초기화 됩니다 훈련 기능을 통해 인식률을 높일 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#음성-인식-결과읽기쓰기"
	},
	"4747": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "볼륨(읽기/쓰기)",
		"content": "스마트 기기의 볼륨 미디어 볼륨 의 크기를 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 255 사이의 숫자 값을 사용합니다 사용 예제 오디오를 재생하고 녹색 빨간색 원을 표시하여 녹색을 터치하면 볼륨을 빨간색을 터치하면 볼륨을 하는 예제입니다 예제를 실행시키면 다음과 같이 표시되며 녹색을 터치하면 볼륨이 커지고 빨간색을 터치하면 볼륨이 작아집니다 사용 팁 스마트 기기의 볼륨은 벨소리 미디어 음악 동영상 게임 등 알림 등 여러 종류가 있습니다 최대 볼륨 크기는 스마트 기기마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#볼륨읽기쓰기"
	},
	"4748": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "흔들림 정도(읽기)",
		"content": "스마트 기기의 흔들림 정도를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 255 사이의 의 숫자 값을 사용합니다 사용 예제 흔들림 정도가 일정 값 이상이면 화면 가운데에 임의의 색상의 원을 표시하는 예제입니다 예제를 실행시키고 스마트 기기를 흔들면 원의 색상이 바뀌며 표시됩니다 사용 팁 센서 값은 스마트 기기마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#흔들림-정도읽기"
	},
	"4749": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "기울기 각도(왼쪽/오른쪽/위쪽/아래쪽)(읽기)",
		"content": "스마트 기기의 기울기 정도를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 왼쪽 오른쪽 위쪽 아래쪽 각각 90 사이의 숫자 값을 사용합니다 사용 예제 기울기에 따라서 원이 움직이는 예제입니다 예제를 실행시키면 다음과 같이 원이 표시되고 기울기 각도에 따라 상하좌우로 이동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#기울기-각도왼쪽오른쪽위쪽아래쪽읽기"
	},
	"4750": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "조도 센서(읽기)",
		"content": "스마트 기기의 조도 센서를 이용하여 주변의 밝기를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 65535 사이의 숫자 값을 사용합니다 사용 예제 조도 센서를 이용하여 빛이 감지되면 흰색 감지되지 않으면 짙은 회색 원을 표시하는 예제입니다 예제를 실행시키면 다음과 같이 조도 값에 따라 원이 표시됩니다 사용 팁 센서 값은 스마트 기기마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#조도-센서읽기"
	},
	"4751": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "자기장 센서(읽기)",
		"content": "스마트 기기를 이용하여 자기장 값을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 65535 사이의 숫자 값을 사용합니다 사용 예제 자기장 센서 값을 화면에 표시하는 예제입니다 예제를 실행시키면 다음과 같이 자기장 값이 표시됩니다 사용 팁 센서 값은 스마트 기기마다 다를 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#자기장-센서읽기"
	},
	"4752": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "방향 (각도값)(읽기)",
		"content": "스마트 기기의 방향 값을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 359 사이의 숫자 값을 사용합니다 북 90 동 180 남 270 서 사용 예제 방향 값을 나누기 10 하여 화면에 표시하는 예제입니다 예제를 실행시키면 다음과 같이 방향 값 10 의 값이 표시됩니다 사용 팁 센서 값은 스마트 기기마다 다를 수 있습니다 방향 값은 스마트 기기의 화면이 위를 향하고 바닥에 놓여진 상태에서 보다 정확한 값을 확인할 수 있습니다 방향 값은 주변 환경의 영향을 많이 받으므로 정확한 값을 확인할 수 없는 경우도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#방향-각도값읽기"
	},
	"4753": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "소음 측정(읽기)",
		"content": "스마트 기기 마이크를 이용하여 주변 소리의 크기를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 255 사이의 숫자 값을 사용합니다 사용 예제 일정 소음 이상인 경우 화면의 원이 움직이는 예제입니다 예제를 실행시키면 다음과 같이 흰색 원이 표시되고 소음 측정 값에 따라 원이 위로 움직입니다 사용 팁 소음 측정 중에는 동영상 녹화 또는 음성 인식을 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#소음-측정읽기"
	},
	"4754": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "터치 위치 1.2(읽기)",
		"content": "스마트 기기의 터치한 화면 위치를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 터치 위치 각각 25 화면 위치 사이의 숫자 값을 사용합니다 사용 예제 터치 위치 에 흰색 원 터치 위치 에 노란색 원을 표시하는 예제입니다 예제를 실행시키면 다음과 터치 위치에 따라 흰색 또는 노란색 원이 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#터치-위치-12읽기"
	},
	"4755": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "SMS(전화번호)(읽기/쓰기)",
		"content": "SMS 를 받았을 때 수신된 SMS 번호를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 미수신 199 전화번호 200 수신은 되었지만 번호가 등록되어 있지 않은 경우 의 숫자 값을 사용합니다 사용 예제 SMS 내용 설명의 예제를 참고 하세요 사용 팁 을 입력해야만 초기화 됩니다 전화번호가 등록되어 있어야 합니다 만약 프로젝트를 복사하여 배포한다면 등록한 전화번호가 같이 복사되니 주의 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#sms전화번호읽기쓰기"
	},
	"4756": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "SMS(내용)(읽기/쓰기)",
		"content": "SMS 를 받았을 때 수신된 SMS 문자를 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 미수신 199 문자 번호 200 수신은 되었지만 문자가 등록되어 있지 않은 경우 의 숫자 값을 사용합니다 사용 예제 SMS 문자가 수신되면 내용을 표시하는 예제입니다 예제를 실행시키면 다음과 SMS 수신 시 내용이 표시됩니다 사용 팁 을 입력해야만 초기화 됩니다 문자가 등록되어 있어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#sms내용읽기쓰기"
	},
	"4757": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "알림바 이벤트(읽기/쓰기)",
		"content": "카카오톡 등의 메신저를 통해 메시지를 받았을 때 수신된 내용을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 수신 내용 없음 199 문자 번호 200 내용 자동 저장 의 숫자 값을 사용합니다 사용 예제 메신저의 내용을 화면에 표시하는 예제입니다 예제를 실행시키면 메시지를 수신했을 때 내용을 표시한 후에 지워집니다 행아웃을 이용하여 테스트 했기 때문에 두 번째 메시지부터 새 메시지 개와 같이 표시되었습니다 사용 팁 을 입력해야만 초기화 됩니다 문자가 등록되어 있어야 합니다 설정에서 접근성 서비스를 활성화 해야 합니다 일부 메신저는 메시지 미 확인 시에 읽지 않은 메시지 2개 와 같이 표시되므로 이 경우 알림바 이벤트 기능이 정상적으로 동작하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#알림바-이벤트읽기쓰기"
	},
	"4758": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "타이머(읽기/쓰기)",
		"content": "스마트 기기의 타이머를 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 스마트 기기를 이용하여 1초 단위로 타이머를 설정할 수 있습니다 65535 사이의 숫자 값을 사용합니다 읽기 남은 시간을 초단위로 반환합니다 쓰기 최대 18 시간까지 설정할 수 있습니다 사용 예제 타이머를 설정하고 설정한 시간이 지나면 진동하는 예제입니다 예제를 실행시키면 스마트 기기가 10초마다 진동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#타이머읽기쓰기"
	},
	"4759": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "진동 시간(읽기/쓰기)",
		"content": "스마트 기기의 진동 기능을 설정하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 읽기 진동 동작 안함 진동 중 의 숫자 값을 사용합니다 쓰기 255 최대2 5초 까지 100 초 단위로 설정할 수 있습니다 사용 예제 타이머를 설정하고 설정한 시간이 지나면 진동하는 예제입니다 예제를 실행시키면 스마트 기기가 10초마다 진동합니다 사용 팁 진동 기능을 없는 스마트 기기도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#진동-시간읽기쓰기"
	},
	"4760": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "플래시 LED(읽기/쓰기)",
		"content": "스마트 기기의 카메라 플래시를 끄거나 키기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 플래시 끄기 플래시 켜기 의 숫자 값을 사용합니다 사용 예제 조도 센서를 이용하여 플래시를 키거나 끄는 예제입니다 예제를 실행시키면 어두운 경우 플래시가 켜지가 밝은 경우 플래시가 꺼집니다 사용 팁 플래시가 없는 스마트 기기도 있습니다 대부분의 스마트 기기는 후면 카메라를 사용하는 경우에만 플래시를 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#플래시-led읽기쓰기"
	},
	"4761": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "앱 실행(읽기/쓰기)",
		"content": "스마트 기기에 설치된 앱을 실행하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 앱 실행 중지 199 앱 번호 의 숫자 값을 사용합니다 사용 예제 화면을 터치하면 앱을 실행 시키고 10초 후에 중지시키는 예제입니다 예제를 실행시키면 화면 터치 시 앱이 실행된 후 종료됩니다 사용 팁 앱이 등록되어 있어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#앱-실행읽기쓰기"
	},
	"4762": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "현재 시간(읽기)",
		"content": "스마트 기기의 현재 시간을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 스마트 기기에 설정된 시간을 분단위로 환산된 값으로 확인할 수 있습니다 1439 00 00 23 59 사이의 숫자 값을 사용합니다 사용 예제 현재 시간을 화면에 표시하는 예제입니다 예제를 실행시키면 다음과 같이 현재 시간이 화면에 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#현재-시간읽기"
	},
	"4763": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "메일 발송(읽기/쓰기)",
		"content": "촬영된 사진 또는 동영상을 메일로 발송하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 읽기 미발송 발송 중 정상 발송 에러발생 의 숫자 값을 사용합니다 쓰기 취소 최근 촬영된 사진 첨부 최근 촬영된 동영상 첨부 의 숫자 값을 사용합니다 사용 예제 후면 카메라를 이용 동작이 감지되면 사진을 촬영하고 메일을 보내는 예제입니다 예제를 실행시키면 움직임이 감지된 위치에 빨간색 원이 표시되고 설정한 Gmail 계정으로 촬영된 사진이 발송됩니다 사용 팁 Gmail 계정이 설정되어 있어야 합니다 정확한 Gmail 정보를 입력해도 메일 테스트 발송이 실패한다면 https www google com settings security lesssecureapps 에서 보안 수준이 낮은 앱의 액세스 사용 확인을 선택해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#메일-발송읽기쓰기"
	},
	"4764": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "화면출력, 화면출력 후 줄바꿈(읽기)",
		"content": "RoboPlus 의 기능과 동일합니다 디버깅을 위한 용도로 사용할 수 있습니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 RoboPlus 의 기능과 같은 기능으로 디버깅 용도로 사용할 수 있습니다 4294967295 사이의 숫자 값을 사용합니다 사용 예제 입력 가능한 최대값 4294967295 을 계속 화면에 출력하는 예제입니다 예제를 실행시키면 다음과 같이 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#화면출력-화면출력-후-줄바꿈읽기"
	},
	"4765": {
		"product": "로보플러스 태스크 1.0",
		"header1": "프로그래밍",
		"header2": "파라미터 특성",
		"header3": "제스처 인식(읽기/쓰기)",
		"content": "스마트 기기의 움직임을 확인하기 위한 파라미터 입니다 사용 가능 제어기 CM 150 CM 200 OpenCM9 04 파라미터 특성 인식된 제스처 없음 199 제스처 번호 사이의 숫자 값을 사용합니다 사용 예제 스마트 기기를 잡고 또는 를 그리듯 팔을 움직이면 화면에 또는 를 표시하는 예제입니다 예제를 실행시키고 손을 움직이면 다음과 또는 가 표시됩니다 사용 팁 제스처가 등록되어 있어야 합니다 0을 입력해야만 초기화 됩니다 훈련 기능을 통해 인식률을 높일 수 있습니다 예제에 등록된 제스처가 잘 안식 되지 않는다면 훈련 기능을 통해 자신의 동작을 추가하여 인식률을 높일 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#제스처-인식읽기쓰기"
	},
	"4766": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#기타-정보"
	},
	"4767": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "제어기 선택",
		"header3": "",
		"content": "제어기의 종류에 따라 RoboPlus Task에서 사용 가능한 명령문 및 파라미터가 다릅니다 따라서 프로그램 작성 전에 제어기를 선택해야 합니다 RoboPlus Task에서 특정 제어기를 대상으로 프로그램을 작성 중에 다른 제어기로 변경하면 호환되지 않는 명령 및 파라미터로 인해 룰 체크시 에러가 발생할 수 있습니다 기존에 작성된 프로그램 코드에서 제어기의 종류를 바꾸는 경우 호환되지 않는 명령문과 파라미터를 적절히 수정해 주어야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#제어기-선택"
	},
	"4768": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "",
		"content": "룰 체크란 태스크 코드 Task Code 가 정해진 문법에 맞게 작성되었는지 검사하는 과정입니다 RoboPlus Task에서는 문법 오류를 검사하여 오류 원인과 위치를 자동으로 찾아주는 기능을 지원합니다 만약 문법 오류가 있다면 아래와 같이 에러 종류와 위치가 출력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4769": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 장치나 숫자를 정해주세요.",
		"content": "오류 원인 파라미터 설정을 하지 않았습니다 해결책 설정되지 않은 파라미터를 찾아 적절히 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4770": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 구간 시작이 없습니다.",
		"content": "오류 원인 구간이 필요한 명령문에서 구간이 없는 경우 발생합니다 해결책 구간을 적절히 설정 해 주십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4771": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 구간 지정으로 수행할 문장을 묶어줘야 합니다.",
		"content": "오류 원인 구간이 필요한 명령문이 구간 없이 중복으로 나올 경우 발생합니다 해결책 구간을 적절히 설정 해 주십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4772": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 프로그램 시작은 오직 1개만 존재할 수 있습니다.",
		"content": "오류 원인 프로그램 시작이 2개 이상일 때 발생합니다 해결책 프로그램 시작을 1개만 만듭니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4773": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 프로그램 시작은 구간 안에 만들 수 없습니다.",
		"content": "오류 원인 프로그램 시작이 구간 안에 존재합니다 해결책 프로그램 시작을 구간 안에서 뺍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4774": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 함수는 구간 안에 만들 수 없습니다.",
		"content": "오류 원인 함수가 구간 안에 있습니다 해결책 함수를 구간 안에서 뺍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4775": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 지정한 구간을 수행할 명령문이 없습니다.",
		"content": "오류 원인 명령 조건문 없이 구간만 있습니다 해결책 누락된 명령을 추가하거나 구간이 필요없으면 삭제 해 주십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4776": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 이 문장은 구간 안에 포함되어야 합니다.",
		"content": "오류 원인 구간 없이 가장 바깥에 명령문이 존재합니다 해결책 명령문을 적절한 위치로 이동하거나 잘못 정의된 경우 삭제해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4777": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 구간의 시작과 끝이 짝이 맞지 않습니다.",
		"content": "오류 원인 구간의 시작과 끝이 맞지 않는 경우 발생합니다 해결책 구간을 적절히 설정 해 주십시오 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4778": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 프로그램의 시작을 찾을 수 없습니다.",
		"content": "오류 원인 프로그램 시작이 없습니다 해결책 프로그램 시작을 만듭니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4779": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 같은 이름의 함수가 이미 존재합니다.",
		"content": "오류 원인 같은 이름의 함수가 이미 있습니다 해결책 중복되는 함수 이름을 적절히 바꾸거나 필요없는 경우 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4780": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: “복귀”는 함수에서만 사용합니다.",
		"content": "오류 원인 복귀 명령을 함수 이외의 곳에서 사용할 때 발생합니다 해결책 함수 내부에 복귀명령을 만들거나 필요없는 경우 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4781": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 같은 이름의 레이블이 이미 존재합니다.",
		"content": "오류 원인 레이블 이름이 중복됩니다 해결책 이름을 다르게 설정하거나 필요없는 경우 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4782": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 자기 자신을 호출할 수 없습니다.",
		"content": "오류 원인 함수 내부에서 자기 자신을 호출할 때 발생합니다 해결책 적절한 명령문으로 대체하거나 필요없는 경우 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4783": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 아니면 만약, 아니면의 사용법이 잘못되었습니다.",
		"content": "오류 원인 만약 없이 아니면 만약 혹은 아니면 이 사용되었습니다 해결책 만약 아니면 만약 아니면 의 용법대로 수정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4784": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 끝낼 반복문이 없습니다.",
		"content": "오류 원인 반복문이 아닌 곳에서 반복 끝내기 명령을 사용한 경우 발생합니다 해결책 반복 끝내기 명령은 반복문 안에서 사용하며 필요없는 경우 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4785": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 구간 안에 최소 1개의 실행 문장이 있어야 합니다.",
		"content": "오류 원인 구간이 필요한 명령어 뒤에 실행 문장이 없는 경우 발생합니다 해결책 명령어 뒤에 필요한 실행 문장을 추가하거나 필요없는 경우 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4786": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 호출할 함수가 없습니다.",
		"content": "오류 원인 존재하지 않는 함수를 호출합니다 해결책 해당 함수를 만들거나 필요없는 경우 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4787": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 콜백은 오직 1개만 존재할 수 있습니다.",
		"content": "오류 원인 콜백 함수가 2개 이상 존재할 때 발생합니다 해결책 콜백함수를 하나만 만듭니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4788": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 콜백은 구간 안에 만들 수 없습니다.",
		"content": "오류 원인 콜백이 구간 안에 존재합니다 해결책 콜백을 구간 안에서 뺍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4789": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 콜백 구간 내에서 쓸 수 없는 문장입니다.",
		"content": "오류 원인 콜백에서 사용할 수 없는 명령문이 있습니다 해결책 해당 명령문을 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4790": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 콜백 구간 내에서 쓸 수 없는 장치입니다.",
		"content": "오류 원인 콜백에서 사용할 수 없는 파라미터가 있습니다 해결책 해당 파라미터를 삭제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4791": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 현재 선택한 제어기에서 사용할 수 없는 명령문입니다.",
		"content": "오류 원인 현재 설정된 제어기에서 지원하지 않는 명령문을 사용합니다 해결책 해당 명령문을 삭제하거나 지원하는 제어기로 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4792": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "룰 체크",
		"header3": "룰 에러: 현재 선택한 제어기에서 사용할 수 없는 장치가 있습니다.",
		"content": "오류 원인 현재 설정된 제어기에서 쓸 수 없는 파라미터를 사용합니다 해결책 해당 파라미터를 삭제하거나 지원하는 제어기로 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#룰-체크"
	},
	"4793": {
		"product": "로보플러스 태스크 1.0",
		"header1": "기타 정보",
		"header2": "에러 메세지",
		"header3": "",
		"content": "RoboPlus Task를 이용하여 코드를 작성하고 화면 출력 기능으로 결과를 출력할 때 에러 코드를 확인하면 다음 사항을 확인 해 주십시오 에러 코드 내용 출력 예 8100 연결되지 않은 다이나믹셀 ID와 통신을 시도합니다 만약 연결되어 있다면 케이블을 점검하세요 ERROR 8100 0005 03 8100 에러 코드 0005 통신을 시도한 다이나믹셀 ID 03 내부 정보 0009 함수를 연속적으로 너무 많이 호출합니다 6번이상 ERROR 0009 0033 06 0009 에러 코드 0033 내부 정보 06 내부 정보 8001 현재 제어기의 쓰기 전용 어드레스의 값을 읽습니다 ERROR 8001 000C 02 8001 에러 코드 000C 내부 정보 02 내부 정보 8002 현재 제어기의 읽기 전용 어드레스에 값을 씁니다 ERROR 8002 0009 02 8002 에러 코드 0009 내부 정보 02 내부 정보 없음 실행할 모션 페이지가 존재하지 않습니다 Invalid Page Read 00FE 00FE 실행할 페이지 번호 16진수 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/task/task_misc/#에러-메세지"
	},
	"4794": {
		"product": "로보플러스 터미널",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보플러스 터미널은 텍스트 기반 UI로 제어기를 관리할 수 있는 도구입니다 터미널 프로그램은 아스키 코드를 기반으로 제어기와 통신을 하며 사용자에게 제어기로부터 전송되는 여러 가지 정보를 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#개요"
	},
	"4795": {
		"product": "로보플러스 터미널",
		"header1": "통신 포트 설정",
		"header2": "",
		"header3": "",
		"content": "로보플러스 터미널을 이용하여 제어기에 접속하기 위해서는 연결할 통신 포트를 설정해야 합니다 로보플러스 터미널을 처음 실행하면 과거의 연결 정보를 그대로 복원합니다 만약 시리얼 포트의 이름이 바뀌었거나 다른 프로그램에서 시리얼 포트를 사용 중에 있다면 제어기와 연결되지 않을 수 있습니다 통신 포트는 접속이 끊어진 상태에서 Setup Connect 을 실행하면 다음과 같이 포트 선택창을 볼 수 있으며 제어기가 연결된 시리얼 포트 및 통신 속도를 선택하고 OK를 누르면 됩니다 참고 제어기의 기본 연결 속도는 57 600bps 입니다 로보플러스 터미널의 시리얼 통신 설정은 다음과 같습니다 Parity bit no parity Stop bit 1bit Data bit 8bit Hardware Control none ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#통신-포트-설정"
	},
	"4796": {
		"product": "로보플러스 터미널",
		"header1": "입력 처리",
		"header2": "",
		"header3": "",
		"content": "로보플러스 터미널은 키보드 입력을 받아서 시리얼 통신을 통해 PC와 연결된 제어기로 신호를 전송합니다 각 키에 따른 데이터는 다음과 같습니다 특수 키 처리 ASCII Key 0x08 Backspace 0x0d 0x0a Enter 0x1b ESC 0x1b 0x5b 0x41 커서 up 0x1b 0x5b 0x42 커서 down 0x1b 0x5b 0x43 커서 right 0x1b 0x5b 0x44 커서 left 0x1b 0x5b 0x48 Home 0x1b 0x5b 0x4b End 그 외의 알파벳 키는 해당 ASCII 코드를 전송합니다 한글 및 유니 코드는 지원하지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#입력-처리"
	},
	"4797": {
		"product": "로보플러스 터미널",
		"header1": "입력 처리",
		"header2": "화면 지우기",
		"header3": "",
		"content": "로보 플러스 터미널에서는 화면 지우기 기능을 지원합니다 복잡해진 화면을 지우기 위해서는 메뉴의 Clear Screen 명령을 실행하면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#화면-지우기"
	},
	"4798": {
		"product": "로보플러스 터미널",
		"header1": "제어기 출력 처리",
		"header2": "",
		"header3": "",
		"content": "로보플러스 터미널은 연결된 제어기로 부터 신호를 받아서 화면에 그 내용을 출력합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#제어기-출력-처리"
	},
	"4799": {
		"product": "로보플러스 터미널",
		"header1": "제어기 출력 처리",
		"header2": "커서 제어",
		"header3": "",
		"content": "터미널 화면 크기는 80x36 가로x세로 입니다 커서 제어 문자열은 다음과 같으며 ANSI 커서 제어 방법과 동일합니다 제어기에서 다음과 같은 형식으로 문자를 전송하면 로보플러스 터미널은 지정한 위치로 커서를 이동시킵니다 ESC키의 코드는 27입니다 ESC XH 혹은 ESC Xf 예 27 10 20f 20 10으로 이동 화면 좌표 index는 1부터 시작합니다 그 외 일반적으로 사용하는 제어 문자열은 다음과 같습니다 ASCII Key 0x08 Backspace 커서 한 글자 뒤로 0x0a LF 다음줄 첫 번째로 커서 이동 0x0d CR 그 줄 첫 번째로 커서 이동 0x20 Space 커서 한 글자 다음 0x21 0x7e ASCII 글자 출력 에서 까지 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#커서-제어"
	},
	"4800": {
		"product": "로보플러스 터미널",
		"header1": "데이터 전송/수신",
		"header2": "",
		"header3": "",
		"content": "로보플러스 터미널은 연결된 제어기와 대량의 데이터를 주고 받을 수 있습니다 데이터 전송 프로토콜은 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#데이터-전송수신"
	},
	"4801": {
		"product": "로보플러스 터미널",
		"header1": "데이터 전송/수신",
		"header2": "데이터 전송",
		"header3": "",
		"content": "로보플러스 터미널은 파일의 내용을 바이너리 포맷으로 연결된 제어기에 전송할 수 있습니다 확장자가 hex인 경우는 인텔 HEX 포맷에 근거하여 바이너리로 변환하여 전송합니다 그 외의 확장자는 변환 없이 그대로 전송합니다 파일을 전송하는 순서는 다음과 같습니다 연결된 제어기가 데이터를 수신할 수 있도록 준비합니다 메뉴에서 Transmit file을 선택합니다 전송할 파일을 선택합니다 만약 최근에 전송한 파일을 그대로 사용한다면 Page Down키를 단축키로 활용할 수 있습니다 전송 중에는 로보플러스 터미널 하단에서 전송 상황을 확인할 수 있습니다 전송을 취소하려면 ESC키를 누릅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#데이터-전송"
	},
	"4802": {
		"product": "로보플러스 터미널",
		"header1": "데이터 전송/수신",
		"header2": "데이터 전송",
		"header3": "ByteSum",
		"content": "ByteSum이란 전송된 데이터의 손실 유무를 판단할 수 있는 데이터입니다 ByteSum은 전송하는 모든 바이트 단위 데이터를 더했을 때 마지막 1바이트를 의미합니다 예를 들어 FD 23 4D 2D 를 전송한다면 각 바이트를 모두 더했을 때 01 9A가 나오며 이 중 가장 하위 바이트인 9A가 ByteSum입니다 메뉴에서 bytesum을 체크해 두면 파일 전송시에 파일 패킷의 마지막 부분에 bytesum 패킷을 덧붙여 전송합니다 데이터를 수신한 제어기에서 로보플러스 터미널로부터 받은 bytesum과 직접 계산한 bytesum을 비교하여 데이터 손실 유무를 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#bytesum"
	},
	"4803": {
		"product": "로보플러스 터미널",
		"header1": "데이터 전송/수신",
		"header2": "데이터 수신",
		"header3": "",
		"content": "로보플러스 터미널은 연결된 제어기로부터 데이터를 받아서 파일로 저장할 수 있습니다 파일을 수신하는 순서는 다음과 같습니다 메뉴에서 Recieve File을 선택합니다 저장할 파일 이름을 설정합니다 만약 최근에 저장했던 파일을 그대로 사용한다면 Page Up키를 단축키로 활용할 수 있습니다 제어기에서 데이터 전송을 시작합니다 데이터 수신 중에 로보플러스 터미널 하단에서 수신 상황을 확인할 수 있습니다 데이터 수신이 완료되면 키보드의 End키를 눌러서 데이터 수신을 끝냅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#데이터-수신"
	},
	"4804": {
		"product": "로보플러스 터미널",
		"header1": "옵션 설정",
		"header2": "",
		"header3": "",
		"content": "로보플러스 터미널의 옵션을 설정합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#옵션-설정"
	},
	"4805": {
		"product": "로보플러스 터미널",
		"header1": "옵션 설정",
		"header2": "색상 설정하기",
		"header3": "",
		"content": "로보 플러스 터미널의 배경색과 텍스트 색상을 설정할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus1/terminal/#색상-설정하기"
	},
	"4806": {
		"product": "R+ Design",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "단계별 편집 탭 디자인의 편집과정은 아래와 같이 5단계로 분리되어있으며 순서대로 편집을 진행합니다 각 탭 메뉴는 키보드의 단축키 F1 F5로 빠른 이동이 가능합니다 빠른 실행 메뉴 홈 탭으로 이동하지 않고 다른 디자인 파일을 열거나 현재 편집 중인 디자인 파일 저장할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#개요"
	},
	"4807": {
		"product": "R+ Design",
		"header1": "개요",
		"header2": "홈 탭",
		"header3": "",
		"content": "홈 탭은 이미 제작된 예제 및 파일 관련 메뉴들과 설정 프로그램 정보에 대한 기능을 제공합니다 갤러리 예제를 선택할 수 있는 탭 새로 만들기 새로운 디자인 파일을 생성하여 로봇을 조립할 준비를 합니다 열기 기존에 생성한 디자인 파일을 불러옵니다 저장 조립한 로봇을 디자인 파일에 저장합니다 다른 이름으로 저장 설정 도움말 프로그램 정보 업데이트 확인 종료 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#홈-탭"
	},
	"4808": {
		"product": "R+ Design",
		"header1": "개요",
		"header2": "내 로봇 탭",
		"header3": "",
		"content": "내 로봇 탭은 로봇에 대한 정보를 보거나 수정하는 탭입니다 로봇의 이름 제작자 설명 등을 편집 할 수 있고 로봇 제작에 이용된 파트에 대한 정보를 볼 수 있습니다 내 로봇 정보 로봇의 정보를 입력하고 편집하는 탭 파트 리스트 조립에 사용된 파트의 종류 및 수량을 나타내는 탭 로봇 이름 정보 편집 로봇 정보 편집 창을 여는 버튼 로봇의 중심을 원점으로 조립한 로봇을 화면의 가운데 원점 으로 이동 시점을 원점으로 현재 시점을 화면의 가운데로 이동 캡쳐 현재 로봇의 모습을 미리보기로 저장 캡쳐는 로봇의 기본 시점을 설정하는 역할도 같이 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#내-로봇-탭"
	},
	"4809": {
		"product": "R+ Design",
		"header1": "개요",
		"header2": "조립 탭",
		"header3": "",
		"content": "조립 탭은 가상의 공간에서 로봇을 조립할 수 있는 탭입니다 목록 사용한 파트 목록 상단 바 파트추가 실행 취소 다시 실행 로봇을 원점으로 이동 시점을 원점으로 이동 자동 스냅 켜기 끄기 격자무늬 보이기 숨기기 도움말 하단 UI 회전 UI 홀 기준 회전 UI 이동 회전 UI 선택 메뉴 선택 파트 정보 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#조립-탭"
	},
	"4810": {
		"product": "R+ Design",
		"header1": "개요",
		"header2": "조립 가이드 편집 탭",
		"header3": "",
		"content": "조립 가이드 편집 탭은 조립 탭에서 조립한 로봇의 조립 가이드를 제작 및 편집 할 수 있는 탭입니다 기본적으로 조립 가이드가 만들어 지기는 하나 보다 정교한 가이드를 목표로 한다면 이곳에서 가이드를 제작 및 편집할 수 있습니다 이벤트 목록 각 파트의 이벤트 이동 숨김 를 나타내는 목록 단 숨김 이벤트는 목록에 나타나지 않습니다 상단 바 전체 이벤트 삭제 시점을 원점으로 이동 격자 무늬 보이기 숨기기 도움말 하단 UI 선택 메뉴 이벤트 파트 정보 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#조립-가이드-편집-탭"
	},
	"4811": {
		"product": "R+ Design",
		"header1": "개요",
		"header2": "조립 가이드 보기 탭",
		"header3": "",
		"content": "조립 가이드 보기 탭은 조립한 로봇이 만들어 지는 과정을 볼 수 있는 탭 입니다 재생 화면 재생 속도 변경 및 표시 조작 버튼 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#조립-가이드-보기-탭"
	},
	"4812": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#로봇-만들기"
	},
	"4813": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "예제 열기",
		"header3": "",
		"content": "홈 탭의 갤러리 탭 버튼을 클릭합니다 예제 디자인 파일을 선택합니다 확인 버튼을 클릭합니다 현재 조립 중인 로봇이 저장하지 않은 경우 확인창이 뜹니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#예제-열"
	},
	"4814": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "디자인 파일 열기",
		"header3": "",
		"content": "홈 탭의 열기 버튼을 클릭합니다 파일 선택 창에서 열고 싶은 디자인 파일을 선택합니다 열기 버튼을 클릭합니다 현재 조립 중인 로봇이 저장되지 않은 경우 확인창이 뜹니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#디자인-파일-열기"
	},
	"4815": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "새 로봇 만들기",
		"header3": "",
		"content": "홈 탭의 새로 만들기 버튼을 클릭합니다 현재 조립 중인 로봇이 저장되지 않은 경우 확인창이 뜹니다 조립 탭으로 넘어가 로봇을 조립할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/새-로봇-만들기"
	},
	"4816": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "시점 변경하기",
		"header3": "",
		"content": "마우스 마우스 오른쪽 버튼을 드래그 하여 시점을 변경 할 수 있고 현재 시점은 오른쪽 하단에 있는 작은 도형 기즈모 를 보고 알 수 있습니다 또한 휠을 이용하여 확대 및 축소가 가능합니다 특정 파트를 마우스 오른쪽 클릭하는 경우 파트가 화면의 중앙에 오도록 시점이 변경 됩니다 팝업 리스트 우측 하단에 있는 팝업 리스트를 이용하여 정형화 된 시점으로 바로 변경이 가능합니다 리스트 안의 시점을 선택하면 바로 그 시점으로 변경됩니다 버튼 상하좌우의 버튼을 이용하여 시점을 변경 할 수 있습니다 우측 상단의 버튼을 클릭하면 기본시점으로 돌아옵니다 기본 시점은 내 로봇 탭에서 설정 할 수 있습니다 상단의 버튼을 이용하여 원점을 바라보게 시점을 변경 할 수 있습니다 원점 3D 로봇을 조립하는 가상의 공간의 한가운데를 나타내는 점으로 화면 상에서 붉은 점으로 나타난다 파트 메뉴 파트를 선택 한 후 바라보기 버튼 또는 단축키 를 눌러 파트가 화면의 중앙에 오도록 시점을 변경 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#시점-변경하기"
	},
	"4817": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 추가하기",
		"header3": "",
		"content": "상단의 파트 추가 버튼 또는 단축키 를 이용하여 파트를 추가할 수 있습니다 버튼을 클릭하면 파트 선택 창이 뜨는데 왼쪽 상단에는 파트 분류 하단에는 시리즈 분류가 있고 상단에는 검색창 중간에 파트 리스트가 나타납니다 왼쪽의 분류 및 시리즈에 있는 체크박스를 선택 또는 선택해제 하여 추가하고자 하는 파트를 쉽게 찾을 수 있습니다 상단의 검색창을 이용하는 경우 파트명을 입력을 통해 검색이 가능합니다 파트 이름을 모두 입력하여 검색해도 되지만 이름에 규칙이 있어 색상이나 플레이트의 형태로 편하게 검색할 수 있습니다 예를 들어 노란색 파트들을 검색하고 싶은 경우 로 검색하면 모든 노란색 파트가 화면에 나타나게 되고 가로3칸 세로3칸 플레이트를 검색하고 싶은 경우 3b3 으로 검색하면 플레이트들이 나타납니다 리스트 상에서 아이템을 더블클릭 하거나 선택 후 확인 버튼을 누르면 3D 공간에 선택한 파트가 나타나게 됩니다 이 때 파트는 마우스를 따라다니게 되며 적당한 위치에서 마우스 좌클릭을 하여 3D 공간에 파트를 둘 수 있습니다 파트를 잘못 선택한 경우 ESC키를 이용하여 선택을 취소 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-추가하기"
	},
	"4818": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 선택/해제하기",
		"header3": "",
		"content": "3D 공간 3D 공간 상에서 파트를 마우스 좌클릭을 이용하여 선택 할 수 있습니다 선택된 파트는 노란색 테두리가 생기게 됩니다 선택 가능한 종류는 파트 그룹 홀 포트 연결파트 케이블이고 포트를 제외한 나머지는 복수 선택이 가능합니다 복수 선택은 Shift키를 누른 상태에서 선택하거나 3D 공간을 드래그 하면 영역 내의 모든 파트가 선택 됩니다 홀의 경우 각 면을 선택하게 되는데 반대편 면을 선택하고 싶은 경우 Ctrl 클릭을 이용하여 클릭한 반대편 면을 선택할 수 있습니다 이 경우 클릭한 홀의 면은 흰색 테두리가 생기고 반대편 면에 노란색 테두리가 생기게 됩니다 파트 리스트 파트는 좌측의 파트 리스트를 클릭하여 선택 할 수도 있는데 리스트에는 파트와 그룹만 표시되기 때문에 리스트를 이용하는 경우에는 이 두 종류만 선택이 가능합니다 복수 선택은 Shift키와 Ctrl키를 이용해 가능합니다 선택 해제하기 ESC키를 누르거나 3D 공간의 빈 곳을 클릭하면 선택이 해제됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/파트-선택해제하기"
	},
	"4819": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 복사하기",
		"header3": "",
		"content": "파트를 선택 한 후 하단에 나타나는 메뉴의 파트 복사 버튼이나 단축키 Ctrl 를 이용하여 파트를 복사 할 수 있습니다 파트를 복사하면 파트 추가와 같이 복사한 파트가 마우스를 따라다니게 되며 ESC키를 이용하여 취소할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-복사하기"
	},
	"4820": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 색상 변경하기",
		"header3": "",
		"content": "파트를 선택 한 후 하단 메뉴의 파트 변경 버튼 또는 단축키 를 이용하여 파트 색상을 변경 할 수 있습니다 버튼 또는 단축키를 누르면 파트 선택창이 뜨며 변경 가능한 아이템들이 리스트에 나타나게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-색상-변경하기"
	},
	"4821": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 삭제하기",
		"header3": "",
		"content": "삭제하고자 하는 파트를 선택 한 후 하단 메뉴의 삭제 버튼 또는 단축키 DEL 을 이용하여 파트를 삭제 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-삭제하기"
	},
	"4822": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 이동하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-이동하기"
	},
	"4823": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 이동하기",
		"header3": "기즈모 이용",
		"content": "파트를 선택 한 후 나타나는 기즈모를 이용해 파트의 이동이 가능합니다 기즈모는 3개의 축과 3개의 면으로 이루어져 있고 각 축 또는 면을 드래그하여 축 또는 면이 나타내는 방향으로 이동 할 수 있습니다 기즈모 기즈모 파트를 선택 했을 때 나타나는 것으로 파트의 이동 및 회전을 도와주는 역할을 한다 우측 하단에도 세 축만 있는 작은 기즈모가 있는데 이 기즈모는 현재 시점을 표현하고 있다 기즈모를 이용한 이동 시 자동 스냅 기능을 지원합니다 자동 스냅 기능이란 파트를 이동하는 경우 파트의 홀 또는 축을 기준으로 인접한 파트와 자동으로 붙게 해 주는 기능입니다 자동 스냅 기능이 작동하게 되면 화면과 같이 자동 스냅이 이루어지는 홀들이 붉은 색으로 바뀌게 됩니다 간혹 파트에 따라 이동 시 자동 스냅 기능이 잘 작동하지 않는 경우가 있는데 파트의 앞면과 뒷면의 구분이 있는 경우 뒤집어서 반대 방향으로 이동하거나 이동하는 파트를 바꿔보면 대신 로 좀 더 쉽게 이동이 가능할 수도 있습니다 Tip 홀 없는 상태에서 이동하기 축 연결하기 위의 그림과 같이 우측 상단에 있는 자석 버튼이 설정이 되어있는지 확인합니다 연결 할 프레임 십자 혼 과 액츄에이터를 추가합니다 액츄에이터 면과 십자 혼의 뒷면을 밀착 시켜줍니다 십자 혼을 클릭하면 기즈모가 나타납니다 십자혼의 기즈모를 움직여모터의 연결 부분과 혼의 중심에 붉은 원이 나타납니다 붉은 원이 생기면 마우스를 떼어 연결 합니다 축을 앞면으로 추가 합니다 축의 기즈모를 움직여 십자 혼의 중심에 가도록 합니다 기즈모를 이용하여 상하좌우로 움직입니다 이때 십자 혼의 중심과 가까이 간 후 마우스를 때면 자동 스냅이 되어 연결이 됩니다 이때 축의 중심은 자동으로 맞춰지나 축을 넣은 정도는 자동으로 맞춰지지 않으며 사용자가 직접 기즈모를 이용해서 결정해야 합니다 기즈모를 이용하여 전 후를 움직여 십자 혼과의 결합 위치를 맞추어 줍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-이동하기"
	},
	"4824": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 이동하기",
		"header3": "홀 기준 이동",
		"content": "assets images sw rplus2 design design17 jpg 대부분의 경우 파트의 이동이 홀과 홀이 마주 닿게 하는 경우가 많은데 이 경우에는 홀 기준 이동을 이용 하는 것이 편리합니다 홀 기준 이동이란 이동 대상 파트의 홀과 마주 닿을 파트의 홀을 복수 선택 Shift 클릭 후 하단 메뉴의 이동버튼 또는 단축키 을 이용하여 이동하는 방식입니다 홀 기준 이동은 홀 2개를 이용하는 방법과 4개를 이용하는 방법이 있습니다 홀 2개를 선택한 후 이동하는 경우 첫 번째 선택한 홀의 면이 두 번째 선택한 홀의 면으로 이동하게 됩니다 4개를 이용하는 방법은 세 번째와 네 번째 홀의 선택이 중요한데세 번째 홀은 첫 번째 홀과 같은 파트이어야 하고 네 번째 홀은 두 번째 홀과 같은 파트이어야 합니다 홀 4개를 이용하면 첫 번째 홀의 면이 두 번째 홀의 면으로 이동하고 세 번째 홀이 네 번째 홀로 이동하게 됩니다 홀은 양쪽 면을 구분하므로 홀 기준 이동을 하는 경우 정확한 홀 선택이 중요합니다 홀을 선택하면 눈에 보이는 홀의 면이 선택되어 이동 시 파트가 뒤집히는 현상이 발생할 수 있습니다 파트의 회전 없이 이동하고 싶다면 홀의 반대 면을 선택하면 됩니다 홀의 반대편 선택 Ctrl 클릭 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-이동하기"
	},
	"4825": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 이동하기",
		"header3": "하단 UI 이용(직접 입력)",
		"content": "파트 선택 시 하단에 위치 POS 와 회전 ROT 이 나타나는데 이 값을 직접 수정하여 파트의 이동 및 회전이 가능합니다 하단의 UI에는 세 개의 축이 있는데 이는 기즈모의 축이 나타내는 색과 같습니다 예를 들어 파트를 파란 축 방향으로 이동하고 싶은 경우 하단 UI에서 파란 축인 Z축의 값을 변경해 주면 됩니다 주의사항 파트를 이동하는 경우 선택한 파트 또는 선택한 홀이 포함된 파트 하나만 이동하게 됩니다 연결파트 리벳 나사 등 으로 연결하여도 이동 시에는 따로 움직이게 되므로 복수의 파트를 이동하고 싶은 경우 같이 선택해 주거나 기즈모 이용 그룹을 만들 후 그룹을 이동해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-이동하기"
	},
	"4826": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 회전하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-회전하기"
	},
	"4827": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 회전하기",
		"header3": "기즈모 이용",
		"content": "파트를 선택 후 기즈모가 나타났을 때 Alt키를 누르면 기즈모의 모양이 바뀌게 됩니다 이때 회전하고 싶은 축을 드래그 하면 그 축을 기준으로 파트를 회전시킬 수 있습니다 간혹 시점 및 방향에 따라 드래그가 잘 안 되는 경우가 있는데 축의 방향과 상관없이 기즈모는 상하로 드래그 하는 것이 편리합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-회전하기"
	},
	"4828": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 회전하기",
		"header3": "회전 UI 이용",
		"content": "파트를 선택 시 하단에 회전 UI가 나타나는데 UI에 있는 버튼 또는 단축키를 이용하여 전 후 좌 우 로 90도씩 회전이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-회전하기"
	},
	"4829": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 회전하기",
		"header3": "하단 UI 이용(직접 입력)",
		"content": "파트 선택 후 하단의 UI에서 ROT 회전 의 수치를 변경하여 직접 회전이 가능합니다 예를 들어 붉은 색 축을 기준으로 회전하고 싶은 경우 붉은 축인 X축의 값을 변경해 주면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-회전하기"
	},
	"4830": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "홀 기준 회전",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#홀-기준-회전"
	},
	"4831": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "홀 기준 회전",
		"header3": "기즈모 이용",
		"content": "홀을 선택 후 Alt키를 누르면 회전 기즈모가 나타나는데 이 기즈모를 드래그하면 선택한 홀을 기준으로 파트가 회전하게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#홀-기준-회전"
	},
	"4832": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "홀 기준 회전",
		"header3": "회전 슬라이더 이용",
		"content": "홀을 선택하면 하단에 회전 슬라이더가 나타납니다 슬라이더의 바늘을 움직이거나 하단의 버튼 클릭 각도 입력을 이용해서 회전시킬 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#홀-기준-회전"
	},
	"4833": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 연결하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-연결하기"
	},
	"4834": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 연결하기",
		"header3": "물리적 연결(리벳, 나사)",
		"content": "홀을 선택 한 후 하단 메뉴의 연결 파트 추가 버튼 또는 단축키 를 이용하여 파트들을 연결 할 수 있습니다 연결을 선택하면 파트 선택창이 나오는데 파트에 맞는 적절한 연결 파트를 선택해 주면 됩니다 파트 선택 창 왼편에 끝까지 넣기 라는 옵션이 있는데 이 옵션을 끄면 연결 파트를 선택한 홀에 끝까지 넣지 않고 선택한 홀의 깊이 만큼만 넣게 됩니다 여러 개의 홀을 선택한 후 연결 파트를 추가하는 경우 동시에 추가할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-연결하기"
	},
	"4835": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "파트 연결하기",
		"header3": "전기적 연결(케이블)",
		"content": "포트를 선택 한 후 하단 메뉴의 연결 파트 추가 버튼 또는 단축키 를 이용하여 파트들을 전기적으로 연결 할 수 있습니다 버튼 및 단축키를 누르면 파트 선택창이 나오는데 포트에 맞는 적절한 케이블을 선택해 주면 됩니다 포트의 경우 복수 선택이 불가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-연결하기"
	},
	"4836": {
		"product": "R+ Design",
		"header1": "로봇 만들기",
		"header2": "그룹",
		"header3": "",
		"content": "그룹 생성하기 복수의 파트를 선택합니다 하단 메뉴의 그룹 버튼 또는 단축키 를 이용하여 그룹을 생성합니다 그룹이 된 파트들은 이동 및 회전 시 하나의 파트처럼 동작합니다 그룹 편집하기 그룹을 선택 한 후 하단 메뉴의 그룹 편집 또는 단축키 를 이용하여 그룹 편집 모드로 들어갑니다 또는 왼쪽의 리스트에서 그룹을 더블클릭 하여 편집 모드로 들어갑니다 편집 완료 후 편집 완료 버튼으로 편집 모드를 빠져 나옵니다 그룹 해제하기 그룹을 선택 한 후 하단 메뉴의 그룹 해제 또는 단축키 를 이용하여 그룹을 해제합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#그룹"
	},
	"4837": {
		"product": "R+ Design",
		"header1": "로봇정보 입력/편집하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#로봇정보-입력편집하기"
	},
	"4838": {
		"product": "R+ Design",
		"header1": "로봇정보 입력/편집하기",
		"header2": "내 로봇정보",
		"header3": "",
		"content": "미리보기 저장 버튼을 이용하여 로봇의 미리 보기 이미지를 캡쳐 할 수 있습니다 캡쳐 당시의 시점이 로봇의 기본 시점이 됩니다 미리보기 저장 전에 로봇의 중심을 원점으로 버튼을 누르거나 로봇 선택 좌클릭 후 기즈모를 이용한 이동을통해 로봇을 보기 좋은 위치에 둘 수 있습니다 내 로봇 정보 편집 버튼을 누르면 로봇 정보를 편집하는 창이 나옵니다 이 창에서 로봇의 이름 제작자 등의 입력이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#내-로봇정보"
	},
	"4839": {
		"product": "R+ Design",
		"header1": "로봇정보 입력/편집하기",
		"header2": "파트 리스트",
		"header3": "",
		"content": "파트 리스트 탭에서는 로봇에 사용된 파트들이 나타납니다 실제 로봇을 제작하는 경우 필요한 파트를 쉽게 알 수 있습니다 분류 부분은 Ctrl키 또는 Shift키를 이용하여 복수 선택이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-리스트"
	},
	"4840": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#조립-가이드-만들기"
	},
	"4841": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "조립 가이드",
		"header3": "",
		"content": "조립 가이드는 사용자가 조립한 로봇의 조립 방법을 시각적으로 표현해 주는 것을 의미합니다 기본적으로 조립 시에 가이드가 자동으로 만들어 지나 만드는 당시의 시점 및 상태에 영향을 받아 사용자가 의도한대로 조립 가이드가 만들어지지 않을 수도 있어 조립 가이드 편집 탭을 두어 사용자가 조립 가이드를 생성 및 편집 할 수 있게 했습니다 조립 가이드는 로봇을 분해하는 과정을 기록하는 것으로 실제 가이드를 재생하면 분해한 로봇을 반대로 조립해 나가게 됩니다 조립 가이드는 각 파트들 파트 그룹 연결파트 케이블 의 이벤트로 이루어져 있으며 이벤트는 이동 이벤트와 숨김 이벤트가 있습니다 숨김 이벤트는 좌측의 이벤트 리스트에 표시되지 않으며 보통 이동 이벤트를 생성할 때 자동으로 만들어 집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#조립-가이드"
	},
	"4842": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "이벤트 삭제하기",
		"header3": "",
		"content": "전체 이벤트 삭제 전체 이벤트를 삭제하려면 상단의 모든 이벤트를 삭제 버튼을 누르면 됩니다 특정 이벤트 삭제 이벤트 선택 후 하단의 메뉴에서 이벤트 삭제 버튼을 누르거나 단축키 DEL 키를 누르면 선택한 이벤트가 삭제 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#이벤트-삭제하기"
	},
	"4843": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "파트 선택/이벤트 선택하기",
		"header3": "",
		"content": "3D 공간에서 파트를 선택하면 파트에 이미 이벤트가 있는 경우에는 이벤트가 같이 선택되고 이벤트가 없는 경우에는 파트만 선택됩니다 파트만 선택된 경우 하단의 메뉴를 통해서 이벤트를 생성할 수 있습니다 이때 이벤트는 최근에 선택했던 이벤트 다음 순서에 생성됩니다 좌측의 이벤트 목록에서 이벤트를 선택 할 수 있습니다 단 파트에 2개 이상의 이벤트가 있는 경우 3D 공간상에서 파트를 선택할 시 원하는 이벤트가 선택되지 않을 수가 있습니다 이런 경우에는 좌측의 이벤트 목록을 이용하셔야 합니다 선택 가능한 파트 파트 그룹 연결파트 케이블 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#파트-선택이벤트-선택하기"
	},
	"4844": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "이벤트 생성하기",
		"header3": "",
		"content": "이벤트가 없는 파트를 선택합니다 하단 메뉴에서 이동 이벤트 추가 또는 숨 김 이벤트 추가 버튼을 누릅니다 이동 이벤트 추가 를 누른 경우 기즈모가 나오며 기즈모를 이용해 파트를 이동 회전 할 수 있습니다 이동 회전 후에 이벤트를 저장하면 처음 위치와 마지막 위치가 저장되어 방금 움직인 것과 반대로 이동하는 이벤트가 만들어 지게 됩니다 이동 이벤트와 숨김 이벤트는 같이 존재해야 해서 이동 이벤트 저장 시 숨김 이벤트가 없는 경우 자동으로 생성되며 숨김 이벤트 생성 시 이동 이벤트가 자동으로 생성 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#이벤트-생성하기"
	},
	"4845": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "이동 이벤트 편집하기",
		"header3": "",
		"content": "이동 이벤트를 편집하고 싶으면 이벤트가 있는 파트를 선택하거나 좌측 리스트에서 이벤트를 선택해 줍니다 선택 후 하단 메뉴의 이벤트 편집 버튼 또는 단축키 를 이용하여 편집할 수 있습니다 편집 중 이벤트 불러오기 버튼을 클릭하면 편집 중인 이벤트가 다시 불려오고 이벤트 초기화 버튼을 누르는 경우 초기 위치 이벤트 재생 시 마지막 위치 로 돌아가게 됩니다 편집 후 이벤트 저장 버튼을 누르거나 단축키 를 눌러 수정한 이벤트를 저장할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#이동-이벤트-편집하기"
	},
	"4846": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "이동 이벤트 추가하기",
		"header3": "",
		"content": "하나의 파트에 여러 개의 이동 이벤트를 만들고 싶은 경우 이벤트를 선택 후 하단 메뉴에서 이벤트 추가 버튼을 누르거나 단축키 를 눌러 줍니다 이동 이벤트를 추가한 후 이벤트를 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#이동-이벤트-추가하기"
	},
	"4847": {
		"product": "R+ Design",
		"header1": "조립 가이드 만들기",
		"header2": "이동 이벤트 시점 변경하기",
		"header3": "",
		"content": "시점만 간단히 변경하고 싶은 경우 이벤트를 선택 한 후 저장하고 싶은 시점을 만들어 줍니다 조립 탭에서와 같이 마우스 오른쪽 버튼 드래그 오른쪽 버튼 클릭을 이용하여 시점을 변경 하거나 하단 메뉴의 앞 뒤 이벤트 시점 가져오기 버튼을 이용해 시점을 변경 할 수 있습니다 시점을 변경 한 후 하단 메뉴의 시점 저장 버튼을 누르거나 단축키 를 눌러 저장할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#이동-이벤트-시점-변경하기"
	},
	"4848": {
		"product": "R+ Design",
		"header1": "로보플러스 디자인(R+ Design) 설치하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#로보플러스-디자인r-design-설치하기"
	},
	"4849": {
		"product": "R+ Design",
		"header1": "로보플러스 디자인(R+ Design) 설치하기",
		"header2": "PC에 설치하기",
		"header3": "",
		"content": "로보티즈 홈페이지에 접속 후 로보플러스 다운로드 를 클릭합니다 다운로드 창에서 로보플러스 최신버전을 찾습니다 설치 파일을 다운로드 합니다 다운로드가 되었다면 다운로드된 파일을 설치 합니다 설치가 완료되면 바탕화면에 로보플러스 디자인 Desing 아이콘이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#pc에-설치하기"
	},
	"4850": {
		"product": "R+ Design",
		"header1": "로보플러스 디자인(R+ Design) 설치하기",
		"header2": "스마트폰에 설치하기",
		"header3": "",
		"content": "Play 스토어 앱을 실행합니다 Play 스토어는 안드로이드의 마켓 앱이며 현재는 안드로이드만 지원합니다 검색창에 로보티즈 라고 검색합니다 Design 앱을 설치합니다 설치가 완료되면 홈화면에 아이콘이 생깁니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/design/#스마트폰에-설치하기"
	},
	"4851": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#개요"
	},
	"4852": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "로보플러스 매니저 2.0",
		"header3": "",
		"content": "로보플러스 매니저 0은 로봇을 구성하는 제어기와 다이나믹셀 장치들을 통합 관리합니다 제품을 연결하면 해당 제품을 최신버전으로 업데이트할 수 있으며 컨트롤 테이블을 테스트해볼 수 있습니다 기존의 로보플러스 매니저1 0과 위자드1 0에서 제공하던 기능이 로보플러스 매니저 0에서 통합되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#로보플러스-매니저-20"
	},
	"4853": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "사용전 주의사항",
		"header3": "",
		"content": "V2 기준으로 지원 제품이 한정됩니다 지원 제품 목록에 포함되지 않는 제품의 경우 로보플러스 매니저1 0과 위자드1 0을 사용하시기 바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#사용전-주의사항"
	},
	"4854": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "사용전 주의사항",
		"header3": "지원 제품 목록",
		"content": "로보티즈 드림 로보티즈 스마트 스마트2 로보티즈 IoT 로보티즈 미니 다이나믹셀 시리즈 MX 28 MX 64 MX 106 XL 320 XM시리즈 XH시리즈 Pro시리즈 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#사용전-주의사항"
	},
	"4855": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "펌웨어 정의",
		"header3": "",
		"content": "펌웨어는 하드웨어 장치를 구동하기 위하여 장치에 설치하는 기본적인 소프트웨어입니다 펌웨어에는 PC나 스마트폰 다른 장치와의 통신 약속이 포함되기 때문에 가급적 펌웨어를 최신상태로 유지할 것을 권장합니다 모든 장치 제어기 다이나믹셀 등 는 처음 구매시 펌웨어가 설치되어있으나 기능 추가 버그 수정이 있을 경우 새로운 버전을 배포하기도 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#펌웨어-정의"
	},
	"4856": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "펌웨어 정의",
		"header3": "제어기 펌웨어의 역할",
		"content": "로보플러스 태스크를 통해 작성한 제어프로그램을 구동합니다 로보플러스 모션을 통해 작성한 모션 데이터를 해석합니다 PC나 스마트폰 다이나믹셀과의 패킷 통신 기능을 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#펌웨어-정의"
	},
	"4857": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "펌웨어 정의",
		"header3": "다이나믹셀 펌웨어의 역할",
		"content": "제어기에서 제어프로그램이나 모션 구동시 제어기와의 패킷 통신 기능을 합니다 PC나 스마트폰 다이나믹셀과의 패킷 통신 기능을 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#펌웨어-정의"
	},
	"4858": {
		"product": "로보플러스 매니저 2.0",
		"header1": "개요",
		"header2": "펌웨어 정의",
		"header3": "펌웨어 업데이트의 중요성",
		"content": "새로운 기능이 추가되거나 기존의 기능이 수정될 경우 새로운 펌웨어가 배포될 수 있습니다 새로운 W를 지원해야 하는 경우 호환성 향상을 위해 새로운 펌웨어가 배포될 수 있습니다 버그 수정이 있을 경우 새로운 버전의 펌웨어가 배포될 수 있습니다 제품이 정상적으로 동작하지 않거나 통신이 원활하지 않을 경우 최신 펌웨어 업데이트를 통해 문제가 해결될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#펌웨어-정의"
	},
	"4859": {
		"product": "로보플러스 매니저 2.0",
		"header1": "메뉴 설명",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#메뉴-설명"
	},
	"4860": {
		"product": "로보플러스 매니저 2.0",
		"header1": "메뉴 설명",
		"header2": "단계별 편집 탭",
		"header3": "",
		"content": "작업 영역이 홈 탭 관리 탭 터미널 탭으로 분리됩니다 V2 기준으로 관리 탭의 자가진단 캘리브래이션 기능과 터미널 탭 기능이 미지원 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#단계별-편집-탭"
	},
	"4861": {
		"product": "로보플러스 매니저 2.0",
		"header1": "메뉴 설명",
		"header2": "홈 탭",
		"header3": "",
		"content": "프로그램 시작시 첫 화면으로 제품 선택 메뉴와 펌웨어 업데이트 내역 기능 등을 제공합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#홈-탭"
	},
	"4862": {
		"product": "로보플러스 매니저 2.0",
		"header1": "메뉴 설명",
		"header2": "관리 탭",
		"header3": "",
		"content": "앞서 선택한 제품의 펌웨어 업데이트 테스트 복구 기능을 제공합니다 선택된 제품에 따라 사용할 수 있는 기능이 필터링되어 나타납니다 아래 그림은 컨트롤 테이블을 테스트하는 화면입니다 검색된 제품을 통신속도 모델에 따라 분류하여 나타내며 컨트롤 테이블 값을 수정하며 테스트해볼 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#관리-탭"
	},
	"4863": {
		"product": "로보플러스 매니저 2.0",
		"header1": "메뉴 설명",
		"header2": "터미널 탭",
		"header3": "",
		"content": "해당 기능은 현재 준비 중이며 추후 업데이트를 통해 지원할 예정입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#터미널-탭"
	},
	"4864": {
		"product": "로보플러스 매니저 2.0",
		"header1": "기본 기능",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#기본-기능"
	},
	"4865": {
		"product": "로보플러스 매니저 2.0",
		"header1": "기본 기능",
		"header2": "펌웨어 업데이트",
		"header3": "",
		"content": "홈 탭에서 업데이트 및 테스트를 진행할 제품을 선택합니다 예시에서는 ROBOTIS MINI를 선택함 업데이트 및 테스트 메뉴를 선택합니다 안내에 따라 제품과 PC를 연결한 후 제품을 켭니다 연결할 포트를 선택한 후 다음 버튼을 클릭합니다 예시에서는 블루투스 시리얼 포트를 사용함 검색할 통신속도를 선택한 후 다음 버튼을 클릭합니다 블루투스 시리얼 포트 사용시 57600bps만 가능함 관리할 대상이 정상적으로 검색되었는지 확인한 후 다음 버튼을 클릭합니다 만약 제품 검색이 정상적으로 이뤄지지 않을 경우 다시 시도 버튼을 클릭하세요 업데이트할 내용이 감지되면 아래의 지금 업데이트 버튼이 활성화됩니다 업데이트 내용을 확인한 후 지금 업데이트 버튼을 클릭합니다 업데이트가 정상적으로 완료될 때까지 기다린 후 다음 버튼을 클릭합니다 업데이트가 완료되면 컨트롤 테이블 테스트 기능이 실행됩니다 일부 제어기는 업데이트 완료 후 전원이 꺼지며 대화창이 종료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#펌웨어-업데이트"
	},
	"4866": {
		"product": "로보플러스 매니저 2.0",
		"header1": "기본 기능",
		"header2": "펌웨어 복구",
		"header3": "",
		"content": "홈 탭에서 펌웨어 복구를 진행할 제품을 선택합니다 예시에서는 ROBOTIS MINI를 선택함 펌웨어 복구 메뉴를 선택합니다 안내 메시지를 확인한 후 다음 버튼을 클릭하세요 복구를 진행할 제품을 선택한 후 다음 버튼을 클릭합니다 예시에서는 OpenCM9 04를 선택함 안내를 순서대로 따라서 진행합니다 노란색 경고 문구를 반드시 숙지하세요 모든 준비를 마치면 다음 버튼을 클릭합니다 연결할 포트를 선택한 후 다음 버튼을 클릭합니다 예시에서는 블루투스 시리얼 포트를 사용함 장치가 연결되면 펌웨어 설치를 위해 부트로더를 감지합니다 다음 버튼이 활성화되면 클릭합니다 설치할 펌웨어 정보를 확인한 후 다음 버튼을 클릭합니다 복구가 정상적으로 완료되면 마침 버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#펌웨어-복구"
	},
	"4867": {
		"product": "로보플러스 매니저 2.0",
		"header1": "기본 기능",
		"header2": "다이나믹셀 컨트롤 테이블",
		"header3": "",
		"content": "컨트롤 테이블 창이 열려있다는 가정으로 진행합니다 연결하는 과정은 업데이트 하기 를 참고하세요 컨트롤 테이블 창은 장치를 통신속도 장치 순으로 분류합니다 테스트할 통신속도 그룹과 장치를 선택합니다 예시에서는 XL 320을 선택함 좌측 메뉴에서 팩토리 리셋 버튼을 클릭하면 제품을 공장 초기화 상태로 되돌릴 수 있습니다 이때 ID와 Baudrate 값은 변경하지 않습니다 좌측 메뉴에서 리부팅 버튼을 클릭하면 해당 다이나믹셀을 재부팅할 수 있습니다 좌측 메뉴에서 토크 켜기 버튼을 클릭하면 해당 다이나믹셀의 토크를 켜거나 끌 수 있습니다 좌측 메뉴의 토크 켜기 버튼을 클릭하여 다이나믹셀의 토크를 켭니다 컨트롤 테이블 항목에서 Goal Position 항목을 찾아 선택합니다 우측 하단의 위치 값 컨트롤을 사용하여 모터를 움직여봅니다 값을 조정하는 과정에서 모터가 갑작스럽게 움직일 수 있으니 주의하세요 좌측 하단의 통신 상태 LED를 통해 현재 PC와 제품의 통신이 원활히 이루어지고 있는지 확인할 수 있습니다 초록색 정상 노란색 타임아웃 빨간색 데이터 소실 좌측 하단의 응답 에러 메시지를 통해 다이나믹셀의 응답상태를 확인할 수 있습니다 좌측 하단의 하드웨어 알람 메시지를 통해 하드웨어의 에러상태를 확인할 수 있습니다 일부 다이나믹셀의 경우 프로파일 타입 상태 보기 기능을 제공합니다 특정 Operating Mode에서 Profile Acceleration 값과 Profile Velocity 값에 따라 프로파일 타입이 결정됩니다 자세한 사항은 해당 다이나믹셀의 Manual을 참고하세요 지원 가능한 제품 XM시리즈와 XH시리즈 컨트롤 테이블에 대한 더 많은 정보를 얻으려면 각 제품의 Manual을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#다이나믹셀-컨트롤-테이블"
	},
	"4868": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#고급-기능"
	},
	"4869": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "XM/XH 시리즈 사용전 준비",
		"header3": "",
		"content": "XM XH 시리즈를 Task2 0이나 Motion2 0에서 사용하기 위해서는 두 가지 사전준비를 거쳐야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#xmxh-시리즈-사용전-준비"
	},
	"4870": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "XM/XH 시리즈 사용전 준비",
		"header3": "H/W 준비하기",
		"content": "아래 그림처럼 OpenCM9 04과 XM시리즈 외에 OpenCM 485 EXP 보드 가 필요합니다 아래 3가지를 케이블로 연결합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#xmxh-시리즈-사용전-준비"
	},
	"4871": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "XM/XH 시리즈 사용전 준비",
		"header3": "Dynamixel Channel 설정하기",
		"content": "Manager 0을 실행하여 Dynamixel2 제품을 선택한 후 업데이트 amp 테스트 메뉴를 실행합니다 OpenCM9 04에 LN 101 또는 BT 210 혹은 BT 110 을 사용하여 PC와 연결한 후 OpenCM 485 EXP의 전원을 켭니다 안내에 따라 제품을 검색하면 OpenCM9 04가 검색됩니다 처음에는 OpenCM9 04의 Dynamixel Channel 값이 Default로 설정되어 있어 XM XH시리즈가 검색되지 않습니다 제품을 업데이트하는 과정을 거치면 컨트롤 테이블이 실행됩니다 컨트롤 테이블 항목에서 Dynamixel Channel 값을 EXP Board로 설정한 후 저장합니다 설정이 완료되면 컨트롤 테이블 창을 닫고 OpenCM 485 EXP의 전원을 껐다가 켭니다 이때 재부팅되면서 OpenCM9 04의 미니 TTL버스가 비활성화되고 OpenCM 485 EXP의 다이나믹셀 버스가 활성화 됩니다 업데이트 amp 테스트 메뉴를 다시 실행하여 XM XH시리즈가 정상적으로 검색되는지 확인합니다 설정이 완료되면 Task 0과 Motion 0에서 XM XH 시리즈를 사용할 수 있게 됩니다 Task v2 Motion v2 이상 버전에서 지원 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#xmxh-시리즈-사용전-준비"
	},
	"4872": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "컨트롤 아이템 값 변경",
		"header3": "",
		"content": "마우스 왼쪽 버튼 드래그로 변경하기 값을 크게 변경할 때 사용합니다 마우스 휠로 변경하기 값을 조금 키우거나 줄일 때 사용합니다 키보드 방향키로 변경하기 값을 미세하게 키우거나 줄일 때 사용합니다 값 직접 입력하기 간단한 연산 식 덧셈 뺄셈 의 입력이 가능합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#컨트롤-아이템-값-변경"
	},
	"4873": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "펌웨어 정보 확인",
		"header3": "",
		"content": "제품의 펌웨어 버전 배포일 업데이트 노트를 확인하는 기능입니다 홈 탭으로 이동한 후 펌웨어 정보를 확인할 제품을 선택합니다 우측 상단의 펌웨어 정보 버튼을 클릭합니다 선택된 제품의 펌웨어 버전 배포일 업데이트 노트를 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#펌웨어-정보-확인"
	},
	"4874": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "블루투스로 펌웨어 관리하기",
		"header3": "",
		"content": "BT 210 BT 110을 이용하면 무선으로 펌웨어 관리를 진행하실 수 있습니다 BT 410의 경우 무선 펌웨어 관리 기능을 제공하지 않습니다 다음 설명에 따라 블루투스 시리얼 포트를 추가하세요 Windows10 기준 제어기에 BT 210 또는 BT 110 을 연결하고 제어기의 전원을 켭니다 윈도우 시작 버튼을 클릭한 후 설정 메뉴를 클릭합니다 장치 메뉴를 클릭합니다 좌측의 Bluetooth를 선택한 후 Bluetooth 장치를 켭니다 검색된 블루투스 모듈을 찾아 선택한 후 연결 버튼을 클릭합니다 장치 암호입력란에 0000을 입력한 후 다음 버튼을 클릭합니다 페어링이 완료되면 페어링된 장치를 선택한 후 하단의 추가 Bluetooth 옵션 을 클릭합니다 COM 포트 탭을 클릭한 후 송신 포트의 포트 번호를 확인합니다 아래 그림에서는 COM7 Manager 0에서 설치된 블루투스 포트를 선택하면 무선으로 관리 기능을 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#블루투스로-펌웨어-관리하기"
	},
	"4875": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "FAQ",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#faq"
	},
	"4876": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "FAQ",
		"header3": "지원 가능한 제품 군은?",
		"content": "ROBOTIS DREAM ROBOTIS SMART ROBOTIS SMART2 ROBOTIS IoT ROBOTIS MINI Dynamixel 시리즈 XL 320 XM시리즈 XH시리즈 Pro시리즈 그 외 CM 150 CM 200 OpenCM9 04 OpenCM7 을 사용하여 만든 사용자 로봇 AX시리즈 MX시리즈 RX시리즈 DX시리즈 EX시리즈 CM 530 CM 510 CM 700 CM 100A는 지원하지 않습니다 V2 기준 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#faq"
	},
	"4877": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "FAQ",
		"header3": "통신 포트가 나타나지 않습니다. 어떻게 해야 하나요?",
		"content": "드라이버 설치 매뉴얼을 참고하세요 USB 드라이버 설치 LN 101 드라이버 설치 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#faq"
	},
	"4878": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "FAQ",
		"header3": "제어기가 잘 검색되지 않습니다. 어떻게 해야 하나요?",
		"content": "홈 탭에서 올바른 제품을 선택하였는지 확인하세요 USB 케이블을 사용하는 경우 제어기의 전원을 끄고 PC와 연결한 후 다시 켜보세요 제어기의 베터리가 충분한지 확인하세요 위 사항이 모두 만족한다면 펌웨어 복구를 시도해보세요 더 자세한 사항은 고객지원 또는 amp A게시판으로 문의바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#faq"
	},
	"4879": {
		"product": "로보플러스 매니저 2.0",
		"header1": "고급 기능",
		"header2": "FAQ",
		"header3": "다이나믹셀이 잘 검색되지 않습니다. 어떻게 해야 하나요?",
		"content": "USB2Dynamixel의 통신 모드 스위치가 제대로 설정되어 있는지 확인하세요 다이나믹셀의 연결을 하나씩만 제거하며 시도해보세요 다이나믹셀의 ID가 겹칠 경우 동작이 원활하지 않을 수 있습니다 더 자세한 사항은 고객지원 또는 amp A게시판으로 문의바랍니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/manager/#faq"
	},
	"4880": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보플러스 모션 Motion 모션이란 로봇이 의미있는 행동을 하기 위해 필요한 관절 별 모터의 위치와 속도 데이터 집합을 의미합니다 로봇이 움직이기 위해서는 조립된 로봇에 맞는 모션 프로젝트 파일을 편집하여 다운로드 해야 합니다 모션 파일과 태스크 파일은 어떤 관계인가요 태스크 파일은 로봇이 어떻게 생각하고 움직일지 논리 사고를 정의한 프로그램 코드이며 모션 파일은 태스크에서 내린 판단에 따라 움직일 행동이 정의된 데이터입니다 만약 내가 만든 로봇이 단순한 동작만을 사용하는 로봇이라면 태스크 파일을 작성할 때 모션을 사용하지 않아도 되지만 정밀한 움직임이나 댄스와 같이 많은 움직임이 필요하다면 모션 파일을 사용하는 것이 효율적입니다 태스크 코드에서 모션을 사용한다면 반드시 모션 파일을 다운로드해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#개요"
	},
	"4881": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "소프트웨어 설치",
		"header3": "",
		"content": "주의 로보플러스 모션 소프트웨어의 Mac OS 설치방법이 v2 12부터 변경되었습니다 Mac OS 로보플러스 모션 다운로드 로보플러스 모션 0을 다운로드 받으세요 Mac OS 로보플러스 모션 다운로드 다운로드받은 패키지 Motion2 v2 12 Mac pkg 를 더블클릭해서 실행하세요 만약 아래와 같은 창이 열리며 파일이 실행되지 않을 때에는 다음의 방법으로 실행하시기 바랍니다 시스템 환경설정 에서 보안 및 개인 정보 보호 메뉴를 실행하세요 확인 없이 열기 버튼을 누르면 다운로드된 로보플러스 모션 패키지가 실행됩니다 패키지가 성공적으로 실행되면 계속 버튼을 눌러 진행하세요 폴더 선택 또는 설치 위치 변경 을 눌러 압축을 해제할 폴더의 위치를 선택한 뒤 선택 버튼으로 선택된 폴더를 결정합니다 이 폴더의 위치에서 설치파일을 찾아야 하므로 폴더의 위치를 기억해주세요 설치 버튼을 누르면 선택된 폴더에 압축해제를 시작합니다 사용자 환경 설정에 따라 아래와 같이 암호 입력이 필요할 수 있습니다 압축해제가 완료되면 닫기 버튼을 눌러 종료합니다 앞서 4단계에서 지정한 폴더에서 설치파일인 Motion2 v2 12 Mac dmg 를 찾아 더블클릭으로 실행합니다 프로그램이 정상적으로 실행되면 아래와 같은 창이 나타납니다 좌측의 Motion2 아이콘을 우측의 응용 프로그램 아이콘쪽으로 끌어서 옮깁니다 소프트웨어의 설치가 정상적으로 완료되면 아래와 같이 응용 프로그램 또는 런처에서 설치된 소프트웨어를 찾을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#소프트웨어-설치"
	},
	"4882": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "메뉴설명",
		"header3": "",
		"content": "단계별 편집탭 모션의 편집과정은 아래와 같이 4단계로 분리되어있으며 순서대로 편집을 진행합니다 각 탭메뉴는 키보드의 단축키 F1 F4로 빠른 이동이 가능합니다 빠른 실행 메뉴 홈 탭으로 이동하지 않고 다른 프로젝트를 열거나 현재 열려있는 프로젝트를 저장할 수 있습니다 로봇 연결 메뉴 연결하기 버튼을 클릭하여 로봇 연결하기 창이 활성화되면 아래와 같이 로봇이 연결된 포트를 선택한 후 연결을 시도할 수 있습니다 로그창 모션 편집과정에서 발생한 알림 메시지와 오류 메시지가 표기됩니다 아래 그림에서 순서대로 로그의 레벨 발생시간 메시지가 표기됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#메뉴설명"
	},
	"4883": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "3D 로봇과 실제 로봇",
		"header3": "",
		"content": "3D 로봇은 실제 로봇의 아바타 역할을 합니다 실제 로봇이 없는 상황에서는 로봇을 대신하여 모션을 편집하거나 재생합니다 실제 로봇이 연결된 상황에서는 자동 동기화 기능을 통해 실제 로봇을 조작하는 인터페이스로 사용됩니다 제품별로 제공하는 예제를 3D 로봇으로 제공하며 모션 프로젝트를 처음 생성할 때 선택할 수 있습니다 최초 선택된 3D 로봇은 모션프로젝트를 생성한 후에는 변경할 수 없으며 추후 변경할 수 있도록 지원할 예정입니다 제공하는 3D 로봇 외에 사용자가 임의로 제작한 로봇을 사용할 경우 다이나믹셀 정보를 읽어와 자유 형태 로봇을 구성할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#3d-로봇과-실제-로봇"
	},
	"4884": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "모션 데이터",
		"header3": "",
		"content": "모션 파일에는 로봇을 움직이고 다운로드하기 위한 여러 정보가 포함되며 데이터 구조는 아래 그림과 같습니다 키 프레임 기존의 모션 스텝 Motion Step 과 유사한 개념으로 로봇의 연속적인 움직임을 표현하기 위해 특징적인 자세를 재생하고 싶은 시점에 저장한 단위를 말합니다 예를 들어 5초 시점에서 만세 자세를 키 프레임으로 저장해놓으면 해당 시점이 다가올수록 로봇이 만세 자세를 취하게 됩니다 모션 유닛 기존의 모션 페이지 Motion Page 와 유사한 개념으로 로봇의 연속적인 움직임을 표현하기 위해 시간 순으로 배치한 키 프레임의 묶음 단위를 말합니다 아래 그림을 예로 들면 박수치기 라는 모션 유닛은 5초에 양손 펼치기 키 프레임을 저장하고 1초에 양손 모으기 키 프레임을 저장한 형태로 이루어질 수 있습니다 모션 기존의 페이지 연결 Page Link 과 유사한 개념으로 로봇의 댄스와 같이 복잡하고 긴 동작을 표현하기 위해 여러 개의 모션 유닛을 연결한 묶음 단위를 말합니다 아래 그림을 예로 들면 태권무 라는 모션은 왼손 잽 좌향좌 오른쪽공격1 오른손 어퍼라 는 모션 유닛을 순서대로 연결한 형태로 이루어질 수 있습니다 모션 그룹 모션 0에서는 파일내의 용량 제한이 없어지게 되어 로봇에 다운로드시 일부의 모션을 선택하여 모션 목록을 작성하여야 합니다 이렇게 작성된 모션 목록을 모션 그룹 이라 부르며 제어기의 메모리 용량에 따라 저장할 용량이 백분율로 표시됩니다 아래 그림을 예로 들면 댄스 전용 이라는 모션 그룹은 9개의 모션을 담고 있으며 제어기 용량의 15 를 사용합니다 3D 로봇 모션 데이터를 해석할 때 기준이 되는 로봇으로 로봇이 연결되지 않은 상황에서도 모션 데이터를 재생할 수 있도록 도와줍니다 모션 파일을 생성할 때 반드시 선택해야 하며 편집기 내에서 3D 로봇 변경 메뉴를 제공합니다 아래 그림은 동일한 모션 데이터를 서로 다른 3D 로봇에 적용한 예시 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-데이터"
	},
	"4885": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "타임라인 편집 방식의 장점",
		"header3": "",
		"content": "기존에는 로봇의 동작을 표현하는 단위로 모션 페이지를 사용했으나 모션 0에서는 모션 유닛 을 사용합니다 모션 유닛은 하나의 타임라인을 가지며 타임라인 상에 포즈를 배치할 수 있습니다 기존에는 페이지 내의 스텝 개수가 7개로 제한되어 있어서 8개 이상의 스텝이 필요한 경우 추가 페이지를 만들어 연결해주는 불편함이 있었지만 새로운 모션 0에서는 스텝 개수가 제한되지 않습니다 또한 영화 및 애니메이션 분야에서 많이 활용되는 타임라인기반의 키 프레임 편집 방식을 도입하여 로봇의 스텝을 시간의 흐름 순으로 나열하고 스텝간의 간격을 시각적으로 조절하기 때문에 연속 동작을 기존 모션 0보다 효과적으로 편집할 수 있습니다 ockquote 키프레임 편집 연속 동작을 이루는 키 포즈를 시간 순으로 나열하는 편집 방식 타임 라인에서 삽입된 스텝이 막대의 형태로 1차원 그래프로 표시되어 스텝간격을 직관적으로 확인할 수 있을 뿐만 아니라 사이 시간의 보간 포즈 interpolation pose 도 확인할 수 있게 되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#타임라인-편집-방식의-장점"
	},
	"4886": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "흐름제어 편집 방식의 장점",
		"header3": "",
		"content": "기존에는 모션 페이지 간의 연결과 반복 재생속도가 각 페이지에 종속되어 있어 같은 페이지 데이터를 여러 곳에서 재사용하기 어려웠지만 모션 0에서는 이러한 흐름 제어 연결 반복 재생속도 조절 를 모션 유닛에서 분리하여 하나의 모션 유닛을 여러 곳에서 재사용할 수 있고 반복 및 재생 속도를 자유롭게 지정할 수 있도록 하였습니다 또한 2D 블록과 화살표 기반의 흐름도를 도입하여 나열된 블록과 화살표를 읽는 것 만으로 로봇이 어떻게 움직일지 예측할 수 있습니다 아래의 그림은 모션 흐름도의 예시입니다 그림과 같이 작성된 모션은 다음과 같이 동작합니다 모션 유닛 인사2 를 3배 속도로 2번 반복 재생한 후 모션 유닛 앉아 를 1배 속도로 1번 재생한 후 모션 유닛 일어서 를 1배 속도로 1번 재생합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#흐름제어-편집-방식의-장점"
	},
	"4887": {
		"product": "R+ Motion 2.0",
		"header1": "개요",
		"header2": "모션 다운로드 주의사항",
		"header3": "",
		"content": "기존에는 모션 파일의 크기가 로봇 제어기의 저장 용량을 초과할 수 없어 용량이 큰 모션의 경우 모션 파일을 별도로 나누어 저장해야 했던 반면 모션 0에서는 모션 프로젝트 내에 용량 제한이 없어 한 가지 로봇의 모션을 하나의 파일에 모두 저장한 후 필요시 선택적으로 다운로드할 수 있습니다 모션 프로젝트 내에 저장된 로봇 모션 중 목적에 따라 원하는 모션을 모션 그룹으로 묶을 수 있으며 작성한 모션 그룹 중 하나를 로봇에 다운로드할 수 있습니다 모션 그룹을 편집하는 과정에서 모션을 담을 때마다 우측에 제어기 예상 메모리 용량이 세로 막대 그래프로 표시됩니다 모션 그룹에 담긴 모션에는 순서대로 호출 번호가 부여되며 이를 활용해서 Task에서 호출할 수 있습니다 다운로드시 주의사항 기존과 달리 모션 유닛과 모션을 편집하는 과정에서 실제 로봇으로 모션을 재생한 경우 로봇 제어기내에 저장된 모션이 삭제되므로 모션 편집을 완료한 후에 반드시 로봇 제어기에 모션을 새로 다운로드해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-다운로드-주의사항"
	},
	"4888": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#따라해보기"
	},
	"4889": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "예제 프로젝트 열기",
		"header3": "",
		"content": "홈 탭의 프로젝트 열기 버튼을 클릭합니다 예제 프로젝트 파일을 선택합니다 열기 버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#예제-프로젝트-열기"
	},
	"4890": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "로봇 연결하기",
		"header3": "",
		"content": "화면 하단의 연결하기 버튼을 클릭합니다 로봇이 연결된 포트를 선택한 후 연결하기 버튼을 클릭합니다 로봇이 연결되면 아래 그림과 같이 포트 번호와 전송속도가 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#로봇-연결하기"
	},
	"4891": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "새 모션 유닛 만들기",
		"header3": "",
		"content": "로봇의 어떠한 동작을 표현하기 위해 동작의 특징된 자세를 시간 순으로 나열하여 저장한 데이터를 모션 유닛이라 합니다 저장된 자세들은 시간 간격에 따라 보간되어 이어진 움직임으로 재생됩니다 모션 유닛 탭으로 이동한 후 상단 툴바의 모션 유닛 목록을 클릭합니다 모션 유닛 목록에서 새 모션 유닛 만들기 버튼을 클릭 합니다 새로운 모션 유닛의 이름을 입력한 후 확인 버튼을 클릭합니다 새로 생성된 모션 유닛을 선택한 후 확인 버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#새-모션-유닛-만들기"
	},
	"4892": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "모션 유닛 편집하기(3D 로봇 활용)",
		"header3": "",
		"content": "지금부터 실제 로봇이 없는 상황에서 3D 로봇만으로 모션 유닛을 편집합니다 3D 로봇의 포즈를 편집하고 타임라인 상에 저장하여 연결된 동작을 만듭니다 아래 그림과 같이 화면 상단에 검게 표시된 타임라인 timeline 에서 임의의 위치를 클릭합니다 키보드의 Ctrl키를 누른 상태에서 6번 관절을 선택합니다 우측 하단의 각도 조정 메뉴를 활용하면 관절을 움직일 수 있습니다 로봇의 양팔에 해당하는 관절을 움직여 로봇의 포즈를 만들어 봅니다 화면 우측 상단에 키 프레임 삽입 버튼을 클릭하여 앞서 만든 3D 로봇의 포즈를 삽입합니다 다시 타임라인 상에서 임의로 다음 위치를 지정한 후 키 프레임 삽입 버튼을 클릭하여 동일한 포즈를 삽입합니다 3D 로봇의 포즈를 변경한 후 키 프레임 저장 버튼을 클릭하여 변경된 포즈를 덮어씌웁니다 상단 툴바의 재생 버튼을 클릭하여 지금까지 만든 모션 유닛을 재생해봅니다 앞서 타임라인 상에 삽입한 로봇의 포즈가 시간 순으로 재생됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-유닛-편집하기3d-로봇-활용"
	},
	"4893": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "모션 유닛 편집하기2(실제 로봇 활용)",
		"header3": "",
		"content": "지금부터 실제 로봇을 연결하여 모션 유닛을 편집합니다 실제 로봇의 자세를 손으로 조작하면서 타임라인 상에 저장할 동작을 만듭니다 좌측 하단의 연결하기 버튼을 클릭하여 로봇을 연결합니다 로봇 연결하기 참조 새로운 모션 유닛을 생성합니다 새 모션 유닛 만들기 참조 전체 관절을 선택한 후 토크 끄기 버튼을 클릭하여 실제 로봇의 토크를 풀어줍니다 임의로 관절을 클릭한 후 Ctrl A를 누르면 전체 관절이 선택됩니다 실제 로봇을 손으로 움직여 원하는 포즈를 만든 후 토크 켜기 버튼을 클릭 이어서 로봇 포즈 읽기 버튼을 클릭합니다 3D 로봇이 실제 로봇의 포즈를 따라 합니다 화면 상단에 검게 표시된 타임라인에서 임의의 위치를 클릭한 후 키 프레임 삽입 버튼을 클릭하여 로봇으로부터 읽어온 포즈를 해당 위치에 삽입합니다 다시 타임라인 상에서 임의로 다음 위치를 지정한 후 키 프레임 삽입 버튼을 클릭하여 동일한 포즈를 삽입합니다 토크 끄기 버튼을 클릭하여 실제 로봇의 토크를 풀어줍니다 실제 로봇을 손으로 움직여 원하는 자세를 만든 후 토크 켜기 버튼을 클릭 이어서 로봇 포즈 읽기 버튼을 클릭합니다 키 프레임 저장 버튼을 클릭하여 두 번째로 삽입된 포즈를 덮어 씌웁니다 좌측 하단의 동기화 모드 버튼을 클릭하여 활성화합니다 동기화 모드가 활성화되면 3D로봇의 포즈가 자동으로 실제 로봇에 입력됩니다 타임라인 상에서 임의로 다음위치를 선택한 후 3D 로봇을 조작하여 세번째 포즈를 잡아줍니다 이때 3D 로봇을 따라 움직이는 실제 로봇이 무게중심을 잃지 않도록 확인하며 진행합니다 상단 툴바의 재생 버튼을 클릭하여 지금까지 만든 모션 유닛을 재생해봅니다 앞서 타임라인 상에 삽입한 로봇의 포즈가 시간 순으로 재생됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-유닛-편집하기2실제-로봇-활용"
	},
	"4894": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "새 모션 만들기",
		"header3": "",
		"content": "모션이란 여러 개의 모션 유닛을 이어 붙이거나 반복횟수 재생속도 등을 지정하여 댄스와 같이 긴 동작을 효율적으로 표현하기 위한 데이터 단위 입니다 태스크 코드에서 모션을 사용하기 위해서는 반드시 모션 유닛을 조합하여 모션을 만들어야 합니다 모션 탭으로 이동한 후 상단 툴바의 모션 목록을 클릭합니다 모션 목록에서 새 모션 만들기 버튼을 클릭합니다 새로운 모션의 이름을 입력한 후 확인 버튼을 클릭합니다 새로 생성된 모션을 선택한 후 확인 버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#새-모션-만들기"
	},
	"4895": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "모션 편집하기",
		"header3": "",
		"content": "지금부터 빈 모션 내에 모션 유닛을 삽입한 후 재생 파라미터를 편집하는 방법을 설명합니다 우측 상단에 모션 유닛 삽입 버튼을 클릭합니다 삽입할 모션 유닛을 선택한 후 재생 파라미터 탭을 선택합니다 재생 파라미터 탭에서 삽입할 모션 유닛의 재생속도 반복횟수 호출번호 삽입 유무를 편집할 수 있습니다 우선 값을 변경하지 않고 확인 버튼을 클릭합니다 삽입된 모션 유닛을 확인한 후 재생 버튼을 클릭하여 모션을 확인 합니다 삽입된 모션 유닛을 다른 모션 유닛으로 변경하거나 재생 파라미터를 수정하려면 삽입된 모션 유닛을 더블 클릭합니다 초록색 화살표 를 더블 클릭하면 모션 유닛이 실행된 후 이어서 실행할 모션 유닛을 추가로 삽입할 수 있습니다 분홍색 화살표 를 더블 클릭하면 모션 유닛이 종료될 때 이어서 실행할 모션 유닛을 추가로 삽입할 수 있습니다 초록색 화살표 를 더블클릭하여 다음 위치에 초기 자세 모션 유닛을 추가합니다 완성된 모션을 재생해봅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-편집하기"
	},
	"4896": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "모션 그룹 만들기",
		"header3": "",
		"content": "로봇에 모션을 다운로드하기 위해서는 모션 그룹을 만들어야 합니다 모션 그룹은 전체 모션 중 다운로드할 모션을 선택하여 묶어놓은 데이터 단위 입니다 모션 다운로드 탭으로 이동한 후 중앙 좌측의 새 모션 그룹 만들기 버튼을 클릭합니다 새 모션 그룹의 이름을 입력한 후 확인 버튼을 클릭합니다 후보 모션 목록에서 그룹에 포함시킬 모션을 선택한 후 모션 추가 버튼을 클릭합니다 우측에 막대 그래프를 통해 실제 로봇의 저장공간을 얼마나 사용했는지 알 수 있습니다 확인 버튼을 클릭하여 모션 그룹을 생성합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-그룹-만들기"
	},
	"4897": {
		"product": "R+ Motion 2.0",
		"header1": "따라해보기",
		"header2": "로봇에 다운로드하기",
		"header3": "",
		"content": "모션 그룹 목록에서 로봇에 다운로드할 모션 그룹을 선택합니다 우측의 저장 용량 그래프가 초과하지 않았는지 확인합니다 모션 그룹 다운로드 버튼을 클릭하여 로봇에 다운로드합니다 화면 중앙에 다운로드 과정이 표기됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#로봇에-다운로드하기"
	},
	"4898": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#유용한-정보"
	},
	"4899": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "자유 형태 로봇 생성(사용자 로봇)",
		"header3": "",
		"content": "홈 탭을 클릭한 후 새 프로젝트 만들기 버튼을 클릭합니다 자유 형태 로봇 탭에서 사용할 제어기를 선택한 후 관절 추가 버튼을 클릭합니다 사용할 ID와 모터 종류를 선택한 후 확인 버튼을 클릭하면 관절목록에 추가됩니다 이와 같이 사용할 모터 목록을 작성한 후 프로젝트를 생성하면 아래 그림과 같이 자유 형태 로봇이 생성됩니다 자유 형태 로봇은 3D 로봇만으로 실제 로봇의 움직임을 유추하기 어려우나 연결된 실제 로봇의 움직임을 확인하며 모션 편집이 가능해집니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#자유-형태-로봇-생성사용자-로봇"
	},
	"4900": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "3D 로봇 변경",
		"header3": "",
		"content": "모션 파일은 최초 선택한 3D 로봇을 기준으로 작성됩니다 모션 파일내의 데이터를 유지한 채로 3D 로봇을 변경해야 하는 경우 3D 로봇 변경 기능을 사용합니다 아래 설명은 휴머노이드 A타입 을 휴머노이드 C타입 으로 변경하는 예시로 진행됩니다 홈 탭으로 이동한 후 좌측 메뉴 중 3D 로봇 버튼을 클릭합니다 중앙 하단의 3D 로봇 변경하기 버튼을 클릭하여 변경을 원하는 로봇을 선택한 후 확인버튼을 클릭합니다 3D 로봇이 변경되면 아래와 같이 탭이 이동합니다 불필요한 관절이 있을 경우 해당 관절을 제거하는 것이 좋습니다 다시 홈 탭의 3D 로봇 메뉴로 이동합니다 제거할 관절이 없다면 는 생략합니다 선택한 후 좌측의 관절 제거 버튼을 사용하여 제거합니다 제거가 완료되면 우측 하단의 적용하기 버튼을 클릭합니다 불필요한 관절이 모두 제거되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#3d-로봇-변경"
	},
	"4901": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "포즈 미러링",
		"header3": "",
		"content": "3D 로봇의 각 관절은 아래 그림과 같이 중앙선을 기준으로 좌우 관절이 대칭으로 이루어져 미러링 기능을 사용할 수 있습니다 Motion에서 제공하는 미러링 기능은 포즈 대칭과 포즈 교환이 있습니다 포즈 대칭 Pose Symmetry 포즈 대칭을 실행하기 위해 기준 값이 대입되어있는 관절을 선택합니다 미러링 버튼을 클릭합니다 선택한 관절의 값이 대칭되는 관절에 대입되었음을 확인합니다 포즈 교환 Pose Exchange 포즈 교환을 실행하기 위해 기준 값이 대입되어있는 관절과 대응되는 관절을 모두 선택합니다 미러링 버튼을 클릭합니다 선택한 관절의 값이 서로 교환되었음을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#포즈-미러링"
	},
	"4902": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "모션 호출 번호 수정",
		"header3": "",
		"content": "모션 호출 번호는 로보플러스 태스크 Task 로 작성한 프로그램 코드에서 모션 데이터를 호출할 때 사용됩니다 제어기에 다운로드한 모션 데이터의 호출번호와 태스크에서 사용한 호출번호가 일치하도록 입력해야 합니다 모션 다운로드 탭으로 이동한 후 모션 호출 번호를 수정할 모션그룹을 선택하고 편집 버튼을 클릭합니다 모션 그룹 내에 담긴 모션 중 수정하고 싶은 호출 번호나 종료 번호를 클릭합니다 변경할 번호를 입력한 후 Enter 키를 누릅니다 만약 입력한 번호가 중복되면 다음과 같은 확인 창이 활성화됩니다 종료 번호의 경우 값을 넣지 않으면 임의로 할당됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-호출-번호-수정"
	},
	"4903": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "모션 파일간 데이터 복사",
		"header3": "",
		"content": "복사할 데이터가 담긴 모션 파일을 실행합니다 홈 탭의 3D 로봇 탭으로 이동하여 3D 로봇 변경 버튼을 클릭합니다 모션 파일의 3D 로봇을 확인한 후 3D 로봇 변경하기 창을 닫습니다 모션 편집기를 하나 더 실행하여 방금 확인한 3D 로봇으로 빈 프로젝트를 생성합니다 모션 유닛 목록을 열어 복사할 대상을 선택한 후 단축키 Ctrl 를 실행합니다 빈 프로젝트가 실행된 모션 편집기에서 모션 유닛 목록을 열어 단축키 Ctrl 를 실행합니다 모션 파일간 데이터 복사 시 주의사항 복사가 가능한 데이터는 관절 값 키 프레임 모션 유닛 모션입니다 빈 프로젝트에 이미 같은 이름의 데이터가 존재한다면 복사되지 않습니다 복사는 모션 유닛 모션 순으로 진행해야 하며 모션 유닛을 복사하지 않고 모션을 복사한다면 빈 모션으로 복사됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#모션-파일간-데이터-복사"
	},
	"4904": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "오프셋 편집",
		"header3": "",
		"content": "홈 탭을 클릭한 후 오프셋 편집을 클릭합니다 로봇을 연결합니다 로봇 연결하기 참조 동기화 모드를 활성화 합니다 초기 포즈를 잡아준 후 로봇을 확인하며 오프셋 포즈를 편집합니다 실제 로봇이 초기 포즈와 같은 포즈를 잡을 때가 가장 이상적인 오프셋입니다 실제 로봇이 초기 포즈를 취한 3D 로봇과 같은 자세를 잡도록 오프셋을 천천히 조정합니다 오프셋 다운로드 버튼을 클릭하여 오프셋을 로봇 제어기에 저장합니다 초기 포즈와 오프셋 포즈간의 차이가 오프셋으로 적용됩니다 오프셋 포즈 초기 포즈 오프셋 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#오프셋-편집"
	},
	"4905": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "구 버전 파일(*.mtn) 변환하기",
		"header3": "",
		"content": "새로운 로보플러스 모션2 Motion 에서는 기존의 로보플러스 모션1 Roboplus Motion 에서 사용해오던 구 모션 파일 mtn 을 그대로 사용할 수 없습니다 구 모션 파일 mtn 을 새로운 모션 편집기에서 사용하려면 mtnx로 변환하는 과정을 거쳐야 합니다 주의사항 mtn파일을 mtnx파일로 변환한 후에는 저장 용량 및 모션 호출번호가 변경될 수 있습니다 변환이 완료된 후 모션 호출번호를 확인하여 다시 지정해주시기 바랍니다 로보플러스 모션을 실행합니다 로봇을 연결한 후 로봇 모션을 mtn파일로 저장하기 위해 다른 이름으로 저장 메뉴를 실행합니다 저장할 파일명을 입력한 후 저장 버튼을 클릭합니다 Motion 0을 실행합니다 프로젝트 열기 버튼을 클릭한 후 파일 확장자를 mtn Files 로 변경합니다 변환을 진행할 대상 mtn 파일을 선택한 후 열기 버튼을 클릭합니다 아래 그림과 같이 컨버팅 실행 메시지 창이 활성화되면 확인 버튼을 클릭합니다 모션 데이터를 사용할 3D 로봇을 선택한 후 확인 버튼을 클릭합니다 컨버팅이 완료되면 좌측 상단의 모션 유닛 목록 을 클릭하여 제대로 변환되었는지 확인합니다 변환이 완료된 mtnx 파일을 저장합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#구-버전-파일mtn-변환하기"
	},
	"4906": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "3D 카메라 조작",
		"header3": "",
		"content": "마우스 오른쪽 버튼을 클릭한 채 드래그하면 시점이 회전됩니다 Home 키를 누르거나 마우스 휠 버튼을 앞으로 굴리면 시점이 확대됩니다 End 키를 누르거나 마우스 휠 버튼을 뒤로 굴리면 시점이 축소됩니다 Page Down 키를 누르면 시점이 내려갑니다 시점이 내려감에 따라 로봇이 위로 올려져 보입니다 Page Up 키를 누르면 시점이 올라갑니다 시점이 올라감에 따라 로봇이 아래로 내려져 보입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#3d-카메라-조작"
	},
	"4907": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "단축키",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#단축키"
	},
	"4908": {
		"product": "R+ Motion 2.0",
		"header1": "유용한 정보",
		"header2": "자주 묻는 질문",
		"header3": "",
		"content": "지원 가능한 제품 군은 프리미엄 스템 스마트 다윈미니 CM 200 CM 510 CM 530 CM 700 OpenCM9 04C AX시리즈 MX시리즈 XL 320 로 구성된 로봇 TTL RS485 통신 제품군 모두 사용 가능 지원 가능한 3D 모델은 지원 제품 군 중에서 모션을 사용하는 예제 전체 지원 가능한 관절의 개수는 다이나믹셀을 사용할 경우 최대 26개의 관절을 사용할 수 있으며 ID는 25번까지 사용가능 CM 200을 사용할 경우 최대 8개의 관절을 사용할 수 있으며 ID는 10번까지 사용가능 예제 3D 모델 외의 로봇을 추가할 수 있나요 현재는 모터가 나열된 형태로만 제공하며 추후 PC버전에서 Design으로 조립한 로봇을 활용할 수 있도록 지원할 예정 MTN파일을 MTNX로 변환할 수 있나요 Manual의 구 버전 파일 mtn 변환하기 페이지 참조 MTNX파일을 MTN으로 변환할 수 있나요 현재는 지원하지 않으며 앞으로도 지원계획 없음 모션 파일을 수정한 후 제대로 동작하지 않습니다 어떻게 해야 하나요 모션 파일을 수정한 후 반드시 모션그룹을 다시 다운로드 해야 합니다 제어기가 잘 연결되지 않습니다 어떻게 해야 하나요 제어기를 껐다 켠 후 다시 시도해보세요 만약 사용하는 제어기가 CM 200이라면 제어기를 끈 후 전원버튼을 3초 눌러서 태스크를 멈춘 후 시도해 보세요 관절 그룹에서 가중치가 뭔가요 여러 관절의 각도 값을 각각 다른 배수로 조절할 때 사용하는 기능입니다 관절 그룹을 선택한 후 차이 조정 기능을 사용하면 가중치 만큼씩 값이 더해지게 됩니다 계산식 현재각도 이전각도 회전방향 가중치 클릭횟수 관절 그룹을 이용한 예시 영상 http youtu a7vkf95Q1is list UUuHS2rd R6LjKyw3yTKXObA ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/motion/#자주-묻는-질문"
	},
	"4909": {
		"product": "로보플러스 블록",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보플러스 블록은 구글 블로클리 Blockly 방식의 블록형 코딩이 가능하도록 개발된 코딩 교육용 플랫폼입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#개요"
	},
	"4910": {
		"product": "로보플러스 블록",
		"header1": "개요",
		"header2": "지원 제품 목록",
		"header3": "",
		"content": "ROBOTIS OLLO ROBOTIS PLAY 700 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#지원-제품-목록"
	},
	"4911": {
		"product": "로보플러스 블록",
		"header1": "개요",
		"header2": "지원 부품 목록",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#지원-부품-목록"
	},
	"4912": {
		"product": "로보플러스 블록",
		"header1": "개요",
		"header2": "지원 부품 목록",
		"header3": "제어기",
		"content": "CM 50 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#제어기"
	},
	"4913": {
		"product": "로보플러스 블록",
		"header1": "개요",
		"header2": "지원 부품 목록",
		"header3": "통신 모듈",
		"content": "BT 210 BT 410 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#통신-모듈"
	},
	"4914": {
		"product": "로보플러스 블록",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#시작하기"
	},
	"4915": {
		"product": "로보플러스 블록",
		"header1": "시작하기",
		"header2": "로보플러스 블록 설치",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#로보플러스-블록-설치"
	},
	"4916": {
		"product": "로보플러스 블록",
		"header1": "시작하기",
		"header2": "로보플러스 블록 설치",
		"header3": "시스템 최저 요구사항",
		"content": "OS 버전 Android 롤리팝 이상 블루투스 내장 기기 블루투스 지원 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#시스템-최저-요구사항"
	},
	"4917": {
		"product": "로보플러스 블록",
		"header1": "시작하기",
		"header2": "로보플러스 블록 설치",
		"header3": "다운로드/설치",
		"content": "스마트 기기에서 Play 스토어를 실행합니다 Play 스토어는 안드로이드 마켓 앱입니다 Play 스토어에서 Block 을 검색한 후 설치합니다 ockquote Play 스토어에서 로보티즈 검색 및 선택 ockquote 설치 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#다운로드설치"
	},
	"4918": {
		"product": "로보플러스 블록",
		"header1": "시작하기",
		"header2": "로보플러스 블록 설치",
		"header3": "로봇 연결하기",
		"content": "스마트기기의 블루투스를 이용해서 로봇의 블루투스를 연결할 수 있습니다 블루투스로 연결하기 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#로봇-연결하기"
	},
	"4919": {
		"product": "로보플러스 블록",
		"header1": "시작하기",
		"header2": "메뉴 설명",
		"header3": "",
		"content": "Block 의 화면 구성은 아래와 같습니다 제품명 표시 영역 작품명 표시 영역 실행 버튼 중지 버튼 저장 버튼 추가메뉴 버튼 블록 레벨 선택 영역 블록 그룹 영역 실행 블록 영역 작업 영역 Undo 버튼 Redo 버튼 블록 삭제 영역 버튼 휴지통 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#메뉴-설명"
	},
	"4920": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#따라해보기"
	},
	"4921": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "제품 변경",
		"header3": "",
		"content": "제품명 표시 영역을 클릭하면 Block 에서 사용 가능한 로보티즈 제품이 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#제품-변경"
	},
	"4922": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 레벨 변경",
		"header3": "",
		"content": "블록 레벨 선택 영역을 클릭하면 선택된 제품에서 사용가능한 블록 레벨이 표시됩니다 선택한 블록 레벨에 따라 블록 그룹 그룹 내의 블록들이 다르게 표시될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-레벨-변경"
	},
	"4923": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 선택",
		"header3": "",
		"content": "블록 그룹을 클릭하면 해당 그룹에 포함된 블록들이 표시됩니다 블록을 작업영역으로 드래그하여 사용할 수 있으며 한 화면에 표시되지 않는 블록은 위아래로 스크롤하여 표시할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-선택"
	},
	"4924": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "시작 블록",
		"header3": "",
		"content": "시작 블록은 하나만 사용할 수 있으며 시작 블록과 연결된 블록들만 실행 됩니다 블록이 연결 가능하면 아래와 같이 연결 부위가 강조됩니다 아래 화면은 시작 블록에 이동 앞으로 블록이 연결된 화면 입니다 제품과 연결 되면 시작 블록에 연결된 이동 앞으로 블록이 실행되어 제품이 전진합니다 아래와 같이 떨어져 있다면 이동 앞으로 블록은 실행되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#시작-블록"
	},
	"4925": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 삭제",
		"header3": "",
		"content": "블록 그룹 영역이나 휴지통에 블록을 드래그 하여 삭제할 수 있습니다 휴지통을 클릭하면 삭제한 블록이 표시되어 다시 사용할 수 있습니다 한 화면에 표시되지 않는 블록은 좌우로 스크롤하여 표시할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-삭제"
	},
	"4926": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 확대/축소",
		"header3": "",
		"content": "작업 영역의 빈 공간을 두 손가락으로 터치 후 손가락을 벌리거나 모으면 블록을 확대 또는 축소 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-확대축소"
	},
	"4927": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 추가 기능",
		"header3": "",
		"content": "블록을 누르고 있으면 같은 블록 만들기 블록 지우기 와 같은 추가 기능을 사용할 수 있습니다 아래 화면에서는 초 블록의 추가 기능을 표시하는 예 입니다 초 블록을 누르고 있으면 연결되어 같이 실행되는 블록의 색상이 바뀌어 표시됩니다 아래 화면에서는 초 블록 과 연결된 이동 멈추기 블록의 색상이 바뀌어 표시되었습니다 블록을 누른채로 있으면 아래 화면과 같이 추가 기능이 표시 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-추가-기능"
	},
	"4928": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 추가 기능",
		"header3": "같은 블록 만들기",
		"content": "초 블록의 추가 기능을 표시하고 같은 블록 만들기 를 선택합니다 아래 화면과 같이 초 와 이동 멈추기 블록이 만들어져 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#같은-블록-만들기"
	},
	"4929": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 추가 기능",
		"header3": "블록 숨기기",
		"content": "아니면 만약 박수를 번 치면 블록을 선택하여 블록 숨기기 를 선택합니다 아니면 만약 박수를 번 치면 과 연결된 블록들이 회색으로 표시됩니다 숨겨진 블록은 시작 블록에 연결되어 있어도 실행되지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-숨기기"
	},
	"4930": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 추가 기능",
		"header3": "블록 나타내기",
		"content": "숨겨진 블록을 선택하고 블록 나타내기 를 선택하면 다시 블록이 실행되도록 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-나타내기"
	},
	"4931": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "블록 추가 기능",
		"header3": "블록 지우기",
		"content": "블록은 블록 그룹 영역 이나 블록 삭제 영역 버튼 으로 지울 수 있지만 블록 지우기 를 통해서도 지울 수 있습니다 아래와 같이 아니면 만약 박수를 번 치면 을 선택한 후 블록 지우기 를 선택하면 블록을 지울수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블록-지우기"
	},
	"4932": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "Undo/Redo 기능",
		"header3": "",
		"content": "블록을 이동 또는 삭제 하였을 때 취소하거나 다시 실행할 수 있습니다 undo redo 기능의 사용이 가능한 상태가 되면 아래와 같이 버튼이 비활성화 된 상태에서 활성화 된 상태가 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#undoredo-기능"
	},
	"4933": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "실행",
		"header3": "",
		"content": "실행 버튼 을 클릭합니다 제품과 연결되어 있지 않으면 연결 화면이 표시됩니다 블루투스가 선택되어 있다면 재시도 버튼을 클릭하여 다시 연결을 시도할 수 있습니다 처음 실행하는 경우 장치선택 버튼을 클릭하여 연결할 장치를 선택할 수 있습니다 제품에 연결된 블루투스의 마지막 두자리를 입력하고 검색 버튼을 클릭합니다 블루투스가 검색되면 검색된 블루투스를 클릭하고 다시 실행 버튼 을 클릭합니다 제품에 연결된 블루투스와 연결되면 대기 중 메시지가 표시됩니다 블록이 실행되면 실행 중 메시지가 표시되며 블록이 실행됩니다 현재 실행 중인 블록은 붉은색으로 표시됩니다 만약 계속 연결이 되지 않는다면 제품에 연결된 블루투스가 깜박이는지 확인 후 장치선택 버튼을 클릭하여 다시 검색 후 실행 버튼을 클릭합니다 연결된 블루투스와 연결을 해제하려면 연결된 제품의 전원을 끄거나 추가 메뉴 설정 블루투스 를 선택하면 연결이 해제 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#실행"
	},
	"4934": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "중지",
		"header3": "",
		"content": "실행 중 인 상태에서 정지 버튼 을 누르거나 우측 상단의 버튼을 누르면 실행을 중지할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#중지"
	},
	"4935": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "저장",
		"header3": "",
		"content": "현재의 작품을 저장합니다 추가 메뉴 작품 저장하기 를 클릭하여 저장할 수도 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#저장"
	},
	"4936": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "끝내기",
		"header3": "",
		"content": "스마트 기기의 뒤로가기 버튼을 누르면 Block 앱이 종료됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#끝내기"
	},
	"4937": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "끝내기",
		"header3": "취소",
		"content": "종료를 취소하고 계속 작업합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#취소"
	},
	"4938": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "끝내기",
		"header3": "종료",
		"content": "작업한 내용을 저장하지 않고 바로 종료 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#종료"
	},
	"4939": {
		"product": "로보플러스 블록",
		"header1": "따라해보기",
		"header2": "끝내기",
		"header3": "저장 후 종료",
		"content": "작업한 내용을 저장하고 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#저장-후-종료"
	},
	"4940": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "",
		"header3": "",
		"content": "추가 메뉴 버튼 을 클릭하면 설정 작품 Task 등의 메뉴를 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#추가-메뉴"
	},
	"4941": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "설정",
		"header3": "",
		"content": "블루투스 매뉴얼 버전정보 등을 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#설정"
	},
	"4942": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "설정",
		"header3": "블루투스",
		"content": "제품에 연결된 블루투스를 설정 변경 하거나 연결된 블루투스를 연결 해제 할 수 있습니다 블루투스 검색시에는 블루투스 모듈이나 제품에 표시된 주소 중 마지막 두 자리를 입력 후 검색 버튼을 클릭해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#블루투스"
	},
	"4943": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "설정",
		"header3": "e-매뉴얼",
		"content": "온라인 매뉴얼을 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#e-매뉴얼"
	},
	"4944": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "설정",
		"header3": "버전 정보",
		"content": "현재의 앱 버전을 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#버전-정보"
	},
	"4945": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "작품",
		"header3": "",
		"content": "작업 중인 내용을 저장하거나 불러오기 등의 기능을 사용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#작품"
	},
	"4946": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "작품",
		"header3": "저장하기",
		"content": "현재 작업 중인 내용을 저장할 수 있습니다 ockquote 작품 이름을 입력하고 OK 버튼을 클릭합니다 ockquote 작품 이름이 표시됩니다 이미 작품 이름이 저장되어 있다면 저장하기 를 클릭했을 때 작품 이름이 표시됩니다 작품 이름을 변경하면 변경한 이름으로 새로 저장됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#저장하기"
	},
	"4947": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "작품",
		"header3": "불러오기",
		"content": "저장된 작품을 불러올 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#불러오기"
	},
	"4948": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "작품",
		"header3": "지우기",
		"content": "작업 중인 블록들을 삭제할 수 있습니다 시작 블록을 제외한 모든 블록들이 지워지고 작품 이름은 그대로 사용합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#지우기"
	},
	"4949": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "작품",
		"header3": "새로만들기",
		"content": "새로운 작품을 만듭니다 ockquote 새로 만들 작품 이름을 입력하고 OK 버튼을 누릅니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#새로만들기"
	},
	"4950": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "작품",
		"header3": "삭제하기",
		"content": "저장된 작품의 목록이 표시됩니다 지울 작품 이름을 누르고 있으면 삭제됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#삭제하기"
	},
	"4951": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "태스크",
		"header3": "",
		"content": "블록으로 작성된 코드를 Task 코드로 변환하거나 다운로드 할 수 있습니다 Task 가 설치되어 있지 않으면 구글 플레이로 이동합니다 Task 앱을 설치해주세요 ockquote Play 스토어에서 로보티즈 검색 후 mTask2 선택 ockquote 설치 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#태스크"
	},
	"4952": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "태스크",
		"header3": "변환",
		"content": "블록으로 작성된 코드가 Task 코드로 변환되어 표시 됩니다 Task 앱을 통해 블록으로 작성할 수 없는 코드를 추가하거나 에러를 확인할 수 있습니다 Task 앱을 통해 제품으로 다운로드 하는 방법은 Task 앱 설명을 확인해주세요 변환된 태스크 코드는 안드로이드 기기의 경우 아래의 위치에 저장됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#변환"
	},
	"4953": {
		"product": "로보플러스 블록",
		"header1": "추가 메뉴",
		"header2": "태스크",
		"header3": "다운로드",
		"content": "변환된 코드를 Task 앱에 표시하지 않고 바로 제품으로 다운로드 합니다 제품에 다운로드 되어 실행되기 때문에 Block 의 연결이 필요없으며 실행 속도가 빠릅니다 다운로드된 코드는 제품의 전원을 켰을 때 바로 실행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/rplus2_block/#다운로드"
	},
	"4954": {
		"product": "로보플러스 스크래치",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#개요"
	},
	"4955": {
		"product": "로보플러스 스크래치",
		"header1": "개요",
		"header2": "로보플러스 스크래치 설명",
		"header3": "",
		"content": "홈 프로그램 시작 시 첫 화면으로 제어기 선택화면 추가 블록 이 포함된 새로운 스크래치를 만들기 예제 파일 열기 언어 선택 등 설정 메뉴를 포함합니다 설정 언어를 변경할 수 있습니다 정보 버전 정보 업데이트 된 내용을 확인 할 수 있습니다 업데이트 체크 Scratch 의 최신 버전 업데이트를 확인합니다 종료 Scratch 를 종료합니다 제어기 선택 Scratch 에서 사용 가능한 제어기 목록이 표시됩니다 연결 포트 선택 Micro USB 또는 무선통신 모듈을 이용해서 선택된 포트를 통해 제어기를 PC에 연결할 수 있습니다 연결 연결 끊기 연결 버튼을 클릭하면 Scratch 와 제어기와 연결되고 Scratch2Offline 에서 사용하는 추가 블록 에 대한 처리를 할 수 있는 준비 상태가 됩니다 또한 Scratch2Offline 과 Scratch 가 서로 잘 통신하고 있다면 아래 그림처럼 추가 블록 에 등록된 블록 설명 옆의 표시가 빨간색에서 초록색으로 변합니다 스크래치 새로 만들기 Scratch2Offline 이 설치되어 있으면 선택한 제어기에 필요한 블록들이 추가된 상태의 새로운 스크래치 프로젝트 파일이 열립니다 Scratch2Offline 이 설치되어 있지 않다면 기타 Scratch2Offline 설치 설명의 다운로드 페이지를 표시합니다 스크래치 열기 Scratch2Offline 이 설치되어 있으면 선택한 제어기에서 제공되는 예제 프로젝트들이 아래 그림과 같이 표시 됩니다 예제를 선택하면 해당 예제의 스크래치 프로젝트가 열립니다 Scratch2Offline 이 설치되어 있지 않다면 기타 Scratch2Offline 설치 설명의 다운로드 페이지를 표시합니다 도움말 보기 도움말 보기를 클릭하면 아래 그림과 같은 도움말 파일이 있는 폴더가 표시 됩니다 각 제어기 이름의 파일은 제어기에서 사용되는 블록들에 대한 설명이 포함되어 있으며 제어기명 VXX json 파일은 추가 블록 의 직접 추가가 필요한 경우 사용하시면 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#로보플러스-스크래치-설명"
	},
	"4956": {
		"product": "로보플러스 스크래치",
		"header1": "개요",
		"header2": "제어기를 PC에 연결하기",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#제어기를-pc에-연결하기"
	},
	"4957": {
		"product": "로보플러스 스크래치",
		"header1": "개요",
		"header2": "제어기를 PC에 연결하기",
		"header3": "Micro USB 케이블을 이용한 제어기 연결",
		"content": "다음 그림과 같이 micro USB 케이블을 이용해 제어기를 연결합니다 Micro USB 케이블을 연결하고 전원을 키면 연결 포트 선택 을 클릭했을 때 아래와 같이 ROBOTIS Virtual COM Port 가 표시됩니다 ROBOTIS Virtual COM Port 가 표시되지 않는다면 기타의 ROBOTIS Virtual COM Port 드라이버 설치 를 확인해주세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#제어기를-pc에-연결하기"
	},
	"4958": {
		"product": "로보플러스 스크래치",
		"header1": "개요",
		"header2": "제어기를 PC에 연결하기",
		"header3": "무선 통신 모듈을 이용한 제어기 연결",
		"content": "다음 그림과 같이 무선 통신 모듈을 연결합니다 Micro USB 케이블을 이용하는 경우 포트 목록에 자동으로 표시되지만 블루투스의 경우 아래 링크를 참고하여 장치를 추가해야 합니다 블루투스 연결 추가한 블루투스는 다음과 같이 목록에 Bluetooth Serial Port 로 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#제어기를-pc에-연결하기"
	},
	"4959": {
		"product": "로보플러스 스크래치",
		"header1": "참고자료",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#참고자료"
	},
	"4960": {
		"product": "로보플러스 스크래치",
		"header1": "참고자료",
		"header2": "Scratch2Offline 설치",
		"header3": "",
		"content": "Scratch2Offline 다운로드 페이지 https scratch mit edu scratch2download 에서 OS 맞게 windows Adobe AIR 과 스크래치 오프라인 에디터를 다운받아 설치 합니다 Scratch2Offline 이 설치 되지 않은 상태에서 홈 화면의 스크래치 새로 만들기 또는 스크래치 열기 버튼을 클릭하면 다운로드 페이지로 이동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#Scratch2Offline-설치"
	},
	"4961": {
		"product": "로보플러스 스크래치",
		"header1": "참고자료",
		"header2": "ROBOTIS Virtual COM Port 설치",
		"header3": "",
		"content": "드라이버가 정상적으로 설치되었다면 PC와 제어기를 연결하고 제어기의 전원을 켰을 때 아래와 같이 장치관리자에 ROBOTIS Virtual Com port COM 가 표시됩니다 만약 아래와 같이 USB 직렬 장치 로 표시된다면 드라이버를 업데이트 해야 합니다 USB 직렬 장치를 마우스로 우클릭하여 드라이버 소프트웨어 업데이트를 선택합니다 컴퓨터에서 드라이버 소프트웨어 찾아보기 를 선택합니다 컴퓨터의 장치 드라이버 목록에서 직접 선택 을 선택합니다 ROBOTIS Virtual COM Port 를 선택한 후 다음을 클릭하여 설치를 완료 합니다 수동으로 USB 드라이버를 설치하기 위한 방법은 USB 드라이버 설치 에서 확인 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#robotis-virtual-com-port-설치"
	},
	"4962": {
		"product": "로보플러스 스크래치",
		"header1": "참고자료",
		"header2": "추가 블록 직접 추가",
		"header3": "",
		"content": "제어기를 선택하고 스크래치 새로 만들기 또는 스크래치 열기 버튼을 클릭하여 실행되는 스크래치 프로젝트에서는 선택한 제어기 관련 블록들이 자동으로 추가됩니다 스크래치를 직접 실행하거나 스크래치 메뉴의 새로 만들기를 클릭한 경우 아래와 같이 직접 블록을 추가해야 합니다 스크래치 사이트에서 다운로드 받은 예제 https scratch mit edu starter projects 또는 기존 작성했던 스크래치를 제어기와 연결하도록 사용하고자 할 때 직접 추가할 수 있습니다 키보드의 Shift 키를 누른고 파일 메뉴를 클릭하면 그림과 같이 메뉴 제일 밑에 import experimental HTTP extension 메뉴가 표시됩니다 HTTP extension 메뉴를 클릭합니다 도움말 보기를 클릭하여 나오는 폴더 경로를 복사하고 HTTP extension 메뉴 클릭하여 나온 선택창에 복사한 후 표시되는 파일 중 추가하고자 하는 제어기 명의 json 파일을 선택합니다 아래 그림과 같이 선택한 블록들이 추가 블록 에 표시됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/scratch/#추가-블록-직접-추가"
	},
	"4963": {
		"product": "R+ Task 2.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "로보플러스 태스크 Task 어떤 일을 처리하기 위한 행동들의 집합을 태스크 Task 라고 합니다 로봇이 해야 할 태스크를 프로그래밍 한 소스를 로보플러스 RoboPlus 에서는 태스크 코드 Task Code 라고 합니다 로봇은 사용자가 작성한 태스크 코드에 따라 동작하게 되며 이러한 태스크 코드를 쉽게 작성할 수 있도록 도와주는 것이 로보플러스 태스크 RoboPlus Task 프로그램입니다 태스크 코드 파일은 PC 혹은 스마트폰 에서 tskx라는 확장자를 가집니다 기존 버전의 경우 tsk확장자를 사용하며 Task 0을 통해 tskx로 변환할 수 있습니다 태스크 파일과 모션 파일은 어떤 관계인가요 태스크 파일은 로봇이 어떻게 생각하고 움직일지 논리 사고를 정의한 프로그램 코드이며 모션 파일은 태스크에서 내린 판단에 따라 움직일 행동이 정의된 데이터입니다 만약 내가 만든 로봇이 단순한 동작만을 사용하는 로봇이라면 태스크 파일을 작성할 때 모션을 사용하지 않아도 되지만 정밀한 움직임이나 댄스와 같이 많은 움직임이 필요하다면 모션 파일을 사용하는 것이 효율적입니다 태스크 코드에서 모션을 사용한다면 반드시 모션 파일을 다운로드해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#개요"
	},
	"4964": {
		"product": "R+ Task 2.0",
		"header1": "시작하기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#시작하기"
	},
	"4965": {
		"product": "R+ Task 2.0",
		"header1": "시작하기",
		"header2": "소프트웨어 설치",
		"header3": "",
		"content": "주의 로보플러스 태스크 소프트웨어의 Mac OS 설치방법이 v2 0부터 변경되었습니다 Mac OS 로보플러스 태스크 다운로드 로보플러스 태스크 0을 다운로드 받으세요 Mac OS 로보플러스 태스크 다운로드 다운로드받은 패키지 Task2 v2 Mac pkg 를 더블클릭해서 실행하세요 만약 아래와 같은 창이 열리며 파일이 실행되지 않을 때에는 다음의 방법으로 실행하시기 바랍니다 시스템 환경설정 에서 보안 및 개인 정보 보호 메뉴를 실행하세요 확인 없이 열기 버튼을 누르면 다운로드된 로보플러스 태스크 패키지가 실행됩니다 패키지가 성공적으로 실행되면 계속 버튼을 눌러 진행하세요 폴더 선택 또는 설치 위치 변경 을 눌러 압축을 해제할 폴더의 위치를 선택한 뒤 선택 버튼으로 선택된 폴더를 결정합니다 이 폴더의 위치에서 설치파일을 찾아야 하므로 폴더의 위치를 기억해주세요 설치 버튼을 누르면 선택된 폴더에 압축해제를 시작합니다 사용자 환경 설정에 따라 아래와 같이 암호 입력이 필요할 수 있습니다 압축해제가 완료되면 닫기 버튼을 눌러 종료합니다 앞서 4단계에서 지정한 폴더에서 설치파일인 Task2 v2 Mac dmg 를 찾아 더블클릭으로 실행합니다 프로그램이 정상적으로 실행되면 아래와 같은 창이 나타납니다 좌측의 TaskPatcher 아이콘을 우측의 응용 프로그램 아이콘쪽으로 끌어서 옮깁니다 소프트웨어의 설치가 정상적으로 완료되면 아래와 같이 응용 프로그램 또는 런처에서 설치된 소프트웨어를 찾을 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#소프트웨어-설치"
	},
	"4966": {
		"product": "R+ Task 2.0",
		"header1": "시작하기",
		"header2": "메뉴설명",
		"header3": "",
		"content": "단계별 편집탭 작업 영역이 홈 탭 프로그래밍 탭 디버깅 탭으로 분리됩니다 홈 탭 프로그램 시작 시 첫 화면으로 기본 예제 파일 관련 메뉴 업데이트 설정 메뉴를 포함합니다 프로그래밍 탭 태스크 소스 코드를 편집하는 영역으로 프로그래밍 툴바 소스뷰 아웃라인 메뉴 다운로드 기능을 제공합니다 디버깅 탭 태스크 코드를 디버깅하기 위한 영역으로 출력 모니터 가상리모컨 기능을 제공합니다 사용자 편의를 위해 자동 연결기능이 추가되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#메뉴설명"
	},
	"4967": {
		"product": "R+ Task 2.0",
		"header1": "시작하기",
		"header2": "태스크 코드에서 활용 가능한 자원",
		"header3": "",
		"content": "로봇의 태스크 코드는 제어기에 연결된 장치에 따라 사용할 수 있는 자원이 다양해집니다 만약 제어기에 다이나믹셀과 같은 외부 하드웨어가 연결되어있으면 태스크 코드에서도 이를 사용할 수 있습니다 만약 제어기에 스마트 앱 Smart IoT 과 같은 스마트 기기가 연결되어있으면 태스크 코드에서도 이를 사용할 수 있습니다 만약 제어기에 Motion으로 모션 데이터를 다운로드 했다면 태스크 코드에서도 이를 사용할 수 있습니다 태스크 코드에서 활용할 수 있는 자원은 아래 그림과 같이 구성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#태스크-코드에서-활용-가능한-자원"
	},
	"4968": {
		"product": "R+ Task 2.0",
		"header1": "시작하기",
		"header2": "태스크 코드의 구조",
		"header3": "",
		"content": "태스크 코드는 3가지 요소 코드 라인 명령어 파라미터 로 구성됩니다 파라미터 변수나 하드웨어의 특성을 나타내는 최소 단위입니다 값을 읽거나 쓸 수 있습니다 명령어 프로그램을 실행하기 위해 제어기에 내리는 단일 동작 연산 을 뜻합니다 각 명령어는 고유한 동작을 약속하고 있으며 동작 연산 에 따라 사용하는 파라미터의 개수가 다릅니다 코드 라인 명령어 줄 프로그램을 실행하는 최소단위로 명령어와 파라미터가 조합됩니다 기본적으로 코드 라인의 순서대로 프로그램이 실행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#태스크-코드의-구조"
	},
	"4969": {
		"product": "R+ Task 2.0",
		"header1": "따라해보기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#따라해보기"
	},
	"4970": {
		"product": "R+ Task 2.0",
		"header1": "따라해보기",
		"header2": "예제 프로젝트 열기",
		"header3": "",
		"content": "홈 탭으로 이동합니다 프로그램 시작 시 홈 탭에서 시작됩니다 예제 버튼을 클릭합니다 원하는 제품과 단계 예제 명을 선택합니다 확인 버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#예제-프로젝트-열기"
	},
	"4971": {
		"product": "R+ Task 2.0",
		"header1": "따라해보기",
		"header2": "새 파일 만들기",
		"header3": "",
		"content": "홈 탭으로 이동합니다 프로그램 시작시 홈 탭에서 시작됩니다 새로 만들기 버튼을 클릭합니다 제어기와 제어기의 펌웨어 버전을 선택합니다 구1 신규2 확인 버튼을 클릭하면 새로운 Task 파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#새-파일-만들기"
	},
	"4972": {
		"product": "R+ Task 2.0",
		"header1": "따라해보기",
		"header2": "명령어 편집하기",
		"header3": "",
		"content": "프로그래밍 탭으로 이동합니다 새 파일을 생성한 직후라면 프로그래밍 탭에서 시작됩니다 명령어 버튼을 클릭합니다 반복문 카테고리를 클릭합니다 무조건 반복 명령어를 드래그 drag 하여 원하는 라인에 드롭 drop 하여 명령어가 추가합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#명령어-편집하기"
	},
	"4973": {
		"product": "R+ Task 2.0",
		"header1": "따라해보기",
		"header2": "파라미터 편집하기",
		"header3": "",
		"content": "명령어 버튼을 클릭합니다 실행문 카테고리를 클릭합니다 로드 명령어를 드래그 drag 하여 원하는 라인에 드롭 drop 하여 명령어를 추가합니다 추가된 명령어의 좌변 블록 을 더블 클릭합니다 카테고리1의 제어기 장치 를 선택합니다 카테고리2의 주변 장치 를 선택합니다 포트를 1번으로 선택한 후 감속모터 를 선택합니다 확인 버튼을 클릭하여 명령어 편집을 완료합니다 추가된 명령어의 우변 블록 을 더블 클릭합니다 카테고리1의 제어기 상수 를 선택합니다 카테고리2의 모터 제어 값 을 선택합니다 방향을 CCW 로 선택한 후 출력 값에 500을 입력합니다 확인 버튼을 클릭하여 명령어 편집을 완료합니다 편집이 적용된 명령어 블록을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#파라미터-편집하기"
	},
	"4974": {
		"product": "R+ Task 2.0",
		"header1": "따라해보기",
		"header2": "다운로드 하기",
		"header3": "",
		"content": "장치 버튼을 클릭합니다 로봇의 연결 장치를 선택한 후 확인 버튼을 클릭합니다 창이 닫히면 다운로드 버튼을 클릭합니다 다운로드가 완료되면 제어기가 Task를 실행합니다 일부 제어기의 경우 제어기가 Task를 실행하는 대신 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#다운로드-하기"
	},
	"4975": {
		"product": "R+ Task 2.0",
		"header1": "따라해보기",
		"header2": "프로그램 출력보기",
		"header3": "",
		"content": "디버깅 탭으로 이동합니다 장치 버튼을 클릭합니다 로봇의 연결 장치를 선택한 후 확인 버튼을 클릭합니다 창이 닫히면 시작 버튼을 클릭합니다 로봇이 연결되면 출력 모니터 와 가상 리모컨 이 활성화 됩니다 소스 코드상에서 화면출력 후 줄 바꿈 혹은 화면출력 을 사용한 경우 다음과 같이 출력용 모니터 에 값이 출력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#프로그램-출력보기"
	},
	"4976": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "",
		"header3": "",
		"content": "Task 0에서 사용하는 기본 편집 기능을 설명하는 문서입니다 카테고리를 클릭하면 해당하는 편집 기능에 대해 정보를 확인 할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#프로그래밍편집"
	},
	"4977": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "명령어 삽입/변경",
		"header3": "",
		"content": "우측의 명령어 탭을 클릭합니다 혹은 명령어를 삽입할 위치를 더블 클릭합니다 명령어를 드래그 drag 하여 원하는 위치에 드롭 drop 합니다 명령어 블록을 더블 클릭하면 다른 명령어로 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#명령어-삽입-변경"
	},
	"4978": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "여러 줄 선택",
		"header3": "",
		"content": "줄 번호를 드래그 drag 하여 여러 줄을 선택합니다 이미 선택된 라인의 번호를 드래그 drag 하면 부분적으로 취소할 수 있습니다 소스코드를 직접 클릭하면 라인선택이 취소됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#여러-줄-선택"
	},
	"4979": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "줄 삽입/지우기",
		"header3": "",
		"content": "줄 삽입 혹은 줄 지우기 를 진행할 위치를 마우스 왼쪽 버튼으로 선택합니다 마우스 오른쪽 버튼을 클릭하면 추가 메뉴가 활성화 됩니다 줄 삽입 을 클릭하면 선택된 줄의 위쪽에 새로운 줄이 삽입됩니다 단축키 Insert 줄 지우기 를 클릭하면 선택된 줄이 삭제됩니다 단축키 Delete ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#줄-삽입-지우기"
	},
	"4980": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "줄 활성/비활성",
		"header3": "",
		"content": "활성 비활성을 진행할 위치를 마우스 왼쪽 버튼으로 선택합니다 마우스 오른쪽 버튼을 클릭하면 추가 메뉴가 활성화 됩니다 줄 활성 비활성 을 클릭하면 선택된 줄의 활성 비활성 상태가 전환됩니다 단축키 Ctrl 비활성화된 코드는 회색으로 표시되며 컴파일시 제외됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#줄-활성-비활성"
	},
	"4981": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "복사/잘라내기/붙여넣기",
		"header3": "",
		"content": "복사 혹은 잘라내기 를 진행할 줄을 마우스 왼쪽 버튼으로 선택합니다 마우스 오른쪽 버튼을 클릭하면 추가 메뉴가 활성화 됩니다 복사 혹은 잘라내기 를 클릭하면 선택된 줄이 클립보드에 복사됩니다 상단 툴바의 복사 혹은 잘라내기 버튼을 사용할 수도 있습니다 단축키 Ctrl Ctrl 붙여넣기를 진행할 줄을 마우스 왼쪽 버튼으로 선택합니다 마우스 오른쪽 버튼을 클릭하면 추가 메뉴가 활성화 됩니다 붙여넣기 를 클릭하면 클립보드에 복사된 내용이 붙여집니다 상단 툴바의 붙여넣기 버튼을 사용할 수도 있습니다 단축키 Ctrl 그림과 같이 복사한 코드가 삽입됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#복사잘라내기붙여넣기"
	},
	"4982": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "실행취소/다시실행",
		"header3": "",
		"content": "코드를 편집하던 중에 실행취소 기능을 클릭하면 코드를 되돌릴 수 있습니다 상단 툴바의 실행취소 버튼을 클릭하면 이전 코드로 되돌릴 수 있습니다 단축키 Ctrl 상단 툴바의 다시실행 버튼을 클릭하면 되돌린 코드를 다시 실행할 수 있습니다 단축키 Ctrl Shift ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#실행취소다시실행"
	},
	"4983": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "",
		"header3": "",
		"content": "Task 0에서 사용하는 명령어를 설명하는 문서입니다 카테고리를 클릭하면 해당하는 명령어에 대한 정보를 확인할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#프로그래밍명령어"
	},
	"4984": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "시작과 끝",
		"header3": "",
		"content": "프로그램의 기본적인 시작과 끝 명령어의 유효 구간을 설정하는 명령어입니다 자세한 설명은 하위 항목을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#시작과-끝"
	},
	"4985": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "시작과 끝",
		"header3": "프로그램 시작(Start Program)",
		"content": "프로그램 시작 명령은 줄 번호와 상관 없이 실행됩니다 한 프로그램에 두 개 이상의 프로그램 시작이 있을 수 없습니다 명령 묶음 구간이 반드시 필요합니다 프로그램 시작 명령 구간의 끝을 만나면 프로그램이 종료됩니다 C언어의 main 함수와 같은 기능을 합니다 아래는 내부가 비어있는 프로그램 시작 함수입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#프로그램-시작start-program"
	},
	"4986": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "시작과 끝",
		"header3": "프로그램 끝(End Program)",
		"content": "프로그램을 끝내고 싶은 지점을 수동으로 지정합니다 사용하지 않을 경우 프로그램 시작의 구간을 모두 수행한 후 자연 종료 됩니다 아래는 프로그램 시작의 구간을 모두 수행하여 자연 종료 되는 경우 입니다 아래는 프로그램 끝을 만나 강제 종료 되는 경우입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#프로그램-끝end-program"
	},
	"4987": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "시작과 끝",
		"header3": "구간 시작/구간 끝(Begin Block/End Block)",
		"content": "구간이란 여러 개의 명령문을 묶어놓은 것을 의미합니다 구간의 시작과 끝은 항상 짝이 맞아야 합니다 만약 실행문이 한줄일 경우에는 구간기호가 생략될 수 있습니다 C언어의 와 같은 기능을 합니다 아래는 프로그램 시작 무조건 반복 의 구간을 나타낸 그림입니다 아래는 프로그램 시작 만약 의 구간을 나타낸 그림입니다 아래 그림과 같이 실행문이 한줄일 경우에는 구간기호가 생략될 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/구간-시작구간-끝begin-blockend-block"
	},
	"4988": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "시작과 끝",
		"header3": "주석(Comment)",
		"content": "프로그램의 설명이 필요한 경우 해당 줄에 주석 메모 을 추가할 수 있습니다 기호가 삽입되면 더블 클릭하여 내용을 수정할 수 있습니다 주석을 작성하던 도중에 취소 혹은 ESC 버튼을 클릭하면 입력 전의 내용으로 복구됩니다 아래는 코드에 주석을 추가해 해석을 돕는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/주석comment"
	},
	"4989": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "실행문",
		"header3": "",
		"content": "장치에 명령을 내리거나 수학적인 계산을 수행하는 명령어입니다 자세한 설명은 하위 항목을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#실행문"
	},
	"4990": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "실행문",
		"header3": "계산",
		"content": "두 값을 연산하여 하나의 결과를 내는 명령어입니다 덧셈 뺄셈 곱셈 나눗셈 MOD AND amp OR 을 선택할 수 있습니다 덧셈 두 값을 더합니다 뺄셈 앞에서 뒤의 값을 뺍니다 곱셈 두 값을 곱합니다 나눗셈 앞에서 뒤의 값을 나눈 몫을 나타냅니다 나머지는 사라지고 몫만 결과로 나옵니다 MOD 앞에서 뒤에 값을 나눈 나머지를 나타냅니다 몫은 사라지고 나머지만 결과로 나옵니다 AND amp 두 비트를 AND연산 합니다 OR 두 비트를 OR연산 합니다 아래는 계산 명령어를 사용한 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#계산"
	},
	"4991": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "실행문",
		"header3": "로드",
		"content": "하나의 값을 다른 하나로 대입하는 명령어입니다 변수의 값을 읽거나 쓸 때 사용합니다 아래는 속도 라는 변수에 값을 쓰고 변수 값을 읽어 감속모터에 설정하는 예제 입니다 장치의 값을 읽거나 쓸 때 사용합니다 아래는 포트1번에 연결된 감속모터에 속도 값을 설정하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#로드"
	},
	"4992": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "실행문",
		"header3": "레이블/점프",
		"content": "프로그램의 분기를 위해 사용되는 명령어입니다 레이블은 분기할 위치를 지정합니다 점프를 통해 미리 지정한 레이블부터 실행할 수 있습니다 C언어의 label goto문과 같은 개념입니다 아래는 점프할 대상에 따라 프로그램이 분기되는 예제입니다 왼쪽 그림은 작동모드1 로 점프하여 작동모드2 에 해당하는 코드만 실행됩니다 오른쪽 그림은 작동모드2 로 점프하여 작동모드2 에 해당하는 코드만 실행됩니다 레이블과 점프는 반드시 하나의 함수 구간 내에 존재해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#레이블점프"
	},
	"4993": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "조건문",
		"header3": "",
		"content": "조건절의 결과가 참이냐 거짓이냐에 따라 프로그램의 흐름을 분기하는 명령어입니다 자세한 설명은 하위 항목을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#조건문"
	},
	"4994": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "조건문",
		"header3": "조건절이란?",
		"content": "조건절이란 연산의 결과가 반드시 참 또는 거짓을 내는 수식입니다 괄호 안에서 사용할 수 있는 비교 연산자는 다음과 같습니다 비교연산자 설명 좌변과 우변이 같다 좌변과 우변이 다르다 좌변이 우변보다 크다 좌변이 우변보다 크거나 같다 좌변이 우변보다 작다 좌변이 우변보다 작거나 같다 여러 개의 조건을 만족해야 하는 경우 아래 그림과 같이 복합 조건절을 사용할 수 있습니다 복합 조건절 사용시 사용할 수 있는 논리 연산자는 다음과 같습니다 논리연산자 설명 then 아무 조건절도 연결하지 않습니다 하나의 조건절만 사용합니다 amp amp 두 조건절을 AND연산 합니다 두 조건절을 OR연산 합니다 assets images sw rplus2 task task2 39 gif ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#조건절이란"
	},
	"4995": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "조건문",
		"header3": "만약(If)",
		"content": "조건절의 내용이 참이면 해당 구문을 실행합니다 C언어의 if문과 같은 개념입니다 아래는 만약을 사용하여 변수 값이 100과 같으면 을 판단하는 예제입니다 그림과 같이 실행할 코드가 한 줄일 경우 구간 기호를 생략할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#만약if"
	},
	"4996": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "조건문",
		"header3": "아니면 만약(Else If)",
		"content": "만약 에 이어서 또 다른 조건을 검사할 때 사용합니다 반드시 처음 조건으로 만약 구문이 존재해야 합니다 C언어의 else if와 같은 개념입니다 아래는 만약과 아니면 만약을 사용하여 변수 값이 100과 같으면 과 변수 값이 50과 같으면 을 모두 판단하는 예제입니다 그림과 같이 실행할 코드가 한 줄일 경우 구간 기호를 생략할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#아니면-만약else-if"
	},
	"4997": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "조건문",
		"header3": "아니면(Else)",
		"content": "만약 과 아니면 만약 의 조건 어디에도 해당되지 않을 경우 실행합니다 반드시 처음 조건으로 만약 구문이 존재해야 합니다 C언어의 else와 같은 개념입니다 아래는 만약과 아니면 을 사용하여 변수 값이 100과 같으면 과 변수 값이 100과 다르면 을 모두 판단하는 예제입니다 그림과 같이 실행할 코드가 한 줄일 경우 구간 기호를 생략할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#아니면else"
	},
	"4998": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "반복문",
		"header3": "",
		"content": "프로그램에서 여러 번 반복적인 수행이 필요한 경우 사용하는 명령어입니다 반복 구간과 반복 조건을 설정하여 다양한 방법으로 반복을 설정할 수 있습니다 자세한 설명은 하위 항목을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#반복문"
	},
	"4999": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "반복문",
		"header3": "무조건 반복(Endless Loop)",
		"content": "무조건 반복의 구간 시작과 끝 사이를 계속해서 반복 실행합니다 반복 끝내기 를 사용하여 반복 도중에 빠져나올 수 있습니다 C언어의 과 같은 개념입니다 아래는 무조건 반복을 사용하여 화면에 숫자 100을 출력하는 예제입니다 무조건 반복의 구간 내에서 화면 출력을 진행하기 때문에 멈추지 않고 실행됩니다 그림과 같이 실행할 코드가 한 줄일 경우 구간 기호를 생략할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#무조건-반복endless-loop"
	},
	"5000": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "반복문",
		"header3": "조건 반복(Loop While)",
		"content": "조건절이 만족하는 동안 구간 시작과 끝 사이를 반복 실행합니다 조건절에는 조건문과 마찬가지로 복합 조건절을 사용할 수 있습니다 반복 끝내기 를 사용하여 반복 도중에 빠져나올 수 있습니다 C언어의 조건절 과 같은 개념입니다 아래는 조건 반복을 활용하여 024초 동안만 화면에 숫자 100을 출력하는 예제입니다 아래는 조건 반복과 변수를 활용하여 10회 동안만 화면에 숫자 100을 출력하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#조건-반복loop-while"
	},
	"5001": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "반복문",
		"header3": "횟수 반복(Loop For)",
		"content": "구간 시작과 끝 사이를 정해진 횟수만큼 반복 실행합니다 구간의 끝에 도달할 때마다 설정한 변수의 값이 1씩 증가됩니다 반복 끝내기 를 사용하여 반복 도중에 빠져나올 수 있습니다 반복 횟수 수식 반복 횟수 끝 값 시작 값 C언어의 for와 같은 개념입니다 아래는 횟수 반복을 사용하여 10번동안 화면에 숫자를 출력하는 예제입니다 아래는 횟수 반복에 사용한 변수를 실행구간 내부에서 사용한 예제입니다 반복횟수가 1부터 10까지 증가함에 따라 화면 출력 값이 100 200 300 400 500 600 700 800 900 1000으로 변경됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#횟수-반복loop-for"
	},
	"5002": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "반복문",
		"header3": "조건 대기(Wait While)",
		"content": "조건절이 만족하는 동안 프로그램 수행을 멈춥니다 C언어의 내부가 비어있는 조건절 과 같은 개념입니다 아래는 조건 대기와 타이머를 사용하여 024초 동안 대기하는 예제입니다 아래는 조건 대기를 사용하여 재생되는 모션이 끝날 때까지 기다리는 예제입니다 아래는 조건 대기를 사용하여 재생되는 멜로디가 끝날 때까지 기다리는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#조건-대기wait-while"
	},
	"5003": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "반복문",
		"header3": "반복 끝내기(Break Loop)",
		"content": "반복문이 수행되는 도중에 반복을 멈추고 싶을 때 사용합니다 무조건 반복 조건 반복 횟수 반복의 구간 내에서만 사용할 수 있습니다 C언어의 break와 같은 개념입니다 아래는 무조건 반복에서 무선데이터가 도착하면 구문을 빠져 나오는 예제입니다 무조건 반복에서 빠져나오면 바로 다음 구문이 실행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#반복-끝내기break-loop"
	},
	"5004": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "함수(서브루틴)",
		"header3": "",
		"content": "동일한 코드가 반복되거나 특정 코드 영역을 역할 단위로 구분하여 표기하고 싶을 경우 그 내용을 하나의 덩어리로 묶을 수 있으며 이를 함수라고 부릅니다 자세한 설명은 하위 항목을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#함수서브루틴"
	},
	"5005": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "함수(서브루틴)",
		"header3": "함수/호출(Function/Call)",
		"content": "동일한 코드가 중복 사용되거나 특정 코드 영역을 역할 단위로 구분하여 표기하고 싶을 경우 그 내용을 함수 로 만들어 사용합니다 적절한 함수 사용은 코드를 간결하고 읽기 편하게 만들어줍니다 작성한 함수는 필요할 시에 호출 을 통해 사용할 수 있습니다 함수는 반드시 메인 프로그램 루틴 밖에 작성하여야 합니다 태스크에서 함수는 입력 인자와 출력 인자를 설정할 수 없습니다 C언어의 함수와 같은 개념입니다 아래는 LED를 깜박이는 기능을 함수로 만들어 사용한 예제입니다 아래는 함수를 사용하기 위해 호출할 함수를 선택하는 과정입니다 함수 내에서 자기 자신을 호출할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#함수호출functioncall"
	},
	"5006": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "함수(서브루틴)",
		"header3": "복귀(Return)",
		"content": "함수가 실행되는 도중에 실행하던 함수를 빠져나가는 기능을 합니다 일반 함수와 콜백 함수의 내부에서만 사용할 수 있습니다 C언어의 return과 같은 개념입니다 아래는 복귀 를 사용하지 않고 함수를 끝까지 실행한 예제입니다 아래는 복귀 를 사용하여 함수가 실행되는 도중에 복귀한 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#복귀return"
	},
	"5007": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "함수(서브루틴)",
		"header3": "콜백(Callback)",
		"content": "메인 프로그램 루틴과 독립적으로 동작하는 함수로 일정한 시간마다 스스로 실행됩니다 콜백은 반드시 메인 프로그램 루틴 밖에 작성하여야 합니다 과도한 실행 시간을 요하는 코드를 넣을 수 없어 콜백 내에서는 반복문 사용 변수 사용량 파라미터 호출 횟수 코드 용량의 제한이 있습니다 콜백 함수 사용시 다음과 같은 제한사항을 지켜야 합니다 반복문 레이블 점프 호출을 사용할 수 없습니다 외부 장치와의 통신 횟수가 최대 2회로 제약이 있습니다 콜백 함수의 작성에 있어 코드크기가 512bytes를 넘을 수 없습니다 아래는 콜백 함수를 사용하여 받은 무선 데이터를 수신데이터 변수에 저장하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#콜백callback"
	},
	"5008": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "",
		"header3": "",
		"content": "Task 0에서 사용하는 파라미터를 설명합니다 각 장치에 따라 사용할 수 있는 파라미터를 분류하여 설명합니다 자세한 사용법은 각 항목의 설명과 예제 코드를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#프로그래밍파라미터"
	},
	"5009": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#제어기-장치"
	},
	"5010": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "주변장치(감속모터)",
		"content": "제어기에 연결된 감속모터를 제어하기 위해 사용합니다 제어기마다 연결할 수 있는 장치가 다릅니다 제어기 기능 비교를 참고하세요 제어기 기능 비교 방향 CW Clock Wise 시계 방향 CCW Counter Clock Wise 반시계 방향 출력 값 범위는 1023이며 0일 때 정지 1023일 때 100 출력으로 설정됩니다 아래는 감속 모터를 제어하는 예제입니다 아래는 감속 모터를 사용하여 로봇을 전진 시키는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#주변장치감속모터"
	},
	"5011": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "주변장치(서보모터: 동작모드/속도/위치)",
		"content": "제어기에 연결된 서보모터를 제어하기 위해 사용합니다 제어기마다 연결할 수 있는 장치가 다릅니다 제어기 기능 비교를 참고하세요 제어기 기능 비교 서보모터 동작모드 값이 True인 경우 서보모터 위치를 설정하여 원하는 각도로 위치할 수 있습니다 값이 False인 경우 서보모터 속도를 설정하여 원하는 속도로 회전 시킬 수 있습니다 서보모터 속도 서보모터의 이동속도를 설정합니다 서보모터 위치 서보모터의 위치를 설정합니다 아래는 서보모터의 위치를 제어하는 예제입니다 아래는 서보모터를 회전시켜 바퀴형태로 제어하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#주변장치서보모터-동작모드속도위치"
	},
	"5012": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "주변장치(LED 모듈)",
		"content": "제어기에 연결된 LED 모듈을 제어하기 위해 사용합니다 제어기마다 연결할 수 있는 장치가 다릅니다 제어기 기능 비교를 참고하세요 제어기 기능 비교 LED 모듈의 오른쪽 LED와 왼쪽 LED를 켜거나 끌 수 있습니다 아래는 LED 모듈을 제어하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#주변장치led-모듈"
	},
	"5013": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "주변장치(여러가지 센서)",
		"content": "제어기에 연결된 여러 센서를 제어하기 위해 사용합니다 제어기마다 연결할 수 있는 센서가 다릅니다 제어기 기능 비교를 참고하세요 제어기 기능 비교 접촉센서 접촉센서의 접촉 여부를 읽어오기 위해 사용합니다 True일 때 접촉됨 False일 때 접촉되지 않음 접촉 센서 부품 정보 아래는 접촉 센서를 사용한 예제입니다 적외선 센서 물체와의 거리를 읽어오기 위해 사용합니다 값 범위 1023 값이 0에 가까울수록 물체와의 거리가 멉니다 적외선 센서 부품 정보 아래는 적외선 센서를 사용한 예제입니다 절대 거리 센서 물체와의 거리를 읽어오기 위해 사용합니다 값 범위 1023 값이 0에 가까울수록 물체와의 거리가 멉니다 절대 거리 센서 부품 정보 아래는 절대 거리 센서를 사용한 예제입니다 컬러 센서 물체의 색상을 읽어오기 위해 사용합니다 컬러 센서가 감지하는 색은 아래와 같습니다 컬러 센서 부품 정보 아래는 컬러 센서를 사용한 예제입니다 자석 센서 자석이나 물체의 자력을 읽어오기 위해 사용합니다 True일 때 자석이 감지됨 False일 때 자석이 감지되지 않음 자석 센서 부품 정보 아래는 자석 센서를 사용한 예제입니다 온도 센서 물체의 온도를 읽어오기 위해 사용합니다 온도 범위 20 120 온도 센서 부품 정보 아래는 온도 센서를 사용한 예제입니다 동작감지 센서 물체의 움직임을 감지하기 위해 사용합니다 동작감지 센서 부품 정보 아래는 동작감지 센서를 사용한 예제입니다 온습도 센서 물체의 온도와 습도를 읽어오기 위해 사용합니다 온도 범위 20 120 습도 범위 100 아래는 온습도 센서를 사용한 예제입니다 조도 센서 장소의 밝기를 감지하기 위해 사용합니다 값 범위 1023 값이 0에 가까울수록 주위가 어둡습니다 아래는 조도 센서를 사용한 예제입니다 사용자 장치 사용자가 제작한 센서의 값을 읽어오거나 쓸 때 사용합니다 사용자 센서 제작 아래는 사용자 장치를 사용한 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#주변장치여러가지-센서"
	},
	"5014": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "모션제어(모션 호출 번호/모션 상태/관절 오프셋/관절 LED 자동 켜기)",
		"content": "Motion을 통해 제어기에 다운로드된 모션을 실행하기 위한 파라미터입니다 특정 제어기에서만 사용할 수 있습니다 지원 제어기 CM 200 CM CM 510 CM 530 CM 700 OpenCM 모션 호출 번호 모션의 호출 번호를 쓰면 해당 모션이 실행됩니다 모션이 실행되는 도중이라면 현재 실행 중인 모션 번호를 읽어올 수 있습니다 아래는 모션 호출 번호를 이용한 예제입니다 모션 상태 모션이 실행되고 있으면 True 모션이 실행되고 있지 않으면 False값을 반환합니다 아래는 모션 상태를 이용하여 모션이 종료될 때까지 대기하는 예제입니다 관절 오프셋 모션이 실행될 때 255 255값을 모든 관절에 더해줍니다 관절 오프셋이 50이고 모션 데이터의 위치 값이 300 400 500으로 설정된 경우라면 250 350 450으로 변경되어 실행됩니다 아래는 특정 관절에 오프셋 값을 적용하는 예제입니다 아래는 특정 관절에 모션 데이터 값의 영향을 받지 않도록 설정하는 예제입니다 관절 LED 자동 켜기 모션이 실행되는 동안 다이나믹셀의 LED를 켜거나 끌 수 있습니다 True일 때 RGB LED 사용 False일 때 RGB LED 사용안함 해당 기능은 OpenCM 04에서만 지원합니다 아래는 모션 실행 시 관절 LED 자동 켜기 기능을 활용하는 예제입니다 아래는 제어기에 저장된 모션을 실행하는 예제입니다 리모컨 버튼 눌림에 따라 해당하는 모션이 실행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5015": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "내장 센서1 [최종 소리감지 횟수 실시간 소리감지 횟수]",
		"content": "제어기에 내장된 마이크를 사용하여 일정 수준 이상의 큰 소리가 날 경우 1회씩 카운트하는 기능입니다 대표적인 예로 박수 소리를 카운트하여 로봇을 동작시킬 때 많이 사용합니다 제어기마다 지원하는 센서의 종류가 다릅니다 각 제어기의 매뉴얼을 참고하세요 CM 100A CM 150 CM 200 CM CM 510 CM 530 CM 700 OpenCM 최종 소리감지 횟수 감지된 소리 횟수를 누적하여 카운트합니다 초기화가 필요한 경우 0값을 직접 입력해야 합니다 아래는 최종 소리감지 횟수를 이용한 예제입니다 실시간 소리감지 횟수 실시간으로 감지된 소리 횟수를 카운트합니다 8초간 소리가 입력되지 않으면 0으로 초기화 됩니다 아래는 실시간 소리감지 횟수를 이용한 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5016": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "내장 센서2 [왼쪽 적외선 센서 중앙 적외선 센서 오른쪽 적외선 센서]",
		"content": "제어기에 내장된 적외선 센서 값을 읽어오기 위해 사용합니다 적외선 센서의 값 범위는 1023입니다 물체와의 거리가 가까울수록 큰 값을 가지며 거리가 멀수록 작은 값을 가집니다 제어기마다 내장된 센서의 종류가 다릅니다 각 제어기의 매뉴얼을 참고하세요 CM 100A CM 150 CM 200 CM CM 510 CM 530 CM 700 OpenCM 왼쪽 적외선 센서 제어기 왼쪽 하단에 위치한 적외선 센서의 값을 읽어올 때 사용합니다 중앙 적외선 센서 제어기 전면 중앙에 위치한 적외선 센서의 값을 읽어올 때 사용합니다 오른쪽 적외선 센서 제어기 오른쪽 하단에 위치한 적외선 센서의 값을 읽어올 때 사용합니다 아래는 제어기의 적외선 센서 값을 사용하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5017": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "내장 센서3 [시작 버튼 눌림 횟수 제어기 버튼]",
		"content": "제어기에 내장된 버튼의 값을 읽어올 때 사용합니다 제어기마다 지원하는 센서의 종류가 다릅니다 각 제어기의 매뉴얼을 참고하세요 CM 100A CM 150 CM 200 CM CM 510 CM 530 CM 700 OpenCM 시작 버튼 눌림 횟수 최초 제어기를 켤 때 연속적으로 시작버튼을 누른 횟수를 읽어올 때 사용합니다 시작 버튼 눌림 횟수의 값의 범위는 255입니다 아래는 시작 버튼 눌림 횟수를 사용하는 예제입니다 제어기 버튼 제어기의 버튼 상태를 읽어올 때 사용합니다 제어기에 따라 사용할 수 있는 버튼이 달라집니다 아래는 CM CM 510 CM 530의 버튼을 사용하는 예제입니다 아래는 OpenCM9 04의 버튼을 사용하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5018": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "버저 [버저 종류 버저 울림 시간]",
		"content": "제어기에 내장된 버저를 통해 음계나 멜로디를 연주할 때 사용합니다 버저 울림 시간을 먼저 설정한 후 버저 종류를 설정해야 설정에 맞게 소리가 납니다 아래는 버저 종류를 설정하는 그림입니다 아래는 제어기의 음계를 연주하는 예제입니다 음계 연주 시 버저 울림 시간 을 5초로 설정할 수 있습니다 아래는 제어기의 멜로디를 연주하는 예제입니다 멜로디 연주 시 버저 울림 시간 을 멜로디 연주 시간 특수 멜로디 연주 으로 설정해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5019": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "리모컨 [받은 무선 데이터, 보낼 무선 데이터 무선 ID RC-100채널]",
		"content": "제어기에 연결된 무선 통신 모듈 블루투스 적외선 지그비 을 통해 외부와 데이터를 주고 받는 파라미터입니다 일반적으로 RC 100 스마트폰 가상 리모컨으로 로봇을 조종할 때 사용되며 그 외에 사용자가 만든 임의의 SW와 통신을 위해 사용될 수 있습니다 주고 받는 데이터의 값 범위는 65535로 제한됩니다 2bytes 받은 무선 데이터 제어기가 외부로부터 데이터를 전달받을 때 사용합니다 보낼 무선 데이터 제어기가 외부로 데이터를 내보낼 때 사용합니다 새 무선 데이터 도착 제어기에 외부로부터 데이터가 전달되었을 때 값이 True가 됩니다 내 로봇 무선 ID 지그비를 사용할 때 지그비 ID를 확인합니다 상대로봇 무선 ID 지그비를 사용할 때 패어링할 지그비의 ID를 설정합니다 RC 100 채널 적외선 수신기를 사용할 때 채널 값을 설정합니다 값이 255일경우 블루투스 지그비 모드로 동작합니다 아래는 제어기에서 받은 무선 데이터를 처리하는 예제입니다 아래는 제어기가 외부로 데이터를 내보내는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5020": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "타이머 [타이머 정밀 타이머 자동꺼짐 타이머]",
		"content": "타이머와 정밀 타이머는 제어기에 자동으로 카운트 다운 되는 타이머의 값을 설정할 때 사용합니다 타이머 제어기에 자동으로 카운트 다운 되는 타이머의 값을 사용할 때 설정합니다 타이머의 값 범위는 255이며 단위는 128초 입니다 아래는 타이머를 사용하여 약 1초 024초 만큼 대기하는 예제입니다 정밀 타이머 타이머와 같은 기능을 하며 시간을 더 정밀하게 카운트 합니다 정밀 타이머의 값 범위는 65 535이며 단위는 001초 입니다 아래는 정밀 타이머를 사용하여 정확히 1초 000초 만큼 대기하는 예제입니다 자동꺼짐 타이머 제어기의 절전 모드 기능을 사용할 때 설정합니다 자동꺼짐 타이머 의 실제 값은 255 사이의 숫자를 사용합니다 숫자 은 시간 값 1분을 의미합니다 제어기 작동 시 자동꺼짐 타이머 의 기본 설정 값은 5분 입니다 대부분의 제어기에서 자동꺼짐 타이머 값을 0분으로 설정하면 자동꺼짐 기능이 동작하지 않습니다 OpenCM7 0은 60분으로 설정됨 자동꺼짐 타이머의 남은 시간은 항상 분 단위로 읽혀집니다 즉 50초가 남아 있어도 1분으로 읽혀집니다 자동꺼짐 타이머의 설정은 아래 표와 같으며 타이머를 사용하지 않는 경우 배터리가 방전될 위험이 있으니 주의하시기 바랍니다 설정값 OpenCM7 0의 타이머 시간 기타 제어기의 타이머 시간 60분 타이머 사용안함 배터리 방전에 주의 60 60분 60분 61 254 60분 61 254분 255 타이머 사용안함 배터리 방전에 주의 255분 주의 OpenCM7 0은 설정값이 다르므로 주의하시기 바랍니다 아래는 자동꺼짐 타이머를 이용하여 제어기의 절전 모드를 설정하는 예제입니다 5분내에 새 무선 데이터가 도착하면 자동꺼짐 타이머 값을 다시 초기화합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5021": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "제어기 장치",
		"header3": "기타 [임의의 숫자 내장 LED 화면출력 화면출력 후 줄바꿈]",
		"content": "임의의 숫자 최대값 범위에서 임의의 숫자 Random Value 를 생성합니다 값을 설정하여 최대값의 범위를 조절할 수 있습니다 최대값의 범위는 255입니다 아래는 임의의 숫자를 사용하여 임의의 모션을 실행하는 예제입니다 15까지의 임의의 숫자를 생성하여 해당 모션을 실행합니다 내장 LED 제어기의 내장 LED Aux LED 를 제어하기 위해 사용합니다 아래는 내장 LED를 사용하는 예제입니다 512초 간격으로 내장 LED를 켜고 끕니다 화면 출력 태스크 코드에서 특정 값을 눈으로 확인하고 싶을 때 사용합니다 화면 출력 후 줄바꿈 태스크 코드에서 특정 값을 눈으로 확인하고 싶을 때 사용합니다 출력 후 자동으로 다음 줄로 변경됩니다 아래는 화면 출력 과 화면 출력 후 줄바꿈 을 사용하여 센서 값을 출력하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#모션제어모션-호출-번호모션-상태관절-오프셋관절-led-자동-켜기"
	},
	"5022": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "",
		"content": "제어기와 블루투스로 연결된 스마트 앱 Smart IoT 의 컨트롤 테이블 값을 읽거나 쓰기 위한 파라미터 입니다 자세한 정보는 스마트의 컨트롤 테이블을 참고하세요 Smart ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5023": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "카메라1 [카메라 선택 카메라 확대 카메라 센서 사진 촬영 동영상 촬영]",
		"content": "스마트 기기의 카메라 기능을 사용하기 위한 파라미터입니다 카메라 선택 스마트 기기에 내장된 카메라 중 사용할 카메라를 선택합니다 아래 예제는 후면 카메라와 전면 카메라를 번갈아 선택하는 예제입니다 카메라 확대 스마트 기기의 카메라를 확대할 때 사용합니다 값의 범위는 255 입니다 아래는 카메라를 024초에 한번씩 확대하는 예제입니다 카메라 센서 스마트 기기의 카메라를 센서모드로 동작시키기 위해 사용합니다 참고 카메라 센서 모드의 자세한 사용법은 비전 Vision 을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5024": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "카메라2 [사진 촬영 동영상 촬영]",
		"content": "스마트 기기의 카메라 기능을 사용하기 위한 파라미터입니다 사진 촬영 스마트 기기의 카메라로 사진을 촬영할 때 사용합니다 True일 때 촬영 False일 때 촬영정지 아래는 스마트 기기의 후면 카메라를 이용하여 사진을 촬영하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5025": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "비전 [감지된 색상 라인 감지 영역 얼굴 감지 영역 동작 감지 영역]",
		"content": "스마트 기기의 카메라를 카메라 센서 로 설정시 사용하는 파라미터입니다 감지된 색상 카메라 센서 의 색상 감지 모드 를 사용하는 경우 화면 가운데 부분에 표시되는 색상을 확인하기 위해 사용합니다 아래는 감지된 색상 값을 사용하는 예제입니다 감지할 라인 색상 카메라 센서 의 라인 감지 모드 를 사용하는 경우 감지할 라인의 색상을 설정하기 위해 사용합니다 라인 감지 영역 카메라 센서 의 라인 감지 모드 를 사용하는 경우 감지된 라인의 위치를 확인하기 위해 사용합니다 아래는 녹색 라인이 감지되면 해당 라인에 빨간색 원을 표시하는 예제입니다 얼굴 감지 영역 카메라 센서 의 얼굴 감지 모드 를 사용하는 경우 감지된 얼굴의 위치를 확인하기 위해 사용합니다 아래는 얼굴이 감지되면 해당 위치에 빨간색 원을 표시하는 예제입니다 동작 감지 영역 카메라 센서 의 동작 감지 모드 를 사용하는 경우 감지된 동작의 위치를 확인하기 위해 사용합니다 아래는 동작이 감지되면 해당 위치에 빨간색 원을 표시하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5026": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "표시1 [화면 회전 배경 표시 그림 표시 감지된 얼굴 그림 표시]",
		"content": "스마트 기기의 화면에 배경 그림 도형 문자를 표시하기 위해 사용합니다 화면 회전 스마트 기기의 화면 방향을 설정할 때 사용합니다 아래는 스마트 기기의 화면 방향을 024초마다 번갈아 변경하는 예제입니다 배경 표시 스마트 기기의 화면에 그림 배경을 설정할 때 사용합니다 Smart 앱에 미리 등록해놓은 배경만 사용할 수 있습니다 아래는 스마트 기기의 그림 배경을 아이템1로 설정하는 예제입니다 그림 표시 스마트 기기의 화면에 그림을 배치할 때 사용합니다 Smart 앱에 미리 등록해놓은 그림만 사용할 수 있습니다 아래는 스마트 기기의 위치2 3과 위치 3에 그림을 표시하는 예제입니다 감지된 얼굴 그림 표시 카메라 센서 의 얼굴 감지 모드 를 사용할 경우 감지된 얼굴에 덮어씌울 그림을 설정할 때 사용합니다 Smart 앱에 미리 등록해놓은 그림만 사용할 수 있습니다 아래는 스마트 기기의 카메라를 이용하여 얼굴을 감지한 후 감지된 얼굴 위에 그림을 표시하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5027": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "표시2 [도형 표시 문자 표시 숫자 표시]",
		"content": "스마트 기기의 화면에 배경 그림 도형 문자를 표시하기 위해 사용합니다 도형 표시 스마트 기기의 화면에 도형을 배치할 때 사용합니다 원 사각형 삼각형 아래는 위치3 3에 파란색 원형과 회색 삼각형을 번갈아 표시하는 예제입니다 문자 표시 스마트 기기의 화면에 문자를 배치할 때 사용합니다 Smart 앱에 미리 등록해놓은 문자만 사용할 수 있습니다 아래는 위치1 3에 차례로 문자를 표시했다가 지우는 예제입니다 숫자 표시 스마트 기기의 화면에 숫자를 배치할 때 사용합니다 별도의 문자 등록 없이 255 사이의 숫자를 사용할 수 있습니다 아래는 위치3 3에 숫자를 증가하며 표시하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5028": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "멀티미디어 [문자음성 자동변환(TTS) 악기 연주 오디오 볼륨 동영상 재생]",
		"content": "스마트 기기의 화면과 스피커를 사용하여 영상을 출력하거나 소리를 출력하기 위해 사용합니다 문자음성 자동변환 TTS 스마트 기기의 문자음성 자동변환 서비스를 활용할 때 사용합니다 Smart 앱에 미리 등록해놓은 문자만 사용할 수 있습니다 아래는 문자아이템2 문자아이템3을 번갈아 음성으로 변환하여 출력하는 예제입니다 악기 연주 스마트 기기로 악기 소리를 낼 때 사용합니다 아래는 어쿠스틱 피아노로 도 레 미를 반복해서 출력하는 예제입니다 오디오 재생 스마트 기기의 오디오 파일을 재생할 때 사용합니다 오디오 재생1과 오디오 재생2는 독립적으로 동작합니다 Smart 앱에 미리 등록해놓은 오디오 파일만 사용할 수 있습니다 볼륨 스마트 기기의 사운드 볼륨을 설정할 때 사용합니다 값 범위는 255이며 값이 클수록 볼륨이 커집니다 기기에 따라 값의 범위가 다를 수 있습니다 아래는 오디오 재생1 오디오 재생2 볼륨을 이용하여 스마트 기기의 음원을 재생하는 예제입니다 동영상 재생 스마트 기기의 동영상 파일을 재생할 때 사용합니다 Smart 앱에 미리 등록해놓은 동영상만 사용할 수 있습니다 동영상 일시정지 스마트 기기에서 동영상 파일이 재생되고 있을 때 일시 정지하기 위해 사용합니다 아래는 동영상 재생과 동영상 일시정지를 사용하여 화면을 터치하고 있는 동안 동영상 재생을 일시정지하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5029": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "센서1 [흔들림 센서 기울기 센서 조도 센서]",
		"content": "스마트 기기에 내장된 여러 가지 센서를 활용하기 위해 사용합니다 흔들림 센서 스마트 기기의 흔들림 센서를 활용하기 위해 사용합니다 스마트 기기의 흔들림 정도에 따라 255사이 값이 출력됩니다 아래는 스마트 기기의 흔들림 정도를 읽어 값이 80이상일 때 화면에 표시한 도형의 색상을 바꾸는 예제입니다 기울기 센서 스마트 기기의 기울기 센서를 활용하기 위해 사용합니다 왼쪽 오른쪽 위쪽 아래쪽 의 기울기를 각각 90도로 출력됩니다 아래는 스마트 기기의 기울기에 따라 화면에 기울어진 방향에 원을 표시하는 예제입니다 조도 센서 스마트 기기의 조도 센서를 활용하기 위해 사용합니다 주위 밝기에 따라 65535의 값이 출력됩니다 기기에 따라 값의 범위가 다를 수 있습니다 아래는 조도를 측정하여 주위가 어두우면 회색 원을 주위가 밝으면 흰색 원을 화면에 표시하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5030": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "센서2 [자기장 센서 방향 센서 소음 센서]",
		"content": "스마트 기기에 내장된 여러 가지 센서를 활용하기 위해 사용합니다 자기장 센서 스마트 기기의 자기장 센서를 활용하기 위해 사용합니다 주위 자기장에 따라 65535의 값이 출력됩니다 아래는 스마트 기기 주위의 자기장을 측정하여 값을 화면에 표시하는 예제입니다 방향 센서 스마트 기기의 방향 센서를 활용하기 위해 사용합니다 방향에 따라 각도 단위로 359 사이의 값을 출력합니다 북 90 동 180 남 270 서 아래는 스마트 기기의 방향 값을 10으로 나누어 화면에 표시하는 예제입니다 소음 센서 스마트 기기의 소음 센서를 활용하기 위해 사용합니다 소음에 따라 dB 단위로 255 사이의 값을 출력합니다 아래는 소음의 크기에 따라 도형을 표시하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5031": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "센서3 [음성 인식 터치 위치 제스처 인식]",
		"content": "스마트 기기에 내장된 여러 가지 센서를 활용하기 위해 사용합니다 음성 인식 스마트 기기의 음성 인식 기능을 켜거나 끄기 위해 사용합니다 True일 때 음성 인식 시작 False일 때 음성 인식 정지 로 동작합니다 음성 인식 결과 음성 인식 기능을 사용할 때 인식된 결과를 확인하기 위해 사용합니다 인식된 결과가 숫자로 표시됩니다 0일 때 결과값 없음 199일 때 해당 문자아이템과 일치 아래는 음성 인식과 음성 인식 결과를 사용하여 화면을 터치했을 때 음성을 인식하여 인식된 결과를 화면 중앙에 표시하는 예제입니다 터치 위치 스마트 기기의 화면 터치 위치를 활용하기 위해 사용합니다 터치 위치1은 첫 번째로 터치된 손가락을 의미하며 터치 위치2는 두 번째로 터치된 손가락을 의미합니다 아래는 터치한 위치에 도형을 표시하는 예제입니다 제스처 인식 스마트 기기의 제스처 인식 기능을 활용하기 위해 사용합니다 아래는 제스처를 인식하여 해당 제스처의 번호를 화면에 출력하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5032": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "기타1 [디버그 정보 표시 화면 출력 화면 출력 후 줄바꿈]",
		"content": "스마트 기기의 부가 기능을 활용하기 위해 사용합니다 디버그 정보 표시 스마트 기기의 주요기능들의 값을 화면에 표시하여 확인하기 위해 사용합니다 하위 비트 우측 부터 1로 설정 시 다음의 정보를 스마트 기기의 화면에 표시할 수 있습니다 1번째 비트 비전 관련 위치 색상 표시 정수 입력 시 2번째 비트 흔들림 값 표시 정수 입력 시 3번째 비트 기울기 상하좌우 값 표시 정수 입력 시 4번째 비트 조도 값 표시 정수 입력 시 5번째 비트 자기장 값 표시 정수 입력 시 16 6번째 비트 방향 값 표시 정수 입력 시 32 7번째 비트 소음 값 표시 정수 입력 시 64 8번째 비트 터치 위치 2값 표시 정수 입력 시 128 9번째 비트 음성입력 결과 값 표시 정수 입력 시 256 10번째 비트 SMS 관련 전화번호 내용 표시 정수 입력 시 512 아래는 디버그 정보 표시 기능을 이용하는 예제입니다 화면 출력 태스크 코드에서 특정 값을 눈으로 확인하고 싶을 때 사용합니다 스마트 앱 화면에 표시됩니다 화면 출력 후 줄바꿈 태스크 코드에서 특정 값을 눈으로 확인하고 싶을 때 사용합니다 출력 후 자동으로 다음 줄로 변경됩니다 스마트 앱 화면에 표시됩니다 아래는 스마트 기기의 화면출력 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5033": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "기타2 [스마트 타이머 진동 현재 시간 플래시 LED 앱 실행하기]",
		"content": "스마트 기기의 부가 기능을 활용하기 위해 사용합니다 스마트 타이머 스마트 기기의 타이머를 설정하기 위해 사용합니다 진동 시간 스마트 기기의 진동 기능을 켤 때 사용합니다 진동 상태 스마트 기기가 현재 진동 중인지 확인하기 위해 사용합니다 아래는 스마트 타이머와 진동 시간을 이용하여 10초마다 1초 진동하는 예제입니다 현재 시간 스마트 기기로부터 현재시간을 읽어오기 위해 사용합니다 아래는 현재시간을 화면에 표시하는 예제입니다 플래시 LED 스마트 기기의 카메라 플래시 LED를 켜거나 끄기 위해 사용합니다 아래는 조도센서로 주위 밝기를 측정하여 어두우면 플래시 LED를 켜는 예제입니다 아래는 화면을 터치하면 등록된 앱을 실행하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5034": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "기타3 [SMS 알림바 이벤트 E-Mail 전송]",
		"content": "스마트 기기의 부가 기능을 활용하기 위해 사용합니다 SMS 번호 SMS를 받았을 때 수신된 SMS 번호를 확인하기 위해 사용합니다 SMS 내용 SMS를 받았을 때 수신된 SMS 내용을 확인하기 위해 사용합니다 아래는 SMS번호를 확인하여 화면 SMS 내용을 표시하는 예제입니다 알림바 이벤트 내용 카카오톡 라인 등의 메신저를 통해 메시지를 받았을 때 수신된 내용을 확인하기 위해 사용합니다 아래는 일반적인 메신저의 메시지 내용을 화면에 표시하는 예제입니다 Mail 전송 촬영한 사진이나 동영상을 Mail로 발송하기 위해 사용합니다 Mail 전송 상태 현재 Mail이 전송 중인지 확인하기 위해 사용합니다 아래는 Mail 전송 기능과 Mail 전송 상태를 사용하여 촬영된 사진을 메일로 보내는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5035": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "스마트 장치",
		"header3": "직접 입력",
		"content": "스마트 기기의 주소를 직접 접근하여 읽기와 쓰기 작업을 진행할 수 있습니다 사용자가 지정한 주소를 Byte 또는 Word DWord 단위로 선택하여 읽거나 씁니다 Smart의 컨트롤 테이블을 참고하세요 Smart 컨트롤 테이블 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#스마트-장치"
	},
	"5036": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "다이나믹셀 장치",
		"header3": "",
		"content": "다이나믹셀 액추에이터의 컨트롤 테이블 값을 읽거나 쓰기 위한 파라미터 입니다 자세한 정보는 다이나믹셀의 컨트롤 테이블을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#다이나믹셀-장치"
	},
	"5037": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "다이나믹셀 장치",
		"header3": "다이나믹셀 엑추에이터",
		"content": "토크 켜기 끄기 다이나믹셀의 토크를 켜거나 끄기 위해 사용합니다 True일 때 토크 켜짐 False일 때 토크 꺼짐으로 동작합니다 아래는 제어기의 버튼을 누르면 ID가 1인 다이나믹셀의 토크를 켜는 예제입니다 LED 다이나믹셀의 LED를 켜거나 끄기 위해 사용합니다 True일 때 LED 켜짐 False일 때 LED 꺼짐으로 동작합니다 CW margin CCW margin 다이나믹셀의 Margin 설정값을 읽어오거나 설정하기 위해 사용합니다 값 범위는 254이며 가급적 기본값 을 바꾸지 않는 것이 좋습니다 자세한 설명은 해당 다이나믹셀의 컨트롤 테이블을 참고하세요 CW slope CCW slope 다이나믹셀의 Slope 설정값을 읽어오거나 설정하기 위해 사용합니다 총 7단계로 설정가능하며 아래 표에 따라 대표값이 설정됩니다 자세한 설명은 해당 다이나믹셀의 컨트롤 테이블을 참고하세요 단계 Data 값 Data 대표 값 0x00 0x03 0x02 0x04 0x07 0x04 0x08 15 0x0F 0x08 16 0x10 31 0x1F 16 0x10 32 0x20 63 0x3F 32 0x20 64 0x40 127 0x7F 64 0x40 128 0x80 254 0xFE 128 0x80 gain gain gain 다이나믹셀의 PID 설정값을 읽어오거나 설정하기 위해 사용합니다 gain은 Proportional Gain으로 작은 값일수록 유격이 커지고 목표위치 근처에서의 출력정도가 약해집니다 gain은 Integral Gain 이며 gain은 Derivative Gain 입니다 목표 위치 다이나믹셀의 목표 위치값을 읽어오거나 설정하기 위해 사용합니다 아래 그림과 같이 모터 위치 값 컨트롤을 사용하여 각도 위치를 지정할 수 있습니다 이동 속도 다이나믹셀의 이동 속도를 읽어오거나 설정하기 위해 사용합니다 아래 그림과 같이 모터 제어 값 컨트롤을 사용하여 회전 방향과 출력 값을 지정할 수 있습니다 토크 한계 다이나믹셀의 토크 한계를 읽어오거나 설정하기 위해 사용합니다 현재 위치 다이나믹셀의 현재 위치를 읽어오기 위해 사용합니다 현재 속도 다이나믹셀의 현재 속도를 읽어오기 위해 사용합니다 현재 하중 다이나믹셀의 현재 하중을 읽어오기 위해 사용합니다 현재 전압 다이나믹셀의 내부 전압을 읽어오기 위해 사용합니다 현재 온도 다이나믹셀의 내부 온도를 읽어오기 위해 사용합니다 움직임 유무 다이나믹셀의 움직임 유무를 읽어오기 위해 사용합니다 True일 때 움직이는 상태 False일 때 움직이지 않는 상태를 나타냅니다 DX RX AX 시리즈에서 사용 가능한 파라미터 토크 켜기 끄기 LED CW margin CCW margin CW slope CCW slope 목표 위치 이동 속도 토크 한계 현재 위치 현재 속도 현재 하중 현재 전압 현재 온도 움직임 유무 MX 시리즈에서 사용 가능한 파라미터 토크 켜기 끄기 LED gain gain gain 목표 위치 이동 속도 토크 한계 현재 위치 현재 속도 현재 하중 현재 전압 현재 온도 움직임 유무 XL 시리즈에서 사용 가능한 파라미터 토크 켜기 끄기 LED gain gain gain 목표 위치 이동 속도 토크 한계 현재 위치 현재 속도 현재 하중 현재 전압 현재 온도 움직임 유무 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#다이나믹셀-장치"
	},
	"5038": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "다이나믹셀 장치",
		"header3": "적외선 센서 어레이",
		"content": "적외선 센서 값 7번 적외선 센서 어레이의 적외선 센서 값을 읽어오기 위해 사용합니다 벽이나 물체의 표면 색 질감에 따라 측정값에 차이가 생길 수 있으며 해당 센서는 5cm 이내에서 사용하도록 최적화 되었습니다 적외선 감지 기준 값 7번 적외선 센서 어레이가 흰색 검정색을 판단하는 기준 값입니다 검은색 감지 유무 LED 센서값 기준값 해당 BIT ON 센서값 기준값 해당 BIT OFF 버저 종류 적외선 센서 어레이의 버저 종류를 설정하기 위해 사용합니다 버저 울림 시간 적외선 센서 어레이의 버저 사용시 소리가 지속될 시간을 설정하는데 사용합니다 저 울림 시간을 먼저 설정한 후 버저 종류를 설정해야 설정에 맞게 소리가 납니다 감지 기준 값 자동 설정 검정색 감지 기준값 자동 찾기의 시작과 마침을 결정하는데 사용합니다 자세한 사용법은 아래 예제를 참고하세요 적외선 물체 감지 유무 적외선 센서 어레이에 물체가 감지되었는지를 읽어오기 위해 사용합니다 진수 값 10 진수 값 검은색 감지 유무 0000001 1번 적외선 센서에 검은 색 감지 0000010 2번 적외선 센서에 검은 색 감지 0000100 3번 적외선 센서에 검은 색 감지 0001000 4번 적외선 센서에 검은 색 감지 0010000 16 5번 적외선 센서에 검은 색 감지 0100000 32 6번 적외선 센서에 검은 색 감지 1000000 64 7번 적외선 센서에 검은 색 감지 아래 그림과 같이 그림을 보며 값을 체크할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#다이나믹셀-장치"
	},
	"5039": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "다이나믹셀 장치",
		"header3": "직접 입력",
		"content": "다이나믹셀 등의 외부 장치의 주소를 직접 접근하여 읽기와 쓰기 작업을 진행할 수 있습니다 사용자가 지정한 주소를 Byte 또는 Word DWord 단위로 선택하여 읽거나 씁니다 각 다이나믹셀 매뉴얼 내의 컨트롤 테이블을 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#다이나믹셀-장치"
	},
	"5040": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "공통",
		"header3": "",
		"content": "모든 장치에서 사용할 수 있는 기본적인 변수와 상수 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#공통"
	},
	"5041": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "공통",
		"header3": "변수",
		"content": "프로그램 내부의 저장공간으로 여러 가지 데이터를 저장하거나 읽을 수 있습니다 숫자를 기억하고 있어야 하는 경우나 공통된 값을 한꺼번에 변경해야 하는 경우 변수를 사용하면 유용합니다 아래는 변수를 사용하는 예제입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#공통"
	},
	"5042": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "공통",
		"header3": "숫자(10진수)",
		"content": "프로그램 내부에서 숫자를 직접 입력해야 하는 경우 사용합니다 대체로 조건절에서 값을 비교할 때 사용합니다 값 범위는 2147483648 4294967295 입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#공통"
	},
	"5043": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "공통",
		"header3": "참/거짓 (True False)",
		"content": "프로그램 내부에서 참 거짓 True False 를 직접 입력해야 하는 경우 사용합니다 대체로 조건절에서 상태를 비교할 때 사용합니다 값 범위는 입니다 False일 때 True일 때 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#공통"
	},
	"5044": {
		"product": "R+ Task 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "공통",
		"header3": "2진수 숫자",
		"content": "프로그램 내부에서 숫자를 직접 입력해야 하는 경우 사용합니다 대체로 비트 연산을 해야한 경우 사용되며 2진수로 표기됩니다 값 범위는 4294967295 입니다 Hex 00 00 00 00 FF FF FF FF ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#공통"
	},
	"5045": {
		"product": "R+ Task 2.0",
		"header1": "유용한 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#유용한-정보"
	},
	"5046": {
		"product": "R+ Task 2.0",
		"header1": "유용한 정보",
		"header2": "변수, 함수 참조 찾기",
		"header3": "",
		"content": "변수 amp 함수가 사용된 지점을 찾아가는 기능입니다 각 변수 amp 함수의 이름변경 기능을 제공합니다 우측의 변수 또는 함수 버튼을 클릭합니다 변수 또는 함수가 반드시 하나 이상 존재해야 합니다 변수 목록 또는 함수 목록 에서 참조 찾기를 진행할 대상을 선택합니다 해당 변수 또는 함수 가 사용된 위치를 참조 결과 에서 확인할 수 있습니다 참조 결과 에서 항목을 선택하면 위치를 찾아갈 수 있습니다 상단에 이름 변경 버튼을 클릭하면 해당 변수 함수 의 이름을 일괄적으로 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#변수-함수-참조-찾기"
	},
	"5047": {
		"product": "R+ Task 2.0",
		"header1": "유용한 정보",
		"header2": "키워드 찾기",
		"header3": "",
		"content": "프로그램 코드에서 사용한 요소를 검색하는 기능입니다 우측 하단의 찾기 버튼을 클릭하세요 상단에 검색어를 입력하세요 태스크 코드에서 찾기 결과 가 하단에 목록으로 표시됩니다 목록의 아이템을 클릭하면 해당 줄로 이동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#키워드-찾기"
	},
	"5048": {
		"product": "R+ Task 2.0",
		"header1": "유용한 정보",
		"header2": "문법검사/컴파일 결과 확인하기",
		"header3": "",
		"content": "태스크 코드를 제어기에 다운로드하기 위해서는 문법 검사 및 컴파일 과정을 거쳐야 합니다 제어기에 다운로드를 시도하거나 오류 버튼을 클릭하면 문법 검사 및 컴파일이 자동으로 수행됩니다 문법 검사 태스크 코드에서 사용한 명령어가 제어기에서 호환된 명령어인지 문법에 오류가 있는지를 검사하는 과정입니다 반드시 모든 오류를 수정해야 다음과정이 진행됩니다 컴파일 문법 검사가 올바르게 이루어진 코드를 제어기가 해석 가능한 기계어로 변환하는 과정입니다 컴파일 과정에서 변수 개수 콜백 사용량 메모리 사용량을 검사하게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#문법검사컴파일-결과-확인하기"
	},
	"5049": {
		"product": "R+ Task 2.0",
		"header1": "유용한 정보",
		"header2": "자주 묻는 질문",
		"header3": "",
		"content": "지원 가능한 제품 군은 ockquote ROBOTIS DREAM ROBOTIS STEM ROBOTIS GP CM 150 CM 200 CM 510 CM 530 CM 700 OpenCM9 04 OpenCM7 0을 사용하여 만든 사용자 로봇 기존 태스크 0에서 사용하던 TSK파일을 태스크 0에서 사용할 수 있나요 ockquote 사용할 수 있습니다 단 기존 TSK파일을 태스크2 0으로 불러와 다시 저장할 경우 태스크 0에서 더 이상 사용할 수 없습니다 태스크 다운로드 후 제어기가 종료되지 않습니다 어떻게 해야 하나요 ockquote Task 0에서는 태스크를 다운로드 후 태스크가 실행됩니다 해당 제어기 CM 150 OpenCM9 04 OpenCM7 Task 0에서 블루투스 모듈을 사용할 수 있나요 ockquote 제어기마다 지원하는 블루투스 모듈이 다르므로 각 블루투스 모듈의 사양서를 참고하세요 BT 110 BT 210 BT 410 제어기가 잘 연결되지 않습니다 어떻게 해야 하나요 ockquote 제어기를 껐다 켠 후 다시 시도해보세요 문제가 지속된다면 제어기의 펌웨어를 최신 버전으로 업데이트하세요 제어기펌웨어 업데이트 도움말 애니메이션을 더 이상 보고 싶지 않습니다 어떻게 해야 하나요 ockquote 홈 탭 설정 메뉴로 이동하여 도움말 애니메이션 을 비활성화하면 더 이상 도움말 애니메이션이 나타나지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus2/task/#자주-묻는-질문"
	},
	"5050": {
		"product": "로보플러스 모바일 디자인",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mdesign/#다운로드"
	},
	"5051": {
		"product": "로보플러스 모바일 디자인",
		"header1": "다운로드",
		"header2": "Android",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS Android 3이상 하드웨어 dual core CPU 1GB RAM 이상 블루투스 및 센서 내장 기기 통신 BT 410 지원 Android 4이상 BT 210 BT 110 지원 앱 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mdesign/#android"
	},
	"5052": {
		"product": "로보플러스 모바일 디자인",
		"header1": "다운로드",
		"header2": "Apple",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS iOS 이상 하드웨어 iPhone4S iPod 5G iPad mini iPad 이상 통신 BT 410 지원 BT 210 BT 110 지원 불가 앱 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mdesign/#apple"
	},
	"5053": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "모션 프로젝트 파일의 생성 편집 다운로드 기능을 제공합니다 일부 기능은 제공하지 않습니다 조인트 그룹 기능과 오프셋 편집 기능 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#개요"
	},
	"5054": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "개요",
		"header2": "지원제품",
		"header3": "",
		"content": "CM 200 CM 530 OpenCM9 04 AX 시리즈 MX 시리즈 XL 320 블루투스 다운로드가 가능한 제어기 CM 200 amp CM 530의 경우 다운로드 안정성을 위한 펌웨어 업데이트 필요 Manager에서 제공 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#지원제품"
	},
	"5055": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "개요",
		"header2": "구동사양",
		"header3": "",
		"content": "최소사양 안드로이드 OS 2GHz 듀얼코어 RAM 1GB 갤럭시 S2급 로봇이 큰 예제 BP 예제 로보티즈 미니 의 경우 최소 사양에서 원활히 구동되지 않을 수 있음 권장사양 안드로이드 OS 쿼드코어 4GHZ RAM 2GB 갤럭시 S3급 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#구동사양"
	},
	"5056": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "메뉴 설명",
		"header2": "",
		"header3": "",
		"content": "단계별 편집 탭 로봇의 연결 및 상태 표시 메뉴 메뉴바 작업 영역 3D 로봇 뷰어 타임라인 모션 유닛 타임라인 메뉴바 포즈 테이블 포즈 메뉴바 3D 로봇 뷰어 흐름차트 모션 흐름차트 메뉴바 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#메뉴-설명"
	},
	"5057": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#따라해보기"
	},
	"5058": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "로봇 연결하기",
		"header3": "",
		"content": "연결 버튼을 클릭하여 로봇 연결 창을 호출합니다 내 로봇의 블루투스 주소를 선택합니다 연결버튼을 클릭합니다 PIN 코드 0000을 입력합니다 확인버튼을 클릭합니다 위 과정은 이미 페어링된 블루투스 장치일 경우 생략됩니다 스마트폰과 로봇이 연결된 후 장치를 읽어오는 동안 잠시 대기합니다 연결에 성공하면 좌측에 연결 아이콘이 활성화 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#로봇-연결하기"
	},
	"5059": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "예제 프로젝트 열기",
		"header3": "",
		"content": "홈 탭으로 이동합니다 툴바에서 프로젝트 열기 버튼을 클릭합니다 스마트폰에 저장된 모션 파일을 선택합니다 확인 버튼을 클릭합니다 프로젝트를 불러오는 동안 잠시 대기합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#예제-프로젝트-열기"
	},
	"5060": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "모션 유닛 재생하기",
		"header3": "",
		"content": "모션 유닛 탭으로 이동합니다 모션 유닛 목록을 클릭합니다 재생할 모션 유닛을 선택합니다 확인 버튼을 클릭합니다 상단의 모션 유닛 재생 메뉴를 클릭합니다 앞서 선택한 모션 유닛이 잘 동작하는지 3D 로봇을 보며 확인합니다 동기화 모드를 클릭합니다 모션 유닛을 재생하여 3D 로봇과 실제 로봇이 잘 동작하는지 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#모션-유닛-재생하기"
	},
	"5061": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "모션 유닛 편집하기",
		"header3": "",
		"content": "모션 유닛 목록을 클릭합니다 새 모션 유닛 만들기 버튼을 클릭합니다 새로 만들 모션 유닛의 이름을 입력합니다 확인버튼을 클릭하면 빈 모션 유닛이 생성됩니다 앞서 생성한 모션 유닛을 선택합니다 확인버튼을 클릭하여 모션 유닛 목록을 닫습니다 3D 로봇의 관절을 클릭하여 조작할 대상을 선택합니다 추가로 3D 로봇의 관절을 클릭하여 여러 관절을 선택할 수 있습니다 토크 끄기 버튼을 클릭하여 선택된 관절을 토크를 끕니다 토크가 꺼진 관절을 손으로 움직여서 원하는 로봇 자세를 만듭니다 토크 켜기 버튼을 클릭합니다 앞서 실제 로봇으로 만든 자세를 3D 로봇이 따라 하게 됩니다 상단의 타임라인 영역을 드래그하여 25번 프레임에 커서를 위치시킵니다 키프레임 삽입 버튼을 클릭합니다 위 과정을 통해 3D 로봇의 자세가 25번 위치에 저장됩니다 타임라인 영역에서 51번 위치로 커서를 이동시킵니다 토크 끄기 버튼을 클릭합니다 토크가 꺼진 관절을 손으로 움직여서 새로운 자세를 만듭니다 토크 켜기 버튼을 클릭합니다 앞서 실제 로봇으로 만든 자세를 3D 로봇이 따라하게 됩니다 키프레임 삽입 버튼을 클릭하여 해당 자세를 51번 프레임에 저장합니다 마찬가지로 6초 8초 1초 위치에 추가로 키프레임 자세를 저장합니다 동기화 모드를 클릭합니다 모션 유닛 재생 메뉴를 활용하여 실제 로봇이 잘 움직이는지 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#모션-유닛-편집하기"
	},
	"5062": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "모션 재생하기",
		"header3": "",
		"content": "모션 탭으로 이동합니다 모션 목록을 클릭합니다 원하는 모션을 선택합니다 확인버튼을 클릭합니다 앞서 선택한 모션은 그림과 같이 구성되어 있습니다 WALK READ 와 WALK 는 모션 유닛입니다 WALK READ 를 0배속으로 1회 재생한 후 WALK 를 1배속으로 3회 반복 재생합니다 동기화 모드를 클릭합니다 모션 재생 메뉴를 활용하여 선택된 모션이 잘 실행되는지 확인합니다 상단의 링크 영역에 삽입되어있는 모션 유닛을 선택합니다 연결된 모션 유닛 편집 버튼을 클릭합니다 재생 파라미터 탭을 클릭합니다 해당 링크의 재생 속도를 수정해봅니다 해당 링크의 반복 횟수를 수정해봅니다 확인 버튼을 클릭하여 설정을 완료합니다 앞서 변경한 재생 파라미터가 적용되었음을 확인합니다 동기화 모드를 클릭합니다 모션 재생 메뉴를 활용하여 선택된 모션이 잘 실행되는지 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#모션-재생하기"
	},
	"5063": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "모션 편집하기",
		"header3": "",
		"content": "모션 목록을 클릭합니다 새 모션 만들기 버튼을 클릭합니다 새로 만들 모션의 이름을 입력합니다 확인 버튼을 클릭하면 빈 모션이 생성됩니다 앞서 생성한 모션을 선택합니다 확인버튼을 클릭하여 모션 목록을 닫습니다 모션유닛 삽입 버튼을 클릭합니다 연결할 모션유닛을 선택합니다 확인버튼을 클릭합니다 앞서 선택한 모션유닛이 연결되었습니다 다시 모션유닛 삽입 버튼을 클릭합니다 연결할 모션유닛을 선택합니다 확인버튼을 클릭합니다 앞서 선택한 모션유닛이 연이어 연결됩니다 동기화 모드를 클릭합니다 모션 재생 버튼을 클릭합니다 첫 번째로 연결한 모션유닛이 선택되고 해당 모션유닛이 재생됩니다 연이어 두 번째로 연결한 모션유닛이 선택되고 해당 모션유닛이 재생됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#모션-편집하기"
	},
	"5064": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "모션 다운로드하기",
		"header3": "",
		"content": "모션 다운로드 탭으로 이동합니다 새 모션그룹 만들기 버튼을 클릭합니다 새로 만들 모션그룹의 이름을 입력합니다 확인버튼을 클릭합니다 앞서 모션 탭에서 만든 모션 중에서 모션그룹에 추가할 모션을 선택합니다 모션 추가 버튼을 클릭합니다 과정을 통해 모션을 추가하면 로봇 메모리의 용량이 계산됩니다 모션그룹에 원하는 모션을 모두 담은 후 확인버튼을 클릭합니다 앞서 만든 모션그룹을 선택합니다 모션그룹 다운로드 버튼을 클릭합니다 해당 모션그룹이 로봇 제어기에 다운로드 되는 동안 잠시 대기합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#모션-다운로드하기"
	},
	"5065": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "따라해보기",
		"header2": "모션 프로젝트 저장하기",
		"header3": "",
		"content": "홈 탭으로 이동합니다 다른 이름으로 저장 버튼을 클릭합니다 저장할 모션 프로젝트 파일의 이름을 입력합니다 확인버튼을 클릭합니다 로그 메시지를 확인합니다 좌측 상단에 저장된 모션 프로젝트의 파일명이 표기됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#모션-프로젝트-저장하기"
	},
	"5066": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "소프트웨어 다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#소프트웨어-다운로드"
	},
	"5067": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "소프트웨어 다운로드",
		"header2": "Android",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS Android 3이상 하드웨어 dual core CPU 1GB RAM 이상 블루투스 및 센서 내장 기기 통신 BT 410 지원 Android 4이상 BT 210 BT 110 지원 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#android"
	},
	"5068": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "소프트웨어 다운로드",
		"header2": "Apple",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS iOS 이상 하드웨어 iPhone4S iPod 5G iPad mini iPad 이상 통신 관련 BT 410 지원 BT 210 BT 110 지원 불가 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#apple"
	},
	"5069": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "기타 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#기타-정보"
	},
	"5070": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "기타 정보",
		"header2": "3D 카메라 조작",
		"header3": "",
		"content": "ockquote 3D 화면을 한 손가락으로 드래그하면 시점이 회전됩니다 ockquote 3D 화면을 두 손가락으로 펼치며 드래그하면 시점이 확대됩니다 ockquote 3D 화면을 두 손가락으로 모으며 드래그하면 시점이 축소됩니다 ockquote 3D 화면을 두 손가락으로 위쪽 방향으로 드래그하면 시점이 내려갑니다 시점이 내려감에 따라 로봇이 위로 올려져 보입니다 ockquote 3D 화면을 두 손가락으로 아래쪽 방향으로 드래그하면 시점이 올라갑니다 시점이 올라감에 따라 로봇이 아래로 내려져 보입니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#3d-카메라-조작"
	},
	"5071": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5072": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "지원 가능한 제품군은?",
		"header3": "",
		"content": "프리미엄 스템 스마트 다윈미니 CM 200 CM 530 OpenCM9 04C AX시리즈 MX시리즈 XL 320 로 구성된 제품군 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5073": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "지원 가능한 3D 모델은?",
		"header3": "",
		"content": "지원 제품군 중에서 모션을 사용하는 예제 전체 링크형 구조 로봇 지원 불가 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5074": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "예제 3D 모델 외의 로봇을 추가할 수 있나요?",
		"header3": "",
		"content": "현재는 모터가 나열된 형태로만 제공하며 추후 PC버전에서 Design으로 조립한 로봇을 활용할 수 있도록 지원할 예정 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5075": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "MTN파일을 MTNX로 변환할 수 있나요?",
		"header3": "",
		"content": "현재는 모션 데이터는 변환되나 3D 로봇을 사용할 수 없으며 추후 3D 로봇을 선택할 수 있도록 지원할 예정 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5076": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "MTNX파일을 MTN으로 변환할 수 있나요?",
		"header3": "",
		"content": "현재는 지원하지 않으며 앞으로도 지원계획 없음 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5077": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "모션 파일을 수정한 후 제대로 동작하지 않습니다. 어떻게 해야 하나요?",
		"header3": "",
		"content": "모션 파일을 수정한 후 반드시 모션그룹을 다시 다운로드 해야 합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5078": {
		"product": "로보플러스 모바일 모션 2.0",
		"header1": "자주 묻는 질문",
		"header2": "제어기가 잘 연결되지 않습니다. 어떻게 해야 하나요?",
		"header3": "",
		"content": "제어기를 껐다 켠 후 다시 시도해보세요 만약 사용하는 제어기가 CM 200이라면 제어기를 끈 후 전원버튼을 3초 눌러서 태스크를 멈춘 후 시도해 보세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mmotion/#자주-묻는-질문"
	},
	"5079": {
		"product": "로보플러스 모바일 태스크",
		"header1": "다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask/#다운로드"
	},
	"5080": {
		"product": "로보플러스 모바일 태스크",
		"header1": "다운로드",
		"header2": "Android",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS Android 3이상 하드웨어 dual core CPU 1GB RAM 이상 블루투스 및 센서 내장 기기 통신 BT 410 지원 Android 4이상 BT 210 BT 110 지원 앱 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask/#android"
	},
	"5081": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "개요",
		"header2": "",
		"header3": "",
		"content": "안드로이드 기기 및 iOS 기기에서 로보플러스 태스크 Task 과 동일한 기능을 제공합니다 예제 다운로드 편집 디버깅 리모컨 기능을 제공합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#개요"
	},
	"5082": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "개요",
		"header2": "구동사양 및 주의사항",
		"header3": "",
		"content": "항상 제어기의 펌웨어를 최신 버전으로 유지 시켜주세요 반드시 구동 기기에서 블루투스를 지원해야 다운로드 기능을 이용할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#구동사양-및-주의사항"
	},
	"5083": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "개요",
		"header2": "지원제품",
		"header3": "",
		"content": "ROBOTIS DREAM ROBOTIS SMART ROBOTIS STEM ROBOTIS PREMIUM ROBOTIS GP ROBOTIS MINI ROBOTIS IoT 그 외 CM 150 CM 200 CM 510 CM 530 CM 700 OpenCM9 04 OpenCM7 을 사용하여 만든 사용자 로봇 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#지원제품"
	},
	"5084": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "메뉴설명",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#메뉴설명"
	},
	"5085": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "메뉴설명",
		"header2": "단계별 편집 탭",
		"header3": "",
		"content": "작업 영역이 홈 탭 프로그래밍 탭 디버깅 탭으로 분리됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#단계별-편집-탭"
	},
	"5086": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "메뉴설명",
		"header2": "시작화면",
		"header3": "",
		"content": "시작 화면에서는 편집기와 리모컨을 선택할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#시작화면"
	},
	"5087": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "메뉴설명",
		"header2": "홈 탭",
		"header3": "",
		"content": "프로그램 시작 시 첫 화면으로 기본 예제 파일 관련 메뉴 업데이트 설정 메뉴 리모컨을 포함합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#홈-탭"
	},
	"5088": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "메뉴설명",
		"header2": "프로그래밍 탭",
		"header3": "",
		"content": "태스크 소스 코드를 편집하는 영역으로 프로그래밍 툴바 소스뷰 아웃라인 메뉴 다운로드 기능을 제공합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#프로그래밍-탭"
	},
	"5089": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "메뉴설명",
		"header2": "디버깅 탭",
		"header3": "",
		"content": "태스크 코드를 디버깅하기 위한 영역으로 출력 모니터 가상리모컨 기능을 제공합니다 사용자 편의를 위해 자동 연결기능이 추가되었습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#디버깅-탭"
	},
	"5090": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#따라해보기"
	},
	"5091": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "예제파일 열기",
		"header3": "",
		"content": "홈 탭으로 이동합니다 프로그램 시작 시 홈 탭에서 시작됩니다 예제 버튼을 클릭합니다 원하는 제품과 단계 예제 명을 선택합니다 확인 버튼을 클릭합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#예제파일-열기"
	},
	"5092": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "새 파일 만들기",
		"header3": "",
		"content": "홈 탭으로 이동합니다 프로그램 시작시 홈 탭에서 시작됩니다 새로 만들기 버튼을 클릭합니다 제어기와 제어기의 펌웨어 버전을 선택합니다 구1 신규2 확인 버튼을 클릭하면 새로운 Task 파일이 생성됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#새-파일-만들기"
	},
	"5093": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "명령어 편집하기",
		"header3": "",
		"content": "프로그래밍 탭으로 이동합니다 새 파일을 생성한 직후라면 프로그래밍 탭에서 시작됩니다 명령어 버튼을 클릭합니다 반복문 카테고리를 클릭합니다 무조건 반복 명령어를 드래그 drag 하여 원하는 라인에 드롭 drop 하여 명령어가 추가합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#명령어-편집하기"
	},
	"5094": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "파라미터 편집하기",
		"header3": "",
		"content": "명령어 버튼을 클릭합니다 실행문 카테고리를 클릭합니다 로드 명령어를 드래그 drag 하여 원하는 라인에 드롭 drop 하여 명령어를 추가합니다 추가된 명령어의 좌변 블록 을 두 번 터치합니다 카테고리1의 제어기 장치 를 선택합니다 카테고리2의 주변 장치 를 선택합니다 포트를 1번으로 선택한 후 감속모터 를 선택합니다 확인 버튼을 클릭하여 명령어 편집을 완료합니다 추가된 명령어의 우변 블록 을 두 번 터치합니다 카테고리1의 제어기 상수 를 선택합니다 카테고리2의 모터 제어 값 을 선택합니다 방향을 CCW 로 선택한 후 출력 값에 500을 입력합니다 확인 버튼을 클릭하여 명령어 편집을 완료합니다 편집이 적용된 명령어 블록을 확인합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#파라미터-편집하기"
	},
	"5095": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "다운로드 하기",
		"header3": "",
		"content": "장치 버튼을 클릭합니다 로봇의 연결 장치를 선택합니다 처음 연결할 경우 블루투스 필터 2자리를 입력해야 합니다 확인 버튼을 클릭합니다 창이 닫히면 다운로드 버튼을 클릭합니다 BT 210을 사용할 경우 PIN번호 0000 를 입력해야 합니다 다운로드가 완료되면 제어기가 Task를 실행합니다 일부 제어기의 경우 제어기가 Task를 실행하는 대신 종료합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#다운로드-하기"
	},
	"5096": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "프로그램 출력보기",
		"header3": "",
		"content": "디버깅 탭으로 이동합니다 장치 버튼을 클릭합니다 로봇의 연결 장치를 선택합니다 처음 연결할 경우 블루투스 필터 2자리를 입력해야 합니다 확인 버튼을 클릭합니다 창이 닫히면 시작 버튼을 클릭합니다 BT 210을 사용할 경우 PIN번호 0000 를 입력해야 합니다 로봇이 연결되면 출력 모니터 와 가상 리모컨 이 활성화 됩니다 소스 코드상에서 화면출력 후 줄 바꿈 혹은 화면출력 을 사용한 경우 다음과 같이 출력용 모니터 에 값이 출력됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#프로그램-출력보기"
	},
	"5097": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "따라해보기",
		"header2": "리모컨 사용하기",
		"header3": "",
		"content": "홈 탭으로 이동합니다 프로그램 시작시 홈 탭에서 시작됩니다 장치 버튼을 클릭합니다 로봇의 연결 장치를 선택한 후 처음 연결할 경우 블루투스 필터 2자리를 입력해야 합니다 확인 버튼을 클릭합니다 창이 닫히면 리모컨 버튼을 클릭합니다 BT 210을 사용할 경우 PIN번호 0000 를 입력해야 합니다 초기에 리모컨이 실행되면 버튼 모드로 로봇을 조종할 수 있습니다 조이스틱 모드를 선택하면 방향키가 조이스틱 형태로 변경됩니다 센서 모드를 선택하면 방향키가 기울기 센서 형태로 변경됩니 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#리모컨-사용하기"
	},
	"5098": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#프로그래밍편집"
	},
	"5099": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "명령어 삽입/변경",
		"header3": "",
		"content": "우측의 명령어 탭을 클릭합니다 혹은 명령어를 삽입할 위치를 두 번 터치합니다 명령어를 드래그 drag 하여 원하는 위치에 드롭 drop 합니다 명령어 블록을 두 번 터치하면 다른 명령어로 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#명령어-삽입변경"
	},
	"5100": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "여러 줄 선택",
		"header3": "",
		"content": "줄 번호를 드래그 drag 하여 여러 줄을 선택합니다 이미 선택된 라인의 번호를 드래그 drag 하면 부분적으로 취소할 수 있습니다 소스코드를 직접 클릭하면 라인선택이 취소됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#여러-줄-선택"
	},
	"5101": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "줄 삽입/지우기",
		"header3": "",
		"content": "줄 삽입 혹은 줄 지우기 를 진행할 위치를 터치하여 선택합니다 줄 삽입 을 클릭하면 선택된 줄의 위쪽에 새로운 줄이 삽입됩니다 줄 지우기 를 클릭하면 선택된 줄이 삭제됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#줄-삽입지우기"
	},
	"5102": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "줄 활성/비활성",
		"header3": "",
		"content": "활성 비활성을 진행할 위치를 터치하여 선택합니다 줄 활성 비활성 버튼을 클릭하면 선택된 줄의 활성 비활성 상태가 전환됩니다 비활성화된 코드는 회색으로 표시되며 컴파일시 제외됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#줄-활성비활성"
	},
	"5103": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "복사/잘라내기/붙여넣기",
		"header3": "",
		"content": "복사 혹은 잘라내기 를 진행할 줄 번호를 드래그하여 선택합니다 추가 메뉴 버튼을 클릭합니다 복사 혹은 잘라내기 를 클릭하면 선택된 줄이 클립보드에 복사됩니다 붙여넣기를 진행할 줄을 터치하여 선택합니다 추가 메뉴 버튼을 클릭합니다 붙여넣기 를 클릭하면 클립보드에 복사된 내용이 붙여집니다 그림과 같이 복사한 코드가 삽입됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#복사잘라내기붙여넣기"
	},
	"5104": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(편집)",
		"header2": "실행취소/다시실행",
		"header3": "",
		"content": "코드를 편집하던 중에 실행취소 버튼을 클릭하면 코드를 되돌릴 수 있습니다 상단 툴바의 다시실행 버튼을 클릭하면 되돌린 코드를 다시 실행할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#실행취소다시실행"
	},
	"5105": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(명령어)",
		"header2": "",
		"header3": "",
		"content": "Task 0에서 사용하는 명령어는 Task 0과 동일합니다 Task 매뉴얼의 프로그래밍 명령어 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#프로그래밍명령어"
	},
	"5106": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "프로그래밍(파라미터)",
		"header2": "",
		"header3": "",
		"content": "Task 0에서 사용하는 파라미터는 Task 0과 동일합니다 Task 매뉴얼의 프로그래밍 파라미터 를 참고하세요 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#프로그래밍파라미터"
	},
	"5107": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "소프트웨어 다운로드",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#소프트웨어-다운로드"
	},
	"5108": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "소프트웨어 다운로드",
		"header2": "Android",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS Android 3이상 하드웨어 dual core CPU 1GB RAM 이상 블루투스 및 센서 내장 기기 통신 BT 410 지원 Android 4이상 BT 210 BT 110 지원 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#android"
	},
	"5109": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "소프트웨어 다운로드",
		"header2": "Apple",
		"header3": "",
		"content": "시스템 최저 요구 사양 OS iOS 이상 하드웨어 iPhone4S iPod 5G iPad mini iPad 이상 통신 관련 BT 410 지원 BT 210 BT 110 지원 불가 다운로드 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#apple"
	},
	"5110": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "유용한 정보",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#유용한-정보"
	},
	"5111": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "유용한 정보",
		"header2": "변수, 함수 참조 찾기",
		"header3": "",
		"content": "변수 amp 함수가 사용된 지점을 찾아가는 기능입니다 각 변수 amp 함수의 이름변경 기능을 제공합니다 우측의 변수 또는 함수 버튼을 클릭합니다 변수 또는 함수가 반드시 하나 이상 존재해야 합니다 변수 목록 또는 함수 목록 에서 참조 찾기를 진행할 대상을 선택합니다 변수 목록 하단의 참조 찾기 돋보기 버튼을 클릭합니다 참조 결과 에서 항목을 선택하면 위치를 찾아갈 수 있습니다 다시 참조 찾기 버튼을 클릭하여 창을 닫습니다 변수 목록 하단에 이름 변경 버튼을 클릭하면 해당 변수 함수 의 이름을 일괄적으로 변경할 수 있습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#변수-함수-참조-찾기"
	},
	"5112": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "유용한 정보",
		"header2": "키워드 찾기",
		"header3": "",
		"content": "프로그램 코드에서 사용한 요소를 검색하는 기능입니다 우측 하단의 찾기 버튼을 클릭하세요 상단에 검색어를 입력하세요 태스크 코드에서 찾기 결과 가 하단에 목록으로 표시됩니다 목록의 아이템을 클릭하면 해당 줄로 이동합니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#키워드-찾기"
	},
	"5113": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "유용한 정보",
		"header2": "문법검사, 컴파일 결과 확인하기",
		"header3": "",
		"content": "태스크 코드를 제어기에 다운로드하기 위해서는 문법 검사 및 컴파일 과정을 거쳐야 합니다 제어기에 다운로드를 시도하거나 오류 버튼을 클릭하면 문법 검사 및 컴파일이 자동으로 수행됩니다 문법 검사 태스크 코드에서 사용한 명령어가 제어기에서 호환된 명령어인지 문법에 오류가 있는지를 검사하는 과정입니다 반드시 모든 오류를 수정해야 다음과정이 진행됩니다 컴파일 문법 검사가 올바르게 이루어진 코드를 제어기가 해석 가능한 기계어로 변환하는 과정입니다 컴파일 과정에서 변수 개수 콜백 사용량 메모리 사용량을 검사하게 됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#문법검사-컴파일-결과-확인하기"
	},
	"5114": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "유용한 정보",
		"header2": "안드로이드 기기에 태스크파일 복사하기",
		"header3": "",
		"content": "PC에서 작성한 태스크 파일을 안드로이드 기기에 복사하여 사용할 수 있습니다 USB 케이블을 이용하여 안드로이드 기기를 PC에 연결합니다 PC에 안드로이드 기기 제조사에서 제공하는 USB 드라이버가 설치되어 있어야 합니다 탐색기에서 스마트 기기의 장치 내부 저장소 RoboPlus 로 이동합니다 만약 RoboPlus 폴더가 존재하지 않으면 RoboPlus 폴더를 직접 생성합니다 RoboPlus 폴더 내에 원하는 태스크 파일 tsk 을 복사합니다 파일 복사가 완료되면 안드로이드 기기에서 Task 0를 실행하여 상단의 열기 버튼을 클릭합니다 열기 창에 복사한 파일을 선택하여 확인 버튼을 클릭하면 복사한 파일이 실행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#안드로이드-기기에-태스크파일-복사하기"
	},
	"5115": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "유용한 정보",
		"header2": "Apple 기기에 태스크파일 복사하기",
		"header3": "",
		"content": "PC에서 작성한 태스크 파일을 iOS 기기에 복사하여 사용할 수 있습니다 USB 케이블을 이용하여 iOS 기기를 PC에 연결합니다 PC에 iOS 기기 제조사에서 제공하는 USB 드라이버가 설치되어 있어야 합니다 PC에서 iTunes를 실행합니다 iTunes가 실행되면 상단에 연결된 장치를 선택합니다 좌측에 App 카테고리를 선택합니다 App 목록이 로딩될 때까지 잠시 기다린 후 화면을 아래로 스크롤합니다 App 목록에서 Task2를 선택한 후 좌측 도큐멘트 폴더 내에 원하는 태스크 파일 tsk 을 복사합니다 파일 복사가 완료되면 iOS 기기에서 Task 0를 실행하여 상단의 열기 버튼을 클릭합니다 열기 창에 복사한 파일을 선택하여 확인 버튼을 클릭하면 복사한 파일이 실행됩니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#apple-기기에-태스크파일-복사하기"
	},
	"5116": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "자주 묻는 질문",
		"header2": "",
		"header3": "",
		"content": "",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#자주-묻는-질문"
	},
	"5117": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "자주 묻는 질문",
		"header2": "지원 가능한 제품 군은?",
		"header3": "",
		"content": "ROBOTIS DREAM ROBOTIS SMART ROBOTIS STEM ROBOTIS PREMIUM ROBOTIS GP ROBOTIS MINI ROBOTIS IoT 그 외 CM 150 CM 200 CM 510 CM 530 CM 700 OpenCM9 04 OpenCM7 0을 사용하여 만든 사용자 로봇 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#자주-묻는-질문"
	},
	"5118": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "자주 묻는 질문",
		"header2": "기존 태스크 1.0에서 사용하던 TSK파일을 태스크 2.0에서 사용할 수 있나요?",
		"header3": "",
		"content": "사용할 수 있습니다 단 기존 TSK파일을 태스크2 0으로 불러와 다시 저장할 경우 태스크 0에서 더 이상 사용할 수 없습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#자주-묻는-질문"
	},
	"5119": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "자주 묻는 질문",
		"header2": "태스크 다운로드 후 제어기가 종료되지 않습니다. 어떻게 해야 하나요?",
		"header3": "",
		"content": "Task 0에서는 태스크를 다운로드 후 태스크가 실행됩니다 해당 제어기 CM 150 OpenCM9 04 OpenCM7 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#자주-묻는-질문"
	},
	"5120": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "자주 묻는 질문",
		"header2": "R+ Task 2.0에서 블루투스 모듈을 사용할 수 있나요?",
		"header3": "",
		"content": "제어기마다 지원하는 블루투스 모듈이 다르므로 각 블루투스 모듈의 사양서를 참고하세요 BT 110 BT 210 BT 410 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#자주-묻는-질문"
	},
	"5121": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "자주 묻는 질문",
		"header2": "제어기가 잘 연결되지 않습니다. 어떻게 해야 하나요?",
		"header3": "",
		"content": "제어기를 껐다 켠 후 다시 시도해보세요 문제가 지속된다면 제어기의 펌웨어를 최신 버전으로 업데이트하세요 제어기 펌웨어 업데이트 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#자주-묻는-질문"
	},
	"5122": {
		"product": "로보플러스 모바일 태스크 2.0",
		"header1": "자주 묻는 질문",
		"header2": "도움말 애니메이션을 더 이상 보고 싶지 않습니다. 어떻게 해야 하나요?",
		"header3": "",
		"content": "홈 탭 설정 메뉴로 이동하여 도움말 애니메이션 을 비활성화하면 더 이상 도움말 애니메이션이 나타나지 않습니다 ",
		"url": "http://emanual.robotis.com/docs/kr/software/rplus_mobile/mtask20/#자주-묻는-질문"
	}
}