{
  
      "404-html":  {
        "title": "",
      "content"	 : "Sorry, but the page you were trying to view does not exist — perhaps you can try searching for it above.",
        "url": " http://localhost:4000/emanual/404.html"
      } ,
  
      "docs-kr-software-rplus2-manager-advanced":  {
        "title": "R+Manager 2.0",
      "content"	 : "고급 기능XM/XH 시리즈 사용전 준비XM/XH 시리즈를 R+Task2.0이나 R+Motion2.0에서 사용하기 위해서는 두 가지 사전준비를 거쳐야 합니다.H/W 준비하기      아래 그림처럼 OpenCM9.04과 XM시리즈 외에 “OpenCM 485 EXP 보드” 가 필요합니다.        아래 3가지를 케이블로 연결합니다.  Dynamixel Channel 설정하기      R+ Manager 2.0을 실행하여 Dynamixel2.0 제품을 선택한 후, 업데이트 &amp;amp; 테스트 메뉴를 실행합니다.        OpenCM9.04에 LN-101 또는 BT-210(혹은 BT-110)을 사용하여 PC와 연결한 후, OpenCM 485 EXP의 전원을 켭니다.      안내에 따라 제품을 검색하면 OpenCM9.04가 검색됩니다. (처음에는 OpenCM9.04의 Dynamixel Channel 값이 Default로 설정되어 있어 XM/XH시리즈가 검색되지 않습니다.)        제품을 업데이트하는 과정을 거치면 컨트롤 테이블이 실행됩니다.      컨트롤 테이블 항목에서 Dynamixel Channel 값을 EXP Board로 설정한 후 저장합니다.        설정이 완료되면 컨트롤 테이블 창을 닫고, OpenCM 485 EXP의 전원을 껐다가 켭니다.(이때, 재부팅되면서 OpenCM9.04의 미니 TTL버스가 비활성화되고 OpenCM 485 EXP의 다이나믹셀 버스가 활성화 됩니다.)      업데이트 &amp;amp; 테스트 메뉴를 다시 실행하여 XM/XH시리즈가 정상적으로 검색되는지 확인합니다.        설정이 완료되면 R+ Task 2.0과 R+ Motion 2.0에서 XM/XH 시리즈를 사용할 수 있게 됩니다.(R+ Task 2.0 v2.1.0, R+ Motion 2.0 v2.4.0 이상 버전에서 지원)컨트롤 아이템 값 변경      마우스 왼쪽 버튼 드래그로 변경하기 (값을 크게 변경할 때 사용합니다.)            마우스 휠로 변경하기 (값을 조금 키우거나 줄일 때 사용합니다.)            키보드 방향키로 변경하기 (값을 미세하게 키우거나 줄일 때 사용합니다.)            값 직접 입력하기 (간단한 연산 식(덧셈, 뺄셈)의 입력이 가능합니다.)      펌웨어 정보 확인제품의 펌웨어 버전, 배포일, 업데이트 노트를 확인하는 기능입니다.  홈 탭으로 이동한 후, 펌웨어 정보를 확인할 제품을 선택합니다.      우측 상단의 “펌웨어 정보” 버튼을 클릭합니다.            선택된 제품의 펌웨어 버전, 배포일, 업데이트 노트를 확인할 수 있습니다.      블루투스로 펌웨어 관리하기BT-210, BT-110을 이용하면 무선으로 펌웨어 관리를 진행하실 수 있습니다. (BT-410의 경우 무선 펌웨어 관리 기능을 제공하지 않습니다.)다음 설명에 따라 블루투스 시리얼 포트를 추가하세요. (Windows10 기준)  제어기에 BT-210(또는 BT-110)을 연결하고 제어기의 전원을 켭니다.      윈도우 시작 버튼을 클릭한 후, 설정 메뉴를 클릭합니다.            장치 메뉴를 클릭합니다.         좌측의 Bluetooth를 선택한 후, Bluetooth 장치를 켭니다.      검색된 블루투스 모듈을 찾아 선택한 후, 연결 버튼을 클릭합니다.            장치 암호입력란에 0000을 입력한 후, 다음 버튼을 클릭합니다.             페어링이 완료되면 페어링된 장치를 선택한 후, 하단의 “추가 Bluetooth 옵션”을 클릭합니다.            COM 포트 탭을 클릭한 후, 송신 포트의 포트 번호를 확인합니다. (아래 그림에서는 COM7)             R+ Manager 2.0에서 설치된 블루투스 포트를 선택하면 무선으로 관리 기능을 사용할 수 있습니다.      ",
        "url": " http://localhost:4000/emanual/docs/kr/software/rplus2/manager/advanced/"
      } ,
  
      "docs-en-dxl-ax-ax-12a":  {
        "title": "AX-12A",
      "content"	 : "Note AX-12+ is the improved version of existing AX-12; the design of circuit, material, and wheel gear are specially improved.Note AX-12A is a new version of the AX-12+ with the same performance but more advanced external design. Only the AX-12A is now being sold.Specifications            Item      Specifications                  Baud Rate      7843 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      53.5g(AX-12, AX-12+), 54.6g(AX-12A)              Dimensions (W x H x D)      32mm x 50mm x 40mm              Gear Ratio      254 : 1              Stall Torque      1.5 N*m (at 12V, 1.5A)              No Load Speed      59rpm (at 12V)              Operating Temperature      -5°C ~ +70°C              Input Voltage      9.0 ~ 12.0V (Recommended : 11.1V)              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communicationf(8bit, 1stop, No Parity)              Physical Connection      TTL Level Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Engineering Plastic      Note Stall torque is the maximum instantaneous and static  torque. Stable motions are possible with robots designed for loads with 1/5 or less of the stall torque.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      12              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      1              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      70              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      140              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0 ~ 1,023(0x3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.        Wheel Mode0 ~ 2,047(0x7FF) can be used, the unit is about 0.1%.If a value in the range of 0 ~ 1,023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1,024 ~ 2,047 is used, it is stopped by setting to 1,024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.      Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel ModeThe unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1023, it means the load works to the CCW direction.If the value is 1024~2047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the current voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      There are no commands transmitted by REG_WRITE              1      There are commands transmitted by REG_WRITE      Note If ACTION command is executed, the value is changed into 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchCurrent to drive motor is at minimum.Can choose vales from 0x20 to 0x3FF.How to AssembleMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/ax/ax-12a/"
      } ,
  
      "docs-en-dxl-ax-ax-12w":  {
        "title": "AX-12W",
      "content"	 : "Specifications            Item      Specifications                  Baud Rate      7843 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      52.9g              Dimensions (W x H x D)      32mm x 50mm x 40mm              Gear Ratio      32 : 1              No Load Speed      470rpm (at 12V, Wheel Mode)54rpm (at 12.0V, Joint Mode)              Operating Temperature      -5°C ~ +70°C              Input Voltage      9.0 ~ 12.0V (Recommended : 11.1V)              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      TTL Level Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Engineering Plastic      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to [Protocol] for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      300              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      1              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      70              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      140              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      4              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      4              28      1      CW Compliance Slope      CW Compliance Slope      RW      64              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      64              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet. 0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate      Margin of Error                  1(Default)      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.                   Value      Description                  Unit      2[μsec]      -              Range      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).CW Angle Limit: the minimum value of Goal Position(Address 30, 31)CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit TemperatureCaution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Using the product when the temperature is high may and can cause damage.Min/Max Voltage LimitIt is the operation range of voltage.50 to 250 (0x32 ~ 0x96) can be used.  The unit is 0.1V.For example, if the value is 80, it is 8V.If Present Voltage (Address42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Addresses 34 and 35) uses the value as the initial value.Status Return LevelIt decides how to return Status Packet. There are three ways like the below table.            Value      Return of Status Packet                  0      No return against all commands (Except PING Command)              1      Return only for the READ command              2      Return for all commands      When Instruction Packet is Broadcast ID, Status Packet is not returned regardless of Status Return Level.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Name      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0X05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by making the value of Torque Limit(Address 34, 35) as 0.Torque Enable            Value      Description                  0      Keeps Torque from generating by interrupting the power of motor              1      Generates Torque by impressing the power to the motor.      LED            Bit      Description                  0      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 to 1023 (0x3FF) is available.  The unit is 0.29 degree.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, this value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0~1023 (0X3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of relevant model in Joint Mode.  Even if the motor is set to more than maximum rpm, it cannot generate the torque more than the maximum rpm.        Wheel Mode0~2047( 0X7FF) can be used, the unit is about 0.1%.If a value in the range of 0~1023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1024~2047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 to 1023 (0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. At this moment, if the value is changed to the value other than 0, the motor can be used again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.      Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel ModeThe unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1023, it means the load works to the CCW direction.If the value is 1024~2047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the current voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      There are no commands transmitted by REG_WRITE              1      There are commands transmitted by REG_WRITE      Note If ACTION command is executed, the value is changed into 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchCurrent to drive motor is at minimum.Can choose vales from 0x20 to 0x3FF.How to AssembleMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/ax/ax-12w/"
      } ,
  
      "docs-kr-dxl-ax-ax-12w":  {
        "title": "AX-12W",
      "content"	 : "Specifications            Item      Specifications                  Baud Rate      7843 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      52.9g              Dimensions (W x H x D)      32mm x 50mm x 40mm              Gear Ratio      32 : 1              No Load Speed      470rpm (at 12V, Wheel Mode)54rpm (at 12.0V, Joint Mode)              Operating Temperature      -5°C ~ +70°F              Input Voltage      9.0 ~ 12.0V (Recommended : 11.1V)              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication (8bit, 1stop, No Parity)              Physical Connection      TTL Level Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Engineering Plastic      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to [Protocol] for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      300              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      1              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      70              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      140              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      4              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      4              28      1      CW Compliance Slope      CW Compliance Slope      RW      64              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      64              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet. 0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate      Margin of Error                  1(Default)      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.                   Value      Description                  Unit      2[μsec]      -              Range      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).CW Angle Limit: the minimum value of Goal Position(Address 30, 31)CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit TemperatureCaution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Using the product when the temperature is high may and can cause damage.Min/Max Voltage LimitIt is the operation range of voltage.50 to 250 (0x32 ~ 0x96) can be used.  The unit is 0.1V.For example, if the value is 80, it is 8V.If Present Voltage (Address42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Addresses 34 and 35) uses the value as the initial value.Status Return LevelIt decides how to return Status Packet. There are three ways like the below table.            Value      Return of Status Packet                  0      No return against all commands (Except PING Command)              1      Return only for the READ command              2      Return for all commands      When Instruction Packet is Broadcast ID, Status Packet is not returned regardless of Status Return Level.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Name      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0X05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by making the value of Torque Limit(Address 34, 35) as 0.Torque Enable            Value      Description                  0      Keeps Torque from generating by interrupting the power of motor              1      Generates Torque by impressing the power to the motor.      LED            Bit      Description                  0      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 to 1023 (0x3FF) is available.  The unit is 0.29 degree.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, this value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0~1023 (0X3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of relevant model in Joint Mode.  Even if the motor is set to more than maximum rpm, it cannot generate the torque more than the maximum rpm.        Wheel Mode0~2047( 0X7FF) can be used, the unit is about 0.1%.If a value in the range of 0~1023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1024~2047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 to 1023 (0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. At this moment, if the value is changed to the value other than 0, the motor can be used again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.      Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel ModeThe unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1023, it means the load works to the CCW direction.If the value is 1024~2047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the current voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      There are no commands transmitted by REG_WRITE              1      There are commands transmitted by REG_WRITE      Note If ACTION command is executed, the value is changed into 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchCurrent to drive motor is at minimum.Can choose vales from 0x20 to 0x3FF.How to AssembleMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawings",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/ax/ax-12w/"
      } ,
  
      "docs-en-dxl-ax-ax-18a":  {
        "title": "AX-18A",
      "content"	 : "Note AX-18A is a new version of the AX-18F with the same performance but more advanced external design.Specifications            Item      Specifications                  Baud Rate      7843 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      54.5g(AX-18F), 55.9g(AX-18A)              Dimensions (W x H x D)      32mm x 50mm x 40mm              Gear Ratio      254 : 1              Stall Torque      1.8 N*m (at 12V, 2.2A)              No Load Speed      97rpm (at 12V)              Operating Temperature      -5°C ~ +70°C              Input Voltage      9.0 ~ 12.0V (Recommended : 11.1V)              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      TTL Level Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Engineering Plastic      Note Stall torque is the maximum instantaneous and static  torque. Stable motions are possible with robots designed for loads with 1/5 or less of the stall torque.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to [Protocol] for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      18              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      1              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      75              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      140              14      2      Max Torque      Maximun Torque      RW      983              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet. 0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate      Margin of Error                  1(Default)      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.                   Value      Description                  Unit      2[μsec]      -              Range      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).CW Angle Limit: the minimum value of Goal Position(Address 30, 31)CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit TemperatureCaution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Using the product when the temperature is high may and can cause damage.Min/Max Voltage LimitIt is the operation range of voltage.50 to 250 (0x32 ~ 0x96) can be used.  The unit is 0.1V.For example, if the value is 80, it is 8V.If Present Voltage (Address42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Addresses 34 and 35) uses the value as the initial value.Status Return LevelIt decides how to return Status Packet. There are three ways like the below table.            Value      Return of Status Packet                  0      No return against all commands (Except PING Command)              1      Return only for the READ command              2      Return for all commands      When Instruction Packet is Broadcast ID, Status Packet is not returned regardless of Status Return Level.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Name      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0X05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by making the value of Torque Limit(Address 34, 35) as 0.Torque Enable            Value      Description                  0      Keeps Torque from generating by interrupting the power of motor              1      Generates Torque by impressing the power to the motor.      LED            Bit      Description                  0      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 to 1023 (0x3FF) is available.  The unit is 0.29 degree.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, this value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0~1023 (0X3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of relevant model in Joint Mode.  Even if the motor is set to more than maximum rpm, it cannot generate the torque more than the maximum rpm.        Wheel Mode0~2047( 0X7FF) can be used, the unit is about 0.1%.If a value in the range of 0~1023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1024~2047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 to 1023 (0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. At this moment, if the value is changed to the value other than 0, the motor can be used again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.      Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel ModeThe unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1023, it means the load works to the CCW direction.If the value is 1024~2047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the current voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      There are no commands transmitted by REG_WRITE              1      There are commands transmitted by REG_WRITE      Note If ACTION command is executed, the value is changed into 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchCurrent to drive motor is at minimum.Can choose vales from 0x20 to 0x3FF.How to AssembleMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/ax/ax-18a/"
      } ,
  
      "docs-en-edu-bioloid-beginner":  {
        "title": "BIOLOID Beginner",
      "content"	 : "IntroductionRobots of 4 DOF can be built with Beginner Kit.  This kit is recommended for people who meet robots for the first time.  Learning the principle of robot building          You can build up 14 example robots with Bioloid Beginner Kit and learn the principle of robot building.      From a simple barrier bar of 1 DOF to an automobile or walking droid of 4 DOF, it is possible to build the robot and edit the example programs. It will help increasing your understanding for robot programming.      Purchasing 4 more AX-12+ for Bioloid Beginner Kit, you can build intermediate-level robots of 8 DOF.      Also, purchasing 14 additional AX-12+ for Bioloid Beginner Kit and frame set for Comprehensive Kit, you can build intermediate-level robots and advanced-level robots of 18 DOF.      You can also create your one and only robot by designing, assembling and programming it by yourself.      Getting StartedPart List  CM-5  AX-12  AX-S1PreparationAs shown in BIOLOID learning material, CM-5 is supposed to support existing BIOLOID software (Behavior Control Program, Motion Editor etc). Therefore, if you want to use RoboPlus software in CM-5, you need to change the firmware into other firmware which supports Roboplus. However, if you change the firmware, you would no longer be able to use the existing Bioloid software.The new-upgraded RoboPlus is an integrated programming software which can control Robotis products.Therefore, CM-5 based robots can be controlled by programming with RoboPlus.The usage is as below.  Download the Latest Version of RoboPlus.  Execute RoboPlus after installation.  Select RoboPlus Manager.  Connect CM-5 with the PC using serial cable.  Execute Firmware Wizard by pressing Control Restoration icon on RoboPlus Manager.  Select the port connected to the controller.  Users must set manually the port connected to the controller. Finish other programs and continue the process since the controller cannot be recognized in case the port is in use.  Select the port connected to the controller and press “Find” button.  Turn the power of the controller off and on.  To find the controller, the controller to be restored must be turned off and on.  Check the controller information.  When the controller is found, the information of current controller and the firmware to download are appeared.  Check the model name whether the controller is connected by the user or not.  (The version of controller information is for Boot Loader, not for firmware.)  Start the firmware installation again.  Press “Next” button to start firmware restoration. Please be careful not to interrupt the connection or turn the power off until it is completed.  Check the controller firmware re-installation result.Executing above procedure, CM-5 can be programmed with RoboPlus. Try to make the best robot with upgraded RoboPlus.OperatingBefore executing the program, the appropriate task codes and motions must be downloaded into the robot.  Turn on the power.  If it is not charged, POWER LED does not blink. Please refer to Charging.  Make the LED on Play blink by pressing MODE button.  Press START button to execute the program.  The LED is not blinking while the program is being executed.Charging CM-5To move a robot when it is not connected with SMPS, you have to use a battery. If the battery is discharged, please use by charging it according to following procedures.  Connect SMSPS to CM-5.  Turn on the CM-5 Power and press the U buttonNote While the CM-5 is being charged, the power LED blinks. The speed of blinking shows how much it is left before finishing the charging. It will be more faster as it completes the charging. Once the charging is done, it will blink for every 2 seconds.TutorialScreen OutputObjective for this tutorial is to print 1 and 2 on the output screen as below.Write Task Code  Execute RoboPlus Task Program.As seen in the picture below, go to Start &amp;gt; All Programs &amp;gt; ROBOTIS &amp;gt; RoboPlus &amp;gt; Software &amp;gt; RoboPlus Task to execute RoboPlus Task.  RoboPlus Task Initial Screen  Select a Controller.Double click an empty line or press Enter, In the Select Control window, select the controller to use, then press the OK button.  Generating Start Program.Select Start Program from the Select Instruction Type window, Start Program will be automatically generated in RoboPlus Task.  Input Endless Loop commandTo print the numbers on the screen endlessly, use the Endless Loop command(Create a command line).  Double click or press Enter on an empty line between { and } of Start Program to invoke the Select Instruction Type window. Select Loop &amp;gt; Endless Loop(while(1)) from the list.  Input Load commandUse Load command to input a Print command, which is needed to print numbers on the screen.  Insert Execute &amp;gt; Load (Assignment value) into an empty line between { and } of Endless Loop.  Load 1 into PrintChoose the left parameter ( ? ) among the Load parameters(Explanation on the parameter).  The left parameter receives input from the right parameter.  Double click the left parameter ( ? ), or press Enter key after clicking it once to invoke the Select Parameter Window.  Select Controller &amp;gt; Print then press OK.Select Constant Numbers &amp;gt; Number &amp;gt; 1 for the right parameter ( ? ) in the same way.When both parameters of the Load command have been set, it should look like below.  Load 2 into Print with LineSelect } under Print command (at the end of the endless loop section), and add new lines by pressing the Space key. Repeat Steps 5 and 6 to input the Load command and to input  Controller &amp;gt; Print with Line and 2. The final task code is shown below.  Save Task CodePress Ctrl + S or the Save icon.Download Task CodeDownload the task code created above.(How to Download Task Code)Execute Task Code  Open the Program Output MonitorTo see the output of the program, you must open the Program Output Monitor BEFORE executing the program.  There are three ways to open the Program Output Monitor.      Click on the View Print of Program in the Download Program window        Click on the View Print of Program button in TOOLS.  Press F5 or click on View Print of Program (V)  menu under Program (P).  Executing the ProgramWhen you turn on the controller, the LED will blink, showing it is in standby mode.  Press the MODE button to move it to PLAY, then press START to execute the downloaded task code.  You should see “1” and “2” being printed on the Program Output Monitor.Button &amp;amp; LEDObjective for this tutorial is to program the U button to turn the AUX LED on and the D button to turn it off. Pressing the START button will end the program.Write Task CodeDownload Task CodeDownload the task code created above.(How to Download Task Code)Execute Task CodeExecute the program and check whether the AUX LED turns on when you press the U button and turns off when you press the D button. Press START button to end.Attacking DuckObjective for this tutorial is to build an attacking duck which attacks approaching objects. Please refer to 2-2-11 Attacking Duck of the assembly manual and complete the hardware.Caution Do not approach your face near the robot when the power is on. You may get injured by the robot.The attacking patterns of the duck are as follows.  If any object is not detected, the robot gets ready to attack by locating ID[1] joint in the middle and folding ID[2] ~ ID[3] joints.  If objects are detected on the left and the right side, the robot turns to the direction where objects are detected by moving ID[1] joint.  If objects are detected at the front, the robot unfolds ID[2] ~ ID[3] joints for attack.  It goes back to the status of “2” above.Write Task Code      Enter the basic value of the motor’s moving speed and Call initial behavior.        If an object is detected from the left side of the robot, turn the beak left.  If an object is detected by the left distance sensor of AX-S1, the location value (present location  value of the ID[1] joint + 20) is entered as the goal position to turn left.  However, to prevent from turning too much, it is written to move only if the present location value is less than 812.  If an object is detected from the right side of the robot, turn the beak right.If an object is detected by the right distance sensor of AX-S1, the location value (present location value of the ID[1] joint -20) is entered as the goal position to turn right.  However, to prevent from turning too much, it is written to move only if the present location value is greater than 212.  Attack if an object is detected at the frontIf an object is detected by the central distance sensor of AX-S1, the robot attacks by calling “Attack with beak.”  Make Initial BehaviorMove the beak in the center by inputting proper goal position value(512) into ID[1] joint, and then call “Attack with Beak” once to make initial behavior.  Make Attack BehaviorMake behaviors such as attack behaviors and raising head (ready behavior) by inputting proper goal position values into ID[2], ID[3] joints, and program “Behavior Wating(7)” function which can stop the behavior control program processing shortly until each behavior is completed.Download Task CodeDownload Complete Task Code (How to Download Task Code)Execute Task CodePlay the downloaded task code.Check if the attacking duck attacks an approaching object or not.Do not approach your face near the robot when the power is on. You may get injured by the robot.Obstacle Detecting CarObjective for this tutorial is to build an intellectual car which runs and avoids obstacles. Please refer to 2-2-9 Obstacle Detection Car of the assembly manual and complete the hardware.The behavior patterns of the obstacle detection car pursuant to obstacle detection in each direction are as follows.            Left      Front      Right      Behavior Pattern                  -      -      -      Forward              O      -      -      Turn Right              -      O      -      Backward              O      O      -      Turn Right              -      -      O      Turn Left              O      -      O      Forward              -      O      O      Turn Left              O      O      O      Stop      The mode of the robot is changed to wheel mode (infinite spinning mode) to use AX-12+ as the wheels of the obstacle detection car.Using RoboPlus Manager, set both the CW location limit value and the CCW location limit value of AX-12+ to 0.Write Task Code      Save the basic value of the motor’s moving speed as the variable        Use the standard value of the object detection and the object detection existence to judge object detection. To do so, set the object detection standard value.        Call appropriate motion functions pursuant to the object detection existence value. (Obstacle Detection Direction)    Make Stop / Forward / Backward / Turn Right / Turn Left Motions. Each motor’s moving speed is set by adding moving speed value which is the set speed value at the beginning and CW:0 and CCW:0 which represent directions.Download Task CodeDownload Complete Task Code (How to Download Task Code)Execute Task CodePlay the downloaded task code. Check if the obstacle detection car runs and avoids the obstacles.Walking Droid 1Objective for this tutorial is to make a walking droid which walks forward in normal situation and avoids obstacles.Since the walking droid uses various postures when it performs such as walking, avoiding obstacles, etc., it is convenient to use by saving the postures as motions.The following table represents the behavior patterns of the walking droid pursuant to surroundings and motion status.            Status      Behavior                  Initially executed      Stay in basic posture              No obstacles      Walking forward              Obstacles Found      Stop and walking backward              After walking backward      Changing direction to the left              Obstacles found even if turned left      Changing direction to the left      Besides duplicated motions, 4 motions must be made as below, and the robot can avoid obstacles while walking.  Stop  Walking forward  Walking backward  Changing direction to the leftMake Motions  Execute RoboPlus Motion and connect to the controller. (See “Connect Robot”)  Enter the name on the page 1 to make “Stop” motion, and then add steps.  The joint values of ID 1, 2, 3, 4 are set to 512. The values are applied to the robot if the rightward arrow is pressed, and the set posture can be checked. (This is the method that users enter the joint values directly.)  Adjust the executing time. It is set to 0.072 second which is the fastest time.  Enter the name on the page 12 to make “Walking Forward” motion, and then add steps.  Turn off torques of all joints by pressing torque-off button. You can see all the joint values are set to “OFF.”  The posture of robot are set by users. The following picture shows the walking posture of the walking droid.  As shown above, if the posture of robot is set and the “Torque-on” button is pressed, the present joint values of the robot are entered automatically to the posture of robot. The currently entered robot’s joints can be read as steps’ posture if the leftward arrow button is pressed(This is the method that users read the joint values from the robot).  Repeating the procedure from number 5, add “Walking Forward” posture to each step. If the posture addition is completed, adjust the stop time and the execution time properly.  If the motion execution button is pressed, the steps of present page are executed sequentially. Check if the robot is operating well.  Using the same method so far, add “Walking Backward” on the page 13 and “Turn Left” on the page 15.  Save the works have been done so far.Download Motion FileDownload Example Motion File (How to Download Motion File)Walking Droid 2Execute MotionsTo use this motion after saving the motions written on RoboPlus Motion in CM-5, the motions of CM-5 must be executed in the task code. Using the two parameters, the motions of robots can be executed.“Load” command must be used to execute the motions. If the “Load” command is selected, two parameter are created. In one parameter on the left, Motion Page in Controller -&amp;gt; Motion is selected, and in the other parameter on the right, the motion page number which includes desired motions is entered.If the task code is written as below and downloaded and executed in CM-5, the saved motions are executed on the page 5.Executing Asynchronous MotionsIt is a motion control method which makes robots do the next work without checking motion status of the robots. It is suitable for beginners because understanding the code is very intuitive. However, it may not be controlled as desired since duplicate execution can happen during the motion execution.Executing Synchronous MotionsIt is a motion control method which make robots do the next work after completing the execution by checking the motion status of the robots. It is suitable for intermediate-level users because the concept of Multi-Task is needed. In the case of infinite repetition motions, the task code must be written well since it may wait continuously when the motion status is checked.Infinite Repetition MotionsIt is effective to make regularly-repeated motions such as walking as an infinite repetition motion.Write Task Code  Call “Ready” when it is executed for the first time.  Call “Forward” if there is no obstacle.  If an object is detected by Central Distance Sensor, Stop and walk backward,and then turn left.  Even though it turns left, if an object is detected by Central Distance Sensor, it turns left until no object is detected.  Write a  function which executes the motion on the page 1 where the “Ready” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Write a function which executes the motion on the page 12 where the “Forward” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Write a function which executes the motion on the page 13 where the “Backward” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Write a function which executes the motion on the page 15 where the “TurnLeft” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Check the parameter value of the motion status, and write a function which waits while the motion is operating.Download Task CodeDownload Complete Task Code (How to Download Task Code)Execute Task CodePlay the downloaded task code.  Leave obstacles on the way of the path, and then check if the walking droid avoids the obstacles and walks.Walking Droid 3After adding turn-right motion to previously built Walking Droid, let us try wireless control(Zigbee Communication) using RC-100.Referring to Building Walking Droid 1 - Making Motion, you can make the right-turn motion additionally on the page 4 of the motion.For Zigbee communication, CM-5 and RC-100 are equipped with ZIG-100 module. (Please refer to the explanation pages on CM-5 and RC-100.)If U / L / D / R buttons of RC-100 are pressed, the Walking Droid performs forward / turn left / backward /turn right motions.Write Task CodeBased on previously written task code in Building Walking Droid 2 - Task Code:  Wait until the new wireless data is coming in, and if the data is coming in, it is saved in the received data variable.  In the received data, only the values regarding U / D / L / R keys in RC-100 are sorted by &amp;amp; Bit Calculation.  Compose the conditional sentences to perform forward / backward / turn left / turn right pursuant to the pressed buttons among all buttons. RC-Call “Ready” at the moment of releasing the pressed button of RC-100.  Write a function which executes the motion on the page 14 where the “TurnRight” motion is saved.  To wait until the motion is complete after execution, call the function “WaitMotion.”Download Task CodeDownload Complete Task Code (How to Download Task Code)Download Example Motion File (How to Download Motion File)Execute Task CodePlay the downloaded task code. Using RC-100, check if the robot moves to the desired directions by performing forward / backward / turn left / turn right motions.Converting .bpg to .tskObjective for this tutorial is to convert .bpg files written in Behavior Control Program into the Task code (.tsk) for RoboPlus Task.Open .bpg File      Open .bpg file using Open  Press Menu ≫ File(F) ≫ Open(O), Shortcut(Ctrl + O), or  Open() to select a file.        Open .bpg file using Drag &amp;amp; Drop  Drag .bpg file to RoboPlus Task.  Convert Commands      Start Program (Click here to see more information on the “Start Program.” )    It is the same as existing “Start”.} (Section End) of Start Program is the same as existing “End”.              RoboPlus Task      Behavior Control Program 1.0                                    End Program ( Click here to see more information on the “End Program” )    It is the same as existing Jump to the Label of “End” Command.              RoboPlus Task      Behavior Control Program 1.0                                    { (Start Block) / } (End Block) ( Click here to see more information on the “Start/End of Block.” )    Lately added concept-  it is not included in existing Behavior Control Program 1.0.        // (Comment or Memo) ( Click here to see more information. )    It is the same as existing “Comment.”  It does not have any influences on motions.              RoboPlus Task      Behavior Control Program 1.0                                    Calculate (Basic Calculation and Bit Calculation) ( Click here to see more information on the “Calculate.” )    It is the same as existing “Compute.”              RoboPlus Task      Behavior Control Program 1.0                                    Load (Input Values) ( Click here to see more information on the “Load.” )    It is the same as existing  “LOAD”.              RoboPlus Task      Behavior Control Program 1.0                                    Label (The Site for Jump) ( Click here to see more information on the “Label.” )    It is the same as existing “Label”. However, it is not possible to be called as in Behavior Control Program 1.0; only Jump is possible.              RoboPlus Task      Behavior Control Program 1.0                                    Jump (goto) ( Click here to see more information on the “Jump.” )    It is the same as existing “JUMP.”              RoboPlus Task      Behavior Control Program 1.0                                    (if) / (else if) / (else) ( Click here to see more information on the “if / else if / else.” )    It is the same as existing “(IF) / (ELSE IF) / (ELSE)”.              RoboPlus Task                                    Behavior Control Program 1.0                          In case that (CONT IF) comes after existing (AND), it is changed to &amp;amp;&amp;amp;.                              In case that (CONT IF) comes after existing (OR),  it is changed to                     .                                RoboPlus Task                                    Behavior Control Program 1.0                              Endless Loop (while(1)) ( Click here to see more information on the “Endless Loop.” )    It is the same as the code repeating the execution of certain blocks unconditionally using Label and JUMP.              RoboPlus Task                                    Behavior Control Program 1.0                          Loop While (while(Condition)) ( Click here to see more information on the “Loop While.” )It is the same as the code repeating the execution of certain blocks using Label and JUMP, depending on conditions.            RoboPlus Task                                    Behavior Control Program 1.0                          Loop For (for) ( Click here to see more information on the “Loop For.” )It is the same as the code repeating the execution of certain blocks only designated times using variables.            RoboPlus Task                                    Behavior Control Program 1.0                              Break Loop (break) ( Click here to see more information on the “Break Loop.” )    It is used equally as the code jumping to the next label of repeated sentences.              RoboPlus Task                                    Behavior Control Program 1.0                              Wait While (Conditional Repeat without Execution Paragraph) ( Click here to see more information on “Wait While.” )    In case the condition is “True”, it is used equally as the code jumping to its own label.              RoboPlus Task                                    Behavior Control Program 1.0                              Callback Function (callback) ( Click here to see more information on “Callback” function. )    Lately added concept : it is not included in existing Behavior Control Program 1.0.        Make/Call Function ( Click here to see more information on “Make/Call Function. )    The function is the same as the sub-routine composed of existing Label and RETURN.In RoboPlus Task, the function must be located outside of the block where is owned by Start Program (the block tied with { AND }).              RoboPlus Task                                    Behavior Control Program 1.0                              Exit Function (return) ( Click here to see more information on “Exit Function.” )    It is the same as the code performing JUMP to the label of existing RETURN.              RoboPlus Task                                    Behavior Control Program 1.0                        VideoDownloadThe following robots have less than 4 joints and the robots can be built with Beginner kit or Comprehensive Kit. Please refer to the assembly manual for Bioloid Beginner Kit and Comprehensive kit about how to assemble.Download Task CodeIf you want to use RoboPlus program for CM-5 (the controller used for Bioloid Beginner/Comprehensive Kits), you must update the firmware. Please refer to Firmware Update of RoboPlus Manager on how to update firmware.Preparation  Call the task code(*.tsk) from RoboPlus Task.          You can open it by double-clicking the task code file.      You can open it using Open File function of RoboPlus Task.      You can open it by dragging &amp;amp; dropping on RoboPlus Task.        Connect the PC and the Controller with USB2Dynamixel.  Turn on the power of the controller.Download      Connect the controller before downloading the task code.  To download the task code, the controller must be connected to the PC(Please refer to controller information for information on how to connect the controller to the PC).        Select the correct COM port (if you know) or else use the “Automatic Search” function  to easily find out the appropriate port. .  If RoboPlus Task is unable to find a controller, the following error message will be shown.  Check if the controller is connected to the PC. (See controller information on how to connect the controller.)  Check if the controller is turned on.  Check if the correct communication port was chosen.  Select the download menu.If the program has an error, you must find the error and correct it. (See “rule check error messages”)  Download the program.If the downloading fails, it will automatically try again from the beginning.  Execute the task code and your robot will move.  Turn on the controller and execute the downloaded task code(Please refer to each controller information to learn how to execute the task code).Download Motion FileFile motions can be converted into robot motions.      Open the file motion to download.        Connect to the robot.        Click on the “Download Motion” menu and wait for the download to complete.    Verify that the contents of the file motion have been copied to the robot motion as seen below.VideoExamplesBeginner LevelThe following robots have joints less than 4. The robots can be built with Beginner kit or Comprehensive Kit. Please refer to the assembly manuals for Bioloid Beginner Kit and Comprehensive kit about how to assemble.            Robot      Description                  1. Crossing Gate      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1]: Joint Mode- When U button on CM-5 is pressed, the gate will be opened.- When D button on CM-5 is pressed, the gate will be closed.              2. Universal Gauge      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[2]: Joint Mode- When U button on CM-5 is pressed, the speed of gauge will be increased.- When D button on CM-5 is pressed, the speed of gauge will be decreased.              3. Sound Lever Meter      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1]: Joint Mode, AX-S1 ID[100]- The gauge will move according to the sound volumes detected.- The sound level can be measured because the gauge makes move more when the sound is getting louder.              4. Crocodile Mouth      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[3]: Joint Mode, AX-S1 ID[100]- The mouth will be opened when the sensor detects an object.- The mouth will be opened, if there is an object in the mouth.- It will play a melody if no object is detected for 10 sec.              5. Pan Tilt      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[3, 4]: Joint Mode- Upper/lower tilt joint will move upwards, when you press the U button on CM-5.- Upper/lower tilt joint will move downwards, when you press the D button on CM-5.- Right/Left pan joint will move rightwards, when you press the R button on CM-5.- Right/Left pan joint will move leftwards, when you press the L button on CM-5.              6. Parking Gate      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2]: Joint Mode, AX-S1 ID[100]- If an object is detected from a sensor, the barrier bar will be open vertically.- If an object is detected from a sensor and the barrier bar is pushed ahead at the same time, the bar will be open horizontally.- The barrier bar will be closed, if no objects are detected.              7. Melody Car      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Wheel Mode, AX-S1 ID[100]- It will move forward some distance with melody, when L button is pressed.- It will move backward some distance with melody, when R button is pressed.- It will turn right with melody, when U button is pressed.- It will turn left with melody, when D button is pressed.              8. Robot Arm      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3]: Wheel Mode- It will rotate its arms rightward, if you press the R button on CM-5.- It will rotate it arms leftward, if you press the L button on CM-5.- It will stretch its elbows, if you press the U button on CM-5.- It will bend over its elbows, if you press the D button on CM-5.- It will stretch its wrists, if you press the start button and U button at the same time.- It will bend over its wrists, if you press the start button and D button at the same time.              9. Obstacle Detecting Car      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Wheel Mode, AX-S1 ID[100]- Operate the detecting car after installing obstacles on the driving path.- Detect obstacles by itself, and avoid them while driving.              10. Greeting Penguin      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Joint Mode, AX-S1 ID[100]- If you put on your hands ahead of its head, it will bow.- If you put on your hands on the right side of its head, it will lift up its right hand.- If you put on your hands on the left side of its head, it will lift up its left hand.              11. Attacking Duck      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3]: Joint Mode, AX-S1 ID[100]- If you try to touch on its head with hands, it will attack  using its beak.- If  you touch on the right side of its head, it turns its head right.- If you touch on the left side of its head, it turns its head left.              12. Cliff Detecting Car      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Wheel Mode, AX-S1 ID[100]- Operate the detecting car after installing cliffs and obstacles on the driving path.- Detects cliffs and obstacles by it self, and avoid them while driving.              13. Clapping Penguin      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Joint Mode, AX-S1 ID[100]- It will bow, if you put your hands in front of its head.- It will clap as much times as your clapping sounds are heard.              14. Waking Droid      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload VideoDynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Joint Mode, AX-S1 ID[100]- Operate the walking droid, after installing obstacles on walking path.- Detect obstacles by itself and avoid them while walking by feet.      ReferencesReplacing Fuse(CM-5)The fuse prevents the over power that flows in the CM-5 which can damage the circuit.If the CM-5 does not turn on with the battery but turns on when connected to the SMPS, replace your fuse.If the fuse is disconnected, followings will happen.  Can turn on the power of CM-5 with SMPS only.  The LED doesn’t blink even when you press the U button for charging.The fuse used for CM-5 is available at electric shops( Fuse Volume : 220V/5A )Dynamixel ManagementDynamixels used as robot actuators possess many functions. This section explains how to change the dynamixel’s settings.Changing the ID  Select the port the controller is connected to.  Click “Connect”.  A list of connected dynamixels is shown on the left. Click on the dynamixel you wish to change the ID of.  Click on the ID row in the Control Table.  Click on the ID List combo box to see a list of possible ID’s. Select the ID, then click Apply.  To use in RoboPlus Motion and RoboPlus Task, the ID must be within the following ranges.          The Dynamixel’s ID must be between 0 and 25.      The ID for AX-S1 should be set between 100 and 109.      Changing the Movement ModeThe dynamixel can operate in 2 different modes.  Wheel Mode : Rotates 360 degrees like a regular motor.  Joint Mode : Moves at a set angle with normal servo motors.The mode can be changed using RoboPlus Manager. Once the mode is set, it will be maintained, even when turned off.  Select the port the controller is connected to.  Click “Connect”.  A list of connected Dynamixels is shown on the left.  Click on the Dynamixel you wish to change the mode of. Then, click on the CW/CCW Angle Limit line in the Control Table.  To set to Wheel Mode, change the CW/CCW Angle Limit value to “0.”  Or, simply click on the “Wheel Mode” button.  To set to Joint Mode again, set the CW/CCW Angle Limit value to any number other than “0”.The initial values for Joint Mode are “0” for CW Angle Limit, and “1023” for CCW Angle Limit.TroubleshootingIf you cannot find the dynamixel you are looking for using RoboPlus Manager, try the following :  Connect just 1 Dynamixel and check if there are any duplicate IDs. If you see a Dynamixel on the left even though only 1 Dynamixel is connected, there is a high probability of a duplicate ID. Change the ID immediately.  If you are unable to find any Dynamixels as in the image below, click on “Dynamixel Search”. If the communication speed is not set to 1Mbps, the “Dynamixel Search” function automatically resets the controller’s communication speed to 1Mbps to enable it to be recognized.If the problem persists, your dynamixel may need repair. Please contact the service department of the company you purchased from.ZIGBee Wireless ControlZIGBeeZIG-100/110 uses ZIGBee for wireless communication. ZIGBee, like Bluetooth, is the communication technology commonly used in Personal Area Network (PAN). The communication quality of ZIGBee is better than that of IR, so it allows many users to control their robots without interferences.Caution Please note that not all products include a zigbee module and may need to be purchased separately.Controller &amp;amp; ZIGBeeOLLO and Bioloid both use the RC-100, which uses IR communication method. To upgrade to the Zigbee communication method, you must purchase the  ZIG-110 set separately. The ZIG-110 set includes one Zig-100 module, which is attached to the RC-100, and one Zig-110 module which is attached to the Controller.Note The modules in a single Zigbee set have been preconfigured to communicate with each other. Therefore, a module from one set may not work with a module from another set. Please be careful not to mix them up.            ZIG-100 installed in RC-100      ZIG-110 installed in CM-100                                          ZIG-110 installed in CM-510      ZIG-100 installed in CM-5                              Control Multiple RobotsThis method is to give out commands at once to several robots being used for dance or demonstrationGives out commands to the robot at once using the zigbee module’s broadcast modeBioloid(Entry/Advanced)      Communication with the Zig2Serial and carious robots            Communication with the RC-100 and carious robots        To use the CM-5, connect the controller and ZIG-100 module together.  Use the RoboPlus Manager to set the wireless ID of ZIG-100 module on the opposite party’s robot to 65535.  No need to set the broadcast channel for communication.  Use the RC-100 to give commands directly or use the Zig2Serial to give commands using the PC.            Device      Channel Default Value      Whether or not the channel can be changed                  CM-5      1      Unchangeable              Zig2Serial      1      Changeable              RC-100      1      Changeable      The channel for the ZIG-100 mounted on the CM-5 is unchangeable. Thus, all users must set their channel to #1 for broadcast communication. All channels for the devises must pair to communicate.Bioloid Premium Kit(CM-700)      Communication with the Zig2Serial and carious robots            Communication with the RC-100 and carious robots        When using the CM-510/CM-700, connect the ZIG-100 module with the controller.  Use the RoboPlus Manager to change the opposite party’s wireless ID to 65535.  The channel on the ZIG-110 connected to the controller it set to #4, so the channels on the Zig2Serial and RC-100 must be set to #4.  How to change the RC-100 channel  How to change the Zig2Serial channel            Device      Channel Default Value      Whether or not the channel can be changed                  CM-510CM530      4      Unchangeable              Zig2Serial      1      Changeable              RC-100      1      Changeable      The channel for the zigbee connected to the controller is not changeable. Thus, all users must set their channel to #4 for broadcast communicationAll channels for the devises must pair to communicate.",
        "url": " http://localhost:4000/emanual/docs/en/edu/bioloid/beginner/"
      } ,
  
      "docs-en-edu-ollo-bugkit":  {
        "title": "Bug Kit",
      "content"	 : "IntroductionOLLO Bug Kit is the third kit among the kits for everyone, and the bug robots that play line-tracing game (The robots detect lines by themselves) and control game (The robots are controlled by wireless controllers) can be built by the kit.  The assembly manual is included to build 4 types of bug robots: Beetles, Ladybugs, Callipogon Relictus, and Grasshoppers.  Build the one and only robot for yourself.Note All-in-one sensor type controller(CM-100) and Geared Motor are included in OLLO Bug Kit. USB Downloader(LN-101) must be purchased to build and download the program that the users can control the bug robots directly. Please refer to Programming on how to program.The Examples of 4-Types of Bug Robot built according to the Assembly Manual.The Examples of Game with OLLO Bug RobotsOLLO Bug Game 1 Bug Battle  Place a robot in the circle.  Start the game with the whistling of the referee.  Push the opponent’s robot to the outside of the circle, You Win~!!OLLO Bug Game 2 Bug Line-Tracing  Place a bug robot on the line.  The robot traces the line as soon as the power is turned on.  Line-printed handout for OLLO Bug Line-Tracing : OLLO_LineTrace.pdfMake the line to be traced by the bug using the enclosed puzzle board with various shapes.The robot can go anywhere it wants.Line-printed handout for bug puzzle race : OLLO_PuzzleRacing.zipGetting StartedPart List  CM-100  RC-100  Geared MotorHow to PlayThe Basic Bug Program is supposed to be included when OLLO Bug Kit is manufactured. How to play of the basic bug program is as below.Powering BugIf you press the start button one time, the power is turned on; if you press the button once again, it is turned off.The bug controller (CM-100) has power-saving function, if the start button is not pressed again, the power is automatically turned off in 5 minutes.The power-saving function can be controlled by task code, and it is set to 5 minutes in the basic program.(See How to Control with Task Code)The Control Mode of the Remote ControllerIt is executed if the start button is pressed 1 or 2 times.( time: IR Channel 1, 2 times: IR Channel 2)The IR channel of RC-100 remote control must be matched to control wireleslly. (See How to Change the RC-100 IR Channel)The moving direction of  the bug robot is controlled using U / L / D / R button of RC-100.If servo motor is connected to Port 3, the motor is controlled using button 1 and 3.If servo motor is connected to Port 4, the motor is controlled using button  2 and 4.(Servo motor is not a basic-offered item; please purchase and connect it.)Line-Tracer ModeIf you press the start button 3 times, it is executed.The robot traces the black line on the white floor.If an object is detected, it stops; if you clap, it traces the line again.ZIGBee Wireless ControlZIGBeeZIG-100/110 uses ZIGBee for wireless communication. ZIGBee, like Bluetooth, is the communication technology commonly used in Personal Area Network (PAN). The communication quality of ZIGBee is better than that of IR, so it allows many users to control their robots without interferences.Caution Please note that not all products include a zigbee module and may need to be purchased separately.Controller &amp;amp; ZIGBeeOLLO and Bioloid both use the RC-100, which uses IR communication method. To upgrade to the Zigbee communication method, you must purchase the  ZIG-110 set separately. The ZIG-110 set includes one Zig-100 module, which is attached to the RC-100, and one Zig-110 module which is attached to the Controller.Note The modules in a single Zigbee set have been preconfigured to communicate with each other. Therefore, a module from one set may not work with a module from another set. Please be careful not to mix them up.            ZIG-100 installed in RC-100      ZIG-110 installed in CM-100                                          ZIG-110 installed in CM-510      ZIG-100 installed in CM-5                              ApplicationsBattle BugIf you purchase and connect additional Servo Motor to OLLO Bug Kit, various types of battle bugs can be built.The Basic Program for OLLO Bug is programmed to be able to control using RC-100 when a servo motor is connected to port 3 or 4.If servo motor is connected to Port 3, the motor is controlled using button 1 and 3.If servo motor is connected to Port 4, the motor is controlled using button 2 and 4.CarIf you purchase Big Tire Set additionally for OLLO Bug Kit, you can build cars with the tires.Other DevicesBesides the parts introduced in ‘Building Battle Bugs’ and ‘Building Cars,’  the following parts for OLLO controller (CM-100) are used to build various types of robots.            IR Sensor      Touch Sensor      LED Module                                    Learning ProgramPrint on the ScreenObjectiveWrite a program which prints out and checks the value of central IR sensor of the controller (CM-100) on the monitor for program output window.PreparationTo accomplish the learning objectives, write a task code first; RoboPlus software which can pop up the monitor window for program printout and the controller(CM-100) which can transmit the value of central IR sensor to PC by executing task code are necessary. Moreover, USB Downloader(LN-101) is needed to connect PC and the controller.Writing Task Code      Execute RoboPlus Task Program.            Select the Controller. If you select an empty line, and then Double Click or press Enter, Selecting Controller window is popped up. Select a controller, and then press OK button.            Writing Start Program. In the Select Instruction Type window, Select Program Start by Double clicking, and then press Enter.            Enter Endless Loop. Use Endless Loop to read the IR sensor value repeatedly and print out on the screen. Select the empty line between { and } and Instruction Selection window pops up if you press Enter or Double click.  Select Loop -&amp;gt; Endless Loop (while(1)).            Enter Load. Use Load to read the IR sensor value and enter as Screen Display. Input in the empty line between { and } of Endless Loop by selecting Execute -&amp;gt; Load (Assignment Value).            Load the value of Central IR Sensor by Screen Output. Select the left parameter( ? ) among the parameters of Load instruction. (Explanation Regrading Parameter). Parameter selection window is popped up as below if you double click ? and then press Enter.  Select Controller -&amp;gt; Print with Line and press OK.        As above, input Controller -&amp;gt; Central IR Sensor in the right parameter ( ? ).        The following screen shows that all the parameters of Load instruction are entered.            Save Task Code. Press Ctrl + S or Save Button to save.      Download Task CodeDownload the task code written above to the controller. (How to Download Task code)Run Program      Popping up the monitor for program printing window. To see the screen output during the program execution, monitor for program printing window must be popped up before program execution. How to pop up the monitor for program printing window: Click View Program Output button in the Program Download window, click View Program Output button in Toolbox, select View Program Output(V) of Program(V) menu, or Press F5 button.        Executing the Program. Once the monitor for program printing window is popped up, execute the downloaded program for the controller.  The internal LED is turned on by pressing the start button on the controller, and the downloaded program is executed. Check if the number values on the monitor for program printing window are changing or not by moving hands close and far from the front of central IR sensor of the controller.  Move the BugObjectiveLet us move the bug forward, left, right, and backward. (The bug robot can be made with OLLO Explorer and Inventor.)                                                Forward      Left      Right      Backward              Left Motor: ForwardRight Motor: Forward      Left Motor: StopRight Motor: Forward      Left Motor: ForwardRight Motor: Stop      Left Motor: BackwardRight Motor: Backward      PreparationPC(RoboPlus Task Program), Assembled Bug Robot, USB Downloader(LN-101)Writing Task CodeMove Forward      Executing RoboPlus Task and Creating program start (Please refer to See Printing Out the Screen). If RoboPlus Task is executed, the following screen can be seen.            Making Forward Function (Please refer here for more information on functions). Functions must be made outside of { and } in program start. Therefore, let us start making the functions from the 6th line. First of all, select Make Function on Function (Sub-routine) in the select instruction window which pops up if the 6th line is selected.        The function is made as below.        To designate function name, double click “Input_Name” part or enter the function name as “Forward” by pressing Enter as selected, and then press Enter again.            Motor Controlling to move the bug forward. For bug, two geared motors are supposed to move the legs made of left and right joints. To move the bug forward, both motors which move the legs must spin forward. To control geared motor, the motor control value must be entered using Load instruction. Select instruction type window is popped up if you double click the empty line between { and } of Forward function.  Select Execute -&amp;gt; Load (Assignment value).        To control the geared motor (left motor) which is connected to port 1, select the first ? and enter Geared Motor Port 1.        To designate the speed and the spin direction of the left motor, select the second ? and enter Direction : CCW and power : 1023. (CCW represents counter clockwise and the direction of the left motor.  Power 1023 is the maximum power value of geared motor; if the power is strong, the spinning power is also strong, The speed is fast.)        The following image shows the control value CCW:1023 is entered port 1 of the geared motor.        To control port 2 of the geared motor, insert an empty line under the instruction line just entered.  To insert an empty line, press Space at the desired location. The following image shows the Space is pressed after clicking the } location of Forward.        As the method above, insert an instruction line which orders to spin at the power of 1023 (Maximum power) and CW direction (Clockwise) to port 2 of the geared motor. (In case of the right motor, CW is the forward direction.)            Calling Function (Please refer here for more information on functions). To execute Forward function as soon as the program of CM-100 is executed, Forward function must be called in Program Start. To make the program execute continuously, Endless Loop is used.  Enter Endless Loop between { and } of Program Start.        Call Forward function in Endless Loop sentences.  Double click an empty line of Endless Loop or press Enter to select Call function on Function (Sub-routine).        Double click Input_Name part or press Enter to make the list of currently-made functions.  Select Forward function or enter it directly.        The following image shows the final results have been entered so far.      Moving BackwardFor moving backward, simply change the direction of two motors from the forward direction. Thus, let us make Backward function by modifying the Forward function.      Copying the Forward function and then pasting (Pleaser refer to 5. Copy/Cut/Paste). Select all the Forward function while dragging the Mouse and pressing Shift Key or Ctrl Key.        In the menu popped up by right-click, Copy by selecting Copy(C) or pressing Ctrl + C.        After clicking the 15th line under the Forward function, attach the function copied by clicking Paste(P) in the popped-up menu or pressing Ctrl + V.        The following image shows the copy and the paste of Forward function are completed.            Changing the name into Backward function and the direction of the motors. Change the name of copied fuction from Forward to Backward.  Double-click the function name part or press Enter to modify.     Change the spin direction of both motors to the opposite. Double-click the right parameter (CW:1023 or CCW:1023) part or Enter to modify.         In start program, change the calling function from Forward to Backward. When the program is started, Backward function is executed repeatedly.   Turning LeftTo make TurnLeft function, copy the Forward function the same as Backward function is copied and change the function name to TurnLeft; let the right motor (port 2) spin forward direction and stop only the left motor (port1) - Enter 0 in Power regardless CW/CCW;  the bug robot turns left.Turning RightTo make TurnRight function, copy the Forward function the same as the Backward function is copied and change the function name to TurnRight; let the left motor (port 1) spin forward direction and stop only the right motor (port 2) - Enter 0 in Power regardless CW/CCW;  the bug robot turns right.Download Task CodePlease refer to Program Download on the program download procedure.Program Result File :  bug_move.tskRun ProgramIf you turn on CM-100 by pressing the start button, the bug robot continuously moves forward or backward, or it turns left or right depending on the function called from Start Program.Line Tracing BugObjectiveThe degree of IR reflection varies pursuant to the colors of objects.  White reflects more IR, whereas black reflects less IR. Using such characteristics, let us program the IR sensor of CM-100 so that the robot can distinguish the white floor and the black line and trace the line.(It is programmed in the basis of Moving the Bug.)PreparationPC(RoboPlus Task Program), Assembled Bug Robot, USB Downloader(LN-101), a white board with a black line.Writing Task CodeThe algorithm of program which distinguishes the white floor and the black line and makes the bug trace the black line using left IR sensor and right IR sensor on the bottom of CM-100 is as below.      The right sensor detecting the black line (O), The left sensor detecting the black line (X) : Turn Right    If the black line is detected only by the right sensor, it means the line is curved to the right; change the robot’s moving direction to the right by stopping the right motor.        The right sensor detecting the black line (X), The left sensor detecting the black line (O) : Turn Left    In opposite to the case above, since the line is curved to the left, change the robot’s moving direction to the left by stopping the left motor.        The right sensor detecting the black line (X), The left sensor detecting the black line (X) : Forward    If both sensors do not detect the line, the robot moves forward without changing the direction since the line is located in between the sensors or the robot escaped from the line.        The right sensor detecting the black line (O), The left sensor detecting the black line (O) : Forward    If both sensors detect the line, the robot moves forward without changing the direction since there is a black line in width such as an intersection of crossroads(+) or the floor is black.  Enter the code which calls different function depending on the detecting conditions of the left/right IR sensors in program start, as mentioned In the previous example of Moving the Bug, and move the bug robot.      Turn left if the black line is detected only in the left IR sensor. Enter IF instruction of a conditional sentence to move in different ways depending on the conditions between { and } of Endless Loop in program. (Please refer here for more information on IF instruction). The screen after entering IF instruction is as below.        In the case that the black line is detected only on the left IR sensor, the value of left IR sensor is less than 200, while the value of right IR sensor is greater than 200. To find such conditions, enter left IR sensor in comparison parameter 1(the first ?) of the conditional sentence.        Since the left IR sensor value must be less than 200, &amp;lt; is entered as the comparison operator between the two comparison parameters.        Enter 200 in the comparison parameter 2 (the second ?).        Since the conditions must be satisfied: ( Left IR Sensor &amp;lt; 100 ) and ( Right IR Sensor &amp;gt; 200 ), change the connecting operator to &amp;amp;&amp;amp; (AND) by clicking then.  If the connecting operator is changed, a conditional sentence is automatically added to the next.        Complete the IF instruction; enter right IR sensor on comparison parameter 1 of the second conditional sentence, &amp;gt; as the comparison operator, and 200 for comparison parameter 2.        If the completed conditional sentence is True (If the black line is detected only on the left IR sensor), Calls TurnLeft function.            Conversely, turn right if the black line is detected only in the right IR sensor. To check the conditions continuously after the IF instruction of 1, enter ELSE IF instruction of a conditional sentence. If IF instruction conditional sentence of 1 is True, the ELSE IF instruction is not executed.        Not like in 1, if the black line is detected only by the right IR sensor, the left IR sensor value is greater than 200, while the right IR sensor value is less than 200. Regarding the conditional sentence, refer to 1 and write the comparison operator in the opposite of 1.  In this case, TurnRight function is called.            In the cases besides 1 and 2, that it, the black line is detected by both IR sensors, or the line is not detected by both IR sensors; the robot moves forward. In the case that not belongs to the conditional sentences mentioned above, enter ELSE instruction of a conditional sentence to move forward, and call Forward function.      Download Task CodePlease refer to Program Download on the program download procedure.Program Result File :  bug_linetracer.tskDownload the Handout for Line TracerRun ProgramPlace the bug on the white board with a black line and play.  Check if the bug traces the line or not.Sensing BugObjectiveLet us program a robot which traces the black line on the white floor like the line-tracing bug and stops if an object is detected by the central IR sensor; moreover, if clapping sounds are detected, it traces the black line again. (It is programmed in the basis of The Line-Tracing Bug)PreparationPC(RoboPlus Task Program), Assembled Bug Robot, USB Downloader(LN-101), a white board with a black line.Writing Task Code      Add Stop Function. If an object is detected by the central IR sensor, Stop function is added to stop the movement. Make function referring to Moving the Bug.    Enter Power 0 in the Left and Right Geared Motors and make Stop function.            Call Stop function if an object is detected by the central IR sensor.    If the value of the central IR Sensor becomes greater than 200 by adding IF instruction in start program (an object is detected), call Stop function.            Wait shortly until the bug stops completely.    To use sound detection, the bug must stop completely; it is assumed that if the bug moves, the sounds of the bug are detected since the moving sounds such as the motor sound are recognized by the mic of CM-100 as quite loud sounds. Therefore, add the code which waits for certain time period using timer. (Please refer here for more information on timer.)    Enter 1 second in the timer using Load instruction.                To wail until the timer becomes 0, use Conditional Stand instruction(Pleaser refer here for more information on conditional stand). It is Conditional Stand;;  waits until the value becomes 0 by counting (while the value is greater than 0).                Wait until the clapping sounds come out through mic.    If the motions are stopped because an object is detected by the central IR sensor, make the code which waits until sounds are detected in stop status. Since Sound count is not automatically initialized to 0, it must be initialized to 0 by Load instruction before waiting(Please refer here for more information on sound count).            Wait if the Sound Count is 0.  Download Task CodePlease refer to Program Download on the program download procedure.Program Result File :  bug_sensor.tskRun ProgramAfter executing the program, check if the bug robot stops or not when an object is detected by the central IR sensor. Later on, check if the bug moves again or not by clapping.Control the BugObjectiveLet us program a robot so as to control forward, backward, left and right using RC-100 controller(It is programmed in the basis of The sensor-responding bug).PreparationPC(RoboPlus Task Program), Assembled Bug Robot, USB Downloader(LN-101), RC-100Writing Task Code      In the existing code, delete the surrounded part with { and } of Endless Loop in start program.            Wait until new wireless data arrive using Conditional Stand instruction to receive wireless control signal of RC-100(Please refer here for more information on new wireless data arrival).                If the new wireless data is arrived, enter the received wireless data in ReceivedData variable using Load instruction(Please refer here for more information on Variable).                    Separate the RC-100 Moving Control Button value from the Received Wireless Data values.    Enter U, L, D, R button values of RC-100 in MovingControlKey variable by separating necessary values through Bit Operator &amp;amp; from ReceivedData values using Compute instruction. Enter Compute instruction (Please refer here for more information on Compute instruction.)        Enter MovingControlKey variable in Result column and then ReceivedData variable in Operation Parameter 1; select &amp;amp; (AND) as the next operator.        Select U, L, D, R as RC-100 button values and enter them in Operation Parameter 2(Please refer here for more information on RC-100 button values).        The following image shows the data are completely entered.            Move forward and backward and turn left and right depending on the value of MovingControlKey. it stops if all the MovingControlKey buttons are released.      Download Task CodePlease refer to Program Download on the program download procedure.Program Result File :  bug_rc.tskRun ProgramAfter executing the program, control the robot forward, backward, left, and right using RC-100 controller.[Download]Download Task Code OLLO_BUG_Product_EN.tskNote How to Download Task codeNote How to play Bug",
        "url": " http://localhost:4000/emanual/docs/en/edu/ollo/bugkit/"
      } ,
  
      "docs-en-parts-controller-cm-200":  {
        "title": "CM-200",
      "content"	 : "Compatible Softwares : Roboplus 1.0, Roboplus 2.0Compatible Devices : Downloader LN-101, IR Sensor IRSS-10, Touch Sensor TS-10, Color Sensor CS-10, Magnetic Sensor MGSS-10, Motion Sensor PIR-10, Temperature Sensor TPS-10, Moisture Sensor TMS-10, Passive IR Sensor CDS-10, Servo Motor SM-10, Geared Motor GM-10A, Low Speed Geared Motor, LED Module LM-10, ZIG-110A, BT-110A, BT-210, BT-410, Li-ion Battery LBS-040, Battery Box ABB-030",
        "url": " http://localhost:4000/emanual/docs/en/parts/controller/cm-200/"
      } ,
  
      "docs-kr-parts-controller-cm-200":  {
        "title": "CM-200",
      "content"	 : "개요제품 사양            항목      사양                  무게      25g              컨트롤러      STM32L151C8              크기      54mm x 42mm x 18mm              동작 전압      4.8V ~ 8.4V(권장: 6.0 ~ 7.4V)(건전지 x 4 또는 리튬이온 배터리 x 2)              소비 전류      대기 상태: 80mA실행 상태: 150mA최대 한계: 300mA              동작 온도      -5℃ ~ 70℃              내부 I/O장치      적외선 센서(거리 감지용) x 3마이크(소리 감지용) x 1버저(Buzzer) x 1외부 I/O 장치4핀 통신 포트(무선 조종 및 다운로드용) x 1모터 연결 포트(감속 모터용) x 2다목적 포트(센서 및 출력용) x 8      컨트롤 테이블컨트롤 테이블은 제어기 내부에 존재하는 데이터의 집합체입니다. 사용자는 컨트롤 테이블의 주소를 이용하여 해당 주소에 저장된 데이터를 읽어오거나 새로운 데이터를 입력할 수 있습니다.영역(EEPROM, RAM)컨트롤 테이블은 2개의 영역으로 구분됩니다. RAM 영역에 위치한 데이터는 전원이 인가될 때마다 다시 초기값으로 설정됩니다(Volatile). 반면 EEPROM 영역에 위치한 데이터는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다(Non-Volatile).접근속성(R, RW)컨트롤 테이블의 데이터에는 2개의 접근 속성이 있습니다. ‘RW’는 읽기와 쓰기 접근이 모두 가능합니다. 반면 ‘R’은 읽기 전용(Read Only) 속성을 갖습니다. 읽기 전용 속성의 데이터는 사용자가 임의로 값을 바꿀 수 없기 때문에 주로 측정 또는 모니터링 용도로 사용되고, 읽기쓰기 속성(‘RW’)은 제어 용도로 사용됩니다.초기값제어기에 전원이 인가될 때 컨트롤 테이블의 각 데이터는 초기값으로 설정됩니다. 사용자가 초기값을 변경하면 새로운 초기값이 적용됩니다. RAM 영역의 초기값은 전원이 인가되었을 때 설정되는 값입니다.크기데이터의 크기는 용도에 따라 1, 2, 4[byte]로 정해져 있습니다. Instruction Packet을 통해 데이터를 변경할 때는 해당 데이터의 크기를 확인하시기 바랍니다.EEPROM 영역            주소      크기[byte]      항목      설명      접근속성      초기값                  0      2      Model Number      모델 번호      R      400              6      1      Firmware Version      펌웨어 버전 정보      R      -              7      1      ID      제어기 ID      RW      200              8      1      Baud Rate      제어기 통신속도      R      1              9      1      Return Delay Time      응답 지연 시간      RW      0              10      1      Status Return Level      응답 레벨      RW      2      RAM 영역            주소      크기[byte]      항목      설명      접근속성      초기값                  21      1      Mode Number      현재 모드 번호      RW      -              25      1      Press Counter      시작버튼 눌림 횟수      R      -              26      1      Button Status      사용자버튼 상태      R      0              30      2      My Zigbee ID      나의 무선모듈 ID      R      -              32      2      Your Zigbee ID      상대 무선모듈 ID      RW      -              36      1      IR Communication Channel      적외선(수신기) 통신 채널 번호      RW      1      Quick Start각 부 명칭시작버튼 짧게 버튼을 눌러 켜면, 시작 버튼 좌측의 빨간색 전원 LED 에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다.적외선 센서 3개의 적외선 센서가 장착되어 있어 각 방향에서의 센서값을 이용하여 프로그래밍 할 수 있습니다.상단 4핀 포트(HOST LINK) 시작 버튼 옆에 위치해 있으며, USB 다운로더(LN-101), ZIG-110A, BT-110A, BT-210 등을 연결할 수 있습니다.포트 1 ~ 2 각 포트 번호는 I, II 와 같이 막대 숫자로 표시되어 있으며, 감속 모터를 연결하는 2핀으로 된 포트입니다.포트 3 ~ 10 각 포트 번호는 III, IV 와 같이 막대 숫자로 표시되어 있으며, 적외선 센서와 접촉센서, 서보모터, LED 모듈 등을 연결할 수 있는 5핀으로 된 포트입니다.POWER LED (빨간색) 전원이 켜지면 POWER LED가 켜지고 전원이 꺼지면 꺼집니다.TX LED (녹색) 제어기에서 4핀 포트를 통해서 외부로 데이터를 전송하는 동안 켜집니다.RX LED (파란색) 외부에서 4핀 포트를 통해 제어기로 데이터를 전송하는 동안 켜집니다.AUX LED (빨간색) 사용자가 ON/OFF를 제어할 수 있는 LED 입니다.전원 연결CM-200 은 ABB-030(건전지x2 박스) 2개 또는 LBS-040(리튬이온 배터리) 두개를 사용하여 전원을 연결할 수 있습니다. 입력 가능한 전압의 범위는 4.8V ~ 8.4V 이며 권장 사용전압은 6 ~ 7.4V 입니다. 전원 포트의 극성은 위 그림과 같습니다. +부분에 전지의 +극을, -부분에 전지의 -극을 연결하면 됩니다.작동 확인하기  시작 버튼을 짧게 눌러 켜면, 시작 버튼 좌측의 빨간색 전원 LED에 불이 켜지며 제어기에 다운로드 한 프로그램이 실행됩니다.  처음 시작 시 연속으로 버튼을 누른 횟수에 따라 “시작 버튼 눌림 횟수”가 증가합니다. 따라서 이 파라미터를 사용하여 프로그래밍 하면 CM-200 을 작동시킬 때 시작 버튼을 누르는 횟수에 따라 각각 다른 행동을 하도록 할 수 있습니다. 프로그래밍은 이 문서의 고급 사용자 항목의 [프로그래밍](#프로그래밍)을 참조하십시오.  시작 버튼을 1초 이상 눌러 켜면 “삐삐” (2회) 소리가 나고 빨간색 전원LED 에 불이 켜지며 제어기가 켜지고 다운로드 된 프로그램이 실행되지 않는 manage 모드에 진입합니다.  시작 버튼을 5초 이상 눌러 켜면 “삐삐삐” (3회) 소리가 나고 펌웨어 복구 모드로 진입합니다.  제어기가 켜진 상태에서 다시 시작 버튼을 누르면 제어기가 꺼집니다.초급 사용자초급 사용자는 미리 작성되어있는 코드를 CM-200 제어기에 다운로드 받아서 로봇을 움직여 볼 수 있습니다. 파일을 CM-200제어기에 다운로드하기 위해서는 R+ Smart와 R+ m.Task 앱의 설치가 필요합니다.무선통신 연결하기R+ SmartIII 설치하기여기에서는 스마트 기기에 R+ SmartIII를 설치합니다.  구글 play 스토어에서 “로보티즈”를 검색합니다.  R+ SmartIII (ROBOTIS)를 선택합니다.  설치Note 프로그램 매뉴얼 다운로드 : [R+ SmartIII]R+ m.Task 2.0 설치하기여기에서는 스마트 기기에 R+ m.Task 2.0을 설치합니다. 예제 다운로드, 편집, 디버깅, 리모컨 기능을 제공합니다.  구글 play 스토어에서 “로보티즈”를 검색합니다.  R+ m.Task2 (ROBOTIS)를 선택합니다.  설치Note 프로그램 매뉴얼 다운로드 : [R+ m.Task 2.0]모션파일 다운로드로봇을 움직이는데 필요한 모션 파일을 다운로드합니다.  R+ Smart 앱을 실행합니다.  작동하고자 하는 예제의 그림을 길게 터치합니다. (스마트3 앱에서는 예제그림 하단의 편집 버튼을 선택합니다.)  세부 메뉴 창에서 받고자 하는 모션 파일을 선택하면 자동으로 R+ m.Motion 앱이 실행됩니다.  제어기의 전원을 켜고, 화면 왼쪽 아래에 있는 연결 버튼을 터치하면 연결할 수 있는 장치의 목록이 나타납니다.  목록에서 로봇에 연결된 블루투스(BT-210)을 선택하고 연결하기를 터치합니다. (스마트기기와 블루투스가 연결되어 있지 않으면 “장치 선택 창”이 열리므로 블루투스를 선택하여 연결하면 됩니다.)  창이 사라지면 ‘모션 다운로드’ 탭을 선택하고, ‘모션그룹 다운로드’ 버튼을 터치합니다.고급 사용자고급 사용자는 원하는 동작을 코드로 만들어서 CM-200 제어기에 다운로드 받아서 로봇을 움직여 볼 수 있습니다. 작성된 파일을 CM-200제어기에 다운로드하기 위해서는 R+ Smart와 R+ m.Task 앱의 설치가 필요합니다. 앱의 설치는 이 문서의 초급 사용자 항목의 [R+ SmartIII 설치하기](#r-smartiii-설치하기)와 [R+ m.Task 2.0 설치하기](#r-mtask-20-설치하기)를 참조하십시오.프로그래밍새 파일 만들기편집하기다운로드하기관리하기펌웨어 복구참고자료호환성호환되는 소프트웨어로보플러스 1.0, 로보플러스 2.0호환되는 장치LN-101 다운로더, IRSS-10 적외선 센서, TS-10 터치 센서, CS-10 컬러 센서, MGSS-10 자석 센서, PIR-10 동작 센서, TPS-10 온도 센서, TMS-10 온습도 센서, CDS-10 조도 센서, SM-10 서보모터, GM-10A 감속모터, 저속 감속모터, LM-10 LED 모듈, ZIG-110A, BT-110A, BT-210, BT-410, LBS-040 리튬이온 배터리, ABB-030 배터리 박스적용된 교육키트로보티즈 스마트, 로보티즈 스마트 II, 로보티즈 스마트 III",
        "url": " http://localhost:4000/emanual/docs/kr/parts/controller/cm-200/"
      } ,
  
      "docs-en-faq-cm-510-530-fuse":  {
        "title": "CM-510/530 Fuse Replacement",
      "content"	 : "Replacing the FuseThe fuse in the CM-510/CM-530 prevents it from overloading,which can damage the circuit.If the CM-510/CM-530 does not turn on with the battery but turns on when connected to the SMPS, replace your fuse.※ The size of the fuse is shown below. Use a 125V/5A~10A fuse.※ How to replace the fuse  Find the fuse on the back of the CM-510/CM-530.  Use a pincette to replace the fuse with a new one.",
        "url": " http://localhost:4000/emanual/docs/en/faq/cm_510_530_fuse/"
      } ,
  
      "docs-en-edu-bioloid-comprehensive":  {
        "title": "BIOLOID Comprehensive",
      "content"	 : "IntroductionRobots of 18 DOF can be built with Comprehensive Kit including the contents in Beginner Kit, and it provides 26 examples of robots.  Learning the principle of robot building          You can build up 26 example robots with Bioloid Comprehensive Kit and learn the principle of robot building.      From a simple barrier bar of 1 DOF to a spider or a humanoid of 18 DOF, it is possible to build the robot and edit the example programs.  It will help increasing your understanding for robot programming.      You can also create your one and only robot by designing, assembling and programming it by yourself.      Getting StartedPart List  CM-5  AX-12  AX-S1PreparationAs shown in BIOLOID learning material, CM-5 is supposed to support existing BIOLOID software (Behavior Control Program, Motion Editor etc). Therefore, if you want to use RoboPlus software in CM-5, you need to change the firmware into other firmware which supports Roboplus. However, if you change the firmware, you would no longer be able to use the existing Bioloid software.The new-upgraded RoboPlus is an integrated programming software which can control Robotis products.Therefore, CM-5 based robots can be controlled by programming with RoboPlus.The usage is as below.  Download the Latest Version of RoboPlus.  Execute RoboPlus after installation.  Select RoboPlus Manager.  Connect CM-5 with the PC using serial cable.  Execute Firmware Wizard by pressing Control Restoration icon on RoboPlus Manager.  Select the port connected to the controller.  Users must set manually the port connected to the controller. Finish other programs and continue the process since the controller cannot be recognized in case the port is in use.  Select the port connected to the controller and press “Find” button.  Turn the power of the controller off and on.  To find the controller, the controller to be restored must be turned off and on.  Check the controller information.  When the controller is found, the information of current controller and the firmware to download are appeared.  Check the model name whether the controller is connected by the user or not.  (The version of controller information is for Boot Loader, not for firmware.)  Start the firmware installation again.  Press “Next” button to start firmware restoration. Please be careful not to interrupt the connection or turn the power off until it is completed.  Check the controller firmware re-installation result.Executing above procedure, CM-5 can be programmed with RoboPlus. Try to make the best robot with upgraded RoboPlus.OperatingBefore executing the program, the appropriate task codes and motions must be downloaded into the robot.  Turn on the power.  If it is not charged, POWER LED does not blink. Please refer to Charging.  Make the LED on Play blink by pressing MODE button.  Press START button to execute the program.  The LED is not blinking while the program is being executed.Charging CM-5To move a robot when it is not connected with SMPS, you have to use a battery. If the battery is discharged, please use by charging it according to following procedures.  Connect SMSPS to CM-5.  Turn on the CM-5 Power and press the U buttonNote While the CM-5 is being charged, the power LED blinks. The speed of blinking shows how much it is left before finishing the charging. It will be more faster as it completes the charging. Once the charging is done, it will blink for every 2 seconds.TutorialScreen OutputObjective for this tutorial is to print 1 and 2 on the output screen as below.Write Task Code  Execute RoboPlus Task Program.As seen in the picture below, go to Start &amp;gt; All Programs &amp;gt; ROBOTIS &amp;gt; RoboPlus &amp;gt; Software &amp;gt; RoboPlus Task to execute RoboPlus Task.  RoboPlus Task Initial Screen  Select a Controller.Double click an empty line or press Enter, In the Select Control window, select the controller to use, then press the OK button.  Generating Start Program.Select Start Program from the Select Instruction Type window, Start Program will be automatically generated in RoboPlus Task.  Input Endless Loop commandTo print the numbers on the screen endlessly, use the Endless Loop command(Create a command line).  Double click or press Enter on an empty line between { and } of Start Program to invoke the Select Instruction Type window. Select Loop &amp;gt; Endless Loop(while(1)) from the list.  Input Load commandUse Load command to input a Print command, which is needed to print numbers on the screen.  Insert Execute &amp;gt; Load (Assignment value) into an empty line between { and } of Endless Loop.  Load 1 into PrintChoose the left parameter ( ? ) among the Load parameters(Explanation on the parameter).  The left parameter receives input from the right parameter.  Double click the left parameter ( ? ), or press Enter key after clicking it once to invoke the Select Parameter Window.  Select Controller &amp;gt; Print then press OK.Select Constant Numbers &amp;gt; Number &amp;gt; 1 for the right parameter ( ? ) in the same way.When both parameters of the Load command have been set, it should look like below.  Load 2 into Print with LineSelect } under Print command (at the end of the endless loop section), and add new lines by pressing the Space key. Repeat Steps 5 and 6 to input the Load command and to input  Controller &amp;gt; Print with Line and 2. The final task code is shown below.  Save Task CodePress Ctrl + S or the Save icon.Download Task CodeDownload the task code created above.(How to Download Task Code)Execute Task Code  Open the Program Output MonitorTo see the output of the program, you must open the Program Output Monitor BEFORE executing the program.  There are three ways to open the Program Output Monitor.      Click on the View Print of Program in the Download Program window        Click on the View Print of Program button in TOOLS.  Press F5 or click on View Print of Program (V)  menu under Program (P).  Executing the ProgramWhen you turn on the controller, the LED will blink, showing it is in standby mode.  Press the MODE button to move it to PLAY, then press START to execute the downloaded task code.  You should see “1” and “2” being printed on the Program Output Monitor.Button &amp;amp; LEDObjective for this tutorial is to program the U button to turn the AUX LED on and the D button to turn it off. Pressing the START button will end the program.Write Task CodeDownload Task CodeDownload the task code created above.(How to Download Task Code)Execute Task CodeExecute the program and check whether the AUX LED turns on when you press the U button and turns off when you press the D button. Press START button to end.Attacking DuckObjective for this tutorial is to build an attacking duck which attacks approaching objects. Please refer to 2-2-11 Attacking Duck of the assembly manual and complete the hardware.Caution Do not approach your face near the robot when the power is on. You may get injured by the robot.The attacking patterns of the duck are as follows.  If any object is not detected, the robot gets ready to attack by locating ID[1] joint in the middle and folding ID[2] ~ ID[3] joints.  If objects are detected on the left and the right side, the robot turns to the direction where objects are detected by moving ID[1] joint.  If objects are detected at the front, the robot unfolds ID[2] ~ ID[3] joints for attack.  It goes back to the status of “2” above.Write Task Code      Enter the basic value of the motor’s moving speed and Call initial behavior.        If an object is detected from the left side of the robot, turn the beak left.  If an object is detected by the left distance sensor of AX-S1, the location value (present location  value of the ID[1] joint + 20) is entered as the goal position to turn left.  However, to prevent from turning too much, it is written to move only if the present location value is less than 812.  If an object is detected from the right side of the robot, turn the beak right.If an object is detected by the right distance sensor of AX-S1, the location value (present location value of the ID[1] joint -20) is entered as the goal position to turn right.  However, to prevent from turning too much, it is written to move only if the present location value is greater than 212.  Attack if an object is detected at the frontIf an object is detected by the central distance sensor of AX-S1, the robot attacks by calling “Attack with beak.”  Make Initial BehaviorMove the beak in the center by inputting proper goal position value(512) into ID[1] joint, and then call “Attack with Beak” once to make initial behavior.  Make Attack BehaviorMake behaviors such as attack behaviors and raising head (ready behavior) by inputting proper goal position values into ID[2], ID[3] joints, and program “Behavior Wating(7)” function which can stop the behavior control program processing shortly until each behavior is completed.Download Task CodeDownload Complete Task Code (How to Download Task Code)Execute Task CodePlay the downloaded task code.Check if the attacking duck attacks an approaching object or not.Do not approach your face near the robot when the power is on. You may get injured by the robot.Obstacle Detecting CarObjective for this tutorial is to build an intellectual car which runs and avoids obstacles. Please refer to 2-2-9 Obstacle Detection Car of the assembly manual and complete the hardware.The behavior patterns of the obstacle detection car pursuant to obstacle detection in each direction are as follows.            Left      Front      Right      Behavior Pattern                  -      -      -      Forward              O      -      -      Turn Right              -      O      -      Backward              O      O      -      Turn Right              -      -      O      Turn Left              O      -      O      Forward              -      O      O      Turn Left              O      O      O      Stop      The mode of the robot is changed to wheel mode (infinite spinning mode) to use AX-12+ as the wheels of the obstacle detection car.Using RoboPlus Manager, set both the CW location limit value and the CCW location limit value of AX-12+ to 0.Write Task Code      Save the basic value of the motor’s moving speed as the variable        Use the standard value of the object detection and the object detection existence to judge object detection. To do so, set the object detection standard value.        Call appropriate motion functions pursuant to the object detection existence value. (Obstacle Detection Direction)    Make Stop / Forward / Backward / Turn Right / Turn Left Motions. Each motor’s moving speed is set by adding moving speed value which is the set speed value at the beginning and CW:0 and CCW:0 which represent directions.Download Task CodeDownload Complete Task Code (How to Download Task Code)Execute Task CodePlay the downloaded task code. Check if the obstacle detection car runs and avoids the obstacles.Walking Droid 1Objective for this tutorial is to make a walking droid which walks forward in normal situation and avoids obstacles.Since the walking droid uses various postures when it performs such as walking, avoiding obstacles, etc., it is convenient to use by saving the postures as motions.The following table represents the behavior patterns of the walking droid pursuant to surroundings and motion status.            Status      Behavior                  Initially executed      Stay in basic posture              No obstacles      Walking forward              Obstacles Found      Stop and walking backward              After walking backward      Changing direction to the left              Obstacles found even if turned left      Changing direction to the left      Besides duplicated motions, 4 motions must be made as below, and the robot can avoid obstacles while walking.  Stop  Walking forward  Walking backward  Changing direction to the leftMake Motions  Execute RoboPlus Motion and connect to the controller. (See “Connect Robot”)  Enter the name on the page 1 to make “Stop” motion, and then add steps.  The joint values of ID 1, 2, 3, 4 are set to 512. The values are applied to the robot if the rightward arrow is pressed, and the set posture can be checked. (This is the method that users enter the joint values directly.)  Adjust the executing time. It is set to 0.072 second which is the fastest time.  Enter the name on the page 12 to make “Walking Forward” motion, and then add steps.  Turn off torques of all joints by pressing torque-off button. You can see all the joint values are set to “OFF.”  The posture of robot are set by users. The following picture shows the walking posture of the walking droid.  As shown above, if the posture of robot is set and the “Torque-on” button is pressed, the present joint values of the robot are entered automatically to the posture of robot. The currently entered robot’s joints can be read as steps’ posture if the leftward arrow button is pressed(This is the method that users read the joint values from the robot).  Repeating the procedure from number 5, add “Walking Forward” posture to each step. If the posture addition is completed, adjust the stop time and the execution time properly.  If the motion execution button is pressed, the steps of present page are executed sequentially. Check if the robot is operating well.  Using the same method so far, add “Walking Backward” on the page 13 and “Turn Left” on the page 15.  Save the works have been done so far.Download Motion FileDownload Example Motion File (How to Download Motion File)Walking Droid 2Execute MotionsTo use this motion after saving the motions written on RoboPlus Motion in CM-5, the motions of CM-5 must be executed in the task code. Using the two parameters, the motions of robots can be executed.“Load” command must be used to execute the motions. If the “Load” command is selected, two parameter are created. In one parameter on the left, Motion Page in Controller -&amp;gt; Motion is selected, and in the other parameter on the right, the motion page number which includes desired motions is entered.If the task code is written as below and downloaded and executed in CM-5, the saved motions are executed on the page 5.Executing Asynchronous MotionsIt is a motion control method which makes robots do the next work without checking motion status of the robots. It is suitable for beginners because understanding the code is very intuitive. However, it may not be controlled as desired since duplicate execution can happen during the motion execution.Executing Synchronous MotionsIt is a motion control method which make robots do the next work after completing the execution by checking the motion status of the robots. It is suitable for intermediate-level users because the concept of Multi-Task is needed. In the case of infinite repetition motions, the task code must be written well since it may wait continuously when the motion status is checked.Infinite Repetition MotionsIt is effective to make regularly-repeated motions such as walking as an infinite repetition motion.Write Task Code  Call “Ready” when it is executed for the first time.  Call “Forward” if there is no obstacle.  If an object is detected by Central Distance Sensor, Stop and walk backward,and then turn left.  Even though it turns left, if an object is detected by Central Distance Sensor, it turns left until no object is detected.  Write a  function which executes the motion on the page 1 where the “Ready” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Write a function which executes the motion on the page 12 where the “Forward” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Write a function which executes the motion on the page 13 where the “Backward” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Write a function which executes the motion on the page 15 where the “TurnLeft” motion is saved. To wait until the motion is complete after execution, Call the function “WaitMotion.”  Check the parameter value of the motion status, and write a function which waits while the motion is operating.Download Task CodeDownload Complete Task Code (How to Download Task Code)Execute Task CodePlay the downloaded task code.  Leave obstacles on the way of the path, and then check if the walking droid avoids the obstacles and walks.Walking Droid 3After adding turn-right motion to previously built Walking Droid, let us try wireless control(Zigbee Communication) using RC-100.Referring to Building Walking Droid 1 - Making Motion, you can make the right-turn motion additionally on the page 4 of the motion.For Zigbee communication, CM-5 and RC-100 are equipped with ZIG-100 module. (Please refer to the explanation pages on CM-5 and RC-100.)If U / L / D / R buttons of RC-100 are pressed, the Walking Droid performs forward / turn left / backward /turn right motions.Write Task CodeBased on previously written task code in Building Walking Droid 2 - Task Code:  Wait until the new wireless data is coming in, and if the data is coming in, it is saved in the received data variable.  In the received data, only the values regarding U / D / L / R keys in RC-100 are sorted by &amp;amp; Bit Calculation.  Compose the conditional sentences to perform forward / backward / turn left / turn right pursuant to the pressed buttons among all buttons. RC-Call “Ready” at the moment of releasing the pressed button of RC-100.  Write a function which executes the motion on the page 14 where the “TurnRight” motion is saved.  To wait until the motion is complete after execution, call the function “WaitMotion.”Download Task CodeDownload Complete Task Code (How to Download Task Code)Download Example Motion File (How to Download Motion File)Execute Task CodePlay the downloaded task code. Using RC-100, check if the robot moves to the desired directions by performing forward / backward / turn left / turn right motions.Converting .bpg to .tskObjective for this tutorial is to convert .bpg files written in Behavior Control Program into the Task code (.tsk) for RoboPlus Task.Open .bpg File      Open .bpg file using Open  Press Menu ≫ File(F) ≫ Open(O), Shortcut(Ctrl + O), or  Open() to select a file.        Open .bpg file using Drag &amp;amp; Drop  Drag .bpg file to RoboPlus Task.  Convert Commands      Start Program (Click here to see more information on the “Start Program.” )    It is the same as existing “Start”.} (Section End) of Start Program is the same as existing “End”.              RoboPlus Task      Behavior Control Program 1.0                                    End Program ( Click here to see more information on the “End Program” )    It is the same as existing Jump to the Label of “End” Command.              RoboPlus Task      Behavior Control Program 1.0                                    { (Start Block) / } (End Block) ( Click here to see more information on the “Start/End of Block.” )    Lately added concept-  it is not included in existing Behavior Control Program 1.0.        // (Comment or Memo) ( Click here to see more information. )    It is the same as existing “Comment.”  It does not have any influences on motions.              RoboPlus Task      Behavior Control Program 1.0                                    Calculate (Basic Calculation and Bit Calculation) ( Click here to see more information on the “Calculate.” )    It is the same as existing “Compute.”              RoboPlus Task      Behavior Control Program 1.0                                    Load (Input Values) ( Click here to see more information on the “Load.” )    It is the same as existing  “LOAD”.              RoboPlus Task      Behavior Control Program 1.0                                    Label (The Site for Jump) ( Click here to see more information on the “Label.” )    It is the same as existing “Label”. However, it is not possible to be called as in Behavior Control Program 1.0; only Jump is possible.              RoboPlus Task      Behavior Control Program 1.0                                    Jump (goto) ( Click here to see more information on the “Jump.” )    It is the same as existing “JUMP.”              RoboPlus Task      Behavior Control Program 1.0                                    (if) / (else if) / (else) ( Click here to see more information on the “if / else if / else.” )    It is the same as existing “(IF) / (ELSE IF) / (ELSE)”.              RoboPlus Task                                    Behavior Control Program 1.0                          In case that (CONT IF) comes after existing (AND), it is changed to &amp;amp;&amp;amp;.                              In case that (CONT IF) comes after existing (OR),  it is changed to                     .                                RoboPlus Task                                    Behavior Control Program 1.0                              Endless Loop (while(1)) ( Click here to see more information on the “Endless Loop.” )    It is the same as the code repeating the execution of certain blocks unconditionally using Label and JUMP.              RoboPlus Task                                    Behavior Control Program 1.0                          Loop While (while(Condition)) ( Click here to see more information on the “Loop While.” )It is the same as the code repeating the execution of certain blocks using Label and JUMP, depending on conditions.            RoboPlus Task                                    Behavior Control Program 1.0                          Loop For (for) ( Click here to see more information on the “Loop For.” )It is the same as the code repeating the execution of certain blocks only designated times using variables.            RoboPlus Task                                    Behavior Control Program 1.0                              Break Loop (break) ( Click here to see more information on the “Break Loop.” )    It is used equally as the code jumping to the next label of repeated sentences.              RoboPlus Task                                    Behavior Control Program 1.0                              Wait While (Conditional Repeat without Execution Paragraph) ( Click here to see more information on “Wait While.” )    In case the condition is “True”, it is used equally as the code jumping to its own label.              RoboPlus Task                                    Behavior Control Program 1.0                              Callback Function (callback) ( Click here to see more information on “Callback” function. )    Lately added concept : it is not included in existing Behavior Control Program 1.0.        Make/Call Function ( Click here to see more information on “Make/Call Function. )    The function is the same as the sub-routine composed of existing Label and RETURN.In RoboPlus Task, the function must be located outside of the block where is owned by Start Program (the block tied with { AND }).              RoboPlus Task                                    Behavior Control Program 1.0                              Exit Function (return) ( Click here to see more information on “Exit Function.” )    It is the same as the code performing JUMP to the label of existing RETURN.              RoboPlus Task                                    Behavior Control Program 1.0                        VideoDownloadThe following robots have less than 4 joints and the robots can be built with Beginner kit or Comprehensive Kit. Please refer to the assembly manual for Bioloid Beginner Kit and Comprehensive kit about how to assemble.Download Task CodeIf you want to use RoboPlus program for CM-5 (the controller used for Bioloid Beginner/Comprehensive Kits), you must update the firmware. Please refer to Firmware Update of RoboPlus Manager on how to update firmware.Preparation  Call the task code(*.tsk) from RoboPlus Task.          You can open it by double-clicking the task code file.      You can open it using Open File function of RoboPlus Task.      You can open it by dragging &amp;amp; dropping on RoboPlus Task.        Connect the PC and the Controller with USB2Dynamixel.  Turn on the power of the controller.Download      Connect the controller before downloading the task code.  To download the task code, the controller must be connected to the PC(Please refer to controller information for information on how to connect the controller to the PC).        Select the correct COM port (if you know) or else use the “Automatic Search” function  to easily find out the appropriate port. .  If RoboPlus Task is unable to find a controller, the following error message will be shown.  Check if the controller is connected to the PC. (See controller information on how to connect the controller.)  Check if the controller is turned on.  Check if the correct communication port was chosen.  Select the download menu.If the program has an error, you must find the error and correct it. (See “rule check error messages”)  Download the program.If the downloading fails, it will automatically try again from the beginning.  Execute the task code and your robot will move.  Turn on the controller and execute the downloaded task code(Please refer to each controller information to learn how to execute the task code).Download Motion FileFile motions can be converted into robot motions.      Open the file motion to download.        Connect to the robot.        Click on the “Download Motion” menu and wait for the download to complete.    Verify that the contents of the file motion have been copied to the robot motion as seen below.VideoExamplesBeginner LevelThe following robots have joints less than 4. The robots can be built with Beginner kit or Comprehensive Kit. Please refer to the assembly manuals for Bioloid Beginner Kit and Comprehensive kit about how to assemble.            Robot      Description                  1. Crossing Gate      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1]: Joint Mode- When U button on CM-5 is pressed, the gate will be opened.- When D button on CM-5 is pressed, the gate will be closed.              2. Universal Gauge      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[2]: Joint Mode- When U button on CM-5 is pressed, the speed of gauge will be increased.- When D button on CM-5 is pressed, the speed of gauge will be decreased.              3. Sound Lever Meter      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1]: Joint Mode, AX-S1 ID[100]- The gauge will move according to the sound volumes detected.- The sound level can be measured because the gauge makes move more when the sound is getting louder.              4. Crocodile Mouth      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[3]: Joint Mode, AX-S1 ID[100]- The mouth will be opened when the sensor detects an object.- The mouth will be opened, if there is an object in the mouth.- It will play a melody if no object is detected for 10 sec.              5. Pan Tilt      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[3, 4]: Joint Mode- Upper/lower tilt joint will move upwards, when you press the U button on CM-5.- Upper/lower tilt joint will move downwards, when you press the D button on CM-5.- Right/Left pan joint will move rightwards, when you press the R button on CM-5.- Right/Left pan joint will move leftwards, when you press the L button on CM-5.              6. Parking Gate      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2]: Joint Mode, AX-S1 ID[100]- If an object is detected from a sensor, the barrier bar will be open vertically.- If an object is detected from a sensor and the barrier bar is pushed ahead at the same time, the bar will be open horizontally.- The barrier bar will be closed, if no objects are detected.              7. Melody Car      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Wheel Mode, AX-S1 ID[100]- It will move forward some distance with melody, when L button is pressed.- It will move backward some distance with melody, when R button is pressed.- It will turn right with melody, when U button is pressed.- It will turn left with melody, when D button is pressed.              8. Robot Arm      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3]: Wheel Mode- It will rotate its arms rightward, if you press the R button on CM-5.- It will rotate it arms leftward, if you press the L button on CM-5.- It will stretch its elbows, if you press the U button on CM-5.- It will bend over its elbows, if you press the D button on CM-5.- It will stretch its wrists, if you press the start button and U button at the same time.- It will bend over its wrists, if you press the start button and D button at the same time.              9. Obstacle Detecting Car      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Wheel Mode, AX-S1 ID[100]- Operate the detecting car after installing obstacles on the driving path.- Detect obstacles by itself, and avoid them while driving.              10. Greeting Penguin      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Joint Mode, AX-S1 ID[100]- If you put on your hands ahead of its head, it will bow.- If you put on your hands on the right side of its head, it will lift up its right hand.- If you put on your hands on the left side of its head, it will lift up its left hand.              11. Attacking Duck      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3]: Joint Mode, AX-S1 ID[100]- If you try to touch on its head with hands, it will attack  using its beak.- If  you touch on the right side of its head, it turns its head right.- If you touch on the left side of its head, it turns its head left.              12. Cliff Detecting Car      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Wheel Mode, AX-S1 ID[100]- Operate the detecting car after installing cliffs and obstacles on the driving path.- Detects cliffs and obstacles by it self, and avoid them while driving.              13. Clapping Penguin      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Joint Mode, AX-S1 ID[100]- It will bow, if you put your hands in front of its head.- It will clap as much times as your clapping sounds are heard.              14. Waking Droid      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload VideoDynamixel Setting: AX-12+ ID[1, 2, 3, 4]: Joint Mode, AX-S1 ID[100]- Operate the walking droid, after installing obstacles on walking path.- Detect obstacles by itself and avoid them while walking by feet.      Intermediate LevelThe following robots have joints less than 8. The robots can be built with 4 additional AX-12+ to Beginner Kit or Comprehensive Kit. Please refer to the assembly manual for Bioloid Comprehensive Kit.            Robot      Description                  1. Probing Robot      Download Assembly Check Task CodeDownload Task CodeDownload VideoDynamixel SettingAX-12+ ID[1, 2, 3, 4]: Wheel ModeAX-12+ ID[5, 6, 7]: Joint ModeAX-S1 ID[100]- Operate the Probing Robot after installing a various size of obstacles on driving path.- Please check if it drives avoiding too big obstacles.- Please checks if it lifts up and puts down small obstacles aside to keep driving.              2. Excavator      Download Assembly Check Task CodeDownload Task CodeDownload Video Dynamixel SettingAX-12+ ID[1, 2, 3, 4]: Wheel ModeAX-12+ ID[5, 6, 7]: Joint ModeAX-S1 ID[100]- Operate the excavator after installing obstacles on the driving path.- Please check if it rotates into the detected direction and excavates with robot arms when obstacles are detected from a sensor.              3. Robot Flower      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1, 2, 3, 4, 5, 6]: Joint ModeAX-S1 ID[100]- In bright place, it will blossom out and move slowly as if it is dancing.- In dark place, it will close up its petals into a bud.              4. Fawn      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1, 2, 3, 4, 5, 6, 7, 8]: Joint ModeAX-S1 ID[100]- The Fawn will sit down and look around, when there are no changes.- If you put on an object ahead of its face, it will keep following the objects.              5. Turtle      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1, 2, 3, 4, 5, 6, 7, 8]: Joint ModeAX-S1 ID[100]- Operate the turtle after installing obstacles on the walking path.- Please check if the turtle avoids the obstacles during its moving.              6. Spider      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1, 2, 3, 4, 5, 6, 7, 8]: Joint ModeAX-S1 ID[100]- It will attack if it detects an object ahead of its head during walking.- It will pretend to being dead, if it detects an object upper of its head during walking.              7. GerWalk      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1, 2, 3, 4, 5, 6, 7]: Joint ModeAX-S1 ID[100]- Place an obstacle in the gerwalk’s path then turn on.- Detects and avoids obstacles while walking.              8. Battle Droid      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1, 2, 3, 4, 5, 6, 7, 8]: Joint ModeAX-S1 ID[100]- Operate the battle droid after installing obstacles on the walking path.- It will attack obstacles with its both arms during its walking.- When the battle droid is fallen down, it will stand up by itself, if you clap out for more than 3 times.      Advanced LevelThe following robots has joints less than 18.  The robots can be built with Bioloid Comprehensive Kit. Using Beginner Kit, if you purchase the frame set and 14 additional AX-12+, you can build the robots as below. Please refer to the assembly manual for Bioloid Comprehensive Kit.            Robot      Description                  1. Dinosaur      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload VideoDynamixel SettingAX-12+ ID[1 ~ 15]: Joint ModeAX-S1 ID[100]- Operate the dinosaur robot after installing obstacles on the walking path.- Please check if the dinosaur robot attacks the obstacles.- It will keep walking if obstacles are taken away.              2. Puppy      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1, 4 ~ 17]: Joint ModeAX-S1 ID[100]- Operate the puppy after installing obstacles on the driving path.- Please check if it moves avoiding the obstacles if a sound is heard.- It will act cute if you touch its lips.- It will fall asleep if there are no changes for some time.              3. King Spider      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1 ~ 18]: Joint ModeAX-S1 ID[100]- It will move avoiding the obstacles on its walking path.- It will attack if an object is detected near ahead.- It will shrink back, if an object approaches from above.- It will fall sleep if there are no changes for some time.              4. Humanoid      Download Assembly Check Task CodeDownload Task CodeDownload Motion FileDownload Video Dynamixel SettingAX-12+ ID[1 ~ 18]: Joint ModeAX-S1 ID[100]- If you clap after pressing the start button on CM-5, it will dance.- If you clap after pressing the U button on CM-5, it will clap as you do, and if an object is detected ahead, it will bow.- If you press the L button on CM-5, it will take an attacking pose, and start to attack when an object is detected.- If you press the D button on CM-5, it will walk avoiding the obstacles by itself.- When the robot is lying down, if you clap for more than 3 times, it will stand up.      ReferencesReplacing Fuse(CM-5)The fuse prevents the over power that flows in the CM-5 which can damage the circuit.If the CM-5 does not turn on with the battery but turns on when connected to the SMPS, replace your fuse.If the fuse is disconnected, followings will happen.  Can turn on the power of CM-5 with SMPS only.  The LED doesn’t blink even when you press the U button for charging.The fuse used for CM-5 is available at electric shops( Fuse Volume : 220V/5A )Dynamixel ManagementDynamixels used as robot actuators possess many functions. This section explains how to change the dynamixel’s settings.Changing the ID  Select the port the controller is connected to.  Click “Connect”.  A list of connected dynamixels is shown on the left. Click on the dynamixel you wish to change the ID of.  Click on the ID row in the Control Table.  Click on the ID List combo box to see a list of possible ID’s. Select the ID, then click Apply.  To use in RoboPlus Motion and RoboPlus Task, the ID must be within the following ranges.          The Dynamixel’s ID must be between 0 and 25.      The ID for AX-S1 should be set between 100 and 109.      Changing the Movement ModeThe dynamixel can operate in 2 different modes.  Wheel Mode : Rotates 360 degrees like a regular motor.  Joint Mode : Moves at a set angle with normal servo motors.The mode can be changed using RoboPlus Manager. Once the mode is set, it will be maintained, even when turned off.  Select the port the controller is connected to.  Click “Connect”.  A list of connected Dynamixels is shown on the left.  Click on the Dynamixel you wish to change the mode of. Then, click on the CW/CCW Angle Limit line in the Control Table.  To set to Wheel Mode, change the CW/CCW Angle Limit value to “0.”  Or, simply click on the “Wheel Mode” button.  To set to Joint Mode again, set the CW/CCW Angle Limit value to any number other than “0”.The initial values for Joint Mode are “0” for CW Angle Limit, and “1023” for CCW Angle Limit.TroubleshootingIf you cannot find the dynamixel you are looking for using RoboPlus Manager, try the following :  Connect just 1 Dynamixel and check if there are any duplicate IDs. If you see a Dynamixel on the left even though only 1 Dynamixel is connected, there is a high probability of a duplicate ID. Change the ID immediately.  If you are unable to find any Dynamixels as in the image below, click on “Dynamixel Search”. If the communication speed is not set to 1Mbps, the “Dynamixel Search” function automatically resets the controller’s communication speed to 1Mbps to enable it to be recognized.If the problem persists, your dynamixel may need repair. Please contact the service department of the company you purchased from.ZIGBee Wireless ControlZIGBeeZIG-100/110 uses ZIGBee for wireless communication. ZIGBee, like Bluetooth, is the communication technology commonly used in Personal Area Network (PAN). The communication quality of ZIGBee is better than that of IR, so it allows many users to control their robots without interferences.Caution Please note that not all products include a zigbee module and may need to be purchased separately.Controller &amp;amp; ZIGBeeOLLO and Bioloid both use the RC-100, which uses IR communication method. To upgrade to the Zigbee communication method, you must purchase the  ZIG-110 set separately. The ZIG-110 set includes one Zig-100 module, which is attached to the RC-100, and one Zig-110 module which is attached to the Controller.Note The modules in a single Zigbee set have been preconfigured to communicate with each other. Therefore, a module from one set may not work with a module from another set. Please be careful not to mix them up.            ZIG-100 installed in RC-100      ZIG-110 installed in CM-100                                          ZIG-110 installed in CM-510      ZIG-100 installed in CM-5                              Control Multiple RobotsThis method is to give out commands at once to several robots being used for dance or demonstrationGives out commands to the robot at once using the zigbee module’s broadcast modeBioloid(Entry/Advanced)      Communication with the Zig2Serial and carious robots            Communication with the RC-100 and carious robots        To use the CM-5, connect the controller and ZIG-100 module together.  Use the RoboPlus Manager to set the wireless ID of ZIG-100 module on the opposite party’s robot to 65535.  No need to set the broadcast channel for communication.  Use the RC-100 to give commands directly or use the Zig2Serial to give commands using the PC.            Device      Channel Default Value      Whether or not the channel can be changed                  CM-5      1      Unchangeable              Zig2Serial      1      Changeable              RC-100      1      Changeable      The channel for the ZIG-100 mounted on the CM-5 is unchangeable. Thus, all users must set their channel to #1 for broadcast communication. All channels for the devises must pair to communicate.Bioloid Premium Kit(CM-700)      Communication with the Zig2Serial and carious robots            Communication with the RC-100 and carious robots        When using the CM-510/CM-700, connect the ZIG-100 module with the controller.  Use the RoboPlus Manager to change the opposite party’s wireless ID to 65535.  The channel on the ZIG-110 connected to the controller it set to #4, so the channels on the Zig2Serial and RC-100 must be set to #4.  How to change the RC-100 channel  How to change the Zig2Serial channel            Device      Channel Default Value      Whether or not the channel can be changed                  CM-510CM530      4      Unchangeable              Zig2Serial      1      Changeable              RC-100      1      Changeable      The channel for the zigbee connected to the controller is not changeable. Thus, all users must set their channel to #4 for broadcast communicationAll channels for the devises must pair to communicate.",
        "url": " http://localhost:4000/emanual/docs/en/edu/bioloid/comprehensive/"
      } ,
  
      "docs-kr-faq-contents-guide":  {
        "title": "Contents Guide",
      "content"	 : "컨텐츠 작성방법파일의 최상단에 반드시 아래의 YFM(Yaml Front matter)을 추가하고 내용을 알맞게 업데이트합니다.  ---  layout: archive  lang: en    &amp;gt; 영어(en), 한글(kr), 일어(jp), 중국어(cn)  ref: thormang3_getting_started    &amp;gt; 컨텐츠의 주제(각 언어별로 ref가 같아야 함.)  read_time: true  share: true  author_profile: false  permalink: /docs/en/platform/thormang3/getting_started/   &amp;gt; /파일위치/파일명/  sidebar:    title: THORMANG3    &amp;gt; 제품명    nav: &quot;thormang3&quot;    &amp;gt; 내비게이션 참조명(navigation.yml파일 참조)  ---개요번호개요번호를 만들기 위해서는 아래와 같이 제목 앞에 #을 붙이고 한칸을 띄운다음 제목을 입력한다.  # 1번 제목  ## 1-1번 제목  ### 1-1-1번 제목  ## 1-2번 제목  # 2번 제목  ## 2-1번 제목다단계 목록  번호 없는 목록과          하위 항목을 만들 수 있으며        번호를 만들어서 사용할 수도 있고          번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다.              하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다.      - 번호 없는 목록과  - 하위 목록을 만들 수 있으며1. 번호를 만들어서 사용할 수도 있고  - 번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다.    - 하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다.글상자Note 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다.notice–primary 다양한 종류의 상자notice–info 색상도 다르고notice--warning 한줄짜리 공지에 유용합니다.notice--danger 여러줄은 다른 방법을 써야합니다.Success 조금 아쉽죠`Note` 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다.{: .notice}**notice--primary** 다양한 종류의 상자{: .notice--primary}*notice--info* 색상도 다르고{: .notice--info}`notice--warning` 한줄짜리 공지에 유용합니다.{: .notice--warning}**`notice--danger`** 여러줄은 다른 방법을 써야합니다.{: .notice--danger}`Success` 조금 아쉽죠{: .notice--success}Note 여러줄짜리 글상자를 사용하려면 조금 복잡합니다.  글상자로 묶고자 하는 문단의 첫번째에 “{% capture group_notice_01 %}“를 넣고 마지막 숫자 01은 다른 그룹 글상자의 이름과 겹치지 않게 사용한 그룹 글상자의 숫자만큼 증가시켜줍니다.  글상자로 묶고자 하는 문단의 마지막 줄에 “{% endcapture %}“를 추가합니다.  글상자를 넣고자하는 부분에 아래의 코드를 추가하고 글상자의 유형에 따라 notice를 notice–info, notice–warning 등으로 변경한 뒤 group_notice_01의 01을 해당 그룹 글상자의 숫자와 맞춰줍니다.                              &amp;lt;div class=”notice”&amp;gt;{{ group_notice_01          markdownify }}&amp;lt;/div&amp;gt;{% endcapture %}                    &amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;p&amp;gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;Note&amp;lt;/code&amp;gt; 여러줄짜리 예제입니다.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;첫번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;두번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;세번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;    &amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;/div&amp;gt;  &amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;Note&amp;lt;/code&amp;gt; 여러줄짜리 글상자를 사용하려면 조금 복잡합니다.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;글상자로 묶고자 하는 문단의 첫번째에 “{% capture group_notice_01 %}“를 넣고 마지막 숫자 01은 다른 그룹 글상자의 이름과 겹치지 않게 사용한 그룹 글상자의 숫자만큼 증가시켜줍니다.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;글상자로 묶고자 하는 문단의 마지막 줄에 “{% endcapture %}“를 추가합니다.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;글상자를 넣고자하는 부분에 아래의 코드를 추가하고 글상자의 유형에 따라 notice를 notice–info, notice–warning 등으로 변경한 뒤 group_notice_01의 01을 해당 그룹 글상자의 숫자와 맞춰줍니다.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;    &amp;lt;table&amp;gt;      &amp;lt;tbody&amp;gt;        &amp;lt;tr&amp;gt;          &amp;lt;td&amp;gt;&amp;amp;lt;div class=”notice”&amp;amp;gt;{{ group_notice_01&amp;lt;/td&amp;gt;          &amp;lt;td&amp;gt;markdownify }}&amp;amp;lt;/div&amp;amp;gt;{% endcapture %}&amp;lt;/td&amp;gt;        &amp;lt;/tr&amp;gt;      &amp;lt;/tbody&amp;gt;    &amp;lt;/table&amp;gt;  &amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;표아래의 예제를 보시기 바랍니다.각 셀은 ‘|’로 구분되며 줄을 맞추지 않아도 되며 표 내용과 헤더로 구분됩니다.한 컬럼의 좌우정렬은 헤더 아래의 | :——- | 에서 지정할 수 있습니다.콜론(:)이 왼쪽에만 있으면 왼쪽정렬, 오른쪽에만 있으면 오른쪽 정렬, 양쪽에 모두 있으면 가운데 정렬입니다.셀 병합기능이 없기 때문에 사용에 다소 불편함이 있을 수 있습니다.한칸에 여러줄을 입력하려면 &amp;lt;br /&amp;gt;태그를 이용할 수 있습니다.표의 시작과 끝에는 반드시 한줄의 공백이 있어야 합니다.| 항목 1         | 항목 2       || :------------: | :---------- || 이름           | 똘망&amp;lt;br /&amp;gt;Thormang3||소속|로보티즈|            항목 1      항목 2                  이름      똘망Thormang3              소속      로보티즈      그림그림 삽입은 그림을 업로드한 후에 그림의 주소를 지정해서 사용할 수 있습니다. 주소를 저장하는 레퍼런스는 문서의 가장 하단에 작성합니다.![성능그래프][performance graph][performance graph]: http://localhost:4000/assets/images/dxl/x/xh430_w210_performance_graph.jpg동영상동영상 삽입은 유튜브 동영상을 기준으로 아래의 코드를 복사한 후 src의 동영상 주소만 변경해서 작성합니다.&amp;lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/rvm-m2ogrLA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&amp;gt;&amp;lt;/iframe&amp;gt;링크링크 삽입은 아래와 같이 사용할 수 있습니다. 주소를 저장하는 레퍼런스 태그는 문서의 가장 하단에 작성합니다.컨텐츠 작성방법[컨텐츠 작성방법][Contents Format][Contents Format]: http://localhost:4000/docs/kr/faq텍스트 효과텍스트 효과에는 _기울임1_ 또는 *기울임2*, __두껍게1__ 또는 **두껍게2**, ~~선긋기~~ 를 사용할 수 있습니다.텍스트 효과에는 기울임1 또는 기울임2, 두껍게1 또는 두껍게2, 선긋기 를 사용할 수 있습니다.소스코드 입력소스코드를 표시할 때에는 아래와 같이 할 수 있습니다. 1번 방법은 코딩언어를 명시함으로써 코드에 하이라이트를 해주는 기능입니다.코드는 자동적으로 글상자에 둘러쌓입니다.      1번 방법    ```cmakefind_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```    find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )            2번 방법    ```find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```    find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )      ",
        "url": " http://localhost:4000/emanual/docs/kr/faq/contents_guide"
      } ,
  
      "docs-en-faq-controller-compatibility":  {
        "title": "Compatibility",
      "content"	 : "Supported Baudrates for Dynamixel            Baudrate(bps)      CM-5      CM-510      CM-530      CM-700      CM-900      OpenCM9.04      OpenCR                  9600      O      O      O      O      O      O      O              57600      O      O      O      O      O      O      O              115200      O      O      O      O      O      O      O              1M      O      O      O      O      O      O      O              2M      X      X      X      X      X      X      O              3M      X      X      X      X      X      X      O              4M      X      X      X      X      X      X      O              4.5M      X      X      X      X      X      X      O      CompatibilityDynamixel            Model      CM-100      CM-150      CM-200      CM-5      CM-510      CM-530      CM-700      CM-900      OpenCM9.04(+485 EXP)                  AX-Series      X      X      X      O      O      O      O      O      O(O)              DX-Series      X      X      X      X      X      X      O      O      X(O)              RX-Series      X      X      X      X      X      X      O      O      X(O)              EX-Series      X      X      X      X      X      X      O      O      X(O)              MX-Series(TTL)      X      X      X      O      O      O      O      O      O(O)              MX-Series(RS485)      X      X      X      X      X      X      O      O      X(O)              XM-Series      X      X      X      X      X      X      X      X      X(O)              XH-Series      X      X      X      X      X      X      X      X      X(O)              XL-320      X      X      X      X      X      X      X      O      X(O)      Parts            Model      CM-100      CM-150      CM-200      CM-5      CM-510      CM-530      CM-700      CM-900      OpenCM9.04(+485 EXP)                  Bioloid Serial Cable      X      X      X      O      O      X      X      X      X              Mini USB      X      X      X      X      X      O      X      X      X              Micro USB(B)      X      O      X      X      X      X      X      O      O(O)              LN-101      O      O      O      X      X      X      O      O      O(O)              IRSS-10      O      O      O      X      O      O      O      X      O(O)              TS-10      O      O      O      X      O      O      O      X      O(O)              DMS-80      X      X      X      X      O      O      O      X      O(O)              IR Array      X      X      X      O      O      O      O      O      O(O)              GS-12      X      X      X      X      O      O      O      X      O(O)              CS-10      X      O      O      X      X      O      X      X      O(O)              MGSS-10      X      O      O      X      X      O      X      X      O(O)              PIR-10      X      O      O      X      O      O      X      X      O(O)              TPS-10      X      O      O      X      O      O      X      X      O(O)              AX-S1      X      X      X      O      O      O      O      O      O(O)              SM-10      O      O      O      X      X      O      X      X      X              GM-10A      O      O      O      X      X      X      X      X      X              H-Spd Geared Motor      O      O      X      X      X      X      X      X      X              L-Spd Geared Motor      O      O      X      X      X      X      X      X      X              LM-10      O      O      O      X      X      O      X      X      O(O)              IR Receiver      O      O      X      X      O      O      O      X      X              ZIG-100      X      X      X      O      X      X      X      X      X              ZIG-110A      O      O      O      X      O      O      O      O      O(O)              BT-110A      O      O      O      X      O      O      O      O      O(O)              BT-210      O      O      O      X      O      O      O      O      O(O)              BT-410      O      O      O      X      O      O      O      O      O(O)              LBS-040      X      O      O      X      X      X      X      X      O(O)              11.1V LiPo      X      X      X      X      O      O      O      O      X              9.6V NiMH      X      X      X      O      X      X      X      X      X              OBB-10A      O      X      X      X      X      X      X      X      X              ABB-030      X      X      O      X      X      X      X      X      X              LFU-10      X      X      X      X      O      O      O      X      X              FU-5      X      X      X      O      X      X      X      X      X              User Device      X      X      X      X      O      O      O      O      O(O)      Software            Model      CM-100      CM-150      CM-200      CM-5      CM-510      CM-530      CM-700      CM-900      OpenCM9.04(+485 EXP)                  R+ 1.0      O      O      O      O      O      O      O      X      O(X)              R+ 2.0      O      O      O      O      O      O      O      X      O(X)              OpenCM IDE                                                                     ",
        "url": " http://localhost:4000/emanual/docs/en/faq/controller_compatibility/"
      } ,
  
      "docs-en-dxl-crc":  {
        "title": "CRC Calculation",
      "content"	 : "CRC-16 (IBM/ANSI)  Polynomial : x16 + x15 + x2 + 1 (polynomial representation : 0x8005)  Initial Value : 0CRC16 Calculation Codeunsigned short update_crc(unsigned short crc_accum, unsigned char *data_blk_ptr, unsigned short data_blk_size){    unsigned short i, j;    unsigned short crc_table[256] = {        0x0000, 0x8005, 0x800F, 0x000A, 0x801B, 0x001E, 0x0014, 0x8011,        0x8033, 0x0036, 0x003C, 0x8039, 0x0028, 0x802D, 0x8027, 0x0022,        0x8063, 0x0066, 0x006C, 0x8069, 0x0078, 0x807D, 0x8077, 0x0072,        0x0050, 0x8055, 0x805F, 0x005A, 0x804B, 0x004E, 0x0044, 0x8041,        0x80C3, 0x00C6, 0x00CC, 0x80C9, 0x00D8, 0x80DD, 0x80D7, 0x00D2,        0x00F0, 0x80F5, 0x80FF, 0x00FA, 0x80EB, 0x00EE, 0x00E4, 0x80E1,        0x00A0, 0x80A5, 0x80AF, 0x00AA, 0x80BB, 0x00BE, 0x00B4, 0x80B1,        0x8093, 0x0096, 0x009C, 0x8099, 0x0088, 0x808D, 0x8087, 0x0082,        0x8183, 0x0186, 0x018C, 0x8189, 0x0198, 0x819D, 0x8197, 0x0192,        0x01B0, 0x81B5, 0x81BF, 0x01BA, 0x81AB, 0x01AE, 0x01A4, 0x81A1,        0x01E0, 0x81E5, 0x81EF, 0x01EA, 0x81FB, 0x01FE, 0x01F4, 0x81F1,        0x81D3, 0x01D6, 0x01DC, 0x81D9, 0x01C8, 0x81CD, 0x81C7, 0x01C2,        0x0140, 0x8145, 0x814F, 0x014A, 0x815B, 0x015E, 0x0154, 0x8151,        0x8173, 0x0176, 0x017C, 0x8179, 0x0168, 0x816D, 0x8167, 0x0162,        0x8123, 0x0126, 0x012C, 0x8129, 0x0138, 0x813D, 0x8137, 0x0132,        0x0110, 0x8115, 0x811F, 0x011A, 0x810B, 0x010E, 0x0104, 0x8101,        0x8303, 0x0306, 0x030C, 0x8309, 0x0318, 0x831D, 0x8317, 0x0312,        0x0330, 0x8335, 0x833F, 0x033A, 0x832B, 0x032E, 0x0324, 0x8321,        0x0360, 0x8365, 0x836F, 0x036A, 0x837B, 0x037E, 0x0374, 0x8371,        0x8353, 0x0356, 0x035C, 0x8359, 0x0348, 0x834D, 0x8347, 0x0342,        0x03C0, 0x83C5, 0x83CF, 0x03CA, 0x83DB, 0x03DE, 0x03D4, 0x83D1,        0x83F3, 0x03F6, 0x03FC, 0x83F9, 0x03E8, 0x83ED, 0x83E7, 0x03E2,        0x83A3, 0x03A6, 0x03AC, 0x83A9, 0x03B8, 0x83BD, 0x83B7, 0x03B2,        0x0390, 0x8395, 0x839F, 0x039A, 0x838B, 0x038E, 0x0384, 0x8381,        0x0280, 0x8285, 0x828F, 0x028A, 0x829B, 0x029E, 0x0294, 0x8291,        0x82B3, 0x02B6, 0x02BC, 0x82B9, 0x02A8, 0x82AD, 0x82A7, 0x02A2,        0x82E3, 0x02E6, 0x02EC, 0x82E9, 0x02F8, 0x82FD, 0x82F7, 0x02F2,        0x02D0, 0x82D5, 0x82DF, 0x02DA, 0x82CB, 0x02CE, 0x02C4, 0x82C1,        0x8243, 0x0246, 0x024C, 0x8249, 0x0258, 0x825D, 0x8257, 0x0252,        0x0270, 0x8275, 0x827F, 0x027A, 0x826B, 0x026E, 0x0264, 0x8261,        0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231,        0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202    };    for(j = 0; j &amp;lt; data_blk_size; j++)    {        i = ((unsigned short)(crc_accum &amp;gt;&amp;gt; 8) ^ data_blk_ptr[j]) &amp;amp; 0xFF;        crc_accum = (crc_accum &amp;lt;&amp;lt; 8) ^ crc_table[i];    }    return crc_accum;}CRC Calculation Example  unsigned short update_crc(unsigned short crc_accum, unsigned char *data_blk_ptr, unsigned short data_blk_size);  Return Value : 16bit CRC Value  Arguments          crc_accum : set as ‘0’      data_blk_ptr : Packet array pointer      data_blk_size : number of bytes in the Packet excluding the CRC      data_blk_size = Header(3) + Reserved(1) + Packet ID(1) + Packet Length(2) + Packet Length - CRC(2) = 3 + 1 + 1 + 2 + Pakcet Length - 2 = 5 + Packet Length;      Packet Length = (LEN_H « 8 ) + LEN_L;  //Little-endian        Packet Analysis and CRC Calculation          Example Packet(Read Instruction Packet to read the 2 bytes from address 0x0000)unsigned char TxPacket[] = {0xFF, 0xFF, 0xFD, 0x00, 0x01, 0x07, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, CRC_L, CRC_H}      CRC calculationCRC = update_crc(0, TxPacket , 12);   // 12 = 5 + Packet Length(7)CRC_L = (CRC &amp;amp; 0x00FF);               //Little-endianCRC_H = (CRC»8) &amp;amp; 0x00FF;      ",
        "url": " http://localhost:4000/emanual/docs/en/dxl/crc/"
      } ,
  
      "docs-en-faq-download-task-code":  {
        "title": "Download Task Code",
      "content"	 : "Download Task CodeCM-5If you want to use RoboPlus program for CM-5 (the controller used for Bioloid Beginner/Comprehensive Kits), you must update the firmware. Please refer to Firmware Update of RoboPlus Manager on how to update firmware.Preparation  Call the task code(*.tsk) from RoboPlus Task.          You can open it by double-clicking the task code file.      You can open it using Open File function of RoboPlus Task.      You can open it by dragging &amp;amp; dropping on RoboPlus Task.        Connect the PC and the Controller with USB2Dynamixel.  Turn on the power of the controller.Download      Connect the controller before downloading the task code.  To download the task code, the controller must be connected to the PC(Please refer to controller information for information on how to connect the controller to the PC).        Select the correct COM port (if you know) or else use the “Automatic Search” function  to easily find out the appropriate port. .  If RoboPlus Task is unable to find a controller, the following error message will be shown.  Check if the controller is connected to the PC. (See controller information on how to connect the controller.)  Check if the controller is turned on.  Check if the correct communication port was chosen.  Select the download menu.If the program has an error, you must find the error and correct it. (See “rule check error messages”)  Download the program.If the downloading fails, it will automatically try again from the beginning.  Execute the task code and your robot will move.  Turn on the controller and execute the downloaded task code(Please refer to each controller information to learn how to execute the task code).CM-100Preparation  Please open a task code file(*.tsk) to download from RoboPlus Task.          You can open it by double-clicking.      You can open it by using an ‘open a file’ function of RoboPlus Task.      You can open it by dragging &amp;amp; dropping  it to  the RoboPlus task with mouse.        Connect the contorller(CM-100) with your PC by using a USB Downloader(LN-101).  Connect 2 double AA batteries then turn the power for the controller (CM-100) on.Download      Connect the controller before downloading the task code. To download the task code, the controller must be connected to the PC. (Please refer to controller information for information on how to connect the controller to the PC.)        Select the correct COM port (if you know) or else use the “Automatic Search” function  to easily find out the appropriate port. .  If RoboPlus Task is unable to find a controller, the following error message will be shown.  Check if the controller is connected to the PC.  Check if the controller is turned on.  Check if the correct communication port was chosen.  Select the download menu.If the program has an error, you must find the error and correct it. (See rule check error messages)  Download the program.If the downloading fails, it will automatically try again from the beginning.  Execute the task code -&amp;gt; Your robot will move. Turn on the controller and execute the downloaded task code.VideosDownload RoboPlus Program (for CM-100)setting up the port",
        "url": " http://localhost:4000/emanual/docs/en/faq/download_task_code/"
      } ,
  
      "docs-en-edu-dream-dream-a":  {
        "title": "Dream Set A",
      "content"	 : "IntroductionROBOTIS DREAM is an entry level robotics kit optimized for learning and teaching robotics.Set A combines the parts from the existing products ROBOTIS DREAM Level 1 and Level 2, and includes a much simpler QuickStart to get robotics education started.  QuickStart includes assembly manual for 4 robot examples.  Assembly manual for all 23 robots available through RoboPlus Design SW.  Full workbook for students available (sold separately).Caution The controller(CM-150) in ROBOTIS DREAM SET A contains a “Comprehensive Program” that can make the robot move without downloading a program. To program or download a program you will need the USB Cable included. If you want to build and program your robots using more parts and peripheral devices, please purchase the ROBOTIS DREAM SET B or necessary parts separately.Part ListQuick StartROBOTIS DREAM SET A comes with a “Comprehensive Program” in the controller that can make the robot move without downloading a program.Caution The comprehensive program in the controller will be overwritten when downloading a program. Therefore, you must download the program using USB Downloader(LN-101).How to Play  If the button on the controller is pressed sequentially, the musical notes are played. Depending on the pressed number, the installed program can be selected.  The default setting for Powersave Timer is 5 minutes when the controller is activated.Select ProgramFor details, please refer to the workbook included in the kit.            Button Press      Workbook      Robot                         Chapter 1. Windmill                    3 (Mi)      Chpater 2. Avoider                    7 (Ti)      Chapter 3. Scorpion                    11 (Fa’)      Chapter 4. Crocodile            Note Download the example program under the ROBOTIS DREAM Level 2 directory using the USB cable included in Level 1. The USB cable can also be purchased separactely.ExamplesFor more information assembly and operation, please refer to the ROBOTIS DREAM SET A workbook. The controller initially comes with the comprehensive program pre-installed in it. To create your own program or download, click here to read more on How to Download Task code. You will need the USB cable to download the programs. This is included in ROBOTIS DREAM SET A.            Robot      TASK Code                  1. Windmill      Not Programmable              2. Avoider      Download              3. Scorpion      Download              4. Crocodile      Download      ",
        "url": " http://localhost:4000/emanual/docs/en/edu/dream/dream-a/"
      } ,
  
      "docs-en-edu-dream-dream-b":  {
        "title": "Dream Set B",
      "content"	 : "IntroductionROBOTIS DREAM is an entry level robotics kit optimized for learning and teaching robotics.Set B combines the parts from the existing products ROBOTIS DREAM Level 3 and Level 4, and expands on Set A to take robotics education to a higher level.  QuickStart includes assembly manual for 4 robot examples.  Assembly manual for all 24 robots available through RoboPlus Design SW.  Full workbook for students available (sold separately).Caution ROBOTIS DREAM SET B requires parts from ROBOTIS DREAM SET A. Please make sure to purchase SET A  to build the robots in SET B. Users must program the robots or download the program into the controller(CM-150) to operate the robot. To download programs, you will need the USB cable included in SET A.Part ListExamplesFor more information assembly and operation, please refer to the ROBOTIS DREAM SET B workbook. The controller initially comes with the comprehensive program pre-installed in it. To create your own program or download, click here to read more on How to Download Task code. You will need the USB cable to download the programs. This is included in ROBOTIS DREAM SET A.            Robot      TASK Code                  1. Probing Car      Download              2. Electric Guitar      Download              3. Flag Game Robot      Download              4. War Robot      Download      ",
        "url": " http://localhost:4000/emanual/docs/en/edu/dream/dream-b/"
      } ,
  
      "docs-kr-edu-dream-dream1-1":  {
        "title": "Dream-LV.1",
      "content"	 : "개요로보티즈 드림 교육키트(로봇 수업용) 1단계로보티즈 드림 교육키트는 초보자가 쉽게 시작할 수 있도록 개발된 최적의 로봇 솔루션입니다.로보티즈 드림 1단계는 로보티즈 드림의 기본 부품사용법 학습부터 시작하여 로봇의 동력과 전기, 무게중심의 이해, 힘의 변환과 전달의 원리, 2족, 4족 보행 로봇의 기본 개념 학습 등 원리와 이론 학습 등 원리와 이론 학습에 중점을 둔 로봇 입문용 키트입니다.로보티즈 드림 교육키트(로봇 수업용)1단계에는 충전을 통해 반영구적으로 사용할 수 있는 리튬이온 전지가 포함되어 있습니다. 제품에 포함되어 있는 USB케이블을 이용하여 충전이 가능하며, 스마트기기 충전기로도 충전할 수 있습니다.보다 다양한 주변장치를 이용하여 로봇을 제작하고, 로봇 프로그래밍을 하기 위해서는 드림 2단계를 구매하시면 됩니다.부품 목록",
        "url": " http://localhost:4000/emanual/docs/kr/edu/dream/dream1-1/"
      } ,
  
      "docs-en-edu-dream-dream1-2":  {
        "title": "Dream Lv 2",
      "content"	 : "IntroductionROBOTIS DREAM Level 2 teaches you the basics of how a robot moves, which includes the usage of sensors, speed and force, gait, and drive. This level comes with 12 chapters to help you understand the scientific and physical theory using experiments as you build the robots chapter by chapter.Caution ROBOTIS DREAM Level 2 requires parts from ROBOTIS DREAM Level 1. Please make sure to purchase Level 1 first to build the robots in Level 2. The controller(CM-150) in ROBOTIS DREAM level 2 contains a “Comprehensive Program” that can make the robot move without downloading a program. To program or download a program you will need the USB Cable included in the ROBOTIS DREAM Level 1. If you want to build and program your robots using more parts and peripheral devices, please purchase the ROBOTIS DREAM Level 3 or necessary parts separately.Part List  CM-150  Geared MotorQuick StartROBOTIS DREAM level 2 comes with a “Comprehensive Program” in the controller that can make the robot move without downloading a program.Caution The comprehensive program in the controller will be overwritten when downloading a program. Therefore, you must download the program using USB Downloader(LN-101).How to Play  If the button on the controller is pressed sequentially, the musical notes are played. Depending on the pressed number, the installed program can be selected.  The default setting for Powersave Timer is 5 minutes when the controller is activated.Select Program            Button Press      Workbook      Robot                  1 (Do)      Chapter 1. Elephant                    2 (Re)      Chapter 2. Flower &amp;amp; Firefly                    3 (Mi)      Chpater 3. Avoider                    4 (Fa)      Chapter 4. Seal                    5 (Sol)      Chapter 5. Beetle                    6 (Ra)      Chapter 6. Raccoon                    7 (Ti)      Chapter 7. Scorpion                    8 (Do’)      Chapter 8. Puppy                    9 (Re’)      Chapter 9. Squirrel                    10 (Mi’)      Chapter 10. Buffalo                    11 (Fa’)      Chapter 11. Crocodile                    12 (Sol’)      Chapter 12. Imagine            Note Download the example program under the ROBOTIS DREAM Level 2 directory using the USB cable included in Level 1. The USB cable can also be purchased separactely.ExamplesFor more information assembly and operation, please refer to the ROBOTIS DREAM Level 2 workbook. The controller initially comes with the comprehensive program pre-installed in it. To create your own program or download, click here to read more on How to Download Task code. You will need the USB cable to download the programs. This is included in ROBOTIS DREAM Level 1.  Integrated example program          This program is basically included in the main controller when you purchase the goods.      Please refer to the Operating Method to see how to use this program.Download DREAM_L2_Total_EN.tsk        Example program of each chapter            Robot      TASK Code                  1. Elephant      Download              2. Flower &amp;amp; Firefly      Download              3. Avoider      Download              4. Seal      Download              5. Beetle      Download              6. Raccoon      Download              7. Scorpion      Download              8. Puppy      Download              9. Squirrel      Download              10. Buffalo      Download              11. Crocodile      Download              12. Imagine      Download      ",
        "url": " http://localhost:4000/emanual/docs/en/edu/dream/dream1-2/"
      } ,
  
      "docs-kr-edu-dream-dream1-2":  {
        "title": "드림1 2단계",
      "content"	 : "개요로보티즈 드림 교육키트(로봇 수업용) 2단계로보티즈 드림 2단계는 로봇이란 무엇인지에 대한 기본 개념부터 로봇의 동력, 센서의 활용, 속도와 힘, 보행과 주행 등 과학적 원리와 물리적 이론에 보다 쉽게 접근하고, 실험을 통해 자연스럽게 개념과 원리를 습득하게 해 줍니다.비슷한 형태의 로봇을 반복적으로 분해 조립하는 단순 학습이 아닌, 로봇을 움직일 수 있게 하는 원리를 이해하고, 학습할 수 있습니다.로보티즈 드림 2단계는 총 12장의 교재와 예제 로봇이 결합되어 프로그래밍의 기본 학습과 센서의 활용, 로봇의 제작, 원리의 이해, 문제 풀이 등의 과정을 제공합니다.  12장에 걸쳐 로봇을 순서대로 만들면서 로봇 제작의 원리를 학습할 수 있습니다.로보티즈 드림 2단계의 통합프로그램은 제어기(CM-150)에 내장되어있으며, 사용자가 직접 프로그램 학습 및 다운로드를 하기 위해서는 로보티즈 드림 1단계에 포함되어 있는 USB 케이블을 이용해서 다운로드 할 수 있습니다.보다 다양한 주변 장치를 이용하여 로봇을 제작 및 프로그래밍 하기 위해서는 로보티즈 드림 3단계를 구매하시면 됩니다.부품 목록작동하기로보티즈 드림 2단계에 포함된 제어기(CM-150)에는 다운로드 없이 사용할 수 있는 통합 프로그램이 내장되어 있습니다.주의 만약, 단 한번이라도 다운로드한 적이 있다면, 통합 프로그램이 지워진 것이므로 USB 케이블을 이용해서 통합 프로그램을 다운로드해야 합니다.작동방법  제어기의 시작버튼을 연속으로 누르면 도,레,미와 같은 음계 소리가 나며 누른 횟수에 따라 내장된 프로그램을 선택할 수 있습니다.  제어기 작동 시 ‘자동꺼짐 타이머’의 기본 설정 값은 5분 입니다. 자동꺼짐타이머 바로가기프로그램 선택방법자세한 내용은 키트에 포함된 교재를 참고 하시기 바랍니다.            시작버튼 누름횟수      교재 내용      로봇 이미지                  1 (도)      1장 예제, 코끼리                    2 (레)      2장 예제, 꽃과 반딧불                    3 (미)      3장 예제, 어보이더                    4 (파)      4장 예제, 물개                    5 (솔)      5장 예제, 장수풍뎅이                    6 (라)      6장 예제, 너구리                    7 (시)      7장 예제, 전갈                    8 (높은 도)      8장 예제, 강아지                    9 (높은 레)      9장 예제, 다람쥐                    10 (높은 미)      10장 예제, 들소                    11 (높은 파)      11장 예제, 악어                    12 (높은 솔)      12장 예제, 상상하세요            참고 USB케이블은 로보티즈 드림 1단계 구성품에 포함되어 있습니다.교안예제각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 로보티즈 드림 2단계 교안을 참고하세요. 기본적으로 프로그램이 내장되어 있습니다. 만일, 프로그램을 직접 만들거나 다운로드 할 경우에 예제 태스크 코드의 다운로드 방법은 [여기]를 참고하세요. 다운로드시 필요한 USB 케이블 은 1단계 구성품에 포함되어 있습니다.2단계 통합 예제 프로그램제품 구입 시 제어기(CM-150)에 기본으로 들어있는 프로그램입니다.통합 프로그램 사용법은 작동하기를 참고하세요.DREAM_L2_Total_KR.tsk            예제 프로그램      로봇 이미지      프로그램                  1장 예제, 코끼리            DREAM_L2_Elephant_KR.tsk              2장 예제, 꽃과 반딧불            DREAM_L2_Fireflylight_KR.tsk              3장 예제, 어보이더            DREAM_L2_Avoider_KR.tsk              4장 예제, 물개            DREAM_L2_Seal_KR.tsk              5장 예제, 장수풍뎅이            DREAM_L2_Abeetle_KR.tsk              6장 예제, 너구리            DREAM_L2_Raccoon_KR.tsk              7장 예제, 전갈            DREAM_L2_Scorpion_KR.tsk              8장 예제, 강아지            DREAM_L2_Puppy_KR.tsk              9장 예제, 다람쥐            DREAM_L2_Squirrel_KR.tsk              10장 예제, 들소            DREAM_L2_Buffalo_KR.tsk              11장 예제, 악어            DREAM_L2_Crocodile_KR.tsk              12장 예제, 상상하세요            DREAM_L2_Distancesensor_KR.tsk      참고자료호환성호환되는 장치CM-150, 감속모터",
        "url": " http://localhost:4000/emanual/docs/kr/edu/dream/dream1-2/"
      } ,
  
      "docs-en-edu-dream-dream1-3":  {
        "title": "Dream Lv 3",
      "content"	 : "IntroductionROBOTIS DREAM Level 3 comes with the controller and teaches you the principles of servo motor control, usage of the touch sensor and IR sensors, and LED modules. This level will help you understand the flow chart to set up your ground work for programming.Operate your robot using the sensors assembled in them or play games to experience how the sensors can be used in various ways.Caution ROBOTIS DREAM Level 3 requires parts from ROBOTIS DREAM Level 1 and 2. Please make sure to purchase Level 1 and 2 to build the robots in Level 3. Users must program the robots or download the program into the controller (CM-150) to operate the robot. To program or download a program you will need the USB Cable included in the ROBOTIS DREAM Level 1. If you want to build and program your robots using more parts and peripheral devices, please purchase the ROBOTIS DREAM Level 4 or necessary parts separately.Part List  Servo Motor  IR Sensor  LED Module  Touch SensorExamplesFor more information assembly and operation, please refer to the ROBOTIS DREAM Level 3 workbook. You must download the examples programs below to operate your robot. To create your own program or download, click here to read more on How to Download Task code. You will need the USB cable to download the programs. This is included in ROBOTIS DREAM Level 1.            Robot      TASK Code                  1. Music Box      Download              2. Cleaning Robot      Download              3. Truck      Download              4. Bumper Car      Download              5. Probing Car      Download              6. Electric Guitar      Download              7. Flag Game Robot      Download              8. Crane      Download              9. Drunken Basket      Download              10. Viking      Download              11. Whac-A-Mole      Download              12. Goblin Robot      Download      ",
        "url": " http://localhost:4000/emanual/docs/en/edu/dream/dream1-3/"
      } ,
  
      "docs-en-edu-dream-dream1-4":  {
        "title": "Dream Lv 4",
      "content"	 : "IntroductionROBOTIS DREAM Level 4 comes with a remote controller to control the robot in many ways. Now that you have an idea of how the flow chart works and have a basic knowledge of programming, this level allows you to prepare for competitions. Play games using the programs provided for download on our website and keep a record to see how well you do. Experience how the sensors can affect your results.Caution ROBOTIS DREAM Level 4 requires parts from ROBOTIS DREAM Level 1, 2 and 3. Please make sure to purchase Level 1, 2 and 3 to build the robots in Level 4. Users must program the robots or download the program into the controller(CM-150) to operate the robot. To program or download a program you will need the USB Cable included in the ROBOTIS DREAM Level 1.Part List  BT-210  RC-100BExamplesFor more information assembly and operation, please refer to the ROBOTIS DREAM Level 4 workbook. You must download the examples programs below to operate your robot. To create your own program or download, click here to read more on How to Download Task code. You will need the USB cable to download the programs. This is included in ROBOTIS DREAM Level 1.            Robot      TASK Code                  1. Tank      Download              2. Robot Knight      Download              3. War Robot      Download              4. Hockey Robot      Download              5. Excavator      Download              6. Ladder Truck      Download              7. Forklift      Download              8. Boxing Robot      Download              9. Bulldozer      Download              10. Dribbler      Download              11. Explorer      Download              12. Transporter      Download      ",
        "url": " http://localhost:4000/emanual/docs/en/edu/dream/dream1-4/"
      } ,
  
      "docs-en-dxl-dx-dx-113":  {
        "title": "DX-113",
      "content"	 : "Warning DX-113 has been discontinued.Specifications            Item      Specifications                  Baud Rate      7343 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°              Weight      58g              Dimensions (W x H x D)      31mm x 46mm x 37mm              Gear Ratio      192.6 : 1              Stall Torque      1.0 N*m (at 12V)              No Load Speed      54rpm (at 12V)              Operating Temperature      -5°C ~ +85°C              Input Voltage      9 ~ 12V (Recommended : 11.1V)              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Engineering Plastic Body      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      113              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      85              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      190              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      0              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      0              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.Caution DX-113 does not support Wheel Mode.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0~1023 (0X3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of relevant model in Joint Mode.  Even if the motor is set to more than maximum rpm, it cannot generate the torque more than the maximum rpm.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1,023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.  Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.How to Assemble  OF-116B Option Frame  OF-116H Option Frame  OF-116S Option Frame  Combination Structure of option frames and hornsMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/dx/dx-113/"
      } ,
  
      "docs-en-dxl-dx-dx-116":  {
        "title": "DX-116",
      "content"	 : "Warning DX-116 has been discontinued.Specifications            Item      Specifications                  Baud Rate      7343 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°              Weight      66g              Dimensions (W x H x D)      31mm x 46mm x 37mm              Gear Ratio      142.5 : 1              Stall Torque      2.1 N*m (at 12V), 2.9 N*m(at 16V)              Operating Temperature      -5°C ~ +85°C              Input Voltage      12 ~ 16V (Recommended : 14.8V)              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Engineering Plastic Body      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      116              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      85              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      190              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      0              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      0              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.Caution DX-116 does not support Wheel Mode.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0~1023 (0X3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of relevant model in Joint Mode.  Even if the motor is set to more than maximum rpm, it cannot generate the torque more than the maximum rpm.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1,023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.  Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.How to Assemble  OF-116B Option Frame  OF-116H Option Frame  OF-116S Option Frame  Combination Structure of option frames and hornsMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/dx/dx-116/"
      } ,
  
      "docs-en-dxl-dx-dx-117":  {
        "title": "DX-117",
      "content"	 : "Warning DX-117 has been discontinued.Specifications            Item      Specifications                  Baud Rate      7343 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°              Weight      66g              Dimensions (W x H x D)      31mm x 46mm x 37mm              Gear Ratio      192.6 : 1              Stall Torque      3.7 N*m (at 18.5V, 1.9A)              No Load Speed      85 RPM (at 18.5V)              Operating Temperature      -5°C ~ +80°C              Input Voltage      12 ~ 18.5V (Recommended : 14.8V)              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Engineering Plastic Body      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      117              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      190              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.Caution DX-117 does not support Wheel Mode.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0~1023 (0X3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of relevant model in Joint Mode.  Even if the motor is set to more than maximum rpm, it cannot generate the torque more than the maximum rpm.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1,023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.  Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.How to Assemble  OF-116B Option Frame  OF-116H Option Frame  OF-116S Option Frame  Combination Structure of option frames and hornsMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/dx/dx-117/"
      } ,
  
      "docs-en-dxl-ex-ex-106":  {
        "title": "EX-106+",
      "content"	 : "Warning EX-106+ has been discontinued.Specifications            Item      Specifications                  Baud Rate      7843 bps ~ 1 Mbps              Resolution      0.06°              Running Degree      0° ~ 251°Endless Turn              Weight      154g              Dimensions (W x H x D)      40.2mm x 65.1mm x 46mm              Gear Ratio      184 : 1              Stall Torque      10.9 N*m (at 18.5V, 7A)              No Load Speed      91rpm (at 18.5V)              Operating Temperature      -5°C ~ +80°C              Input Voltage      12 ~ 18.5V (Recommended : 14.8V)              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Aluminium Front Case,Engineering Plastic Body              Standby Current      55mA      Note Stall torque is the maximum instantaneous and static  torque. Stable motions are possible with robots designed for loads with 1/5 or less of the stall torque.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to [Protocol] for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      107              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      4095              10      1      Drive Mode      Dual Mode Setting      RW      0              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      240              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      0              56      2      Sensed Current      Consuming Current      R      -      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet. 0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate      Margin of Error                  1(Default)      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.                   Value      Description                  Unit      2[μsec]      -              Range      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).CW Angle Limit: the minimum value of Goal Position(Address 30, 31)CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.Drive Mode(10)            Bit      Item      Description                  Bit 2 ~ 7      N/A      -              Bit 1      Master/Slave Mode      0: Master Mode1 : Slave Mode              Bit 0      Normal/Reverse Mode      0: Normal Mode1: Reverse mode            Master ModeIn case of being used as dual joints, it is set to designate as master.        Slave ModeIn case of being used as dual joints, it is set to designate as slave.        General ModeSets the direction of rotation to set direction.Reads normal data values from position.        Reverse ModeSets the direction of rotation  opposite to set direction.Reads inverse data values from position.    Note Reverse mode is to reverse the rotational direction. It can be used conveniently when a symmetrical joint is required.  Dual JointsDual joints are used as 1 joint by controlling 2 motors simultaneously.To use the dual joints, 1 unit of motor set in master mode and 1 unit of motor set in slave mode are needed.Next, the motors must be connected to each other using synchronization cable.  Normal mode synch cable: Drives Master and PWM signals synchronized.  Reverse mode synch cable: Drives PWM signals in reverse.Note Slave is synchronized by directly receiving the control command through synchronization cable from Master.  Slave Mode unit responds to communication through command packets, but data related to motor drive are processed only through the synchronization.Note In a dual master-slave configuration position information from the slave is ignored and the position of the dual configuration is based on the master in PWM control. When master and slave are not physically connected there could be a slight difference on the driven load. Use the frame shown in the below image to achieve dual configuration.The Highest Limit TemperatureCaution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Using the product when the temperature is high may and can cause damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Addresses 34 and 35) uses the value as the initial value.Status Return LevelIt decides how to return Status Packet. There are three ways like the below table.            Value      Return of Status Packet                  0      No return against all commands (Except PING Command)              1      Return only for the READ command              2      Return for all commands      When Instruction Packet is Broadcast ID, Status Packet is not returned regardless of Status Return Level.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Name      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0X05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by making the value of Torque Limit(Address 34, 35) as 0.Torque Enable            Value      Description                  0      Keeps Torque from generating by interrupting the power of motor              1      Generates Torque by impressing the power to the motor.      LED            Bit      Description                  0      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 to 1023 (0x3FF) is available.  The unit is 0.29 degree.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, this value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0~1023 (0X3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.        Wheel Mode0~2047( 0X7FF) can be used, the unit is about 0.1%.If a value in the range of 0~1023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1024~2047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.Torque LimitIt is the value of the maximum torque limit.0 to 1023 (0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. At this moment, if the value is changed to the value other than 0, the motor can be used again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.      Wheel ModeThe range of the value is 0~65535(0XFFFF), and the unit is 0.06 degree. In case of Wheel Mode, only the moving distance can be measured since the present location outputs the value of Encoder. It is increased or decreased by 1 depending on the moving direction of wheel. If it is decreased when the value is 0, it becomes 65535; if it is increased when it is 65535, the value becomes 0.    Total Moved Angle = (The value currently measured - The value measured in the past) x 0.06According to the formula above, if the total moved angle is greater than 0, it is turned to the direction of CCW; if it is less than 0, it is turned to the direction of CW.For example, The value is changed from 5000 to 10000, (10000 - 5000) x 0.06 = 300, and the total moved angle becomes 300 degrees.  Present SpeedIt is the current moving speed.0~2047 (0X7FF) can be used.If a value is in the rage of 0~1023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1024~2047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1024 are equal.The unit of this value varies depending on operation mode.      Joint ModeThe unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel ModeThe unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1023, it means the load works to the CCW direction.If the value is 1024~2047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the current voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      There are no commands transmitted by REG_WRITE              1      There are commands transmitted by REG_WRITE      Note If ACTION command is executed, the value is changed into 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchCurrent to drive motor is at minimum.Can choose vales from 0x20 to 0x3FF.Sensed CurrentIt is the amount of current in use. The range from 0 to 1023 is used, and the unit is 10mA. The value less than 512 means the motor consumes the current and torques to the direction of CCW. The value greater than 512 means the motor consumes the current and torques to the direction of CW. 512 is equal to 0mA, and it means there is no torque from the motor.For example, if the value is 612, the motor torques to the direction of CW and consumes 1000mA(612-512=100 =&amp;gt; 100x10mA = 1,000mA).If the value is 312, the motor torques to the direction of CW and consumes 2000mA(512-312= -200 =&amp;gt; 200x10mA=2,000mA).How to AssembleMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/ex/ex-106+/"
      } ,
  
      "docs-en-edu-ollo-explorer":  {
        "title": "OLLO Explorer",
      "content"	 : "IntroductionCreate robots using the controllers and sensors.Through 12-session curriculum, learn scientific principle and physics theory such as power of robot, usage of sensors, speed and force, walking, and running etc. by experiment.Note For OLLO Explorer, the instructor will download the program.  If you want to download and learn the program for yourself, you must purchase USB Downloader(LN-101) separately. If you want to build and program your robots using more peripheral devices, please purchase OLLO Inventor.Part List  CM-100  Geared MotorQuick StartHow to PlayFor the controller(CM-100) included with OLLO Explorer, a comprehensive program which can be used without downloading is installed.Caution The comprehensive program in the controller will be overwritten when downloading a program. Therefore, you must download the program using USB Downloader(LN-101).If the button on the controller is pressed sequentially, the musical notes are played. Depending on the pressed number, the installed program can be selected.Select ProgramPlease refer to the learning material in the kit for more information.            Button Press      Musical Note      Chapters      Robots                  1      Do      E-1Chapter 1, 2                    2      Re      E-1Chapter 3                    3      Mi      E-1Chapter 4                    4      Fa      E-2Chapter 1                    5      Sol      E-2Chapter 2                    6      Ra      E-2Chapter 3                    7      Si      E-2Chapter 4                    8      Do      E-3Chapter 1            Note The example which cannot be selected by the comprehensive program must be downloaded using USB Downloader(LN101).DownloadPlease refer to Explorer Learning Material on How to Assemble or motions during the execution for each example.Also, please refer to How to Download of task code for more information.  Integrated example program          This program is basically included in the main controller when you purchase the goods      Please refer to the Operating Method to see how to use this program.  Download OLLO_L2_Total_EN.tsk        Example program of each chapter            Robots      E-1                  1. Elephant      Download OLLO_L2_Elephant_EN.tsk              2. Windmill      Download OLLO_L2_Windmill_EN.tsk              3. Avoider      Download OLLO_L2_Avoider_EN.tsk              4. Imagine      Download OLLO_L2_DistanceSensor_EN.tskDownload OLLO_L2_Penguin_EN.tskDownload OLLO_L2_CardGiver_EN.tsk                  Robots      E-2                  5. Seal      Download OLLO_L2_Seal_EN.tsk              6. Line Tracer      Download OLLO_L2_Linetracer_EN.tsk              7. Howitzer      Download OLLO_L2_Howitzer_EN.tsk              8. Imagine      Download OLLO_L2_SoundSensor_EN.tskDownload OLLO_L2_Dancing_EN.tskDownload OLLO_L2_Cradle_EN.tsk                  Robots      E-3                  9. Lady Bug      Download OLLO_L2_Ladybug_EN.tsk              10. Wheel Puppy      Download OLLO_L2_WheelPuppy_EN.tsk              11. Mouse      Download OLLO_L2_Mouse_EN.tsk              12. Battle Bug      Download OLLO_L2_Battlebug_EN.tsk      ",
        "url": " http://localhost:4000/emanual/docs/en/edu/ollo/explorer/"
      } ,
  
      "docs-cn-faq":  {
        "title": "FAQ",
      "content"	 : "",
        "url": " http://localhost:4000/emanual/docs/cn/faq"
      } ,
  
      "docs-en-faq":  {
        "title": "FAQ",
<<<<<<< HEAD
      "content"	 : "컨텐츠 작성방법파일의 최상단에 반드시 아래의 YFM(Yaml Front matter)을 추가하고 내용을 알맞게 업데이트합니다.  ---  layout: archive  lang: en    &amp;gt; 영어(en), 한글(kr), 일어(jp), 중국어(cn)  ref: thormang3_getting_started    &amp;gt; 컨텐츠의 주제(각 언어별로 ref가 같아야 함.)  read_time: true  share: true  author_profile: false  permalink: /docs/en/platform/thormang3/getting_started/   &amp;gt; /파일위치/파일명/  sidebar:    title: THORMANG3    &amp;gt; 제품명    nav: &quot;thormang3&quot;    &amp;gt; 내비게이션 참조명(navigation.yml파일 참조)  ---개요번호개요번호를 만들기 위해서는 아래와 같이 제목 앞에 #을 붙이고 한칸을 띄운다음 제목을 입력한다.  # 1번 제목  ## 1-1번 제목  ### 1-1-1번 제목  ## 1-2번 제목  # 2번 제목  ## 2-1번 제목다단계 목록  번호 없는 목록과          하위 항목을 만들 수 있으며        번호를 만들어서 사용할 수도 있고          번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다.              하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다.      - 번호 없는 목록과  - 하위 목록을 만들 수 있으며1. 번호를 만들어서 사용할 수도 있고  - 번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다.    - 하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다.글상자Note 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다.notice–primary 다양한 종류의 상자notice–info 색상도 다르고notice--warning 한줄짜리 공지에 유용합니다.notice--danger 여러줄은 다른 방법을 써야합니다.Success 조금 아쉽죠`Note` 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다.{: .notice}**notice--primary** 다양한 종류의 상자{: .notice--primary}*notice--info* 색상도 다르고{: .notice--info}`notice--warning` 한줄짜리 공지에 유용합니다.{: .notice--warning}**`notice--danger`** 여러줄은 다른 방법을 써야합니다.{: .notice--danger}`Success` 조금 아쉽죠{: .notice--success}Note 여러줄짜리 글상자를 사용하려면 조금 복잡합니다.  글상자로 묶고자 하는 문단의 첫번째에 ““를 추가합니다.  글상자를 넣고자하는 부분에 아래의 코드를 추가하고 글상자의 유형에 따라 notice를 notice–info, notice–warning 등으로 변경한 뒤 group_notice_01의 01을 해당 그룹 글상자의 숫자와 맞춰줍니다.      “를 넣고 마지막 숫자 01은 다른 그룹 글상자의 이름과 겹치지 않게 사용한 그룹 글상자의 숫자만큼 증가시켜줍니다.    글상자로 묶고자 하는 문단의 마지막 줄에 “&amp;lt;/div&amp;gt;&amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;p&amp;gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;Note&amp;lt;/code&amp;gt; 여러줄짜리 예제입니다.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;첫번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;두번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;세번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;    &amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;/div&amp;gt;  &amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;Note&amp;lt;/code&amp;gt; 여러줄짜리 글상자를 사용하려면 조금 복잡합니다.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;글상자로 묶고자 하는 문단의 첫번째에 ““를 추가합니다.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;글상자를 넣고자하는 부분에 아래의 코드를 추가하고 글상자의 유형에 따라 notice를 notice–info, notice–warning 등으로 변경한 뒤 group_notice_01의 01을 해당 그룹 글상자의 숫자와 맞춰줍니다.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;    &amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;p&amp;gt;“를 넣고 마지막 숫자 01은 다른 그룹 글상자의 이름과 겹치지 않게 사용한 그룹 글상자의 숫자만큼 증가시켜줍니다.&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;  &amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;글상자로 묶고자 하는 문단의 마지막 줄에 “&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;표아래의 예제를 보시기 바랍니다.각 셀은 ‘|’로 구분되며 줄을 맞추지 않아도 되며 표 내용과 헤더로 구분됩니다.한 컬럼의 좌우정렬은 헤더 아래의 | :——- | 에서 지정할 수 있습니다.콜론(:)이 왼쪽에만 있으면 왼쪽정렬, 오른쪽에만 있으면 오른쪽 정렬, 양쪽에 모두 있으면 가운데 정렬입니다.셀 병합기능이 없기 때문에 사용에 다소 불편함이 있을 수 있습니다.한칸에 여러줄을 입력하려면 &amp;lt;br /&amp;gt;태그를 이용할 수 있습니다.표의 시작과 끝에는 반드시 한줄의 공백이 있어야 합니다.| 항목 1         | 항목 2       || :------------: | :---------- || 이름           | 똘망&amp;lt;br /&amp;gt;Thormang3||소속|로보티즈|            항목 1      항목 2                  이름      똘망Thormang3              소속      로보티즈      그림그림 삽입은 그림을 업로드한 후에 그림의 주소를 지정해서 사용할 수 있습니다. 주소를 저장하는 레퍼런스는 문서의 가장 하단에 작성합니다.![성능그래프][performance graph][performance graph]: http://localhost:4000/emanual/assets/images/dxl/x/xh430_w210_performance_graph.jpg동영상동영상 삽입은 유튜브 동영상을 기준으로 아래의 코드를 복사한 후 src의 동영상 주소만 변경해서 작성합니다.&amp;lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/rvm-m2ogrLA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&amp;gt;&amp;lt;/iframe&amp;gt;링크링크 삽입은 아래와 같이 사용할 수 있습니다. 주소를 저장하는 레퍼런스 태그는 문서의 가장 하단에 작성합니다.컨텐츠 작성방법[컨텐츠 작성방법][Contents Format][Contents Format]: http://localhost:4000/emanual/docs/kr/faq텍스트 효과텍스트 효과에는 기울임1 또는 기울임2, 두껍게1 또는 두껍게2, 선긋기 를 사용할 수 있습니다.텍스트 효과에는 기울임1 또는 기울임2, 두껍게1 또는 두껍게2, 선긋기 를 사용할 수 있습니다.소스코드 입력소스코드를 표시할 때에는 아래와 같이 할 수 있습니다. 1번 방법은 코딩언어를 명시함으로써 코드에 하이라이트를 해주는 기능입니다.      1번 방법    find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )        ```cmakefind_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```        2번 방법    find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )        ```find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```  ",
=======
      "content"	 : "Common  Contents GuideEducation  Download Task Code  Task Rule Check",
>>>>>>> contents
        "url": " http://localhost:4000/emanual/docs/en/faq"
      } ,
  
      "docs-jp-faq":  {
        "title": "FAQ",
      "content"	 : "",
        "url": " http://localhost:4000/emanual/docs/jp/faq"
      } ,
  
      "docs-kr-faq":  {
        "title": "FAQ",
<<<<<<< HEAD
      "content"	 : "컨텐츠 작성방법파일의 최상단에 반드시 아래의 YFM(Yaml Front matter)을 추가하고 내용을 알맞게 업데이트합니다.  ---  layout: archive  lang: en    &amp;gt; 영어(en), 한글(kr), 일어(jp), 중국어(cn)  ref: thormang3_getting_started    &amp;gt; 컨텐츠의 주제(각 언어별로 ref가 같아야 함.)  read_time: true  share: true  author_profile: false  permalink: /docs/en/platform/thormang3/getting_started/   &amp;gt; /파일위치/파일명/  sidebar:    title: THORMANG3    &amp;gt; 제품명    nav: &quot;thormang3&quot;    &amp;gt; 내비게이션 참조명(navigation.yml파일 참조)  ---개요번호개요번호를 만들기 위해서는 아래와 같이 제목 앞에 #을 붙이고 한칸을 띄운다음 제목을 입력한다.  # 1번 제목  ## 1-1번 제목  ### 1-1-1번 제목  ## 1-2번 제목  # 2번 제목  ## 2-1번 제목다단계 목록  번호 없는 목록과          하위 항목을 만들 수 있으며        번호를 만들어서 사용할 수도 있고          번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다.              하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다.      - 번호 없는 목록과  - 하위 목록을 만들 수 있으며1. 번호를 만들어서 사용할 수도 있고  - 번호 목록의 하위에 번호없는 목록을 섞어서 사용할수도 있다.    - 하위항목을 만들 때에는 반드시 두칸 이상 들여쓰기를 해야한다.글상자Note 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다.notice–primary 다양한 종류의 상자notice–info 색상도 다르고notice--warning 한줄짜리 공지에 유용합니다.notice--danger 여러줄은 다른 방법을 써야합니다.Success 조금 아쉽죠`Note` 이와 같은 상자에 글을 입력하려면 아래와 같이 사용한다.{: .notice}**notice--primary** 다양한 종류의 상자{: .notice--primary}*notice--info* 색상도 다르고{: .notice--info}`notice--warning` 한줄짜리 공지에 유용합니다.{: .notice--warning}**`notice--danger`** 여러줄은 다른 방법을 써야합니다.{: .notice--danger}`Success` 조금 아쉽죠{: .notice--success}Note 여러줄짜리 글상자를 사용하려면 조금 복잡합니다.  글상자로 묶고자 하는 문단의 첫번째에 ““를 추가합니다.  글상자를 넣고자하는 부분에 아래의 코드를 추가하고 글상자의 유형에 따라 notice를 notice–info, notice–warning 등으로 변경한 뒤 group_notice_01의 01을 해당 그룹 글상자의 숫자와 맞춰줍니다.      “를 넣고 마지막 숫자 01은 다른 그룹 글상자의 이름과 겹치지 않게 사용한 그룹 글상자의 숫자만큼 증가시켜줍니다.    글상자로 묶고자 하는 문단의 마지막 줄에 “&amp;lt;/div&amp;gt;&amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;p&amp;gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;Note&amp;lt;/code&amp;gt; 여러줄짜리 예제입니다.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;첫번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;두번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;세번째 문장&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;    &amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;/div&amp;gt;  &amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;Note&amp;lt;/code&amp;gt; 여러줄짜리 글상자를 사용하려면 조금 복잡합니다.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;글상자로 묶고자 하는 문단의 첫번째에 ““를 추가합니다.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;글상자를 넣고자하는 부분에 아래의 코드를 추가하고 글상자의 유형에 따라 notice를 notice–info, notice–warning 등으로 변경한 뒤 group_notice_01의 01을 해당 그룹 글상자의 숫자와 맞춰줍니다.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;    &amp;lt;div class=&quot;notice&quot;&amp;gt;&amp;lt;p&amp;gt;“를 넣고 마지막 숫자 01은 다른 그룹 글상자의 이름과 겹치지 않게 사용한 그룹 글상자의 숫자만큼 증가시켜줍니다.&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;  &amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;글상자로 묶고자 하는 문단의 마지막 줄에 “&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;표아래의 예제를 보시기 바랍니다.각 셀은 ‘|’로 구분되며 줄을 맞추지 않아도 되며 표 내용과 헤더로 구분됩니다.한 컬럼의 좌우정렬은 헤더 아래의 | :——- | 에서 지정할 수 있습니다.콜론(:)이 왼쪽에만 있으면 왼쪽정렬, 오른쪽에만 있으면 오른쪽 정렬, 양쪽에 모두 있으면 가운데 정렬입니다.셀 병합기능이 없기 때문에 사용에 다소 불편함이 있을 수 있습니다.한칸에 여러줄을 입력하려면 &amp;lt;br /&amp;gt;태그를 이용할 수 있습니다.표의 시작과 끝에는 반드시 한줄의 공백이 있어야 합니다.| 항목 1         | 항목 2       || :------------: | :---------- || 이름           | 똘망&amp;lt;br /&amp;gt;Thormang3||소속|로보티즈|            항목 1      항목 2                  이름      똘망Thormang3              소속      로보티즈      그림그림 삽입은 그림을 업로드한 후에 그림의 주소를 지정해서 사용할 수 있습니다. 주소를 저장하는 레퍼런스는 문서의 가장 하단에 작성합니다.![성능그래프][performance graph][performance graph]: http://localhost:4000/emanual/assets/images/dxl/x/xh430_w210_performance_graph.jpg동영상동영상 삽입은 유튜브 동영상을 기준으로 아래의 코드를 복사한 후 src의 동영상 주소만 변경해서 작성합니다.&amp;lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/rvm-m2ogrLA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&amp;gt;&amp;lt;/iframe&amp;gt;링크링크 삽입은 아래와 같이 사용할 수 있습니다. 주소를 저장하는 레퍼런스 태그는 문서의 가장 하단에 작성합니다.컨텐츠 작성방법[컨텐츠 작성방법][Contents Format][Contents Format]: http://localhost:4000/emanual/docs/kr/faq텍스트 효과텍스트 효과에는 기울임1 또는 기울임2, 두껍게1 또는 두껍게2, 선긋기 를 사용할 수 있습니다.텍스트 효과에는 기울임1 또는 기울임2, 두껍게1 또는 두껍게2, 선긋기 를 사용할 수 있습니다.소스코드 입력소스코드를 표시할 때에는 아래와 같이 할 수 있습니다. 1번 방법은 코딩언어를 명시함으로써 코드에 하이라이트를 해주는 기능입니다.      1번 방법    find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )        ```cmakefind_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```        2번 방법    find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )        ```find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```  ",
=======
      "content"	 : "  컨텐츠 작성방법",
>>>>>>> contents
        "url": " http://localhost:4000/emanual/docs/kr/faq"
      } ,
  
      "docs-en-platform-op3-getting-started":  {
        "title": "OP3",
      "content"	 : "ROBOTIS OP3",
        "url": " http://localhost:4000/emanual/docs/en/platform/op3/getting_started/"
      } ,
  
      "docs-en-platform-thormang3-getting-started":  {
        "title": "THORMANG3",
      "content"	 : "Getting StartedOS InstallUbuntu 16.04 LTS is installed on PCs in the THORMANG3 and the PC for Remote Control Version.Note Install Ubuntu DesktopNetwork SettingThis section explains how to configure the network for MPC(Motion PC) and PPC(Perception PC) of the robot, as well as the Wi-Fi switch and the OPC(Operating PC).Access Point SettingAccess Point(AP) Information  Model : D-Link DIR-806A  Account          user : admin      password : admin      Note DIR-806A Product ManualAP Server  Router Mode(Orange light)  IP Address : 10.17.3.1  WiFi Name (2.4G) : THORMANG-Sxx (xx : number)  WiFi Name (5G) : THORMANG-Sxx-5G (xx : number)  WiFi Password : 11111111AP in THORMANG3  Repeater Mode(Green light)PC SettingMPC (Motion PC)  IP Address : 10.17.3.30  Netmask : 255.255.255.0  Gateway : 10.17.3.1PPC (Perception PC)  IP Address : 10.17.3.35  Netmask : 255.255.255.0  Gateway : 10.17.3.1OPC (Operating PC)  IP Address : 10.17.3.100  Netmask : 255.255.255.0  Gateway : 10.17.3.1ROS InstallROS(Robot Operating System) is required in order to control THORMANG3. Currently THORMANG3 is developed and tested with Kinetic Kame version of ROS.Note Install ROSROS Environment SettingNote Environment Setting ReferenceNote ROS Network Setup ReferenceNetwork Setting ExampleAbove configuration has to be repeatedly done whenever a new terminal window is created. The following method will load configuration file when creating a terminal window. ROS Network setup is also performed when the configuration file is loaded.System configuration  PPC(Perception PC) : core PC          IP : 10.17.3.35        MPC(Motion PC)          IP : 10.17.3.30        OPC(Operation PC)          IP : 10.17.3.100      Example setting for PPC  Open the bash file with an editor to apply configuration.     $ gedit ~/.bashrc        Append below contents at the end of the .bashrc file.     # Set ROS Kinetic source /opt/ros/kinetic/setup.bash source ~/catkin_ws/devel/setup.bash ##### Set ROS Network #### # PPC CORE(10.17.3.35) export ROS_MASTER_URI=http://10.17.3.35:11311 # local ROS IP export ROS_IP=10.17.3.35        Use below command to apply modified configuration or open a new terminal window.     $ source ~/.bashrc      Example setting for MPC  Open the bash file with an editor to apply configuration.     $ gedit ~/.bashrc        Append below contents at the end of the .bashrc file.     # Set ROS Kinetic source /opt/ros/kinetic/setup.bash source ~/catkin_ws/devel/setup.bash ##### Set ROS Network #### # PPC CORE(10.17.3.35) export ROS_MASTER_URI=http://10.17.3.35:11311 # local ROS IP export ROS_IP=10.17.3.30        Use below command to apply modified configuration or open a new terminal window.     $ source ~/.bashrc      Example setting for OPC  Open the bash file with an editor to apply configuration.     $ gedit ~/.bashrc        Append below contents at the end of the .bashrc file.     # Set ROS Kinetic source /opt/ros/kinetic/setup.bash source ~/catkin_ws/devel/setup.bash ##### Set ROS Network #### # PPC CORE(10.17.3.35) export ROS_MASTER_URI=http://10.17.3.35:11311 # local ROS IP export ROS_IP=10.17.3.100        Use below command to apply modified configuration or open a new terminal window.     $ source ~/.bashrc      Time SynchronizationIn order to run the ROS on multiple PCs, each PC clock has to be synchronized. The following script file comes in handy for this synchronization procedure. PPC time becomes the reference for synchronization, and perform below procedures only for MPC and OPC.  Create the script file with an editor.     $ gedit ~/timesync        Copy and paste below contents to the script file     #! /bin/sh sudo date --set=&#39;-2 secs&#39; sudo ntpdate 10.17.3.35 sudo hwclock -w PPC(10.17.3.35)        Modify the script file permission(Add execute permission)     $ sudo chmod +x timesync        Run the script file to sync time for PPC, MPC and OPC.     $ ~/timesync        If NTP socket is running, Stop the ntp service and sync time.      $ sudo service ntp stop  $ ~/timesync      ROBOTIS ROS Package InstallThis section introduces how to install the ROBOTIS ROS Package for THORMANG3.  ROBOTIS-Framework : DXL SDK based Framework for ROBOTIS platforms  ROBOTIS-Framework-msgs : ROS Messages used in the ROBOTIS-Framework  ROBOTIS-THORMANG-MPC : ROS Packages for the Motion PC of THORMANG3  ROBOTIS-THORMANG-PPC : ROS Packages for the Perception PC of THORMANG3  ROBOTIS-THORMANG-OPC : ROS Packages for the Operating PC of THORMANG3  ROBOTIS-THORMANG-Common : Common ROS Packages for THORMANG3  ROBOTIS-THORMANG-msgs : ROS Messages used in the ROBOTIS THORMANG3 packages  ROBOTIS-THORMANG-TooMPC InstallationInstall the ROBOTIS ROS Package from the MPC. The ROS Package is installed by default.  Download Packages from GitHub to the source folder in the catkin workspace.     $ cd ~/catkin_ws/src $ git clone https://github.com/ROBOTIS-GIT/DynamixelSDK.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-Math.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-Framework.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-Framework-msgs.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-MPC.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-Common.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-msgs.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-Tools.git        After installing all dependent packages, go to the workspace and build. Use j1 option when building for the first time.     $ cd ~/catkin_ws $ catkin_make -j1        :heavy_exclamation_mark: Find ft_calibration_data.yaml and ft_data.yaml from provided USB and copy them to thormang3_manager/config/.PPC InstallationInstall the ROBOTIS ROS Package from the PPC. The ROS Package is installed by default.  Download Packages from GitHub to the source folder in the catkin workspace.     $ cd ~/catkin_ws/src $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-Framework-msgs.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-msgs.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-PPC.git        After installing all dependent packages, go to the workspace and build. Use j1 option when building for the first time.     $ cd ~/catkin_ws $ catkin_make -j1      OPC InstallationInstall the ROBOTIS ROS Package from the OPC.  Download Packages from GitHub to the source folder in the catkin workspace.     $ cd ~/catkin_ws/src $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-Framework-msgs.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-OPC.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-msgs.git $ git clone https://github.com/ROBOTIS-GIT/ROBOTIS-THORMANG-Common.git            After installing all dependent packages, go to the workspace and build. Use j1 option when building for the first time.    Note Dependencies : qt-ros, map_server, nav_msgs, humanoid_nav_msgs, sbpl, octomap-ros    Note sbpl needs to be installed manually. Please follow the sbpl install instruction.     $ sudo apt install ros-kinetic-map-server $ sudo apt install ros-kinetic-humanoid-nav-msgs $ sudo apt install ros-kinetic-octomap ros-kinetic-octomap-msgs ros-kinetic-octomap-ros ros-kinetic-octomap-server $ sudo apt install ros-kinetic-qt-ros $ cd ~/catkin_ws/src $ git clone https://github.com/AravindaDP/humanoid_navigation.git $ cd ~/catkin_ws $ catkin_make -j1            Troubling Shot for libGL in 64bit Ubuntu    Note Reference : Link  UpdateWhen the source is modified, update &amp;amp; build is necessary.  Go to the folder where source is copied and run the pull command.(ex : ROBOTIS-THORMANG-OPC)     $ cd ~/catkin_ws/src/ROBOTIS-THORMANG-OPC $ git pull        Build     $ cd ~/catkin_ws $ catkin_make      Additional ROS Package InstallThe followings are required ROS Packages for THORMANG3 when installing desktop-full.ROS Packages for MPCInstall below ROS Packages from the MPC. The Package is installed by default.urg_node : ROS Package for Lidar$ cd ~/catkin_ws/src$ git clone https://github.com/ros-drivers/urg_node$ git clone https://github.com/ros-drivers/urg_c$ git clone https://github.com/ros-perception/laser_procNote Reference : http://wiki.ros.org/urg_nodeROS Packages for PPCInstall the below ROS Package from the PPC. The Package is installed by default.uvc_camera : ROS Package for USB camera$ sudo apt install libv4l-dev$ cd ~/catkin_ws/src$ git clone https://github.com/ktossell/camera_umdNote Reference : http://wiki.ros.org/uvc_camerarealsenseNote Reference : http://wiki.ros.org/RealSense",
        "url": " http://localhost:4000/emanual/docs/en/platform/thormang3/getting_started/"
      } ,
  
      "docs-en-software-rplus1-task-getting-started":  {
        "title": "R+ Task 1.0",
      "content"	 : "IntroductionA Task is a set of motions to perform a certain actions. RoboPlus refers to the source code that specifies tasks to be executed by the robot as Task Code. The robot moves according to your task codes. RoboPlus Task is a software to make writing these task codes easier.Task code files have a file extension .tsk, and the icon shown on the left.Note Task files from newer versions are not compatible with older versions.InstallDownload RoboPlus TaskRoboPlus is a software to create a customized programme for every ROBOTIS product.RoboPlus System Requirements  OS : Windows XP Service Pack 2 or above / Vista/ 7 (32/64bit)/8 (32/64bit)  32bit(x86) or 64bit (x64) processor with over 800MHz  Graphic card with 3D acceleration  System memory over 512MB  Hard disk with the extra space of 500MBNote To execute RoboPlus, .NET FrameWork 3.5 or higher version is required. When installing RoboPlus, if the automatic installation of .NET FrameWork fails, .NET FrameWork must be installed separately.RoboPlus Install FailureMost reason for installation failure is caused by .NET Framework install error. Please manually intsall Windows Installer 3.1 and .NET Framework 3.5Windows installer and .NET Framework can be downloaded from Microsoft Download Center.Download Windows installer 3.1, .NET Framework 3.5Getting StartedSelect CommandDouble click on a blank line or click on the line and press enter.  Choose a command from the list of commands supported by the selected controller.If the controller has not been selected yet, the program will ask you to choose the type of controller that will be used by the current program.Select ParameterParameter refers required fields or information  to execute commands. A question mark(?) indicates that a parameter has not been set.After selecting a command, you must designate a parameter to complete the command line.      Go to ‘edit mode’ by double clicking the mouse or pressing the enter key.            Choose the parameter to create by pressing left/right arrow keys or by clicking on the question mark.            Press enter or double click to see the parameter selection window.            Choose the appropriate parameter. It is very important to learn and understand the functions of parameter.  Program DownloadDownload the task codes into your controller. You only have to download once, as the task codes is be saved inside of controller till you download a new task code over it.      Connect the controller before downloading the task code.To download the task code, the controller must be connected to the PC. (Please refer to controller information on how to connect the controller to the PC.)        Select the correct COM port (if you know) or else use the Automatic Search function  to easily find out the appropriate port.        If RoboPlus Task is unable to find a controller, the following error message will be shown.              Check if the controller is connected to the PC.      Check if the controller is turned on.      Check if the correct communication port was chosen.            If the program has an error, you must find the error and correct it. (See rule check error messages)            Select the download menu. If the downloading fails, it will automatically try again from the beginning.            Execute the task code -&amp;gt; Your robot will move. Turn on the controller and execute the downloaded task code. (Please refer to controller information to learn how to execute the task code.)  Videos      Download RoboPlus Program(for CM-100)            Download RoboPlus Program(for CM-510/530)      Print on the ScreenControllers usually do not have display devices the way a PC has a monitor, so it is hard to keep track of what goes on in a controller.  Therefore, a “terminal” is used to “borrow” the PC’s monitor.Open the Program Output MonitorTo see the output of the program, you must open the Program Output Monitor BEFORE executing the program. There are three ways to open the Program Output Monitor.      Click the ‘View Print of Program’ on the Download Program window.      Click the View Print of Program button in the tool bar.  Press F5 or click on View Print of Program(V) menu under Program(P).Print/Print with Carriage ReturnUse the “Print” parameter in your task code to see desired values on the screen.Print : Print the value, then move the cursor to next line.Print with New Line: Print out the value, and move the cursor to next line.Error : Please check the following  Values from the controller                  A welcome screen is shown when the program starts                    Error messages during program operation(Error Messages)                  Values from task code : All decimal numbers between -32767 and +32767 can be displayed(Printing characters or custom messages is not possible).                  To print numbers                    To print values from sensors            Clear ScreenYou may erase everything on the screen.Virtual Robot ControlRoboPlus Task supports virtual robot control, which makes controlling of robot possible without a remote controller devices like RC-100. Click the appropriate button with the mouse or press the appropriate key.Please refer to the table below to control the remote control with the  keyboard.            Actual RC-100 Key      Key on the Keyboard                  U      Arrow Key(↑)              D      Arrow Key(↓)              L      Arrow Key(←)              R      Arrow Key(→)              1      Number Key(1)              2      Number Key(2)              3      Number Key(3)              4      Number Key(4)              5      Number Key(5)              6      Number Key(6)      ",
        "url": " http://localhost:4000/emanual/docs/en/software/rplus1/task/getting_started/"
      } ,
  
      "docs-kr-platform-thormang3-getting-started":  {
        "title": "THORMANG3",
      "content"	 : "",
        "url": " http://localhost:4000/emanual/docs/kr/platform/thormang3/getting_started/"
      } ,
  
      "docs-kr-software-rplus1-task-getting-started":  {
        "title": "R+ Task 1.0",
      "content"	 : "개요로보플러스 태스크어떤 일을 처리하기 위한 행동들의 집합을 태스크(Task)라고 합니다. 로봇이 해야할 태스크를 프로그래밍 한 소스를 로보플러스(RoboPlus)에서는 태스크 코드(Task Code)라고 합니다. 로봇은 사용자가 작성한 태스크 코드에 따라 동작하게 되며, 이러한 태스크 코드를 쉽게 작성할 수 있도록 도와주는 것이 로보플러스 태스크(RoboPlus Task) 프로그램입니다.태스크 코드 파일은 PC 에서 .tsk 라는 확장자를 가지며 좌측과 같은 아이콘으로 표시됩니다.참고 상위버젼의 Task 파일은 하위버젼에서 호환되지 않습니다.설치하기다운로드 로보티즈 홈페이지 자료실로보플러스는 모든 로보티즈 제품을 프로그래밍할 수 있는 통합 소프트웨어입니다.RoboPlus 시스템 요구 사항  OS : Windows XP Service Pack 2 이상/ Vista/ 7 (32/64bit)/8 (32/64bit)  800MHz이상의 32비트(x86) 또는 64비트 (x64) 프로세서  3D 가속 기능을 지원하는 그래픽 카드  512MB이상 시스템 메모리  여유공간이 500MB 이상인 하드디스크참고 로보플러스를 실행하기 위해선 .NET FrameWork 3.5이상의 버전이 필요 합니다. 로보플러스 설치시 .NET FrameWork 자동설치가 실패할 경우엔 .NET FreameWork를 별도로 설치하세요.RoboPlus 설치 실패시대부분의 RoboPlus 설치 실패의 원인은 사용자 PC환경에 따른 .NET FrameWork 자동 설치 실패 입니다. 따라서 사용자가 직접 .NET FrameWork 3.5를 수동으로 설치 하셔야 합니다..NET FrameWork 3.5를 수동으로 설치 하기 전에 Windows installer 3.1이상이 설치 되어 있어야 합니다.Windows installer와 .NET Framework는 마이크로소프트 다운로드 센터에서 다운로드가 가능합니다.Windows installer 3.1 다운로드.NET Framework 3.5 다운로드시작하기명령줄 만들기명령을 작성하고 싶은 빈 줄을 더블클릭하거나, 마우스를 클릭 후 엔터를 입력하면 선택한 제어기에서 사용할 수 있는 명령을 입력할 수 있습니다.만약, 제어기가 선택되어 있지 않다면, 사용자에게 현재 프로그램에서 사용할 제어기를 묻게 됩니다.파라미터 만들기파라미터(Parameter)는 명령이 수행되기 위해 필요한 대상입니다. 아무것도 설정되지 않았다면 ‘?’표시로 나타나게 됩니다.명령을 선택한 다음에는 명령줄을 완성하기 위해 파라미터를 만들어야 합니다.      Enter키를 누르거나 마우스를 더블클릭하여 편집 모드로 들어갑니다.            좌/우 방향키를 누르거나 마우스로 클릭하면 만들 파라미터를 선택할 수 있습니다.            Enter키를 누르거나 마우스를 더블클릭하면 파라미터 선택창이 나타납니다.            적절한 파라미터를 선택합니다. 각 파라미터의 사용법을 익히는 것이 매우 중요합니다.  프로그램 다운로드태스크 코드를 제어기에 다운로드합니다. 다운로드 과정은 제어기 내부에 태스크 코드를 저장하므로 한번만 수행하면 됩니다.      PC 와 제어기가 연결되어야 합니다. 태스크 코드를 다운로드하기 위해서는 PC 와 제어기가 연결되어야 합니다. (연결 방법은 각 제어기 정보를 참고하세요.)        사용할 통신 포트를 선택해야 합니다. 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다.        RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다.        PC 와 제어기가 연결되어 있는지 확인합니다. (연결 방법은 각 제어기 정보를 참고하세요.) 제어기의 전원이 켜져 있는지 확인합니다. 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다.        다운로드 메뉴를 선택합니다. 만약, 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다. (룰 체크 에러 메시지 확인)            다운로드를 진행합니다. 만약 다운로드에 실패했다면 처음부터 다시 시도합니다.            태스크 코드(Task Code)를 실행합니다. -&amp;gt; 로봇의 동작을 실행 합니다. 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다. (태스크 코드 실행 방법은 각 제어기 정보를  참고하세요.)  동영상      로보플러스 프로그램 다운로드(CM-100)            로보플러스 프로그램 다운로드(CM-510/530)      프로그램 결과 출력일반적으로 제어기는 PC와 같이 모니터와 같은 출력 장치가 없기 때문에 내부 상태를 확인하기 어렵습니다. 따라서, 터미널(Terminal)이라는 프로그램을 통해 PC 모니터를 빌려쓰는 방식을 사용합니다. RoboPlus Task에는 터미널 프로그램이 포함되어 있어서 제어기의 상태를 확인할 수 있습니다.프로그램 출력용 모니터 창 띄우기프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 띄워야 합니다. 프로그램 출력용 모니터 창을 띄우는 방법은 아래와 같이 여러 가지가 있습니다.      프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭      도구 모음에서 프로그램 출력 보기 버튼을 클릭  프로그램(P) 메뉴의 프로그램 출력 보기(V) 메뉴 선택 혹은 단축키 F5화면 출력/화면 출력 후 줄바꿈태스크 코드에 화면 출력 파라미터를 사용하면 원하는 값을 볼 수 있습니다.화면 출력 : 값을 출력하고 커서를 옆으로 한 칸 이동시킵니다.화면 출력 후 줄바꿈 : 값을 출력하고 커서를 다음 줄로 이동시킵니다.화면 출력 내용  제어기 자체 출력 내용                  프로그램 시작 메시지가 처음에 출력됩니다.                    프로그램 수행 중 에러 메시지 (에러 메시지 종류 보기)              태스크 코드 출력 내용 : -32767 ~ +32767 범위의 10진수로 표시됩니다. (글자는 출력할 수 없습니다.)                  숫자를 출력하는 경우                    센서 값을 출력하는 경우            화면 지우기화면의 내용을 지울 수 있습니다.가상로봇 조종RboPlus Task는 RC-100 등과 같은 조종기가 없어도 조종 기능을 사용할 수 있도록 가상 로봇 조종 기능을 지원하며, 조종기 버튼을 마우스로 클릭하거나 키보드를 이용하여 사용할 수 있습니다.키보드 조종은 아래 표를 참고하세요.            실제 RC-100 키      가상 RC-100의 키보드 키                  U      방향키(↑)              D      방향키(↓)              L      방향키(←)              R      방향키(→)              1      숫자키(1)              2      숫자키(2)              3      숫자키(3)              4      숫자키(4)              5      숫자키(5)              6      숫자키(6)      ",
        "url": " http://localhost:4000/emanual/docs/kr/software/rplus1/task/getting_started/"
      } ,
  
      "docs-kr-software-rplus2-manager-getting-started":  {
        "title": "R+Manager 2.0",
      "content"	 : "개요로보플러스 매니저 2.0로보플러스 매니저 2.0은 로봇을 구성하는 제어기와 다이나믹셀 장치들을 통합 관리합니다.제품을 연결하면 해당 제품을 최신버전으로 업데이트할 수 있으며, 컨트롤 테이블을 테스트해볼 수 있습니다.기존의 로보플러스 매니저1.0과 위자드1.0에서 제공하던 기능이 로보플러스 매니저 2.0에서 통합되었습니다.사용전 주의사항V2.0.0 기준으로 지원 제품이 한정됩니다. 지원 제품 목록에 포함되지 않는 제품의 경우 로보플러스 매니저1.0과 위자드1.0을 사용하시기 바랍니다.지원 제품 목록  로보티즈 드림  로보티즈 스마트(스마트2)  로보티즈 IoT  로보티즈 미니  다이나믹셀 2.0 시리즈 (MX-28, MX-64, MX-106, XL-320, XM시리즈, XH시리즈, Pro시리즈)펌웨어 정의펌웨어는 하드웨어 장치를 구동하기 위하여 장치에 설치하는 기본적인 소프트웨어입니다. 펌웨어에는 PC나 스마트폰, 다른 장치와의 통신 약속이 포함되기 때문에 가급적 펌웨어를 최신상태로 유지할 것을 권장합니다.모든 장치(제어기, 다이나믹셀 등)는 처음 구매시 펌웨어가 설치되어있으나, 기능 추가 / 버그 수정이 있을 경우 새로운 버전을 배포하기도 합니다.제어기 펌웨어의 역할  로보플러스 태스크를 통해 작성한 제어프로그램을 구동합니다.  로보플러스 모션을 통해 작성한 모션 데이터를 해석합니다.  PC나 스마트폰, 다이나믹셀과의 패킷 통신 기능을 합니다.다이나믹셀 펌웨어의 역할  제어기에서 제어프로그램이나 모션 구동시 제어기와의 패킷 통신 기능을 합니다.  PC나 스마트폰, 다이나믹셀과의 패킷 통신 기능을 합니다.펌웨어 업데이트의 중요성  새로운 기능이 추가되거나 기존의 기능이 수정될 경우, 새로운 펌웨어가 배포될 수 있습니다.  새로운 S/W를 지원해야 하는 경우, 호환성 향상을 위해 새로운 펌웨어가 배포될 수 있습니다.  버그 수정이 있을 경우, 새로운 버전의 펌웨어가 배포될 수 있습니다.  제품이 정상적으로 동작하지 않거나, 통신이 원활하지 않을 경우, 최신 펌웨어 업데이트를 통해 문제가 해결될 수 있습니다.메뉴 설명단계별 편집 탭작업 영역이 홈 탭, 관리 탭, 터미널 탭으로 분리됩니다.(V2.0.0 기준으로 관리 탭의 자가진단 / 캘리브래이션 기능과 터미널 탭 기능이 미지원 됩니다.)홈 탭프로그램 시작시 첫 화면으로 제품 선택 메뉴와 펌웨어 업데이트 내역 기능 등을 제공합니다.관리 탭앞서 선택한 제품의 펌웨어 업데이트 / 테스트 / 복구 기능을 제공합니다. 선택된 제품에 따라 사용할 수 있는 기능이 필터링되어 나타납니다.아래 그림은 컨트롤 테이블을 테스트하는 화면입니다. 검색된 제품을 통신속도, 모델에 따라 분류하여 나타내며, 컨트롤 테이블 값을 수정하며 테스트해볼 수 있습니다.터미널 탭해당 기능은 현재 준비 중이며 추후 업데이트를 통해 지원할 예정입니다.기본 기능펌웨어 업데이트      홈 탭에서 업데이트 및 테스트를 진행할 제품을 선택합니다. (예시에서는 ROBOTIS MINI를 선택함)            “업데이트 및 테스트” 메뉴를 선택합니다.             안내에 따라 제품과 PC를 연결한 후 제품을 켭니다.            연결할 포트를 선택한 후 “다음”버튼을 클릭합니다. (예시에서는 블루투스 시리얼 포트를 사용함)             검색할 통신속도를 선택한 후 “다음”버튼을 클릭합니다.(블루투스 시리얼 포트 사용시 57600bps만 가능함)            관리할 대상이 정상적으로 검색되었는지 확인한 후 다음 버튼을 클릭합니다. (만약, 제품 검색이 정상적으로 이뤄지지 않을 경우 다시 시도 버튼을 클릭하세요.)            업데이트할 내용이 감지되면 아래의 “지금 업데이트” 버튼이 활성화됩니다. 업데이트 내용을 확인한 후 “지금 업데이트”버튼을 클릭합니다.             업데이트가 정상적으로 완료될 때까지 기다린 후, “다음” 버튼을 클릭합니다.            업데이트가 완료되면 “컨트롤 테이블 테스트” 기능이 실행됩니다. (일부 제어기는 업데이트 완료 후 전원이 꺼지며, 대화창이 종료됩니다.)      컨트롤 테이블 테스트  컨트롤 테이블 창이 열려있다는 가정으로 진행합니다.(연결하는 과정은 “업데이트 하기”를 참고하세요.)      컨트롤 테이블 창은 장치를 통신속도, 장치, 순으로 분류합니다. 테스트할 통신속도 그룹과 장치를 선택합니다. (예시에서는 XL-320을 선택함.)            좌측 메뉴에서 “팩토리 리셋” 버튼을 클릭하면 제품을 공장 초기화 상태로 되돌릴 수 있습니다. (이때, ID와 Baudrate 값은 변경하지 않습니다.) 좌측 메뉴에서 “리부팅” 버튼을 클릭하면 해당 다이나믹셀을 재부팅할 수 있습니다. 좌측 메뉴에서 “토크 켜기” 버튼을 클릭하면 해당 다이나믹셀의 토크를 켜거나 끌 수 있습니다.        좌측 메뉴의 “토크 켜기” 버튼을 클릭하여 다이나믹셀의 토크를 켭니다.  컨트롤 테이블 항목에서 “Goal Position”항목을 찾아 선택합니다.      우측 하단의 위치 값 컨트롤을 사용하여 모터를 움직여봅니다.(값을 조정하는 과정에서 모터가 갑작스럽게 움직일 수 있으니 주의하세요.)        좌측 하단의 “통신 상태” LED를 통해 현재 PC와 제품의 통신이 원활히 이루어지고 있는지 확인할 수 있습니다. (초록색 : 정상, 노란색 : 타임아웃, 빨간색 : 데이터 소실)  좌측 하단의 “응답 에러” 메시지를 통해 다이나믹셀의 응답상태를 확인할 수 있습니다.      좌측 하단의 “하드웨어 알람” 메시지를 통해 하드웨어의 에러상태를 확인할 수 있습니다.             일부 다이나믹셀의 경우 프로파일 타입 상태 보기 기능을 제공합니다. 특정 Operating Mode에서 Profile Acceleration 값과 Profile Velocity 값에 따라 프로파일 타입이 결정됩니다. 자세한 사항은 해당 다이나믹셀의 E-Manual을 참고하세요. (지원 가능한 제품 : XM시리즈와 XH시리즈)        컨트롤 테이블에 대한 더 많은 정보를 얻으려면 각 제품의 E-Manual을 참고하세요. (다이나믹셀 E-Manual 바로가기. 다이나믹셀 프로 E-Manual 바로가기)펌웨어 복구      홈 탭에서 펌웨어 복구를 진행할 제품을 선택합니다. (예시에서는 ROBOTIS MINI를 선택함)            “펌웨어 복구” 메뉴를 선택합니다.            안내 메시지를 확인한 후 “다음” 버튼을 클릭하세요.            복구를 진행할 제품을 선택한 후 “다음” 버튼을 클릭합니다. (예시에서는 OpenCM9.04를 선택함.)         안내를 순서대로 따라서 진행합니다. 노란색 경고 문구를 반드시 숙지하세요!      모든 준비를 마치면 “다음” 버튼을 클릭합니다.            연결할 포트를 선택한 후 “다음”버튼을 클릭합니다. (예시에서는 블루투스 시리얼 포트를 사용함)            장치가 연결되면 펌웨어 설치를 위해 부트로더를 감지합니다. “다음” 버튼이 활성화되면 클릭합니다.            설치할 펌웨어 정보를 확인한 후 “다음” 버튼을 클릭합니다.             복구가 정상적으로 완료되면 “마침” 버튼을 클릭합니다.      ",
        "url": " http://localhost:4000/emanual/docs/kr/software/rplus2/manager/getting_started/"
      } ,
  
      "docs-en-dxl-pro-h42-20-s300-r":  {
        "title": "H42-20-S300-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      340g (11.9oz)              Dimensions (W x H x D)      42mm x 84mm x 42mm (1.65 x 3.31 x 1.65)              Resolution      303,750 steps/rev              Gear Ratio      303.8 : 1              Backlash      3.8arcmin (0.06°)              No Load Speed      32.7rpm              No Load Current      0.57A              Continuous Speed      29.2rpm              Continuous Torque      5.1Nm (722 ozf-in)              Continuous Current      1.5A              Output      20W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      51200              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  H42-20-S300-R      51200 (0xC800)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly  FRP42-H110K, FRP42-H120K SetMaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/h42-20-s300-r/"
      } ,
  
      "docs-en-dxl-pro-h54-100-s500-r":  {
        "title": "H54-100-S500-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      732g (25.8oz)              Dimensions (W x H x D)      54mm x 108mm x 54mm (2.13 x 4.25 x 2.13)              Resolution      501,923 steps/rev              Gear Ratio      501.9 : 1              Backlash      3.5arcmin (0.06°)              No Load Speed      33.3rpm              No Load Current      1.13A              Continuous Speed      29.2rpm              Continuous Torque      25.3Nm (3,582 ozf-in)              Continuous Current      5.5A              Output      100W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      53768              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  H54-100-S500-R      53768 (0xD208)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/h54-100-s500-r/"
      } ,
  
      "docs-en-dxl-pro-h54-200-s500-r":  {
        "title": "H54-200-S500-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      855g (30.1oz)              Dimensions (W x H x D)      54mm x 126mm x 54mm (2.13 x 4.96 x 2.13)              Resolution      501,923 steps/rev              Gear Ratio      501.9 : 1              Backlash      3.5arcmin (0.06°)              No Load Speed      33.1rpm              No Load Current      1.65A              Continuous Speed      29.0rpm              Continuous Torque      44.7Nm (6,330 ozf-in)              Continuous Current      9.3A              Output      200W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      54024              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  H54-200-S500-R      54024 (0xD308)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/h54-200-s500-r/"
      } ,
  
      "docs-help":  {
        "title": "",
      "content"	 : "",
        "url": " "
      } ,
  
      "docs-cn":  {
        "title": "",
      "content"	 : "Robotis电子手册用法      找到你正在寻找从在搜索框中手动或类型的顶部菜单栏上的产品。        阅读手册。  经常发现内容DYNAMIXEL控制表",
        "url": " http://localhost:4000/emanual/docs/cn/"
      } ,
  
      "docs-jp":  {
        "title": "",
      "content"	 : "Robotis e-Manualの使い方      探している製品をマニュアル上部のメニューバーから検索したり、検索窓に入力します。        マニュアルを読みました。  頻繁に訪れるコンテンツDYNAMIXELコントロールテーブル",
        "url": " http://localhost:4000/emanual/docs/jp/"
      } ,
  
      "docs-kr-dxl":  {
        "title": "",
      "content"	 : "                                                                              다이나믹셀                                                                                                                                                                AX 시리즈                                              AX 시리즈                                                                                                                                                              EX 시리즈                                              EX 시리즈                                                                                                                                                              DX 시리즈                                              DX 시리즈                                                                                                                                                              RX 시리즈                                              RX 시리즈                                                                                                                                                              MX 시리즈                                              MX 시리즈                                                                                                                                                              X 시리즈                                              X 시리즈                                                                                                                                                              PRO 시리즈                                              PRO 시리즈                                          ",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/"
      } ,
  
      "docs-kr":  {
        "title": "",
      "content"	 : "로보티즈 e-Manual 사용법      찾고자 하는 제품을 매뉴얼 상단의 메뉴바에서 찾거나 검색창에 입력합니다.        매뉴얼을 읽습니다.  자주 찾는 컨텐츠Note DYNAMIXEL 컨트롤 테이블Note 컨텐츠 작성방법",
        "url": " http://localhost:4000/emanual/docs/kr/"
      } ,
  
      "":  {
        "title": "",
      "content"	 : "How to use ROBOTIS e-Manual..      Select an item from the above drop down menu.        Or, search your product using the search bar.  Quick ReferencesNote [DYNAMIXEL Control Table]Note [ROBOTIS ROS Package Install]",
        "url": " http://localhost:4000/emanual/"
      } ,
  
      "docs-en-edu-ollo-inventor":  {
        "title": "OLLO Inventor",
      "content"	 : "IntroductionCreate robots using the controller, geared motors, sensors, and servo motors and perform basic programming.Through 12-session curriculum, learn programming and experiment on wireless communication, the concept of control, sensors and various module applications.Part List  RC-100  LN-101  Servo Motor  IR Sensor  LED Module  Touch SensorQuick StartZIGBee Wireless ControlZIGBeeZIG-100/110 uses ZIGBee for wireless communication. ZIGBee, like Bluetooth, is the communication technology commonly used in Personal Area Network (PAN). The communication quality of ZIGBee is better than that of IR, so it allows many users to control their robots without interferences.Caution Please note that not all products include a zigbee module and may need to be purchased separately.Controller &amp;amp; ZIGBeeOLLO and Bioloid both use the RC-100, which uses IR communication method. To upgrade to the Zigbee communication method, you must purchase the  ZIG-110 set separately. The ZIG-110 set includes one Zig-100 module, which is attached to the RC-100, and one Zig-110 module which is attached to the Controller.Note The modules in a single Zigbee set have been preconfigured to communicate with each other. Therefore, a module from one set may not work with a module from another set. Please be careful not to mix them up.            ZIG-100 installed in RC-100      ZIG-110 installed in CM-100                                          ZIG-110 installed in CM-510      ZIG-100 installed in CM-5                              [Download]Please refer to Inventor Learning Material on How to Assemble or motions during the execution for each example.Also, please refer to How to Download of task code for more information.            I-1      TASK Code      Description                  1. Crossing Gate      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              2. Bump Car      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              3. Probing Car      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              4. Guitar      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot                  I-2      TASK Code      Description                  5. Bird      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              6. Crane      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              7. Combat Car      DownloadDownload      Example program for assembly checkExample program for robot              8. Tank      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot                  I-3      TASK Code      Description                  9. Flag Game      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              10. Battle Bug      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              11. Knight      DownloadDownloadDownload      Example program for assembly checkExample program for programmingExample program for robot              12. Racing Car      DownloadDownloadDownloadDownload      Example program for assembly checkExample program for programming 1Example program for programming 2Example program for robot      ",
        "url": " http://localhost:4000/emanual/docs/en/edu/ollo/inventor/"
      } ,
  
      "docs-en-dxl-pro-l42-10-s300-r":  {
        "title": "L42-10-S300-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      257g (9.0oz)              Dimensions (W x H x D)      42mm x 72mm x 42mm (1.65 x 2.83 x 1.65)              Resolution      4,096 steps/rev              Gear Ratio      303.8 : 1              Backlash      4.6arcmin (0.08°)              No Load Speed      29.7rpm              No Load Current      0.72A              Continuous Speed      27.9rpm              Continuous Torque      1.2Nm (170 ozf-in)              Continuous Current      0.8A              Output      10W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      35072              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      48              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              590      2      Position D Gain      D Gain of Position      RW      -              592      2      Position I Gain      I Gain of Position      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  L42-10-S300-R      35072 (0x8900)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Position PID Gain(594, 592, 590)These Gains are used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. KPD, KPI, KPP stands for Position D Gain, Position I Gain and Position P Gain respectively.            Gain Value Range                  0 ~ 32,767      Goal Position(596)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).When CW/CCW Angle Limit are exceeded the status packet sends an Angle limit error bit (bit 1) to 1. The alarm LED is triggered and initiate shutdown.            Model      Angle Range      Position Range      Description                  L42-10-S300-R      0° ~ 360 °      0 ~ 4,095            Goal Velocity(600)      Position Control ModeSpeed for Goal Position. Range is from 0 ~ 1,023 (0x3FF) and 0.114rpm is a RPM conversion unit. If Goal Velocity is set to ‘0’, maximum rpm will be used.For example, if Goal Velocity is set to ‘1,023’, 1,023 * 0.114rpm = 116.62rpm        Speed Control ModeIt is a velocity to a target direction.-1,023 ~ 1,023 (0x3FF) can be used, and the conversion unit is about 0.114rpm.If a value in the range of 0 ~ 1,023 is used, rotating direction is CCW and ‘0’ will stop rotation.If a value in the range of -1,023 ~ 0 is used, rotating direction is CW and ‘0’ will stop rotation.    Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.  Goal Torque(604)It is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Torque Limit(30) is used as an initial value.Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode and Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      214 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Position(611)This value indicates present Position. For more details, please refer to the Goal Position(596).Present Velocity(615)This value indicates present Velocity.It is a velocity to a target direction.-1,023 ~ 1,023 (0x3FF) can be used, and the conversion unit is about 0.114rpm.For more details, please refer to the Goal Velocity(600).Present Current(621)            Formula                  A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly  FRP42-H110K, FRP42-H120K SetMaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/l42-10-s300-r/"
      } ,
  
      "docs-en-dxl-pro-l54-30-s400-r":  {
        "title": "L54-30-S400-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      612g (21.6oz)              Dimensions (W x H x D)      54mm x 108mm x 54mm (2.13 x 4.25 x 2.13)              Resolution      288,395 steps/rev              Gear Ratio      400.5 : 1              Backlash      4.6arcmin (0.08°)              No Load Speed      28.7rpm              No Load Current      1.19A              Continuous Speed      26.9rpm              Continuous Torque      2.5Nm (354 ozf-in)              Continuous Current      1.6A              Output      30W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      37928              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  L54-30-S400-R      37928 (0x9428)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/l54-30-s400-r/"
      } ,
  
      "docs-en-dxl-pro-l54-30-s500-r":  {
        "title": "L54-30-S500-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      591g (20.8oz)              Dimensions (W x H x D)      54mm x 108mm x 54mm (2.13 x 4.25 x 2.13)              Resolution      361,384 steps/rev              Gear Ratio      501.9 : 1              Backlash      5.0arcmin (0.08°)              No Load Speed      23.0rpm              No Load Current      1.1A              Continuous Speed      21.0rpm              Continuous Torque      5.4Nm (764 ozf-in)              Continuous Current      1.6A              Output      30W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      37896              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  L54-30-S500-R      37896 (0x9408)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/l54-30-s500-r/"
      } ,
  
      "docs-en-dxl-pro-l54-50-s290-r":  {
        "title": "L54-50-S290-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      656g (23.1oz)              Dimensions (W x H x D)      54mm x 108mm x 54mm (2.13 x 4.25 x 2.13)              Resolution      207,692 steps/rev              Gear Ratio      288.5 : 1              Backlash      4.6arcmin (0.08°)              No Load Speed      26.0rpm              No Load Current      1.05A              Continuous Speed      22.1rpm              Continuous Torque      4.8Nm (680 ozf-in)              Continuous Current      1.9A              Output      50W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      38176              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  L54-50-S290-R      38176 (0x9520)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/l54-50-s290-r/"
      } ,
  
      "docs-en-dxl-pro-l54-50-s500-r":  {
        "title": "L54-50-S500-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      656g (23.1oz)              Dimensions (W x H x D)      54mm x 108mm x 54mm (2.13 x 4.25 x 2.13)              Resolution      361,384 steps/rev              Gear Ratio      501.9 : 1              Backlash      5.0arcmin (0.08°)              No Load Speed      16.0rpm              No Load Current      0.7A              Continuous Speed      13.7rpm              Continuous Torque      14.0Nm (1,982 ozf-in)              Continuous Current      1.9A              Output      100W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      38152              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  L54-50-S500-R      38152 (0x9508)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/l54-50-s500-r/"
      } ,
  
      "docs-en-parts-interface-ln-101":  {
        "title": "LN-101",
      "content"	 : "USB DownloaderHow to UseUSB Downloader is used to connect the USB port of PC and the 4-pin port of the controller through serial communication.Serial Communication  Download Task Code written in PC using the controller  Print out the result of task code execution on the screen of PC  Virtual robot control of RoboPlusAvailable Controller  CM-100  CM-150  CM-200  CM-700  OpenCM9.04CNote Difference in voltage may cause unstable LN-101 connections. Ensure that both connecting equipment and PC are properly grounded.Checking DriverHow to check whether the USB downloader(LN-101) driver is installed correctly is as follows.  Connect USB Downloader (LN-101) to the USB Port of PC.  Select Manage in the popped-up menu shown by right-clicking My Computer.  Check USB Serial Converter in Universal Serial Bus Controllers of Device Manager.  Check USB Serial Port(COMx) in the list of Ports(COM &amp;amp; LPT). COM Port number may vary depending on each system.Install Driver ManuallyIf you installed RoboPlus, FTDI Driver (USB2Dynamixel, USB Downloader (LN-101) driver) is installed together automatically. If you didn’t install the RoboPlus yet, or if the driver is not installed appropriately, please install it manually according to following procedures.  Connect a device to PC. If the driver is not installed yet, Found New Hardware Wizard will be popped up. Install from a list or specific location (Advanced)(S) -&amp;gt; Next(N)  Decide the location of Driver. If RoboPlus S/W has been installed automatically, the driver is in LN101 folder of RoboPlus Installation folder. Or if you want to install the newest version, download the newest version VCP driver from FTDI Driver Download page.    Click the Next(N) button to start the installation. Installation of USB Serial Converter driver is completed.  Install the USB Serial Port driver in the same way.VideoSetting up the port",
        "url": " http://localhost:4000/emanual/docs/en/parts/interface/ln-101/"
      } ,
  
      "docs-en-dxl-pro-m42-10-s260-r":  {
        "title": "M42-10-S260-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      269g (9.5oz)              Dimensions (W x H x D)      42mm x 72mm x 42mm (1.65 x 2.83 x 1.65)              Resolution      263,187 steps/rev              Gear Ratio      257.0 : 1              Backlash      4.2arcmin (0.07°)              No Load Speed      28.0rpm              No Load Current      0.52A              Continuous Speed      26.0rpm              Continuous Torque      1.7Nm (241 ozf-in)              Continuous Current      0.6A              Output      10W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      43288              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  H42-20-S300-R      43288 (0xA918)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly  FRP42-H110K, FRP42-H120K SetMaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/m42-10-s260-r/"
      } ,
  
      "docs-en-dxl-pro-m54-40-s250-r":  {
        "title": "M54-40-S250-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      710g (25.0oz)              Dimensions (W x H x D)      54mm x 108mm x 54mm (2.13 x 4.25 x 2.13)              Resolution      251,417 steps/rev              Gear Ratio      251.4 : 1              Backlash      3.8arcmin (0.06°)              No Load Speed      28.4rpm              No Load Current      1.32A              Continuous Speed      24.2rpm              Continuous Torque      3.9Nm (552 ozf-in)              Continuous Current      1.9A              Output      40W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      46096              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  M54-40-S250-R      46096 (0xB410)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/m54-40-s250-r/"
      } ,
  
      "docs-en-dxl-pro-m54-60-s250-r":  {
        "title": "M54-60-S250-R",
      "content"	 : "Specifications            Item      Specifications                  Motor      BLDC              Baud Rate      9600 bps ~ 10.5 Mbps              Operating Modes      Torque Control ModeVelocity Control ModePosition Control ModeExtended Position Control Mode              Weight      853g (30.0oz)              Dimensions (W x H x D)      54mm x 126mm x 54mm (2.13 x 4.96 x 2.13)              Resolution      251,417 steps/rev              Gear Ratio      251.4 : 1              Backlash      3.8arcmin (0.06°)              No Load Speed      33.1rpm              No Load Current      1.25A              Continuous Speed      28.3rpm              Continuous Torque      10.1Nm (1,430 ozf-in)              Continuous Current      3.0A              Output      60W              Operating Temperature      5°C ~ 55°C              Nominal Voltage      24V              Command Signal      Digital Packet              Protocol Type      RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multidrop BUS              ID      0 ~ 252      Performance GraphNote The max torque measurement method for the Stall Torque and Performance Graph is different. Stall torque is measured from the max torque that it can reach. This is generally how RC servos measure their torque. For the Performance graph with the N-T curves, it is measured with the load gradually increasing. The motor operation environment is closer to the performance graph, not stall torque method. This is probably why the performance graph is being broadly used in the industrial market. This is why the max torque of the performance grap can actually be less than the stall torque.Caution When connecting to power supply, it is recommended using ROBOTIS controller or SMPS2DYNAMIXEL.Do not connect or disconnect DYNAMIXEL when power is being supplied.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      46352              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Speed      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              11      1      Operating Mode      Operating Mode      RW      3              13      4      Homing Offset      Home Position Offset      RW      0              17      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      50              21      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              22      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      400              24      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      150              26      4      Acceleration Limit      Maximum Accleration Limit      RW      -              30      2      Torque Limit      Maximum Torque Limit      RW      -              32      4      Velocity Limit      Maximum Velocity Limit      RW      -              36      4      Max Position Limit      Maximum Position Limit      RW      -              40      4      Min Position Limit      Minimum Position Limit      RW      -              44      1      External Port Mode 1      External Port Mode 1      RW      0              45      1      External Port Mode 2      External Port Mode 2      RW      0              46      1      External Port Mode 3      External Port Mode 3      RW      0              47      1      External Port Mode 4      External Port Mode 4      RW      0              48      1      Shutdown      Shutdown Error Information      RW      58              49      2      Indirect Address 1      Indirect Address 1      RW      634              51      2      Indirect Address 2      Indirect Address 2      RW      635              53      2      Indirect Address 3      Indirect Address 3      RW      636              …      2      Indirect Address N      Indirect Address N      RW      …              559      2      Indirect Address 256      Indirect Address 256      RW      889      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  562      1      Torque Enable      Motor Torque On/Off      RW      0              563      1      LED Red      Red LED Intensity Value      RW      0              564      1      LED Green      Green LED Intensity Value      RW      0              565      1      LED Blue      Blue LED Intensity Value      RW      0              586      2      Velocity I Gain      I Gain of Velocity      RW      -              588      2      Velocity P Gain      P Gain of Velocity      RW      -              594      2      Position P Gain      P Gain of Position      RW      -              596      4      Goal Position      Target Position Value      RW      -              600      4      Goal Velocity      Target Velocity Value      RW      0              604      2      Goal Torque      Target Current Value      RW      0              606      4      Goal Acceleration      Target Acceleration Value      RW      0              610      1      Moving      Movement Status      R      -              611      4      Present Position      Present Position Value      R      -              615      4      Present Velocity      Present Velocity Value      R      -              621      2      Present Current      Present Current Value      R      -              623      2      Present Input Voltage      Present Input Voltage      R      -              625      1      Present Temperature      Present Internal Temperature      R      -              626      2      External Port Data 1      External Port Data 1      R/RW      0              628      2      External Port Data 2      External Port Data 2      R/RW      0              630      2      External Port Data 3      External Port Data 3      R/RW      0              632      2      External Port Data 4      External Port Data 4      R/RW      0              634      1      Indirect Data 1      Indirect Data 1      RW      0              635      1      Indirect Data 2      Indirect Data 2      RW      0              636      1      Indirect Data 3      Indirect Data 3      RW      0              …      1      Indirect Data N      Indirect Data N      RW      0              889      1      Indirect Data 256      Indirect Data 256      RW      0              890      1      Registered Instruction      Check Reception of Instruction      R      0              891      1      Status Return Level      Select Types of Status Return      RW      2              892      1      Hardware Error Status      Hardware Error Status      R      0      Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(562) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.            Model Name      Model Number                  M54-60-S250-R      46352 (0xB510)      Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(8)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate                  8      10.5M              7      4.5M              6      4M              5      3M              4      2M              3      1M              2      115,200              1(Default)      57,600              0      9,600      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(9)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Operating Mode(11)            Value      Operating Mode      Description                  0      Torque Control Mode      This mode only controls Torque. Speed and Position will not be controlled.              1      Velocity Control Mode      This mode controls Velocity and Torque. Position will not be controlled.              3(Default)      Position Control Mode      This mode controls Position, Velocity and Torque.              4      Extended Position Control Mode      This mode controls Position, Velocity and Torque. Multi-turn is enabled.      Homing Offset(13)Users can adjust the Home position by setting Homing Offset(13). The Homing Offset value is added to the Present Position(611).Present Position(611) = Actual Position + Homing Offset(13).            Value Range                  -2,147,483,648 ~ 2,147,483,647      Moving Threshold(17)If Present Velocity(615) is bigger than this value, Moving(610) is set to ‘1’ and otherwise Moving(610) is cleared to ‘0’. This value determines whether Dynamixel is in motion or not.            Value Range                  0 ~ 2,147,483,647      Temperature Limit(21)This value limits operating temperature. When the Present Temperature(625) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(21), the Over Heating Error Bit(Bit 2) in the Hardware Error Status(892) will be set. If Overheating Error Bit(Bit 2) is configured in the Shutdown(48) when Over Heating Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(24, 22)These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(623) exceeds the range of Max Voltage Limit(36) and Min Voltage Limit(40), Input Voltage Error Bit(Bit 0) in the Hardware Error Status(892) will be set to ‘1’. If Input Voltage Error Bit(Bit 0) is configured in the Shutdown(48) when Input Voltage Error occurs, Torque Enable(562) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(48) section.            Unit      Value Range      Description                  About 0.1V      0 ~ 400      0 ~ 40.0V      Acceleration Limit(26)This value indicates acceleration limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Torque Limit(30)This value indicates torque limit. Goal Torque(604) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 32,767      Velocity Limit(32)This value indicates velocity limit. The Goal Velocity(600) can’t exceed this value.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet.            Value Range                  0 ~ 2,147,483,647      Min/Max Position Limits(40, 36)These values limit maximum and minimum target positions. The Goal Position(596) can’t exceed these values.Trying to write an exceeding value will fail and result in receiving a Limit Error Bit from the Status Packet. In Extended Position Control Mode, these limits will be ignored.            Model Name      Value Range                  H54-200-S500-RH54-100-S500-R      -250,961 ~ 250,961              H42-20-S300-R      -151,875 ~ 151,875              M54-60-S250-RM54-40-S250-R      -125,708 ~ 125,708              M42-10-S260-R      -131,593 ~ 131,593              L54-50-S290-R      -103,846 ~ 103,846              L54-50-S500-RL54-30-S500-R      -180,692 ~ 180,692              L54-30-S400-R      -144,197 ~ 144,197      External Port Mode(44 ~ 47)/Data(626 ~ 632)Dynamixel PRO is equipped with multi-purpose expansion ports.            Item      Range                  Voltage      0 ~ 3.3V              Current      0 ~ 5mA        Analog input mode: analog values from an external port get converted to digital. These values are automatically updated in External port data(626 ~ 632).  Output mode: can adjust external port voltage 0V or 3.3V. External port data value of 0 is 0V, 1 for 3.3V.  Pull-up input mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-up. Depending on needs an external strong pull-up is acceptable.  Pull-up output mode: Verify port value of 0 or 1. External port data value changes by following voltage from expansion port; 0V to 0. 3.3V to 1. This becomes a weak pull-down. Depending on needs an external strong pull-down is acceptable.External expansion port location and pin functionRemove bolts and cover plate to reveal External Port connector.            Pin 1      Pin 2      Pin 3      Pin 4      Pin 5      Pin 6                  GND      3.3V      PORT1      PORT2      PORT3      PORT4      Shutdown(48)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(48), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(562) is cleared to ‘0’ and the motor output becomes 0[%]. In order to reuse Dynamixel Pro in shutdown status, REBOOT has to be done. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      -              Bit 6      -      -              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      Motor Hall Sensor Error      Motor hall sensor value exceeds normal range              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 562 ~ 892).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, if address 563(LED Red) is allocated to Indirect Address 1(49), Indirect Data 1(634) will have the exactly same value of LED Red(563).Example 1 Allocating 1 byte LED(563) to Indirect Data 1(634).  Indirect Address 1(49) : change the value to ‘563’ which is the address of LED Red.  Set Indirect Data 1(634) to ‘1’ : LED Red(563) also becomes ‘1’ and Red LED will be turned on.  Set Indirect Data 1(634) to ‘0’ : LED Red(563) also becomes ‘0’ and Red LED will be turned off.Example 2 Allocating Size 4 byte Goal Position(596) to Indirect Data 2(635), 4 sequential bytes have to be allocated.  Indirect Address 2(51) : change the value to ‘596’ which is the first address of Goal Position.  Indirect Address 3(53) : change the value to ‘597’ which is the second address of Goal Position.  Indirect Address 4(55) : change the value to ‘598’ which is the third address of Goal Position.  Indirect Address 5(57) : change the value to ‘599’ which is the fourth address of Goal Position.  Set 4 byte value 305,419,896(0x12345678) to Indirect Data 2 : Goal Position(596) also becomes 305,419,896(0x12345678) as below.            Indirect Data Address      Goal Position Address      Saved HEX Value                  635      596      0x78              636      597      0x56              637      598      0x34              638      599      0x12      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Torque Enable(562)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).RGB LED(563)Controls the RGB LED on Dynamixel PRO.            Address      Color      Range                  563      Red      0 ~ 255              564      Green      0 ~ 255              565      Blue      0 ~ 255      Velocity PI Gain(588, 586)These values indicate P and I Gains of Velocity Control Mode. The I Gain includes sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and Velocity I Gain is abbreviated to KVI.            Gain Value Range                  0 ~ 32,767      Note KPA stands for Anti-windup Gain that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position P Gain(594)This P Gain is used in Position Control Mode. Below figure is a block diagram describing the Position Control Mode. The Position Controller is cascaded with the Velocity Controller. KPP stands for Position P Gain.            Gain Value Range                  0 ~ 32,767      Goal Position(596), Present Position(611)Target position can be set with Goal Position(596). This value can’t be smaller than the Min Position Limit(40) or larger than Max Position Limit(36).            Model      Angle Range      Position Range      Description                  H54-200-S500-RH54-100-S500-R      -180° ~ 180 °      -250,961.5 ~ 250,961.5                    H42-20-S300-R      -180° ~ 180 °      -151,875 ~ 151,875            Goal Velocity(600)Goal Velocity(600) can be used to set a target velocity and this value cannot exceed Velocity Limit (32).In case of Position Control Mode or Extended Position Control Mode, Goal Velocity will be used to limit the velocity.However, if Goal Velocity is set to ‘0’, Velocity Limit(32) will be used to limit the velocity. (Please refer to the block diagram of Position P Gain)The Goal Velocity stands for the RPM of the motor before the reduction gears and output RPM after the reduction gears can be calculated using below scale factor.Output RPM = Goal Velocity * Scale Factor            Model      Scale Factor(RPM)                  H54-200-S500-RH54-100-S500-R      0.00199234              H42-20-S300-R      0.00329218              M54-60-S250-RM54-40-S250-R      0.00397746              M42-10-S260-R      0.00389076              L54-50-S290-R      0.00346667              L54-50-S500-RL54-30-S500-R      0.00199234              L54-30-S400-R      0.00249657      Goal Torque(604)Goal torque (604) can be used to set a target torque and this value cannot exceed Torque Limit(30).When the Operating Mode(11) is set other than Torque Control Mode, Goal Torque will be used to limit the torque.However, if Goal Torque is set to ‘0’, Torque Limit(30) will be used to limit the torque. (Please refer to the block diagram of Position Gain or Velocity Gain)The relationship between torque, current, and goal torque is shown below.            Model      Formula                  PRO 54      A = V * 33,000 / 2,048A : Current[mA]V : Present Current/Goal Torque              PRO 42      A = V * 8,250 / 2,048A : Current[mA]V : Present Current/Goal Torque      Goal Acceleration(606)Goal Acceleration(606) can be used to set a target acceleration. This value is used in Velocity Control Mode, Position Control Mode and Extended Position Control Mode. The profile control will be enabled when both Goal Acceleration(606) and Goal Velocity(600) are not ‘0’.Please refer to the Goal Velocity(600) for RPM conversion constant.            Value Range      Unit                  -2,147,483,647 ~ 2,147,483,647      58,000 RPM2 @ Core Motor      Moving(610)This value indicates whether Dynamixel Pro is in motion or not. If absolute value of Present Velocity(615) is greater than Moving Threshold(17), Moving(610) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(615) while Profile is in progress with Goal Position(596) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(596) instruction is being processed)      Present Velocity(615)This value indicates present Velocity. For more details, please refer to the Goal Velocity(600).Present Current(621)This value indicates present Current. For more details, please refer to the Goal Torque(604).Present Input Voltage(623)This value indicates present voltage that is being supplied. For more details, please refer to the Min/Max Voltage Limit(24, 22).Present Temperature (625)This value indicates present internal Temperature. For more details, please refer to the Temperature Limit(21).Registered Instruction(890)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Status Return Level(891)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Hardware Error Status(892)This value indicates hardware error status. For more details, please refer to the Shutdown(48).How to AssembleOption Frame Assembly      FRP54-H110K, FRP54-H120K Set        FRP54-H210K, FRP54-H220K Set  MaintenanceReferenceNote Pro Compatibility GuideQuick StartDrawingsDownload PDF, DWG, STEP, IGES",
        "url": " http://localhost:4000/emanual/docs/en/dxl/pro/m54-60-s250-r/"
      } ,
  
      "assets-js-main-min-js":  {
        "title": "",
      "content"	 : "/*! * Minimal Mistakes Jekyll Theme 4.4.1 by Michael Rose * Copyright 2017 Michael Rose - mademistakes.com | @mmistakes * Licensed under MIT */!function(e,t){&quot;object&quot;==typeof module&amp;&amp;&quot;object&quot;==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(&quot;jQuery requires a window with a document&quot;);return t(e)}:t(e)}(&quot;undefined&quot;!=typeof window?window:this,function(e,t){function n(e){var t=!!e&amp;&amp;&quot;length&quot;in e&amp;&amp;e.length,n=pe.type(e);return&quot;function&quot;===n||pe.isWindow(e)?!1:&quot;array&quot;===n||0===t||&quot;number&quot;==typeof t&amp;&amp;t&gt;0&amp;&amp;t-1 in e}function r(e,t,n){if(pe.isFunction(t))return pe.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return pe.grep(e,function(e){return e===t!==n});if(&quot;string&quot;==typeof t){if(Te.test(t))return pe.filter(t,e,n);t=pe.filter(t,e)}return pe.grep(e,function(e){return pe.inArray(e,t)&gt;-1!==n})}function i(e,t){do e=e[t];while(e&amp;&amp;1!==e.nodeType);return e}function o(e){var t={};return pe.each(e.match(je)||[],function(e,n){t[n]=!0}),t}function a(){re.addEventListener?(re.removeEventListener(&quot;DOMContentLoaded&quot;,s),e.removeEventListener(&quot;load&quot;,s)):(re.detachEvent(&quot;onreadystatechange&quot;,s),e.detachEvent(&quot;onload&quot;,s))}function s(){(re.addEventListener||&quot;load&quot;===e.event.type||&quot;complete&quot;===re.readyState)&amp;&amp;(a(),pe.ready())}function l(e,t,n){if(void 0===n&amp;&amp;1===e.nodeType){var r=&quot;data-&quot;+t.replace(He,&quot;-$1&quot;).toLowerCase();if(n=e.getAttribute(r),&quot;string&quot;==typeof n){try{n=&quot;true&quot;===n?!0:&quot;false&quot;===n?!1:&quot;null&quot;===n?null:+n+&quot;&quot;===n?+n:_e.test(n)?pe.parseJSON(n):n}catch(i){}pe.data(e,t,n)}else n=void 0}return n}function u(e){var t;for(t in e)if((&quot;data&quot;!==t||!pe.isEmptyObject(e[t]))&amp;&amp;&quot;toJSON&quot;!==t)return!1;return!0}function c(e,t,n,r){if(Ie(e)){var i,o,a=pe.expando,s=e.nodeType,l=s?pe.cache:e,u=s?e[a]:e[a]&amp;&amp;a;if(u&amp;&amp;l[u]&amp;&amp;(r||l[u].data)||void 0!==n||&quot;string&quot;!=typeof t)return u||(u=s?e[a]=ne.pop()||pe.guid++:a),l[u]||(l[u]=s?{}:{toJSON:pe.noop}),&quot;object&quot;!=typeof t&amp;&amp;&quot;function&quot;!=typeof t||(r?l[u]=pe.extend(l[u],t):l[u].data=pe.extend(l[u].data,t)),o=l[u],r||(o.data||(o.data={}),o=o.data),void 0!==n&amp;&amp;(o[pe.camelCase(t)]=n),&quot;string&quot;==typeof t?(i=o[t],null==i&amp;&amp;(i=o[pe.camelCase(t)])):i=o,i}}function d(e,t,n){if(Ie(e)){var r,i,o=e.nodeType,a=o?pe.cache:e,s=o?e[pe.expando]:pe.expando;if(a[s]){if(t&amp;&amp;(r=n?a[s]:a[s].data)){pe.isArray(t)?t=t.concat(pe.map(t,pe.camelCase)):t in r?t=[t]:(t=pe.camelCase(t),t=t in r?[t]:t.split(&quot; &quot;)),i=t.length;for(;i--;)delete r[t[i]];if(n?!u(r):!pe.isEmptyObject(r))return}(n||(delete a[s].data,u(a[s])))&amp;&amp;(o?pe.cleanData([e],!0):de.deleteExpando||a!=a.window?delete a[s]:a[s]=void 0)}}}function f(e,t,n,r){var i,o=1,a=20,s=r?function(){return r.cur()}:function(){return pe.css(e,t,&quot;&quot;)},l=s(),u=n&amp;&amp;n[3]||(pe.cssNumber[t]?&quot;&quot;:&quot;px&quot;),c=(pe.cssNumber[t]||&quot;px&quot;!==u&amp;&amp;+l)&amp;&amp;Me.exec(pe.css(e,t));if(c&amp;&amp;c[3]!==u){u=u||c[3],n=n||[],c=+l||1;do o=o||&quot;.5&quot;,c/=o,pe.style(e,t,c+u);while(o!==(o=s()/l)&amp;&amp;1!==o&amp;&amp;--a)}return n&amp;&amp;(c=+c||+l||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&amp;&amp;(r.unit=u,r.start=c,r.end=i)),i}function p(e){var t=$e.split(&quot;|&quot;),n=e.createDocumentFragment();if(n.createElement)for(;t.length;)n.createElement(t.pop());return n}function h(e,t){var n,r,i=0,o=&quot;undefined&quot;!=typeof e.getElementsByTagName?e.getElementsByTagName(t||&quot;*&quot;):&quot;undefined&quot;!=typeof e.querySelectorAll?e.querySelectorAll(t||&quot;*&quot;):void 0;if(!o)for(o=[],n=e.childNodes||e;null!=(r=n[i]);i++)!t||pe.nodeName(r,t)?o.push(r):pe.merge(o,h(r,t));return void 0===t||t&amp;&amp;pe.nodeName(e,t)?pe.merge([e],o):o}function m(e,t){for(var n,r=0;null!=(n=e[r]);r++)pe._data(n,&quot;globalEval&quot;,!t||pe._data(t[r],&quot;globalEval&quot;))}function g(e){Be.test(e.type)&amp;&amp;(e.defaultChecked=e.checked)}function v(e,t,n,r,i){for(var o,a,s,l,u,c,d,f=e.length,v=p(t),y=[],b=0;f&gt;b;b++)if(a=e[b],a||0===a)if(&quot;object&quot;===pe.type(a))pe.merge(y,a.nodeType?[a]:a);else if(Ue.test(a)){for(l=l||v.appendChild(t.createElement(&quot;div&quot;)),u=(ze.exec(a)||[&quot;&quot;,&quot;&quot;])[1].toLowerCase(),d=Xe[u]||Xe._default,l.innerHTML=d[1]+pe.htmlPrefilter(a)+d[2],o=d[0];o--;)l=l.lastChild;if(!de.leadingWhitespace&amp;&amp;We.test(a)&amp;&amp;y.push(t.createTextNode(We.exec(a)[0])),!de.tbody)for(a=&quot;table&quot;!==u||Ye.test(a)?&quot;&quot;!==d[1]||Ye.test(a)?0:l:l.firstChild,o=a&amp;&amp;a.childNodes.length;o--;)pe.nodeName(c=a.childNodes[o],&quot;tbody&quot;)&amp;&amp;!c.childNodes.length&amp;&amp;a.removeChild(c);for(pe.merge(y,l.childNodes),l.textContent=&quot;&quot;;l.firstChild;)l.removeChild(l.firstChild);l=v.lastChild}else y.push(t.createTextNode(a));for(l&amp;&amp;v.removeChild(l),de.appendChecked||pe.grep(h(y,&quot;input&quot;),g),b=0;a=y[b++];)if(r&amp;&amp;pe.inArray(a,r)&gt;-1)i&amp;&amp;i.push(a);else if(s=pe.contains(a.ownerDocument,a),l=h(v.appendChild(a),&quot;script&quot;),s&amp;&amp;m(l),n)for(o=0;a=l[o++];)Re.test(a.type||&quot;&quot;)&amp;&amp;n.push(a);return l=null,v}function y(){return!0}function b(){return!1}function x(){try{return re.activeElement}catch(e){}}function w(e,t,n,r,i,o){var a,s;if(&quot;object&quot;==typeof t){&quot;string&quot;!=typeof n&amp;&amp;(r=r||n,n=void 0);for(s in t)w(e,s,n,r,t[s],o);return e}if(null==r&amp;&amp;null==i?(i=n,r=n=void 0):null==i&amp;&amp;(&quot;string&quot;==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),i===!1)i=b;else if(!i)return e;return 1===o&amp;&amp;(a=i,i=function(e){return pe().off(e),a.apply(this,arguments)},i.guid=a.guid||(a.guid=pe.guid++)),e.each(function(){pe.event.add(this,t,i,r,n)})}function C(e,t){return pe.nodeName(e,&quot;table&quot;)&amp;&amp;pe.nodeName(11!==t.nodeType?t:t.firstChild,&quot;tr&quot;)?e.getElementsByTagName(&quot;tbody&quot;)[0]||e.appendChild(e.ownerDocument.createElement(&quot;tbody&quot;)):e}function T(e){return e.type=(null!==pe.find.attr(e,&quot;type&quot;))+&quot;/&quot;+e.type,e}function k(e){var t=it.exec(e.type);return t?e.type=t[1]:e.removeAttribute(&quot;type&quot;),e}function E(e,t){if(1===t.nodeType&amp;&amp;pe.hasData(e)){var n,r,i,o=pe._data(e),a=pe._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i&gt;r;r++)pe.event.add(t,n,s[n][r])}a.data&amp;&amp;(a.data=pe.extend({},a.data))}}function S(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!de.noCloneEvent&amp;&amp;t[pe.expando]){i=pe._data(t);for(r in i.events)pe.removeEvent(t,r,i.handle);t.removeAttribute(pe.expando)}&quot;script&quot;===n&amp;&amp;t.text!==e.text?(T(t).text=e.text,k(t)):&quot;object&quot;===n?(t.parentNode&amp;&amp;(t.outerHTML=e.outerHTML),de.html5Clone&amp;&amp;e.innerHTML&amp;&amp;!pe.trim(t.innerHTML)&amp;&amp;(t.innerHTML=e.innerHTML)):&quot;input&quot;===n&amp;&amp;Be.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&amp;&amp;(t.value=e.value)):&quot;option&quot;===n?t.defaultSelected=t.selected=e.defaultSelected:&quot;input&quot;!==n&amp;&amp;&quot;textarea&quot;!==n||(t.defaultValue=e.defaultValue)}}function N(e,t,n,r){t=oe.apply([],t);var i,o,a,s,l,u,c=0,d=e.length,f=d-1,p=t[0],m=pe.isFunction(p);if(m||d&gt;1&amp;&amp;&quot;string&quot;==typeof p&amp;&amp;!de.checkClone&amp;&amp;rt.test(p))return e.each(function(i){var o=e.eq(i);m&amp;&amp;(t[0]=p.call(this,i,o.html())),N(o,t,n,r)});if(d&amp;&amp;(u=v(t,e[0].ownerDocument,!1,e,r),i=u.firstChild,1===u.childNodes.length&amp;&amp;(u=i),i||r)){for(s=pe.map(h(u,&quot;script&quot;),T),a=s.length;d&gt;c;c++)o=u,c!==f&amp;&amp;(o=pe.clone(o,!0,!0),a&amp;&amp;pe.merge(s,h(o,&quot;script&quot;))),n.call(e[c],o,c);if(a)for(l=s[s.length-1].ownerDocument,pe.map(s,k),c=0;a&gt;c;c++)o=s[c],Re.test(o.type||&quot;&quot;)&amp;&amp;!pe._data(o,&quot;globalEval&quot;)&amp;&amp;pe.contains(l,o)&amp;&amp;(o.src?pe._evalUrl&amp;&amp;pe._evalUrl(o.src):pe.globalEval((o.text||o.textContent||o.innerHTML||&quot;&quot;).replace(ot,&quot;&quot;)));u=i=null}return e}function A(e,t,n){for(var r,i=t?pe.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||pe.cleanData(h(r)),r.parentNode&amp;&amp;(n&amp;&amp;pe.contains(r.ownerDocument,r)&amp;&amp;m(h(r,&quot;script&quot;)),r.parentNode.removeChild(r));return e}function j(e,t){var n=pe(t.createElement(e)).appendTo(t.body),r=pe.css(n[0],&quot;display&quot;);return n.detach(),r}function L(e){var t=re,n=ut[e];return n||(n=j(e,t),&quot;none&quot;!==n&amp;&amp;n||(lt=(lt||pe(&quot;&quot;)).appendTo(t.documentElement),t=(lt[0].contentWindow||lt[0].contentDocument).document,t.write(),t.close(),n=j(e,t),lt.detach()),ut[e]=n),n}function D(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function I(e){if(e in kt)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=Tt.length;n--;)if(e=Tt[n]+t,e in kt)return e}function _(e,t){for(var n,r,i,o=[],a=0,s=e.length;s&gt;a;a++)r=e[a],r.style&amp;&amp;(o[a]=pe._data(r,&quot;olddisplay&quot;),n=r.style.display,t?(o[a]||&quot;none&quot;!==n||(r.style.display=&quot;&quot;),&quot;&quot;===r.style.display&amp;&amp;qe(r)&amp;&amp;(o[a]=pe._data(r,&quot;olddisplay&quot;,L(r.nodeName)))):(i=qe(r),(n&amp;&amp;&quot;none&quot;!==n||!i)&amp;&amp;pe._data(r,&quot;olddisplay&quot;,i?n:pe.css(r,&quot;display&quot;))));for(a=0;s&gt;a;a++)r=e[a],r.style&amp;&amp;(t&amp;&amp;&quot;none&quot;!==r.style.display&amp;&amp;&quot;&quot;!==r.style.display||(r.style.display=t?o[a]||&quot;&quot;:&quot;none&quot;));return e}function H(e,t,n){var r=xt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||&quot;px&quot;):t}function O(e,t,n,r,i){for(var o=n===(r?&quot;border&quot;:&quot;content&quot;)?4:&quot;width&quot;===t?1:0,a=0;4&gt;o;o+=2)&quot;margin&quot;===n&amp;&amp;(a+=pe.css(e,n+Pe[o],!0,i)),r?(&quot;content&quot;===n&amp;&amp;(a-=pe.css(e,&quot;padding&quot;+Pe[o],!0,i)),&quot;margin&quot;!==n&amp;&amp;(a-=pe.css(e,&quot;border&quot;+Pe[o]+&quot;Width&quot;,!0,i))):(a+=pe.css(e,&quot;padding&quot;+Pe[o],!0,i),&quot;padding&quot;!==n&amp;&amp;(a+=pe.css(e,&quot;border&quot;+Pe[o]+&quot;Width&quot;,!0,i)));return a}function M(e,t,n){var r=!0,i=&quot;width&quot;===t?e.offsetWidth:e.offsetHeight,o=ht(e),a=de.boxSizing&amp;&amp;&quot;border-box&quot;===pe.css(e,&quot;boxSizing&quot;,!1,o);if(0&gt;=i||null==i){if(i=mt(e,t,o),(0&gt;i||null==i)&amp;&amp;(i=e.style[t]),dt.test(i))return i;r=a&amp;&amp;(de.boxSizingReliable()||i===e.style[t]),i=parseFloat(i)||0}return i+O(e,t,n||(a?&quot;border&quot;:&quot;content&quot;),r,o)+&quot;px&quot;}function P(e,t,n,r,i){return new P.prototype.init(e,t,n,r,i)}function q(){return e.setTimeout(function(){Et=void 0}),Et=pe.now()}function F(e,t){var n,r={height:e},i=0;for(t=t?1:0;4&gt;i;i+=2-t)n=Pe[i],r[&quot;margin&quot;+n]=r[&quot;padding&quot;+n]=e;return t&amp;&amp;(r.opacity=r.width=e),r}function B(e,t,n){for(var r,i=(W.tweeners[t]||[]).concat(W.tweeners[&quot;*&quot;]),o=0,a=i.length;a&gt;o;o++)if(r=i[o].call(n,t,e))return r}function z(e,t,n){var r,i,o,a,s,l,u,c,d=this,f={},p=e.style,h=e.nodeType&amp;&amp;qe(e),m=pe._data(e,&quot;fxshow&quot;);n.queue||(s=pe._queueHooks(e,&quot;fx&quot;),null==s.unqueued&amp;&amp;(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,pe.queue(e,&quot;fx&quot;).length||s.empty.fire()})})),1===e.nodeType&amp;&amp;(&quot;height&quot;in t||&quot;width&quot;in t)&amp;&amp;(n.overflow=[p.overflow,p.overflowX,p.overflowY],u=pe.css(e,&quot;display&quot;),c=&quot;none&quot;===u?pe._data(e,&quot;olddisplay&quot;)||L(e.nodeName):u,&quot;inline&quot;===c&amp;&amp;&quot;none&quot;===pe.css(e,&quot;float&quot;)&amp;&amp;(de.inlineBlockNeedsLayout&amp;&amp;&quot;inline&quot;!==L(e.nodeName)?p.zoom=1:p.display=&quot;inline-block&quot;)),n.overflow&amp;&amp;(p.overflow=&quot;hidden&quot;,de.shrinkWrapBlocks()||d.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],Nt.exec(i)){if(delete t[r],o=o||&quot;toggle&quot;===i,i===(h?&quot;hide&quot;:&quot;show&quot;)){if(&quot;show&quot;!==i||!m||void 0===m[r])continue;h=!0}f[r]=m&amp;&amp;m[r]||pe.style(e,r)}else u=void 0;if(pe.isEmptyObject(f))&quot;inline&quot;===(&quot;none&quot;===u?L(e.nodeName):u)&amp;&amp;(p.display=u);else{m?&quot;hidden&quot;in m&amp;&amp;(h=m.hidden):m=pe._data(e,&quot;fxshow&quot;,{}),o&amp;&amp;(m.hidden=!h),h?pe(e).show():d.done(function(){pe(e).hide()}),d.done(function(){var t;pe._removeData(e,&quot;fxshow&quot;);for(t in f)pe.style(e,t,f[t])});for(r in f)a=B(h?m[r]:0,r,d),r in m||(m[r]=a.start,h&amp;&amp;(a.end=a.start,a.start=&quot;width&quot;===r||&quot;height&quot;===r?1:0))}}function R(e,t){var n,r,i,o,a;for(n in e)if(r=pe.camelCase(n),i=t[r],o=e[n],pe.isArray(o)&amp;&amp;(i=o[1],o=e[n]=o[0]),n!==r&amp;&amp;(e[r]=o,delete e[n]),a=pe.cssHooks[r],a&amp;&amp;&quot;expand&quot;in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}function W(e,t,n){var r,i,o=0,a=W.prefilters.length,s=pe.Deferred().always(function(){delete l.elem}),l=function(){if(i)return!1;for(var t=Et||q(),n=Math.max(0,u.startTime+u.duration-t),r=n/u.duration||0,o=1-r,a=0,l=u.tweens.length;l&gt;a;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),1&gt;o&amp;&amp;l?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:pe.extend({},t),opts:pe.extend(!0,{specialEasing:{},easing:pe.easing._default},n),originalProperties:t,originalOptions:n,startTime:Et||q(),duration:n.duration,tweens:[],createTween:function(t,n){var r=pe.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(r),r},stop:function(t){var n=0,r=t?u.tweens.length:0;if(i)return this;for(i=!0;r&gt;n;n++)u.tweens[n].run(1);return t?(s.notifyWith(e,[u,1,0]),s.resolveWith(e,[u,t])):s.rejectWith(e,[u,t]),this}}),c=u.props;for(R(c,u.opts.specialEasing);a&gt;o;o++)if(r=W.prefilters[o].call(u,e,c,u.opts))return pe.isFunction(r.stop)&amp;&amp;(pe._queueHooks(u.elem,u.opts.queue).stop=pe.proxy(r.stop,r)),r;return pe.map(c,B,u),pe.isFunction(u.opts.start)&amp;&amp;u.opts.start.call(e,u),pe.fx.timer(pe.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function $(e){return pe.attr(e,&quot;class&quot;)||&quot;&quot;}function X(e){return function(t,n){&quot;string&quot;!=typeof t&amp;&amp;(n=t,t=&quot;*&quot;);var r,i=0,o=t.toLowerCase().match(je)||[];if(pe.isFunction(n))for(;r=o[i++];)&quot;+&quot;===r.charAt(0)?(r=r.slice(1)||&quot;*&quot;,(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function U(e,t,n,r){function i(s){var l;return o[s]=!0,pe.each(e[s]||[],function(e,s){var u=s(t,n,r);return&quot;string&quot;!=typeof u||a||o[u]?a?!(l=u):void 0:(t.dataTypes.unshift(u),i(u),!1)}),l}var o={},a=e===Kt;return i(t.dataTypes[0])||!o[&quot;*&quot;]&amp;&amp;i(&quot;*&quot;)}function Y(e,t){var n,r,i=pe.ajaxSettings.flatOptions||{};for(r in t)void 0!==t[r]&amp;&amp;((i[r]?e:n||(n={}))[r]=t[r]);return n&amp;&amp;pe.extend(!0,e,n),e}function V(e,t,n){for(var r,i,o,a,s=e.contents,l=e.dataTypes;&quot;*&quot;===l[0];)l.shift(),void 0===i&amp;&amp;(i=e.mimeType||t.getResponseHeader(&quot;Content-Type&quot;));if(i)for(a in s)if(s[a]&amp;&amp;s[a].test(i)){l.unshift(a);break}if(l[0]in n)o=l[0];else{for(a in n){if(!l[0]||e.converters[a+&quot; &quot;+l[0]]){o=a;break}r||(r=a)}o=o||r}return o?(o!==l[0]&amp;&amp;l.unshift(o),n[o]):void 0}function G(e,t,n,r){var i,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];for(o=c.shift();o;)if(e.responseFields[o]&amp;&amp;(n[e.responseFields[o]]=t),!l&amp;&amp;r&amp;&amp;e.dataFilter&amp;&amp;(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if(&quot;*&quot;===o)o=l;else if(&quot;*&quot;!==l&amp;&amp;l!==o){if(a=u[l+&quot; &quot;+o]||u[&quot;* &quot;+o],!a)for(i in u)if(s=i.split(&quot; &quot;),s[1]===o&amp;&amp;(a=u[l+&quot; &quot;+s[0]]||u[&quot;* &quot;+s[0]])){a===!0?a=u[i]:u[i]!==!0&amp;&amp;(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&amp;&amp;e[&quot;throws&quot;])t=a(t);else try{t=a(t)}catch(d){return{state:&quot;parsererror&quot;,error:a?d:&quot;No conversion from &quot;+l+&quot; to &quot;+o}}}return{state:&quot;success&quot;,data:t}}function Z(e){return e.style&amp;&amp;e.style.display||pe.css(e,&quot;display&quot;)}function J(e){if(!pe.contains(e.ownerDocument||re,e))return!0;for(;e&amp;&amp;1===e.nodeType;){if(&quot;none&quot;===Z(e)||&quot;hidden&quot;===e.type)return!0;e=e.parentNode}return!1}function K(e,t,n,r){var i;if(pe.isArray(t))pe.each(t,function(t,i){n||rn.test(e)?r(e,i):K(e+&quot;[&quot;+(&quot;object&quot;==typeof i&amp;&amp;null!=i?t:&quot;&quot;)+&quot;]&quot;,i,n,r)});else if(n||&quot;object&quot;!==pe.type(t))r(e,t);else for(i in t)K(e+&quot;[&quot;+i+&quot;]&quot;,t[i],n,r)}function Q(){try{return new e.XMLHttpRequest}catch(t){}}function ee(){try{return new e.ActiveXObject(&quot;Microsoft.XMLHTTP&quot;)}catch(t){}}function te(e){return pe.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}var ne=[],re=e.document,ie=ne.slice,oe=ne.concat,ae=ne.push,se=ne.indexOf,le={},ue=le.toString,ce=le.hasOwnProperty,de={},fe=&quot;1.12.4&quot;,pe=function(e,t){return new pe.fn.init(e,t)},he=/^[suFEFFxA0]+|[suFEFFxA0]+$/g,me=/^-ms-/,ge=/-([da-z])/gi,ve=function(e,t){return t.toUpperCase()};pe.fn=pe.prototype={jquery:fe,constructor:pe,selector:&quot;&quot;,length:0,toArray:function(){return ie.call(this)},get:function(e){return null!=e?0&gt;e?this[e+this.length]:this[e]:ie.call(this)},pushStack:function(e){var t=pe.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e){return pe.each(this,e)},map:function(e){return this.pushStack(pe.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(ie.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0&gt;e?t:0);return this.pushStack(n&gt;=0&amp;&amp;t&gt;n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:ae,sort:ne.sort,splice:ne.splice},pe.extend=pe.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,l=arguments.length,u=!1;for(&quot;boolean&quot;==typeof a&amp;&amp;(u=a,a=arguments[s]||{},s++),&quot;object&quot;==typeof a||pe.isFunction(a)||(a={}),s===l&amp;&amp;(a=this,s--);l&gt;s;s++)if(null!=(i=arguments[s]))for(r in i)e=a[r],n=i[r],a!==n&amp;&amp;(u&amp;&amp;n&amp;&amp;(pe.isPlainObject(n)||(t=pe.isArray(n)))?(t?(t=!1,o=e&amp;&amp;pe.isArray(e)?e:[]):o=e&amp;&amp;pe.isPlainObject(e)?e:{},a[r]=pe.extend(u,o,n)):void 0!==n&amp;&amp;(a[r]=n));return a},pe.extend({expando:&quot;jQuery&quot;+(fe+Math.random()).replace(/D/g,&quot;&quot;),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return&quot;function&quot;===pe.type(e)},isArray:Array.isArray||function(e){return&quot;array&quot;===pe.type(e)},isWindow:function(e){return null!=e&amp;&amp;e==e.window},isNumeric:function(e){var t=e&amp;&amp;e.toString();return!pe.isArray(e)&amp;&amp;t-parseFloat(t)+1&gt;=0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},isPlainObject:function(e){var t;if(!e||&quot;object&quot;!==pe.type(e)||e.nodeType||pe.isWindow(e))return!1;try{if(e.constructor&amp;&amp;!ce.call(e,&quot;constructor&quot;)&amp;&amp;!ce.call(e.constructor.prototype,&quot;isPrototypeOf&quot;))return!1}catch(n){return!1}if(!de.ownFirst)for(t in e)return ce.call(e,t);for(t in e);return void 0===t||ce.call(e,t)},type:function(e){return null==e?e+&quot;&quot;:&quot;object&quot;==typeof e||&quot;function&quot;==typeof e?le[ue.call(e)]||&quot;object&quot;:typeof e},globalEval:function(t){t&amp;&amp;pe.trim(t)&amp;&amp;(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(me,&quot;ms-&quot;).replace(ge,ve)},nodeName:function(e,t){return e.nodeName&amp;&amp;e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var r,i=0;if(n(e))for(r=e.length;r&gt;i&amp;&amp;t.call(e[i],i,e[i])!==!1;i++);else for(i in e)if(t.call(e[i],i,e[i])===!1)break;return e},trim:function(e){return null==e?&quot;&quot;:(e+&quot;&quot;).replace(he,&quot;&quot;)},makeArray:function(e,t){var r=t||[];return null!=e&amp;&amp;(n(Object(e))?pe.merge(r,&quot;string&quot;==typeof e?[e]:e):ae.call(r,e)),r},inArray:function(e,t,n){var r;if(t){if(se)return se.call(t,e,n);for(r=t.length,n=n?0&gt;n?Math.max(0,r+n):n:0;r&gt;n;n++)if(n in t&amp;&amp;t[n]===e)return n}return-1},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;n&gt;r;)e[i++]=t[r++];if(n!==n)for(;void 0!==t[r];)e[i++]=t[r++];return e.length=i,e},grep:function(e,t,n){for(var r,i=[],o=0,a=e.length,s=!n;a&gt;o;o++)r=!t(e[o],o),r!==s&amp;&amp;i.push(e[o]);return i},map:function(e,t,r){var i,o,a=0,s=[];if(n(e))for(i=e.length;i&gt;a;a++)o=t(e[a],a,r),null!=o&amp;&amp;s.push(o);else for(a in e)o=t(e[a],a,r),null!=o&amp;&amp;s.push(o);return oe.apply([],s)},guid:1,proxy:function(e,t){var n,r,i;return&quot;string&quot;==typeof t&amp;&amp;(i=e[t],t=e,e=i),pe.isFunction(e)?(n=ie.call(arguments,2),r=function(){return e.apply(t||this,n.concat(ie.call(arguments)))},r.guid=e.guid=e.guid||pe.guid++,r):void 0},now:function(){return+new Date},support:de}),&quot;function&quot;==typeof Symbol&amp;&amp;(pe.fn[Symbol.iterator]=ne[Symbol.iterator]),pe.each(&quot;Boolean Number String Function Array Date RegExp Object Error Symbol&quot;.split(&quot; &quot;),function(e,t){le[&quot;[object &quot;+t+&quot;]&quot;]=t.toLowerCase()});var ye=function(e){function t(e,t,n,r){var i,o,a,s,l,u,d,p,h=t&amp;&amp;t.ownerDocument,m=t?t.nodeType:9;if(n=n||[],&quot;string&quot;!=typeof e||!e||1!==m&amp;&amp;9!==m&amp;&amp;11!==m)return n;if(!r&amp;&amp;((t?t.ownerDocument||t:B)!==I&amp;&amp;D(t),t=t||I,H)){if(11!==m&amp;&amp;(u=ve.exec(e)))if(i=u[1]){if(9===m){if(!(a=t.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(h&amp;&amp;(a=h.getElementById(i))&amp;&amp;q(t,a)&amp;&amp;a.id===i)return n.push(a),n}else{if(u[2])return K.apply(n,t.getElementsByTagName(e)),n;if((i=u[3])&amp;&amp;w.getElementsByClassName&amp;&amp;t.getElementsByClassName)return K.apply(n,t.getElementsByClassName(i)),n}if(w.qsa&amp;&amp;!X[e+&quot; &quot;]&amp;&amp;(!O||!O.test(e))){if(1!==m)h=t,p=e;else if(&quot;object&quot;!==t.nodeName.toLowerCase()){for((s=t.getAttribute(&quot;id&quot;))?s=s.replace(be,&quot;$&amp;&quot;):t.setAttribute(&quot;id&quot;,s=F),d=E(e),o=d.length,l=fe.test(s)?&quot;#&quot;+s:&quot;[id=&#39;&quot;+s+&quot;&#39;]&quot;;o--;)d[o]=l+&quot; &quot;+f(d[o]);p=d.join(&quot;,&quot;),h=ye.test(e)&amp;&amp;c(t.parentNode)||t}if(p)try{return K.apply(n,h.querySelectorAll(p)),n}catch(g){}finally{s===F&amp;&amp;t.removeAttribute(&quot;id&quot;)}}}return N(e.replace(se,&quot;$1&quot;),t,n,r)}function n(){function e(n,r){return t.push(n+&quot; &quot;)&gt;C.cacheLength&amp;&amp;delete e[t.shift()],e[n+&quot; &quot;]=r}var t=[];return e}function r(e){return e[F]=!0,e}function i(e){var t=I.createElement(&quot;div&quot;);try{return!!e(t)}catch(n){return!1}finally{t.parentNode&amp;&amp;t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split(&quot;|&quot;),r=n.length;r--;)C.attrHandle[n[r]]=t}function a(e,t){var n=t&amp;&amp;e,r=n&amp;&amp;1===e.nodeType&amp;&amp;1===t.nodeType&amp;&amp;(~t.sourceIndex||Y)-(~e.sourceIndex||Y);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){var n=t.nodeName.toLowerCase();return&quot;input&quot;===n&amp;&amp;t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return(&quot;input&quot;===n||&quot;button&quot;===n)&amp;&amp;t.type===e}}function u(e){return r(function(t){return t=+t,r(function(n,r){for(var i,o=e([],n.length,t),a=o.length;a--;)n[i=o[a]]&amp;&amp;(n[i]=!(r[i]=n[i]))})})}function c(e){return e&amp;&amp;&quot;undefined&quot;!=typeof e.getElementsByTagName&amp;&amp;e}function d(){}function f(e){for(var t=0,n=e.length,r=&quot;&quot;;n&gt;t;t++)r+=e[t].value;return r}function p(e,t,n){var r=t.dir,i=n&amp;&amp;&quot;parentNode&quot;===r,o=R++;return t.first?function(t,n,o){for(;t=t[r];)if(1===t.nodeType||i)return e(t,n,o)}:function(t,n,a){var s,l,u,c=[z,o];if(a){for(;t=t[r];)if((1===t.nodeType||i)&amp;&amp;e(t,n,a))return!0}else for(;t=t[r];)if(1===t.nodeType||i){if(u=t[F]||(t[F]={}),l=u[t.uniqueID]||(u[t.uniqueID]={}),(s=l[r])&amp;&amp;s[0]===z&amp;&amp;s[1]===o)return c[2]=s[2];if(l[r]=c,c[2]=e(t,n,a))return!0}}}function h(e){return e.length&gt;1?function(t,n,r){for(var i=e.length;i--;)if(!e[i](t,n,r))return!1;return!0}:e[0]}function m(e,n,r){for(var i=0,o=n.length;o&gt;i;i++)t(e,n[i],r);return r}function g(e,t,n,r,i){for(var o,a=[],s=0,l=e.length,u=null!=t;l&gt;s;s++)(o=e[s])&amp;&amp;(n&amp;&amp;!n(o,r,i)||(a.push(o),u&amp;&amp;t.push(s)));return a}function v(e,t,n,i,o,a){return i&amp;&amp;!i[F]&amp;&amp;(i=v(i)),o&amp;&amp;!o[F]&amp;&amp;(o=v(o,a)),r(function(r,a,s,l){var u,c,d,f=[],p=[],h=a.length,v=r||m(t||&quot;*&quot;,s.nodeType?[s]:s,[]),y=!e||!r&amp;&amp;t?v:g(v,f,e,s,l),b=n?o||(r?e:h||i)?[]:a:y;if(n&amp;&amp;n(y,b,s,l),i)for(u=g(b,p),i(u,[],s,l),c=u.length;c--;)(d=u[c])&amp;&amp;(b[p[c]]=!(y[p[c]]=d));if(r){if(o||e){if(o){for(u=[],c=b.length;c--;)(d=b[c])&amp;&amp;u.push(y[c]=d);o(null,b=[],u,l)}for(c=b.length;c--;)(d=b[c])&amp;&amp;(u=o?ee(r,d):f[c])&gt;-1&amp;&amp;(r[u]=!(a[u]=d))}}else b=g(b===a?b.splice(h,b.length):b),o?o(null,a,b,l):K.apply(a,b)})}function y(e){for(var t,n,r,i=e.length,o=C.relative[e[0].type],a=o||C.relative[&quot; &quot;],s=o?1:0,l=p(function(e){return e===t},a,!0),u=p(function(e){return ee(t,e)&gt;-1},a,!0),c=[function(e,n,r){var i=!o&amp;&amp;(r||n!==A)||((t=n).nodeType?l(e,n,r):u(e,n,r));return t=null,i}];i&gt;s;s++)if(n=C.relative[e[s].type])c=[p(h(c),n)];else{if(n=C.filter[e[s].type].apply(null,e[s].matches),n[F]){for(r=++s;i&gt;r&amp;&amp;!C.relative[e[r].type];r++);return v(s&gt;1&amp;&amp;h(c),s&gt;1&amp;&amp;f(e.slice(0,s-1).concat({value:&quot; &quot;===e[s-2].type?&quot;*&quot;:&quot;&quot;})).replace(se,&quot;$1&quot;),n,r&gt;s&amp;&amp;y(e.slice(s,r)),i&gt;r&amp;&amp;y(e=e.slice(r)),i&gt;r&amp;&amp;f(e))}c.push(n)}return h(c)}function b(e,n){var i=n.length&gt;0,o=e.length&gt;0,a=function(r,a,s,l,u){var c,d,f,p=0,h=&quot;0&quot;,m=r&amp;&amp;[],v=[],y=A,b=r||o&amp;&amp;C.find.TAG(&quot;*&quot;,u),x=z+=null==y?1:Math.random()||.1,w=b.length;for(u&amp;&amp;(A=a===I||a||u);h!==w&amp;&amp;null!=(c=b[h]);h++){if(o&amp;&amp;c){for(d=0,a||c.ownerDocument===I||(D(c),s=!H);f=e[d++];)if(f(c,a||I,s)){l.push(c);break}u&amp;&amp;(z=x)}i&amp;&amp;((c=!f&amp;&amp;c)&amp;&amp;p--,r&amp;&amp;m.push(c))}if(p+=h,i&amp;&amp;h!==p){for(d=0;f=n[d++];)f(m,v,a,s);if(r){if(p&gt;0)for(;h--;)m[h]||v[h]||(v[h]=Z.call(l));v=g(v)}K.apply(l,v),u&amp;&amp;!r&amp;&amp;v.length&gt;0&amp;&amp;p+n.length&gt;1&amp;&amp;t.uniqueSort(l)}return u&amp;&amp;(z=x,A=y),m};return i?r(a):a}var x,w,C,T,k,E,S,N,A,j,L,D,I,_,H,O,M,P,q,F=&quot;sizzle&quot;+1*new Date,B=e.document,z=0,R=0,W=n(),$=n(),X=n(),U=function(e,t){return e===t&amp;&amp;(L=!0),0},Y=1n;n++)if(e[n]===t)return n;return-1},te=&quot;checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped&quot;,ne=&quot;[x20trnf]&quot;,re=&quot;(?:.|[w-]|[^x00-xa0])+&quot;,ie=&quot;[&quot;+ne+&quot;*(&quot;+re+&quot;)(?:&quot;+ne+&quot;*([*^$|!~]?=)&quot;+ne+&quot;*(?:&#39;((?:.|[^&#39;])*)&#39;|&quot;((?:.|[^&quot;])*)&quot;|(&quot;+re+&quot;))|)&quot;+ne+&quot;*]&quot;,oe=&quot;:(&quot;+re+&quot;)(?:(((&#39;((?:.|[^&#39;])*)&#39;|&quot;((?:.|[^&quot;])*)&quot;)|((?:.|[^()[]]|&quot;+ie+&quot;)*)|.*))|)&quot;,ae=new RegExp(ne+&quot;+&quot;,&quot;g&quot;),se=new RegExp(&quot;^&quot;+ne+&quot;+|((?:^|[^])(?:.)*)&quot;+ne+&quot;+$&quot;,&quot;g&quot;),le=new RegExp(&quot;^&quot;+ne+&quot;*,&quot;+ne+&quot;*&quot;),ue=new RegExp(&quot;^&quot;+ne+&quot;*([&gt;+~]|&quot;+ne+&quot;)&quot;+ne+&quot;*&quot;),ce=new RegExp(&quot;=&quot;+ne+&quot;*([^]&#39;&quot;]*?)&quot;+ne+&quot;*]&quot;,&quot;g&quot;),de=new RegExp(oe),fe=new RegExp(&quot;^&quot;+re+&quot;$&quot;),pe={ID:new RegExp(&quot;^#(&quot;+re+&quot;)&quot;),CLASS:new RegExp(&quot;^.(&quot;+re+&quot;)&quot;),TAG:new RegExp(&quot;^(&quot;+re+&quot;|[*])&quot;),ATTR:new RegExp(&quot;^&quot;+ie),PSEUDO:new RegExp(&quot;^&quot;+oe),CHILD:new RegExp(&quot;^:(only|first|last|nth|nth-last)-(child|of-type)(?:(&quot;+ne+&quot;*(even|odd|(([+-]|)(d*)n|)&quot;+ne+&quot;*(?:([+-]|)&quot;+ne+&quot;*(d+)|))&quot;+ne+&quot;*)|)&quot;,&quot;i&quot;),bool:new RegExp(&quot;^(?:&quot;+te+&quot;)$&quot;,&quot;i&quot;),needsContext:new RegExp(&quot;^&quot;+ne+&quot;*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:(&quot;+ne+&quot;*((?:-d)?d*)&quot;+ne+&quot;*)|)(?=[^-]|$)&quot;,&quot;i&quot;)},he=/^(?:input|select|textarea|button)$/i,me=/^hd$/i,ge=/^[^{]+{s*[native w/,ve=/^(?:#([w-]+)|(w+)|.([w-]+))$/,ye=/[+~]/,be=/&#39;|/g,xe=new RegExp(&quot;([da-f]{1,6}&quot;+ne+&quot;?|(&quot;+ne+&quot;)|.)&quot;,&quot;ig&quot;),we=function(e,t,n){var r=&quot;0x&quot;+t-65536;return r!==r||n?t:0&gt;r?String.fromCharCode(r+65536):String.fromCharCode(r&gt;&gt;10|55296,1023&amp;r|56320)},Ce=function(){D()};try{K.apply(G=Q.call(B.childNodes),B.childNodes),G[B.childNodes.length].nodeType}catch(Te){K={apply:G.length?function(e,t){J.apply(e,Q.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}w=t.support={},k=t.isXML=function(e){var t=e&amp;&amp;(e.ownerDocument||e).documentElement;return t?&quot;HTML&quot;!==t.nodeName:!1},D=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:B;return r!==I&amp;&amp;9===r.nodeType&amp;&amp;r.documentElement?(I=r,_=I.documentElement,H=!k(I),(n=I.defaultView)&amp;&amp;n.top!==n&amp;&amp;(n.addEventListener?n.addEventListener(&quot;unload&quot;,Ce,!1):n.attachEvent&amp;&amp;n.attachEvent(&quot;onunload&quot;,Ce)),w.attributes=i(function(e){return e.className=&quot;i&quot;,!e.getAttribute(&quot;className&quot;)}),w.getElementsByTagName=i(function(e){return e.appendChild(I.createComment(&quot;&quot;)),!e.getElementsByTagName(&quot;*&quot;).length}),w.getElementsByClassName=ge.test(I.getElementsByClassName),w.getById=i(function(e){return _.appendChild(e).id=F,!I.getElementsByName||!I.getElementsByName(F).length}),w.getById?(C.find.ID=function(e,t){if(&quot;undefined&quot;!=typeof t.getElementById&amp;&amp;H){var n=t.getElementById(e);return n?[n]:[]}},C.filter.ID=function(e){var t=e.replace(xe,we);return function(e){return e.getAttribute(&quot;id&quot;)===t}}):(delete C.find.ID,C.filter.ID=function(e){var t=e.replace(xe,we);return function(e){var n=&quot;undefined&quot;!=typeof e.getAttributeNode&amp;&amp;e.getAttributeNode(&quot;id&quot;);return n&amp;&amp;n.value===t}}),C.find.TAG=w.getElementsByTagName?function(e,t){return&quot;undefined&quot;!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(&quot;*&quot;===e){for(;n=o[i++];)1===n.nodeType&amp;&amp;r.push(n);return r}return o},C.find.CLASS=w.getElementsByClassName&amp;&amp;function(e,t){return&quot;undefined&quot;!=typeof t.getElementsByClassName&amp;&amp;H?t.getElementsByClassName(e):void 0},M=[],O=[],(w.qsa=ge.test(I.querySelectorAll))&amp;&amp;(i(function(e){_.appendChild(e).innerHTML=&quot;&quot;,e.querySelectorAll(&quot;[msallowcapture^=&#39;&#39;]&quot;).length&amp;&amp;O.push(&quot;[*^$]=&quot;+ne+&quot;*(?:&#39;&#39;|&quot;&quot;)&quot;),e.querySelectorAll(&quot;[selected]&quot;).length||O.push(&quot;[&quot;+ne+&quot;*(?:value|&quot;+te+&quot;)&quot;),e.querySelectorAll(&quot;[id~=&quot;+F+&quot;-]&quot;).length||O.push(&quot;~=&quot;),e.querySelectorAll(&quot;:checked&quot;).length||O.push(&quot;:checked&quot;),e.querySelectorAll(&quot;a#&quot;+F+&quot;+*&quot;).length||O.push(&quot;.#.+[+~]&quot;)}),i(function(e){var t=I.createElement(&quot;input&quot;);t.setAttribute(&quot;type&quot;,&quot;hidden&quot;),e.appendChild(t).setAttribute(&quot;name&quot;,&quot;D&quot;),e.querySelectorAll(&quot;[name=d]&quot;).length&amp;&amp;O.push(&quot;name&quot;+ne+&quot;*[*^$|!~]?=&quot;),e.querySelectorAll(&quot;:enabled&quot;).length||O.push(&quot;:enabled&quot;,&quot;:disabled&quot;),e.querySelectorAll(&quot;*,:x&quot;),O.push(&quot;,.*:&quot;)})),(w.matchesSelector=ge.test(P=_.matches||_.webkitMatchesSelector||_.mozMatchesSelector||_.oMatchesSelector||_.msMatchesSelector))&amp;&amp;i(function(e){w.disconnectedMatch=P.call(e,&quot;div&quot;),P.call(e,&quot;[s!=&#39;&#39;]:x&quot;),M.push(&quot;!=&quot;,oe)}),O=O.length&amp;&amp;new RegExp(O.join(&quot;|&quot;)),M=M.length&amp;&amp;new RegExp(M.join(&quot;|&quot;)),t=ge.test(_.compareDocumentPosition),q=t||ge.test(_.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&amp;&amp;t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&amp;&amp;16&amp;e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},U=t?function(e,t){if(e===t)return L=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&amp;n||!w.sortDetached&amp;&amp;t.compareDocumentPosition(e)===n?e===I||e.ownerDocument===B&amp;&amp;q(B,e)?-1:t===I||t.ownerDocument===B&amp;&amp;q(B,t)?1:j?ee(j,e)-ee(j,t):0:4&amp;n?-1:1)}:function(e,t){if(e===t)return L=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,s=[e],l=[t];if(!i||!o)return e===I?-1:t===I?1:i?-1:o?1:j?ee(j,e)-ee(j,t):0;if(i===o)return a(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;s[r]===l[r];)r++;return r?a(s[r],l[r]):s[r]===B?-1:l[r]===B?1:0},I):I},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==I&amp;&amp;D(e),n=n.replace(ce,&quot;=&#39;$1&#39;]&quot;),w.matchesSelector&amp;&amp;H&amp;&amp;!X[n+&quot; &quot;]&amp;&amp;(!M||!M.test(n))&amp;&amp;(!O||!O.test(n)))try{var r=P.call(e,n);if(r||w.disconnectedMatch||e.document&amp;&amp;11!==e.document.nodeType)return r}catch(i){}return t(n,I,null,[e]).length&gt;0},t.contains=function(e,t){return(e.ownerDocument||e)!==I&amp;&amp;D(e),q(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==I&amp;&amp;D(e);var n=C.attrHandle[t.toLowerCase()],r=n&amp;&amp;V.call(C.attrHandle,t.toLowerCase())?n(e,t,!H):void 0;return void 0!==r?r:w.attributes||!H?e.getAttribute(t):(r=e.getAttributeNode(t))&amp;&amp;r.specified?r.value:null},t.error=function(e){throw new Error(&quot;Syntax error, unrecognized expression: &quot;+e)},t.uniqueSort=function(e){var t,n=[],r=0,i=0;if(L=!w.detectDuplicates,j=!w.sortStable&amp;&amp;e.slice(0),e.sort(U),L){for(;t=e[i++];)t===e[i]&amp;&amp;(r=n.push(i));for(;r--;)e.splice(n[r],1)}return j=null,e},T=t.getText=function(e){var t,n=&quot;&quot;,r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(&quot;string&quot;==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=T(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r++];)n+=T(t);return n},C=t.selectors={cacheLength:50,createPseudo:r,match:pe,attrHandle:{},find:{},relative:{&quot;&gt;&quot;:{dir:&quot;parentNode&quot;,first:!0},&quot; &quot;:{dir:&quot;parentNode&quot;},&quot;+&quot;:{dir:&quot;previousSibling&quot;,first:!0},&quot;~&quot;:{dir:&quot;previousSibling&quot;}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(xe,we),e[3]=(e[3]||e[4]||e[5]||&quot;&quot;).replace(xe,we),&quot;~=&quot;===e[2]&amp;&amp;(e[3]=&quot; &quot;+e[3]+&quot; &quot;),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),&quot;nth&quot;===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(&quot;even&quot;===e[3]||&quot;odd&quot;===e[3])),e[5]=+(e[7]+e[8]||&quot;odd&quot;===e[3])):e[3]&amp;&amp;t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&amp;&amp;e[2];return pe.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||&quot;&quot;:n&amp;&amp;de.test(n)&amp;&amp;(t=E(n,!0))&amp;&amp;(t=n.indexOf(&quot;)&quot;,n.length-t)-n.length)&amp;&amp;(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(xe,we).toLowerCase();return&quot;*&quot;===e?function(){return!0}:function(e){return e.nodeName&amp;&amp;e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=W[e+&quot; &quot;];return t||(t=new RegExp(&quot;(^|&quot;+ne+&quot;)&quot;+e+&quot;(&quot;+ne+&quot;|$)&quot;))&amp;&amp;W(e,function(e){return t.test(&quot;string&quot;==typeof e.className&amp;&amp;e.className||&quot;undefined&quot;!=typeof e.getAttribute&amp;&amp;e.getAttribute(&quot;class&quot;)||&quot;&quot;)})},ATTR:function(e,n,r){return function(i){var o=t.attr(i,e);return null==o?&quot;!=&quot;===n:n?(o+=&quot;&quot;,&quot;=&quot;===n?o===r:&quot;!=&quot;===n?o!==r:&quot;^=&quot;===n?r&amp;&amp;0===o.indexOf(r):&quot;*=&quot;===n?r&amp;&amp;o.indexOf(r)&gt;-1:&quot;$=&quot;===n?r&amp;&amp;o.slice(-r.length)===r:&quot;~=&quot;===n?(&quot; &quot;+o.replace(ae,&quot; &quot;)+&quot; &quot;).indexOf(r)&gt;-1:&quot;|=&quot;===n?o===r||o.slice(0,r.length+1)===r+&quot;-&quot;:!1):!0}},CHILD:function(e,t,n,r,i){var o=&quot;nth&quot;!==e.slice(0,3),a=&quot;last&quot;!==e.slice(-4),s=&quot;of-type&quot;===t;return 1===r&amp;&amp;0===i?function(e){return!!e.parentNode}:function(t,n,l){var u,c,d,f,p,h,m=o!==a?&quot;nextSibling&quot;:&quot;previousSibling&quot;,g=t.parentNode,v=s&amp;&amp;t.nodeName.toLowerCase(),y=!l&amp;&amp;!s,b=!1;if(g){if(o){for(;m;){for(f=t;f=f[m];)if(s?f.nodeName.toLowerCase()===v:1===f.nodeType)return!1;h=m=&quot;only&quot;===e&amp;&amp;!h&amp;&amp;&quot;nextSibling&quot;}return!0}if(h=[a?g.firstChild:g.lastChild],a&amp;&amp;y){for(f=g,d=f[F]||(f[F]={}),c=d[f.uniqueID]||(d[f.uniqueID]={}),u=c[e]||[],p=u[0]===z&amp;&amp;u[1],b=p&amp;&amp;u[2],f=p&amp;&amp;g.childNodes[p];f=++p&amp;&amp;f&amp;&amp;f[m]||(b=p=0)||h.pop();)if(1===f.nodeType&amp;&amp;++b&amp;&amp;f===t){c[e]=[z,p,b];break}}else if(y&amp;&amp;(f=t,d=f[F]||(f[F]={}),c=d[f.uniqueID]||(d[f.uniqueID]={}),u=c[e]||[],p=u[0]===z&amp;&amp;u[1],b=p),b===!1)for(;(f=++p&amp;&amp;f&amp;&amp;f[m]||(b=p=0)||h.pop())&amp;&amp;((s?f.nodeName.toLowerCase()!==v:1!==f.nodeType)||!++b||(y&amp;&amp;(d=f[F]||(f[F]={}),c=d[f.uniqueID]||(d[f.uniqueID]={}),c[e]=[z,b]),f!==t)););return b-=i,b===r||b%r===0&amp;&amp;b/r&gt;=0}}},PSEUDO:function(e,n){var i,o=C.pseudos[e]||C.setFilters[e.toLowerCase()]||t.error(&quot;unsupported pseudo: &quot;+e);return o[F]?o(n):o.length&gt;1?(i=[e,e,&quot;&quot;,n],C.setFilters.hasOwnProperty(e.toLowerCase())?r(function(e,t){for(var r,i=o(e,n),a=i.length;a--;)r=ee(e,i[a]),e[r]=!(t[r]=i[a])}):function(e){return o(e,0,i)}):o}},pseudos:{not:r(function(e){var t=[],n=[],i=S(e.replace(se,&quot;$1&quot;));return i[F]?r(function(e,t,n,r){for(var o,a=i(e,null,r,[]),s=e.length;s--;)(o=a[s])&amp;&amp;(e[s]=!(t[s]=o))}):function(e,r,o){return t[0]=e,i(t,null,o,n),t[0]=null,!n.pop()}}),has:r(function(e){return function(n){return t(e,n).length&gt;0}}),contains:r(function(e){return e=e.replace(xe,we),function(t){return(t.textContent||t.innerText||T(t)).indexOf(e)&gt;-1}}),lang:r(function(e){return fe.test(e||&quot;&quot;)||t.error(&quot;unsupported lang: &quot;+e),e=e.replace(xe,we).toLowerCase(),function(t){var n;do if(n=H?t.lang:t.getAttribute(&quot;xml:lang&quot;)||t.getAttribute(&quot;lang&quot;))return n=n.toLowerCase(),n===e||0===n.indexOf(e+&quot;-&quot;);while((t=t.parentNode)&amp;&amp;1===t.nodeType);return!1}}),target:function(t){var n=e.location&amp;&amp;e.location.hash;return n&amp;&amp;n.slice(1)===t.id},root:function(e){return e===_},focus:function(e){return e===I.activeElement&amp;&amp;(!I.hasFocus||I.hasFocus())&amp;&amp;!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return&quot;input&quot;===t&amp;&amp;!!e.checked||&quot;option&quot;===t&amp;&amp;!!e.selected},selected:function(e){return e.parentNode&amp;&amp;e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeTypen?n+t:n]}),even:u(function(e,t){for(var n=0;t&gt;n;n+=2)e.push(n);return e}),odd:u(function(e,t){for(var n=1;t&gt;n;n+=2)e.push(n);return e}),lt:u(function(e,t,n){for(var r=0&gt;n?n+t:n;--r&gt;=0;)e.push(r);return e}),gt:u(function(e,t,n){for(var r=0&gt;n?n+t:n;++r2&amp;&amp;&quot;ID&quot;===(a=o[0]).type&amp;&amp;w.getById&amp;&amp;9===t.nodeType&amp;&amp;H&amp;&amp;C.relative[o[1].type]){if(t=(C.find.ID(a.matches[0].replace(xe,we),t)||[])[0],!t)return n;u&amp;&amp;(t=t.parentNode),e=e.slice(o.shift().value.length)}for(i=pe.needsContext.test(e)?0:o.length;i--&amp;&amp;(a=o[i],!C.relative[s=a.type]);)if((l=C.find[s])&amp;&amp;(r=l(a.matches[0].replace(xe,we),ye.test(o[0].type)&amp;&amp;c(t.parentNode)||t))){if(o.splice(i,1),e=r.length&amp;&amp;f(o),!e)return K.apply(n,r),n;break}}return(u||S(e,d))(r,t,!H,n,!t||ye.test(e)&amp;&amp;c(t.parentNode)||t),n},w.sortStable=F.split(&quot;&quot;).sort(U).join(&quot;&quot;)===F,w.detectDuplicates=!!L,D(),w.sortDetached=i(function(e){return 1&amp;e.compareDocumentPosition(I.createElement(&quot;div&quot;))}),i(function(e){return e.innerHTML=&quot;&quot;,&quot;#&quot;===e.firstChild.getAttribute(&quot;href&quot;)})||o(&quot;type|href|height|width&quot;,function(e,t,n){return n?void 0:e.getAttribute(t,&quot;type&quot;===t.toLowerCase()?1:2)}),w.attributes&amp;&amp;i(function(e){return e.innerHTML=&quot;&quot;,e.firstChild.setAttribute(&quot;value&quot;,&quot;&quot;),&quot;&quot;===e.firstChild.getAttribute(&quot;value&quot;)})||o(&quot;value&quot;,function(e,t,n){return n||&quot;input&quot;!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),i(function(e){return null==e.getAttribute(&quot;disabled&quot;)})||o(te,function(e,t,n){var r;return n?void 0:e[t]===!0?t.toLowerCase():(r=e.getAttributeNode(t))&amp;&amp;r.specified?r.value:null}),t}(e);pe.find=ye,pe.expr=ye.selectors,pe.expr[&quot;:&quot;]=pe.expr.pseudos,pe.uniqueSort=pe.unique=ye.uniqueSort,pe.text=ye.getText,pe.isXMLDoc=ye.isXML,pe.contains=ye.contains;var be=function(e,t,n){for(var r=[],i=void 0!==n;(e=e[t])&amp;&amp;9!==e.nodeType;)if(1===e.nodeType){if(i&amp;&amp;pe(e).is(n))break;r.push(e)}return r},xe=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&amp;&amp;e!==t&amp;&amp;n.push(e);return n},we=pe.expr.match.needsContext,Ce=/^(?:|)$/,Te=/^.[^:#[.,]*$/;pe.filter=function(e,t,n){var r=t[0];return n&amp;&amp;(e=&quot;:not(&quot;+e+&quot;)&quot;),1===t.length&amp;&amp;1===r.nodeType?pe.find.matchesSelector(r,e)?[r]:[]:pe.find.matches(e,pe.grep(t,function(e){return 1===e.nodeType}))},pe.fn.extend({find:function(e){var t,n=[],r=this,i=r.length;if(&quot;string&quot;!=typeof e)return this.pushStack(pe(e).filter(function(){for(t=0;i&gt;t;t++)if(pe.contains(r[t],this))return!0}));for(t=0;i&gt;t;t++)pe.find(e,r[t],n);return n=this.pushStack(i&gt;1?pe.unique(n):n),n.selector=this.selector?this.selector+&quot; &quot;+e:e,n},filter:function(e){return this.pushStack(r(this,e||[],!1))},not:function(e){return this.pushStack(r(this,e||[],!0))},is:function(e){return!!r(this,&quot;string&quot;==typeof e&amp;&amp;we.test(e)?pe(e):e||[],!1).length}});var ke,Ee=/^(?:s*()[^&gt;]*|#([w-]*))$/,Se=pe.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||ke,&quot;string&quot;==typeof e){if(r=&quot;&quot;===e.charAt(e.length-1)&amp;&amp;e.length&gt;=3?[null,e,null]:Ee.exec(e),!r||!r[1]&amp;&amp;t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof pe?t[0]:t,pe.merge(this,pe.parseHTML(r[1],t&amp;&amp;t.nodeType?t.ownerDocument||t:re,!0)),Ce.test(r[1])&amp;&amp;pe.isPlainObject(t))for(r in t)pe.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}if(i=re.getElementById(r[2]),i&amp;&amp;i.parentNode){if(i.id!==r[2])return ke.find(e);this.length=1,this[0]=i}return this.context=re,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):pe.isFunction(e)?&quot;undefined&quot;!=typeof n.ready?n.ready(e):e(pe):(void 0!==e.selector&amp;&amp;(this.selector=e.selector,this.context=e.context),pe.makeArray(e,this))};Se.prototype=pe.fn,ke=pe(re);var Ne=/^(?:parents|prev(?:Until|All))/,Ae={children:!0,contents:!0,next:!0,prev:!0};pe.fn.extend({has:function(e){var t,n=pe(e,this),r=n.length;return this.filter(function(){for(t=0;r&gt;t;t++)if(pe.contains(this,n[t]))return!0})},closest:function(e,t){for(var n,r=0,i=this.length,o=[],a=we.test(e)||&quot;string&quot;!=typeof e?pe(e,t||this.context):0;i&gt;r;r++)for(n=this[r];n&amp;&amp;n!==t;n=n.parentNode)if(n.nodeType-1:1===n.nodeType&amp;&amp;pe.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length&gt;1?pe.uniqueSort(o):o)},index:function(e){return e?&quot;string&quot;==typeof e?pe.inArray(this[0],pe(e)):pe.inArray(e.jquery?e[0]:e,this):this[0]&amp;&amp;this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(pe.uniqueSort(pe.merge(this.get(),pe(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),pe.each({parent:function(e){var t=e.parentNode;return t&amp;&amp;11!==t.nodeType?t:null},parents:function(e){return be(e,&quot;parentNode&quot;)},parentsUntil:function(e,t,n){return be(e,&quot;parentNode&quot;,n)},next:function(e){return i(e,&quot;nextSibling&quot;)},prev:function(e){return i(e,&quot;previousSibling&quot;)},nextAll:function(e){return be(e,&quot;nextSibling&quot;)},prevAll:function(e){return be(e,&quot;previousSibling&quot;)},nextUntil:function(e,t,n){return be(e,&quot;nextSibling&quot;,n)},prevUntil:function(e,t,n){return be(e,&quot;previousSibling&quot;,n)},siblings:function(e){return xe((e.parentNode||{}).firstChild,e)},children:function(e){return xe(e.firstChild)},contents:function(e){return pe.nodeName(e,&quot;iframe&quot;)?e.contentDocument||e.contentWindow.document:pe.merge([],e.childNodes)}},function(e,t){pe.fn[e]=function(n,r){var i=pe.map(this,t,n);return&quot;Until&quot;!==e.slice(-5)&amp;&amp;(r=n),r&amp;&amp;&quot;string&quot;==typeof r&amp;&amp;(i=pe.filter(r,i)),this.length&gt;1&amp;&amp;(Ae[e]||(i=pe.uniqueSort(i)),Ne.test(e)&amp;&amp;(i=i.reverse())),this.pushStack(i)}});var je=/S+/g;pe.Callbacks=function(e){e=&quot;string&quot;==typeof e?o(e):pe.extend({},e);var t,n,r,i,a=[],s=[],l=-1,u=function(){for(i=e.once,r=t=!0;s.length;l=-1)for(n=s.shift();++l-1;)a.splice(n,1),l&gt;=n&amp;&amp;l--}),this},has:function(e){return e?pe.inArray(e,a)&gt;-1:a.length&gt;0},empty:function(){return a&amp;&amp;(a=[]),this},disable:function(){return i=s=[],a=n=&quot;&quot;,this},disabled:function(){return!a},lock:function(){return i=!0,n||c.disable(),this},locked:function(){return!!i},fireWith:function(e,n){return i||(n=n||[],n=[e,n.slice?n.slice():n],s.push(n),t||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},pe.extend({Deferred:function(e){var t=[[&quot;resolve&quot;,&quot;done&quot;,pe.Callbacks(&quot;once memory&quot;),&quot;resolved&quot;],[&quot;reject&quot;,&quot;fail&quot;,pe.Callbacks(&quot;once memory&quot;),&quot;rejected&quot;],[&quot;notify&quot;,&quot;progress&quot;,pe.Callbacks(&quot;memory&quot;)]],n=&quot;pending&quot;,r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return pe.Deferred(function(n){pe.each(t,function(t,o){var a=pe.isFunction(e[t])&amp;&amp;e[t];i[o[1]](function(){var e=a&amp;&amp;a.apply(this,arguments);e&amp;&amp;pe.isFunction(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[o[0]+&quot;With&quot;](this===r?n.promise():this,a?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?pe.extend(e,r):r}},i={};return r.pipe=r.then,pe.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&amp;&amp;a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+&quot;With&quot;](this===i?r:this,arguments),this},i[o[0]+&quot;With&quot;]=a.fireWith}),r.promise(i),e&amp;&amp;e.call(i,i),i},when:function(e){var t,n,r,i=0,o=ie.call(arguments),a=o.length,s=1!==a||e&amp;&amp;pe.isFunction(e.promise)?a:0,l=1===s?e:pe.Deferred(),u=function(e,n,r){return function(i){n[e]=this,r[e]=arguments.length&gt;1?ie.call(arguments):i,r===t?l.notifyWith(n,r):--s||l.resolveWith(n,r)}};if(a&gt;1)for(t=new Array(a),n=new Array(a),r=new Array(a);a&gt;i;i++)o[i]&amp;&amp;pe.isFunction(o[i].promise)?o[i].promise().progress(u(i,n,t)).done(u(i,r,o)).fail(l.reject):--s;return s||l.resolveWith(r,o),l.promise()}});var Le;pe.fn.ready=function(e){return pe.ready.promise().done(e),this},pe.extend({isReady:!1,readyWait:1,holdReady:function(e){e?pe.readyWait++:pe.ready(!0)},ready:function(e){(e===!0?--pe.readyWait:pe.isReady)||(pe.isReady=!0,e!==!0&amp;&amp;--pe.readyWait&gt;0||(Le.resolveWith(re,[pe]),pe.fn.triggerHandler&amp;&amp;(pe(re).triggerHandler(&quot;ready&quot;),pe(re).off(&quot;ready&quot;))))}}),pe.ready.promise=function(t){if(!Le)if(Le=pe.Deferred(),&quot;complete&quot;===re.readyState||&quot;loading&quot;!==re.readyState&amp;&amp;!re.documentElement.doScroll)e.setTimeout(pe.ready);else if(re.addEventListener)re.addEventListener(&quot;DOMContentLoaded&quot;,s),e.addEventListener(&quot;load&quot;,s);else{re.attachEvent(&quot;onreadystatechange&quot;,s),e.attachEvent(&quot;onload&quot;,s);var n=!1;try{n=null==e.frameElement&amp;&amp;re.documentElement}catch(r){}n&amp;&amp;n.doScroll&amp;&amp;!function i(){if(!pe.isReady){try{n.doScroll(&quot;left&quot;)}catch(t){return e.setTimeout(i,50)}a(),pe.ready()}}()}return Le.promise(t)},pe.ready.promise();var De;for(De in pe(de))break;de.ownFirst=&quot;0&quot;===De,de.inlineBlockNeedsLayout=!1,pe(function(){var e,t,n,r;n=re.getElementsByTagName(&quot;body&quot;)[0],n&amp;&amp;n.style&amp;&amp;(t=re.createElement(&quot;div&quot;),r=re.createElement(&quot;div&quot;),r.style.cssText=&quot;position:absolute;border:0;width:0;height:0;top:0;left:-9999px&quot;,n.appendChild(r).appendChild(t),&quot;undefined&quot;!=typeof t.style.zoom&amp;&amp;(t.style.cssText=&quot;display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1&quot;,de.inlineBlockNeedsLayout=e=3===t.offsetWidth,e&amp;&amp;(n.style.zoom=1)),n.removeChild(r))}),function(){var e=re.createElement(&quot;div&quot;);de.deleteExpando=!0;try{delete e.test}catch(t){de.deleteExpando=!1}e=null}();var Ie=function(e){var t=pe.noData[(e.nodeName+&quot; &quot;).toLowerCase()],n=+e.nodeType||1;return 1!==n&amp;&amp;9!==n?!1:!t||t!==!0&amp;&amp;e.getAttribute(&quot;classid&quot;)===t},_e=/^(?:{[wW]*}|[[wW]*])$/,He=/([A-Z])/g;pe.extend({cache:{},noData:{&quot;applet &quot;:!0,&quot;embed &quot;:!0,&quot;object &quot;:&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;},hasData:function(e){return e=e.nodeType?pe.cache[e[pe.expando]]:e[pe.expando],!!e&amp;&amp;!u(e)},data:function(e,t,n){return c(e,t,n)},removeData:function(e,t){return d(e,t)},_data:function(e,t,n){return c(e,t,n,!0)},_removeData:function(e,t){return d(e,t,!0)}}),pe.fn.extend({data:function(e,t){var n,r,i,o=this[0],a=o&amp;&amp;o.attributes;if(void 0===e){if(this.length&amp;&amp;(i=pe.data(o),1===o.nodeType&amp;&amp;!pe._data(o,&quot;parsedAttrs&quot;))){for(n=a.length;n--;)a[n]&amp;&amp;(r=a[n].name,0===r.indexOf(&quot;data-&quot;)&amp;&amp;(r=pe.camelCase(r.slice(5)),l(o,r,i[r])));pe._data(o,&quot;parsedAttrs&quot;,!0)}return i}return&quot;object&quot;==typeof e?this.each(function(){pe.data(this,e)}):arguments.length&gt;1?this.each(function(){pe.data(this,e,t)}):o?l(o,e,pe.data(o,e)):void 0},removeData:function(e){return this.each(function(){pe.removeData(this,e)})}}),pe.extend({queue:function(e,t,n){var r;return e?(t=(t||&quot;fx&quot;)+&quot;queue&quot;,r=pe._data(e,t),n&amp;&amp;(!r||pe.isArray(n)?r=pe._data(e,t,pe.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||&quot;fx&quot;;var n=pe.queue(e,t),r=n.length,i=n.shift(),o=pe._queueHooks(e,t),a=function(){pe.dequeue(e,t)};&quot;inprogress&quot;===i&amp;&amp;(i=n.shift(),r--),i&amp;&amp;(&quot;fx&quot;===t&amp;&amp;n.unshift(&quot;inprogress&quot;),delete o.stop,i.call(e,a,o)),!r&amp;&amp;o&amp;&amp;o.empty.fire()},_queueHooks:function(e,t){var n=t+&quot;queueHooks&quot;;return pe._data(e,n)||pe._data(e,n,{empty:pe.Callbacks(&quot;once memory&quot;).add(function(){pe._removeData(e,t+&quot;queue&quot;),pe._removeData(e,n)})})}}),pe.fn.extend({queue:function(e,t){var n=2;return&quot;string&quot;!=typeof e&amp;&amp;(t=e,e=&quot;fx&quot;,n--),arguments.lengths;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:u?t.call(e):l?t(e[0],n):o},Be=/^(?:checkbox|radio)$/i,ze=/a&quot;,de.leadingWhitespace=3===e.firstChild.nodeType,de.tbody=!e.getElementsByTagName(&quot;tbody&quot;).length,de.htmlSerialize=!!e.getElementsByTagName(&quot;link&quot;).length,de.html5Clone=&quot;&quot;!==re.createElement(&quot;nav&quot;).cloneNode(!0).outerHTML,n.type=&quot;checkbox&quot;,n.checked=!0,t.appendChild(n),de.appendChecked=n.checked,e.innerHTML=&quot;x&quot;,de.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue,t.appendChild(e),n=re.createElement(&quot;input&quot;),n.setAttribute(&quot;type&quot;,&quot;radio&quot;),n.setAttribute(&quot;checked&quot;,&quot;checked&quot;),n.setAttribute(&quot;name&quot;,&quot;t&quot;),e.appendChild(n),de.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,de.noCloneEvent=!!e.addEventListener,e[pe.expando]=1,de.attributes=!e.getAttribute(pe.expando)}();var Xe={option:[1,&quot;&quot;,&quot;&quot;],legend:[1,&quot;&quot;,&quot;&quot;],area:[1,&quot;&quot;,&quot;&quot;],param:[1,&quot;&quot;,&quot;&quot;],thead:[1,&quot;&quot;,&quot;&quot;],tr:[2,&quot;&quot;,&quot;&quot;],col:[2,&quot;&quot;,&quot;&quot;],td:[3,&quot;&quot;,&quot;&quot;],_default:de.htmlSerialize?[0,&quot;&quot;,&quot;&quot;]:[1,&quot;X&quot;,&quot;&quot;]};Xe.optgroup=Xe.option,Xe.tbody=Xe.tfoot=Xe.colgroup=Xe.caption=Xe.thead,Xe.th=Xe.td;var Ue=/-1&amp;&amp;(h=p.split(&quot;.&quot;),p=h.shift(),h.sort()),a=p.indexOf(&quot;:&quot;)1?l:u.bindType||p,o=(pe._data(s,&quot;events&quot;)||{})[t.type]&amp;&amp;pe._data(s,&quot;handle&quot;),o&amp;&amp;o.apply(s,n),o=a&amp;&amp;s[a],o&amp;&amp;o.apply&amp;&amp;Ie(s)&amp;&amp;(t.result=o.apply(s,n),t.result===!1&amp;&amp;t.preventDefault());if(t.type=p,!i&amp;&amp;!t.isDefaultPrevented()&amp;&amp;(!u._default||u._default.apply(f.pop(),n)===!1)&amp;&amp;Ie(r)&amp;&amp;a&amp;&amp;r[p]&amp;&amp;!pe.isWindow(r)){c=r[a],c&amp;&amp;(r[a]=null),pe.event.triggered=p;try{r[p]()}catch(m){}pe.event.triggered=void 0,c&amp;&amp;(r[a]=c)}return t.result}},dispatch:function(e){e=pe.event.fix(e);var t,n,r,i,o,a=[],s=ie.call(arguments),l=(pe._data(this,&quot;events&quot;)||{})[e.type]||[],u=pe.event.special[e.type]||{};if(s[0]=e,e.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,e)!==!1){for(a=pe.event.handlers.call(this,e,l),t=0;(i=a[t++])&amp;&amp;!e.isPropagationStopped();)for(e.currentTarget=i.elem,n=0;(o=i.handlers[n++])&amp;&amp;!e.isImmediatePropagationStopped();)e.rnamespace&amp;&amp;!e.rnamespace.test(o.namespace)||(e.handleObj=o,e.data=o.data,r=((pe.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s),void 0!==r&amp;&amp;(e.result=r)===!1&amp;&amp;(e.preventDefault(),e.stopPropagation()));return u.postDispatch&amp;&amp;u.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,i,o,a=[],s=t.delegateCount,l=e.target;if(s&amp;&amp;l.nodeType&amp;&amp;(&quot;click&quot;!==e.type||isNaN(e.button)||e.buttonn;n++)o=t[n],i=o.selector+&quot; &quot;,void 0===r[i]&amp;&amp;(r[i]=o.needsContext?pe(i,this).index(l)&gt;-1:pe.find(i,this,null,[l]).length),r[i]&amp;&amp;r.push(o);r.length&amp;&amp;a.push({elem:l,handlers:r})}return s]&quot;,&quot;i&quot;),tt=/]*)/&gt;/gi,nt=/0||&quot;embed&quot;===this.tagName.toLowerCase()&amp;&amp;n.parent(&quot;object&quot;).length||n.parent(&quot;.fluid-width-video-wrapper&quot;).length)){n.css(&quot;height&quot;)||n.css(&quot;width&quot;)||!isNaN(n.attr(&quot;height&quot;))&amp;&amp;!isNaN(n.attr(&quot;width&quot;))||(n.attr(&quot;height&quot;,9),n.attr(&quot;width&quot;,16));var i=&quot;object&quot;===this.tagName.toLowerCase()||n.attr(&quot;height&quot;)&amp;&amp;!isNaN(parseInt(n.attr(&quot;height&quot;),10))?parseInt(n.attr(&quot;height&quot;),10):n.height(),o=isNaN(parseInt(n.attr(&quot;width&quot;),10))?n.width():parseInt(n.attr(&quot;width&quot;),10),a=i/o;if(!n.attr(&quot;id&quot;)){var s=&quot;fitvid&quot;+t;n.attr(&quot;id&quot;,s)}n.wrap(&#39;&#39;).parent(&quot;.fluid-width-video-wrapper&quot;).css(&quot;padding-top&quot;,100*a+&quot;%&quot;),n.removeAttr(&quot;height&quot;).removeAttr(&quot;width&quot;)}})})}}(window.jQuery||window.Zepto),$(document).ready(function(){function e(){l=n.width()-10,u=n.children().length,c=s[u-1],c&gt;l?(n.children().last().prependTo(r),u-=1,e()):l&gt;s[u]&amp;&amp;(r.children().first().appendTo(n),u+=1,e()),t.attr(&quot;count&quot;,i-u),u===i?t.addClass(&quot;hidden&quot;):t.removeClass(&quot;hidden&quot;)}var t=$(&quot;nav.greedy-nav button&quot;),n=$(&quot;nav.greedy-nav .visible-links&quot;),r=$(&quot;nav.greedy-nav .hidden-links&quot;),i=0,o=0,a=1e3,s=[];n.children().outerWidth(function(e,t){o+=t,i+=1,s.push(o)});var l,u,c,d;$(window).resize(function(){e()}),t.on(&quot;click&quot;,function(){r.toggleClass(&quot;hidden&quot;),$(this).toggleClass(&quot;close&quot;),clearTimeout(d)}),r.on(&quot;mouseleave&quot;,function(){d=setTimeout(function(){r.addClass(&quot;hidden&quot;),t.toggleClass(&quot;close&quot;)},a)}).on(&quot;mouseenter&quot;,function(){clearTimeout(d)}),e()}),function(e){var t,n,r,i,o,a,s,l=&quot;Close&quot;,u=&quot;BeforeClose&quot;,c=&quot;AfterClose&quot;,d=&quot;BeforeAppend&quot;,f=&quot;MarkupParse&quot;,p=&quot;Open&quot;,h=&quot;Change&quot;,m=&quot;mfp&quot;,g=&quot;.&quot;+m,v=&quot;mfp-ready&quot;,y=&quot;mfp-removing&quot;,b=&quot;mfp-prevent-close&quot;,x=function(){},w=!!window.jQuery,C=e(window),T=function(e,n){t.ev.on(m+e+g,n)},k=function(t,n,r,i){var o=document.createElement(&quot;div&quot;);return o.className=&quot;mfp-&quot;+t,r&amp;&amp;(o.innerHTML=r),i?n&amp;&amp;n.appendChild(o):(o=e(o),n&amp;&amp;o.appendTo(n)),o},E=function(n,r){t.ev.triggerHandler(m+n,r),t.st.callbacks&amp;&amp;(n=n.charAt(0).toLowerCase()+n.slice(1),t.st.callbacks[n]&amp;&amp;t.st.callbacks[n].apply(t,e.isArray(r)?r:[r]))},S=function(n){return n===s&amp;&amp;t.currTemplate.closeBtn||(t.currTemplate.closeBtn=e(t.st.closeMarkup.replace(&quot;%title%&quot;,t.st.tClose)),s=n),t.currTemplate.closeBtn},N=function(){e.magnificPopup.instance||(t=new x,t.init(),e.magnificPopup.instance=t)},A=function(){var e=document.createElement(&quot;p&quot;).style,t=[&quot;ms&quot;,&quot;O&quot;,&quot;Moz&quot;,&quot;Webkit&quot;];if(void 0!==e.transition)return!0;for(;t.length;)if(t.pop()+&quot;Transition&quot;in e)return!0;return!1};x.prototype={constructor:x,init:function(){var n=navigator.appVersion;t.isIE7=-1!==n.indexOf(&quot;MSIE 7.&quot;),t.isIE8=-1!==n.indexOf(&quot;MSIE 8.&quot;),t.isLowIE=t.isIE7||t.isIE8,t.isAndroid=/android/gi.test(n),t.isIOS=/iphone|ipad|ipod/gi.test(n),t.supportsTransition=A(),t.probablyMobile=t.isAndroid||t.isIOS||/(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent),i=e(document),t.popupsCache={}},open:function(n){r||(r=e(document.body));var o;if(n.isObj===!1){t.items=n.items.toArray(),t.index=0;var s,l=n.items;for(o=0;o(e||C.height())},_setFocus:function(){(t.st.focus?t.content.find(t.st.focus).eq(0):t.wrap).focus()},_onFocusIn:function(n){return n.target===t.wrap[0]||e.contains(t.wrap[0],n.target)?void 0:(t._setFocus(),!1)},_parseMarkup:function(t,n,r){var i;r.data&amp;&amp;(n=e.extend(r.data,n)),E(f,[t,n,r]),e.each(n,function(e,n){if(void 0===n||n===!1)return!0;if(i=e.split(&quot;_&quot;),i.length&gt;1){var r=t.find(g+&quot;-&quot;+i[0]);if(r.length&gt;0){var o=i[1];&quot;replaceWith&quot;===o?r[0]!==n[0]&amp;&amp;r.replaceWith(n):&quot;img&quot;===o?r.is(&quot;img&quot;)?r.attr(&quot;src&quot;,n):r.replaceWith(&#39;&#39;):r.attr(i[1],n)}}else t.find(g+&quot;-&quot;+e).html(n)})},_getScrollbarSize:function(){if(void 0===t.scrollbarSize){var e=document.createElement(&quot;div&quot;);e.id=&quot;mfp-sbm&quot;,e.style.cssText=&quot;width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;&quot;,document.body.appendChild(e),t.scrollbarSize=e.offsetWidth-e.clientWidth,document.body.removeChild(e)}return t.scrollbarSize}},e.magnificPopup={instance:null,proto:x.prototype,modules:[],open:function(t,n){return N(),t=t?e.extend(!0,{},t):{},t.isObj=!0,t.index=n||0,this.instance.open(t)},close:function(){return e.magnificPopup.instance&amp;&amp;e.magnificPopup.instance.close()},registerModule:function(t,n){n.options&amp;&amp;(e.magnificPopup.defaults[t]=n.options),e.extend(this.proto,n.proto),this.modules.push(t)},defaults:{disableOn:0,key:null,midClick:!1,mainClass:&quot;&quot;,preloader:!0,focus:&quot;&quot;,closeOnContentClick:!1,closeOnBgClick:!0,closeBtnInside:!0,showCloseBtn:!0,enableEscapeKey:!0,modal:!1,alignTop:!1,removalDelay:0,prependTo:null,fixedContentPos:&quot;auto&quot;,fixedBgPos:&quot;auto&quot;,overflowY:&quot;auto&quot;,closeMarkup:&#39;&amp;times;&#39;,tClose:&quot;Close (Esc)&quot;,tLoading:&quot;Loading...&quot;}},e.fn.magnificPopup=function(n){N();var r=e(this);if(&quot;string&quot;==typeof n)if(&quot;open&quot;===n){var i,o=w?r.data(&quot;magnificPopup&quot;):r[0].magnificPopup,a=parseInt(arguments[1],10)||0;o.items?i=o.items[a]:(i=r,o.delegate&amp;&amp;(i=i.find(o.delegate)),i=i.eq(a)),t._openClick({mfpEl:i},r,o)}else t.isOpen&amp;&amp;t[n].apply(t,Array.prototype.slice.call(arguments,1));else n=e.extend(!0,{},n),w?r.data(&quot;magnificPopup&quot;,n):r[0].magnificPopup=n,t.addGroup(r,n);return r};var j,L,D,I=&quot;inline&quot;,_=function(){D&amp;&amp;(L.after(D.addClass(j)).detach(),D=null)};e.magnificPopup.registerModule(I,{options:{hiddenClass:&quot;hide&quot;,markup:&quot;&quot;,tNotFound:&quot;Content not found&quot;},proto:{initInline:function(){t.types.push(I),T(l+&quot;.&quot;+I,function(){_()})},getInline:function(n,r){if(_(),n.src){var i=t.st.inline,o=e(n.src);if(o.length){var a=o[0].parentNode;a&amp;&amp;a.tagName&amp;&amp;(L||(j=i.hiddenClass,L=k(j),j=&quot;mfp-&quot;+j),D=o.after(L).detach().removeClass(j)),t.updateStatus(&quot;ready&quot;)}else t.updateStatus(&quot;error&quot;,i.tNotFound),o=e(&quot;&quot;);return n.inlineElement=o,o}return t.updateStatus(&quot;ready&quot;),t._parseMarkup(r,{},n),r}}});var H,O=&quot;ajax&quot;,M=function(){H&amp;&amp;r.removeClass(H)},P=function(){M(),t.req&amp;&amp;t.req.abort()};e.magnificPopup.registerModule(O,{options:{settings:null,cursor:&quot;mfp-ajax-cur&quot;,tError:&#39;The content could not be loaded.&#39;},proto:{initAjax:function(){t.types.push(O),H=t.st.ajax.cursor,T(l+&quot;.&quot;+O,P),T(&quot;BeforeChange.&quot;+O,P)},getAjax:function(n){H&amp;&amp;r.addClass(H),t.updateStatus(&quot;loading&quot;);var i=e.extend({url:n.src,success:function(r,i,o){var a={data:r,xhr:o};E(&quot;ParseAjax&quot;,a),t.appendContent(e(a.data),O),n.finished=!0,M(),t._setFocus(),setTimeout(function(){t.wrap.addClass(v)},16),t.updateStatus(&quot;ready&quot;),E(&quot;AjaxContentAdded&quot;)},error:function(){M(),n.finished=n.loadError=!0,t.updateStatus(&quot;error&quot;,t.st.ajax.tError.replace(&quot;%url%&quot;,n.src))}},t.st.ajax.settings);return t.req=e.ajax(i),&quot;&quot;}}});var q,F=function(n){if(n.data&amp;&amp;void 0!==n.data.title)return n.data.title;var r=t.st.image.titleSrc;if(r){if(e.isFunction(r))return r.call(t,n);if(n.el)return n.el.attr(r)||&quot;&quot;}return&quot;&quot;};e.magnificPopup.registerModule(&quot;image&quot;,{options:{markup:&#39;&#39;,cursor:&quot;mfp-zoom-out-cur&quot;,titleSrc:&quot;title&quot;,verticalFit:!0,tError:&#39;The image could not be loaded.&#39;},proto:{initImage:function(){var e=t.st.image,n=&quot;.image&quot;;t.types.push(&quot;image&quot;),T(p+n,function(){&quot;image&quot;===t.currItem.type&amp;&amp;e.cursor&amp;&amp;r.addClass(e.cursor)}),T(l+n,function(){e.cursor&amp;&amp;r.removeClass(e.cursor),C.off(&quot;resize&quot;+g)}),T(&quot;Resize&quot;+n,t.resizeImage),t.isLowIE&amp;&amp;T(&quot;AfterChange&quot;,t.resizeImage)},resizeImage:function(){var e=t.currItem;if(e&amp;&amp;e.img&amp;&amp;t.st.image.verticalFit){var n=0;t.isLowIE&amp;&amp;(n=parseInt(e.img.css(&quot;padding-top&quot;),10)+parseInt(e.img.css(&quot;padding-bottom&quot;),10)),e.img.css(&quot;max-height&quot;,t.wH-n)}},_onImageHasSize:function(e){e.img&amp;&amp;(e.hasSize=!0,q&amp;&amp;clearInterval(q),e.isCheckingImgSize=!1,E(&quot;ImageHasSize&quot;,e),e.imgHidden&amp;&amp;(t.content&amp;&amp;t.content.removeClass(&quot;mfp-loading&quot;),e.imgHidden=!1))},findImageSize:function(e){var n=0,r=e.img[0],i=function(o){q&amp;&amp;clearInterval(q),q=setInterval(function(){return r.naturalWidth&gt;0?void t._onImageHasSize(e):(n&gt;200&amp;&amp;clearInterval(q),n++,void(3===n?i(10):40===n?i(50):100===n&amp;&amp;i(500)))},o)};i(1)},getImage:function(n,r){var i=0,o=function(){n&amp;&amp;(n.img[0].complete?(n.img.off(&quot;.mfploader&quot;),n===t.currItem&amp;&amp;(t._onImageHasSize(n),t.updateStatus(&quot;ready&quot;)),n.hasSize=!0,n.loaded=!0,E(&quot;ImageLoadComplete&quot;)):(i++,200&gt;i?setTimeout(o,100):a()))},a=function(){n&amp;&amp;(n.img.off(&quot;.mfploader&quot;),n===t.currItem&amp;&amp;(t._onImageHasSize(n),t.updateStatus(&quot;error&quot;,s.tError.replace(&quot;%url%&quot;,n.src))),n.hasSize=!0,n.loaded=!0,n.loadError=!0)},s=t.st.image,l=r.find(&quot;.mfp-img&quot;);if(l.length){var u=document.createElement(&quot;img&quot;);u.className=&quot;mfp-img&quot;,n.img=e(u).on(&quot;load.mfploader&quot;,o).on(&quot;error.mfploader&quot;,a),u.src=n.src,l.is(&quot;img&quot;)&amp;&amp;(n.img=n.img.clone()),u=n.img[0],u.naturalWidth&gt;0?n.hasSize=!0:u.width||(n.hasSize=!1)}return t._parseMarkup(r,{title:F(n),img_replaceWith:n.img},n),t.resizeImage(),n.hasSize?(q&amp;&amp;clearInterval(q),n.loadError?(r.addClass(&quot;mfp-loading&quot;),t.updateStatus(&quot;error&quot;,s.tError.replace(&quot;%url%&quot;,n.src))):(r.removeClass(&quot;mfp-loading&quot;),t.updateStatus(&quot;ready&quot;)),r):(t.updateStatus(&quot;loading&quot;),n.loading=!0,n.hasSize||(n.imgHidden=!0,r.addClass(&quot;mfp-loading&quot;),t.findImageSize(n)),r)}}});var B,z=function(){return void 0===B&amp;&amp;(B=void 0!==document.createElement(&quot;p&quot;).style.MozTransform),B};e.magnificPopup.registerModule(&quot;zoom&quot;,{options:{enabled:!1,easing:&quot;ease-in-out&quot;,duration:300,opener:function(e){return e.is(&quot;img&quot;)?e:e.find(&quot;img&quot;)}},proto:{initZoom:function(){var e,n=t.st.zoom,r=&quot;.zoom&quot;;if(n.enabled&amp;&amp;t.supportsTransition){var i,o,a=n.duration,s=function(e){var t=e.clone().removeAttr(&quot;style&quot;).removeAttr(&quot;class&quot;).addClass(&quot;mfp-animated-image&quot;),r=&quot;all &quot;+n.duration/1e3+&quot;s &quot;+n.easing,i={position:&quot;fixed&quot;,zIndex:9999,left:0,top:0,&quot;-webkit-backface-visibility&quot;:&quot;hidden&quot;},o=&quot;transition&quot;;return i[&quot;-webkit-&quot;+o]=i[&quot;-moz-&quot;+o]=i[&quot;-o-&quot;+o]=i[o]=r,t.css(i),t},c=function(){t.content.css(&quot;visibility&quot;,&quot;visible&quot;)};T(&quot;BuildControls&quot;+r,function(){if(t._allowZoom()){if(clearTimeout(i),t.content.css(&quot;visibility&quot;,&quot;hidden&quot;),e=t._getItemToZoom(),!e)return void c();o=s(e),o.css(t._getOffset()),t.wrap.append(o),i=setTimeout(function(){o.css(t._getOffset(!0)),i=setTimeout(function(){c(),setTimeout(function(){o.remove(),e=o=null,E(&quot;ZoomAnimationEnded&quot;)},16)},a)},16)}}),T(u+r,function(){if(t._allowZoom()){if(clearTimeout(i),t.st.removalDelay=a,!e){if(e=t._getItemToZoom(),!e)return;o=s(e)}o.css(t._getOffset(!0)),t.wrap.append(o),t.content.css(&quot;visibility&quot;,&quot;hidden&quot;),setTimeout(function(){o.css(t._getOffset())},16)}}),T(l+r,function(){t._allowZoom()&amp;&amp;(c(),o&amp;&amp;o.remove(),e=null)})}},_allowZoom:function(){return&quot;image&quot;===t.currItem.type},_getItemToZoom:function(){return t.currItem.hasSize?t.currItem.img:!1},_getOffset:function(n){var r;r=n?t.currItem.img:t.st.zoom.opener(t.currItem.el||t.currItem);var i=r.offset(),o=parseInt(r.css(&quot;padding-top&quot;),10),a=parseInt(r.css(&quot;padding-bottom&quot;),10);i.top-=e(window).scrollTop()-o;var s={width:r.width(),height:(w?r.innerHeight():r[0].offsetHeight)-a-o};return z()?s[&quot;-moz-transform&quot;]=s.transform=&quot;translate(&quot;+i.left+&quot;px,&quot;+i.top+&quot;px)&quot;:(s.left=i.left,s.top=i.top),s}}});var R=&quot;iframe&quot;,W=&quot;//about:blank&quot;,$=function(e){if(t.currTemplate[R]){var n=t.currTemplate[R].find(&quot;iframe&quot;);n.length&amp;&amp;(e||(n[0].src=W),t.isIE8&amp;&amp;n.css(&quot;display&quot;,e?&quot;block&quot;:&quot;none&quot;))}};e.magnificPopup.registerModule(R,{options:{markup:&#39;&#39;,srcAction:&quot;iframe_src&quot;,patterns:{youtube:{index:&quot;youtube.com&quot;,id:&quot;v=&quot;,src:&quot;//www.youtube.com/embed/%id%?autoplay=1&quot;},vimeo:{index:&quot;vimeo.com/&quot;,id:&quot;/&quot;,src:&quot;//player.vimeo.com/video/%id%?autoplay=1&quot;},gmaps:{index:&quot;//maps.google.&quot;,src:&quot;%id%&amp;output=embed&quot;}}},proto:{initIframe:function(){t.types.push(R),T(&quot;BeforeChange&quot;,function(e,t,n){t!==n&amp;&amp;(t===R?$():n===R&amp;&amp;$(!0))}),T(l+&quot;.&quot;+R,function(){$()})},getIframe:function(n,r){var i=n.src,o=t.st.iframe;e.each(o.patterns,function(){return i.indexOf(this.index)&gt;-1?(this.id&amp;&amp;(i=&quot;string&quot;==typeof this.id?i.substr(i.lastIndexOf(this.id)+this.id.length,i.length):this.id.call(this,i)),i=this.src.replace(&quot;%id%&quot;,i),!1):void 0});var a={};return o.srcAction&amp;&amp;(a[o.srcAction]=i),t._parseMarkup(r,a,n),t.updateStatus(&quot;ready&quot;),r}}});var X=function(e){var n=t.items.length;return e&gt;n-1?e-n:0&gt;e?n+e:e},U=function(e,t,n){return e.replace(/%curr%/gi,t+1).replace(/%total%/gi,n)};e.magnificPopup.registerModule(&quot;gallery&quot;,{options:{enabled:!1,arrowMarkup:&#39;&#39;,preload:[0,2],navigateByImgClick:!0,arrows:!0,tPrev:&quot;Previous (Left arrow key)&quot;,tNext:&quot;Next (Right arrow key)&quot;,tCounter:&quot;%curr% of %total%&quot;},proto:{initGallery:function(){var n=t.st.gallery,r=&quot;.mfp-gallery&quot;,o=Boolean(e.fn.mfpFastClick);return t.direction=!0,n&amp;&amp;n.enabled?(a+=&quot; mfp-gallery&quot;,T(p+r,function(){n.navigateByImgClick&amp;&amp;t.wrap.on(&quot;click&quot;+r,&quot;.mfp-img&quot;,function(){return t.items.length&gt;1?(t.next(),!1):void 0}),i.on(&quot;keydown&quot;+r,function(e){37===e.keyCode?t.prev():39===e.keyCode&amp;&amp;t.next()})}),T(&quot;UpdateStatus&quot;+r,function(e,n){n.text&amp;&amp;(n.text=U(n.text,t.currItem.index,t.items.length))}),T(f+r,function(e,r,i,o){var a=t.items.length;i.counter=a&gt;1?U(n.tCounter,o.index,a):&quot;&quot;}),T(&quot;BuildControls&quot;+r,function(){if(t.items.length&gt;1&amp;&amp;n.arrows&amp;&amp;!t.arrowLeft){var r=n.arrowMarkup,i=t.arrowLeft=e(r.replace(/%title%/gi,n.tPrev).replace(/%dir%/gi,&quot;left&quot;)).addClass(b),a=t.arrowRight=e(r.replace(/%title%/gi,n.tNext).replace(/%dir%/gi,&quot;right&quot;)).addClass(b),s=o?&quot;mfpFastClick&quot;:&quot;click&quot;;i[s](function(){t.prev()}),a[s](function(){t.next()}),t.isIE7&amp;&amp;(k(&quot;b&quot;,i[0],!1,!0),k(&quot;a&quot;,i[0],!1,!0),k(&quot;b&quot;,a[0],!1,!0),k(&quot;a&quot;,a[0],!1,!0)),t.container.append(i.add(a))}}),T(h+r,function(){t._preloadTimeout&amp;&amp;clearTimeout(t._preloadTimeout),t._preloadTimeout=setTimeout(function(){t.preloadNearbyImages(),t._preloadTimeout=null},16)}),void T(l+r,function(){i.off(r),t.wrap.off(&quot;click&quot;+r),t.arrowLeft&amp;&amp;o&amp;&amp;t.arrowLeft.add(t.arrowRight).destroyMfpFastClick(),t.arrowRight=t.arrowLeft=null})):!1},next:function(){t.direction=!0,t.index=X(t.index+1),t.updateItemHTML()},prev:function(){t.direction=!1,t.index=X(t.index-1),t.updateItemHTML()},goTo:function(e){t.direction=e&gt;=t.index,t.index=e,t.updateItemHTML()},preloadNearbyImages:function(){var e,n=t.st.gallery.preload,r=Math.min(n[0],t.items.length),i=Math.min(n[1],t.items.length);for(e=1;e&#39;).on(&quot;load.mfploader&quot;,function(){r.hasSize=!0}).on(&quot;error.mfploader&quot;,function(){r.hasSize=!0,r.loadError=!0,E(&quot;LazyLoadError&quot;,r)}).attr(&quot;src&quot;,r.src)),r.preloaded=!0}}}});var Y=&quot;retina&quot;;e.magnificPopup.registerModule(Y,{options:{replaceSrc:function(e){return e.src.replace(/.w+$/,function(e){return&quot;@2x&quot;+e})},ratio:1},proto:{initRetina:function(){if(window.devicePixelRatio&gt;1){var e=t.st.retina,n=e.ratio;n=isNaN(n)?n():n,n&gt;1&amp;&amp;(T(&quot;ImageHasSize.&quot;+Y,function(e,t){t.img.css({&quot;max-width&quot;:t.img[0].naturalWidth/n,width:&quot;100%&quot;})}),T(&quot;ElementParse.&quot;+Y,function(t,r){r.src=e.replaceSrc(r,n)}))}}}}),function(){var t=1e3,n=&quot;ontouchstart&quot;in window,r=function(){C.off(&quot;touchmove&quot;+o+&quot; touchend&quot;+o)},i=&quot;mfpFastClick&quot;,o=&quot;.&quot;+i;e.fn.mfpFastClick=function(i){return e(this).each(function(){var a,s=e(this);if(n){var l,u,c,d,f,p;s.on(&quot;touchstart&quot;+o,function(e){d=!1,p=1,f=e.originalEvent?e.originalEvent.touches[0]:e.touches[0],u=f.clientX,c=f.clientY,C.on(&quot;touchmove&quot;+o,function(e){f=e.originalEvent?e.originalEvent.touches:e.touches,p=f.length,f=f[0],(Math.abs(f.clientX-u)&gt;10||Math.abs(f.clientY-c)&gt;10)&amp;&amp;(d=!0,r())}).on(&quot;touchend&quot;+o,function(e){r(),d||p&gt;1||(a=!0,e.preventDefault(),clearTimeout(l),l=setTimeout(function(){a=!1},t),i())})})}s.on(&quot;click&quot;+o,function(){a||i()})})},e.fn.destroyMfpFastClick=function(){e(this).off(&quot;touchstart&quot;+o+&quot; click&quot;+o),n&amp;&amp;C.off(&quot;touchmove&quot;+o+&quot; touchend&quot;+o)}}(),N()}(window.jQuery||window.Zepto),!function(e){&quot;function&quot;==typeof define&amp;&amp;define.amd?define([&quot;jquery&quot;],e):e(&quot;object&quot;==typeof module&amp;&amp;module.exports?require(&quot;jquery&quot;):jQuery)}(function(e){var t=&quot;1.7.2&quot;,n={},r={exclude:[],excludeWithin:[],offset:0,direction:&quot;top&quot;,delegateSelector:null,scrollElement:null,scrollTarget:null,beforeScroll:function(){},afterScroll:function(){},easing:&quot;swing&quot;,speed:400,autoCoefficient:2,preventDefault:!0},i=function(t){var n=[],r=!1,i=t.dir&amp;&amp;&quot;left&quot;===t.dir?&quot;scrollLeft&quot;:&quot;scrollTop&quot;;return this.each(function(){var t=e(this);return this!==document&amp;&amp;this!==window?!document.scrollingElement||this!==document.documentElement&amp;&amp;this!==document.body?void(t[i]()&gt;0?n.push(this):(t[i](1),r=t[i]()&gt;0,r&amp;&amp;n.push(this),t[i](0))):(n.push(document.scrollingElement),!1):void 0}),n.length||this.each(function(){this===document.documentElement&amp;&amp;&quot;smooth&quot;===e(this).css(&quot;scrollBehavior&quot;)&amp;&amp;(n=[this]),n.length||&quot;BODY&quot;!==this.nodeName||(n=[this])}),&quot;first&quot;===t.el&amp;&amp;n.length&gt;1&amp;&amp;(n=[n[0]]),n};e.fn.extend({scrollable:function(e){var t=i.call(this,{dir:e});return this.pushStack(t)},firstScrollable:function(e){var t=i.call(this,{el:&quot;first&quot;,dir:e});return this.pushStack(t)},smoothScroll:function(t,n){if(t=t||{},&quot;options&quot;===t)return n?this.each(function(){var t=e(this),r=e.extend(t.data(&quot;ssOpts&quot;)||{},n);e(this).data(&quot;ssOpts&quot;,r)}):this.first().data(&quot;ssOpts&quot;);var r=e.extend({},e.fn.smoothScroll.defaults,t),i=function(t){var n=function(e){return e.replace(/(:|.|/)/g,&quot;$1&quot;)},i=this,o=e(this),a=e.extend({},r,o.data(&quot;ssOpts&quot;)||{}),s=r.exclude,l=a.excludeWithin,u=0,c=0,d=!0,f={},p=e.smoothScroll.filterPath(location.pathname),h=e.smoothScroll.filterPath(i.pathname),m=location.hostname===i.hostname||!i.hostname,g=a.scrollTarget||h===p,v=n(i.hash);if(v&amp;&amp;!e(v).length&amp;&amp;(d=!1),a.scrollTarget||m&amp;&amp;g&amp;&amp;v){for(;d&amp;&amp;uImage #%curr% could not be loaded.&#39;},removalDelay:500,mainClass:&quot;mfp-zoom-in&quot;,callbacks:{beforeOpen:function(){this.st.image.markup=this.st.image.markup.replace(&quot;mfp-figure&quot;,&quot;mfp-figure mfp-with-anim&quot;)}},closeOnContentClick:!0,midClick:!0})});",
        "url": " "
      } ,
  
      "assets-css-main-css":  {
        "title": "",
      "content"	 : "/*! * Minimal Mistakes Jekyll Theme 4.4.1 by Michael Rose * Copyright 2017 Michael Rose - mademistakes.com | @mmistakes * Licensed under MIT (https://github.com/mmistakes/minimal-mistakes/blob/master/LICENSE.txt)*//*! *  Font Awesome 4.7.0 by @davegandy - http://fontawesome.io - @fontawesome *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License) */@font-face{font-family:&#39;FontAwesome&#39;;src:url(&quot;../fonts/fontawesome-webfont.eot?v=4.7.0&quot;);src:url(&quot;../fonts/fontawesome-webfont.eot?#iefix&amp;v=4.7.0&quot;) format(&quot;embedded-opentype&quot;),url(&quot;../fonts/fontawesome-webfont.woff2?v=4.7.0&quot;) format(&quot;woff2&quot;),url(&quot;../fonts/fontawesome-webfont.woff?v=4.7.0&quot;) format(&quot;woff&quot;),url(&quot;../fonts/fontawesome-webfont.ttf?v=4.7.0&quot;) format(&quot;truetype&quot;),url(&quot;../fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular&quot;) format(&quot;svg&quot;);font-weight:normal;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14286em;list-style-type:none}.fa-ul&gt;li{position:relative}.fa-li{position:absolute;left:-2.14286em;width:2.14286em;top:.14286em;text-align:center}.fa-li.fa-lg{left:-1.85714em}.fa-border{padding:.2em .25em .15em;border:solid 0.08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{-ms-filter:&quot;progid:DXImageTransform.Microsoft.BasicImage(rotation=1)&quot;;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-ms-filter:&quot;progid:DXImageTransform.Microsoft.BasicImage(rotation=2)&quot;;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-ms-filter:&quot;progid:DXImageTransform.Microsoft.BasicImage(rotation=3)&quot;;-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:&quot;progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)&quot;;-webkit-transform:scale(-1, 1);-ms-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{-ms-filter:&quot;progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)&quot;;-webkit-transform:scale(1, -1);-ms-transform:scale(1, -1);transform:scale(1, -1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:&quot;&quot;}.fa-music:before{content:&quot;&quot;}.fa-search:before{content:&quot;&quot;}.fa-envelope-o:before{content:&quot;&quot;}.fa-heart:before{content:&quot;&quot;}.fa-star:before{content:&quot;&quot;}.fa-star-o:before{content:&quot;&quot;}.fa-user:before{content:&quot;&quot;}.fa-film:before{content:&quot;&quot;}.fa-th-large:before{content:&quot;&quot;}.fa-th:before{content:&quot;&quot;}.fa-th-list:before{content:&quot;&quot;}.fa-check:before{content:&quot;&quot;}.fa-remove:before,.fa-close:before,.fa-times:before{content:&quot;&quot;}.fa-search-plus:before{content:&quot;&quot;}.fa-search-minus:before{content:&quot;&quot;}.fa-power-off:before{content:&quot;&quot;}.fa-signal:before{content:&quot;&quot;}.fa-gear:before,.fa-cog:before{content:&quot;&quot;}.fa-trash-o:before{content:&quot;&quot;}.fa-home:before{content:&quot;&quot;}.fa-file-o:before{content:&quot;&quot;}.fa-clock-o:before{content:&quot;&quot;}.fa-road:before{content:&quot;&quot;}.fa-download:before{content:&quot;&quot;}.fa-arrow-circle-o-down:before{content:&quot;&quot;}.fa-arrow-circle-o-up:before{content:&quot;&quot;}.fa-inbox:before{content:&quot;&quot;}.fa-play-circle-o:before{content:&quot;&quot;}.fa-rotate-right:before,.fa-repeat:before{content:&quot;&quot;}.fa-refresh:before{content:&quot;&quot;}.fa-list-alt:before{content:&quot;&quot;}.fa-lock:before{content:&quot;&quot;}.fa-flag:before{content:&quot;&quot;}.fa-headphones:before{content:&quot;&quot;}.fa-volume-off:before{content:&quot;&quot;}.fa-volume-down:before{content:&quot;&quot;}.fa-volume-up:before{content:&quot;&quot;}.fa-qrcode:before{content:&quot;&quot;}.fa-barcode:before{content:&quot;&quot;}.fa-tag:before{content:&quot;&quot;}.fa-tags:before{content:&quot;&quot;}.fa-book:before{content:&quot;&quot;}.fa-bookmark:before{content:&quot;&quot;}.fa-print:before{content:&quot;&quot;}.fa-camera:before{content:&quot;&quot;}.fa-font:before{content:&quot;&quot;}.fa-bold:before{content:&quot;&quot;}.fa-italic:before{content:&quot;&quot;}.fa-text-height:before{content:&quot;&quot;}.fa-text-width:before{content:&quot;&quot;}.fa-align-left:before{content:&quot;&quot;}.fa-align-center:before{content:&quot;&quot;}.fa-align-right:before{content:&quot;&quot;}.fa-align-justify:before{content:&quot;&quot;}.fa-list:before{content:&quot;&quot;}.fa-dedent:before,.fa-outdent:before{content:&quot;&quot;}.fa-indent:before{content:&quot;&quot;}.fa-video-camera:before{content:&quot;&quot;}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:&quot;&quot;}.fa-pencil:before{content:&quot;&quot;}.fa-map-marker:before{content:&quot;&quot;}.fa-adjust:before{content:&quot;&quot;}.fa-tint:before{content:&quot;&quot;}.fa-edit:before,.fa-pencil-square-o:before{content:&quot;&quot;}.fa-share-square-o:before{content:&quot;&quot;}.fa-check-square-o:before{content:&quot;&quot;}.fa-arrows:before{content:&quot;&quot;}.fa-step-backward:before{content:&quot;&quot;}.fa-fast-backward:before{content:&quot;&quot;}.fa-backward:before{content:&quot;&quot;}.fa-play:before{content:&quot;&quot;}.fa-pause:before{content:&quot;&quot;}.fa-stop:before{content:&quot;&quot;}.fa-forward:before{content:&quot;&quot;}.fa-fast-forward:before{content:&quot;&quot;}.fa-step-forward:before{content:&quot;&quot;}.fa-eject:before{content:&quot;&quot;}.fa-chevron-left:before{content:&quot;&quot;}.fa-chevron-right:before{content:&quot;&quot;}.fa-plus-circle:before{content:&quot;&quot;}.fa-minus-circle:before{content:&quot;&quot;}.fa-times-circle:before{content:&quot;&quot;}.fa-check-circle:before{content:&quot;&quot;}.fa-question-circle:before{content:&quot;&quot;}.fa-info-circle:before{content:&quot;&quot;}.fa-crosshairs:before{content:&quot;&quot;}.fa-times-circle-o:before{content:&quot;&quot;}.fa-check-circle-o:before{content:&quot;&quot;}.fa-ban:before{content:&quot;&quot;}.fa-arrow-left:before{content:&quot;&quot;}.fa-arrow-right:before{content:&quot;&quot;}.fa-arrow-up:before{content:&quot;&quot;}.fa-arrow-down:before{content:&quot;&quot;}.fa-mail-forward:before,.fa-share:before{content:&quot;&quot;}.fa-expand:before{content:&quot;&quot;}.fa-compress:before{content:&quot;&quot;}.fa-plus:before{content:&quot;&quot;}.fa-minus:before{content:&quot;&quot;}.fa-asterisk:before{content:&quot;&quot;}.fa-exclamation-circle:before{content:&quot;&quot;}.fa-gift:before{content:&quot;&quot;}.fa-leaf:before{content:&quot;&quot;}.fa-fire:before{content:&quot;&quot;}.fa-eye:before{content:&quot;&quot;}.fa-eye-slash:before{content:&quot;&quot;}.fa-warning:before,.fa-exclamation-triangle:before{content:&quot;&quot;}.fa-plane:before{content:&quot;&quot;}.fa-calendar:before{content:&quot;&quot;}.fa-random:before{content:&quot;&quot;}.fa-comment:before{content:&quot;&quot;}.fa-magnet:before{content:&quot;&quot;}.fa-chevron-up:before{content:&quot;&quot;}.fa-chevron-down:before{content:&quot;&quot;}.fa-retweet:before{content:&quot;&quot;}.fa-shopping-cart:before{content:&quot;&quot;}.fa-folder:before{content:&quot;&quot;}.fa-folder-open:before{content:&quot;&quot;}.fa-arrows-v:before{content:&quot;&quot;}.fa-arrows-h:before{content:&quot;&quot;}.fa-bar-chart-o:before,.fa-bar-chart:before{content:&quot;&quot;}.fa-twitter-square:before{content:&quot;&quot;}.fa-facebook-square:before{content:&quot;&quot;}.fa-camera-retro:before{content:&quot;&quot;}.fa-key:before{content:&quot;&quot;}.fa-gears:before,.fa-cogs:before{content:&quot;&quot;}.fa-comments:before{content:&quot;&quot;}.fa-thumbs-o-up:before{content:&quot;&quot;}.fa-thumbs-o-down:before{content:&quot;&quot;}.fa-star-half:before{content:&quot;&quot;}.fa-heart-o:before{content:&quot;&quot;}.fa-sign-out:before{content:&quot;&quot;}.fa-linkedin-square:before{content:&quot;&quot;}.fa-thumb-tack:before{content:&quot;&quot;}.fa-external-link:before{content:&quot;&quot;}.fa-sign-in:before{content:&quot;&quot;}.fa-trophy:before{content:&quot;&quot;}.fa-github-square:before{content:&quot;&quot;}.fa-upload:before{content:&quot;&quot;}.fa-lemon-o:before{content:&quot;&quot;}.fa-phone:before{content:&quot;&quot;}.fa-square-o:before{content:&quot;&quot;}.fa-bookmark-o:before{content:&quot;&quot;}.fa-phone-square:before{content:&quot;&quot;}.fa-twitter:before{content:&quot;&quot;}.fa-facebook-f:before,.fa-facebook:before{content:&quot;&quot;}.fa-github:before{content:&quot;&quot;}.fa-unlock:before{content:&quot;&quot;}.fa-credit-card:before{content:&quot;&quot;}.fa-feed:before,.fa-rss:before{content:&quot;&quot;}.fa-hdd-o:before{content:&quot;&quot;}.fa-bullhorn:before{content:&quot;&quot;}.fa-bell:before{content:&quot;&quot;}.fa-certificate:before{content:&quot;&quot;}.fa-hand-o-right:before{content:&quot;&quot;}.fa-hand-o-left:before{content:&quot;&quot;}.fa-hand-o-up:before{content:&quot;&quot;}.fa-hand-o-down:before{content:&quot;&quot;}.fa-arrow-circle-left:before{content:&quot;&quot;}.fa-arrow-circle-right:before{content:&quot;&quot;}.fa-arrow-circle-up:before{content:&quot;&quot;}.fa-arrow-circle-down:before{content:&quot;&quot;}.fa-globe:before{content:&quot;&quot;}.fa-wrench:before{content:&quot;&quot;}.fa-tasks:before{content:&quot;&quot;}.fa-filter:before{content:&quot;&quot;}.fa-briefcase:before{content:&quot;&quot;}.fa-arrows-alt:before{content:&quot;&quot;}.fa-group:before,.fa-users:before{content:&quot;&quot;}.fa-chain:before,.fa-link:before{content:&quot;&quot;}.fa-cloud:before{content:&quot;&quot;}.fa-flask:before{content:&quot;&quot;}.fa-cut:before,.fa-scissors:before{content:&quot;&quot;}.fa-copy:before,.fa-files-o:before{content:&quot;&quot;}.fa-paperclip:before{content:&quot;&quot;}.fa-save:before,.fa-floppy-o:before{content:&quot;&quot;}.fa-square:before{content:&quot;&quot;}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:&quot;&quot;}.fa-list-ul:before{content:&quot;&quot;}.fa-list-ol:before{content:&quot;&quot;}.fa-strikethrough:before{content:&quot;&quot;}.fa-underline:before{content:&quot;&quot;}.fa-table:before{content:&quot;&quot;}.fa-magic:before{content:&quot;&quot;}.fa-truck:before{content:&quot;&quot;}.fa-pinterest:before{content:&quot;&quot;}.fa-pinterest-square:before{content:&quot;&quot;}.fa-google-plus-square:before{content:&quot;&quot;}.fa-google-plus:before{content:&quot;&quot;}.fa-money:before{content:&quot;&quot;}.fa-caret-down:before{content:&quot;&quot;}.fa-caret-up:before{content:&quot;&quot;}.fa-caret-left:before{content:&quot;&quot;}.fa-caret-right:before{content:&quot;&quot;}.fa-columns:before{content:&quot;&quot;}.fa-unsorted:before,.fa-sort:before{content:&quot;&quot;}.fa-sort-down:before,.fa-sort-desc:before{content:&quot;&quot;}.fa-sort-up:before,.fa-sort-asc:before{content:&quot;&quot;}.fa-envelope:before{content:&quot;&quot;}.fa-linkedin:before{content:&quot;&quot;}.fa-rotate-left:before,.fa-undo:before{content:&quot;&quot;}.fa-legal:before,.fa-gavel:before{content:&quot;&quot;}.fa-dashboard:before,.fa-tachometer:before{content:&quot;&quot;}.fa-comment-o:before{content:&quot;&quot;}.fa-comments-o:before{content:&quot;&quot;}.fa-flash:before,.fa-bolt:before{content:&quot;&quot;}.fa-sitemap:before{content:&quot;&quot;}.fa-umbrella:before{content:&quot;&quot;}.fa-paste:before,.fa-clipboard:before{content:&quot;&quot;}.fa-lightbulb-o:before{content:&quot;&quot;}.fa-exchange:before{content:&quot;&quot;}.fa-cloud-download:before{content:&quot;&quot;}.fa-cloud-upload:before{content:&quot;&quot;}.fa-user-md:before{content:&quot;&quot;}.fa-stethoscope:before{content:&quot;&quot;}.fa-suitcase:before{content:&quot;&quot;}.fa-bell-o:before{content:&quot;&quot;}.fa-coffee:before{content:&quot;&quot;}.fa-cutlery:before{content:&quot;&quot;}.fa-file-text-o:before{content:&quot;&quot;}.fa-building-o:before{content:&quot;&quot;}.fa-hospital-o:before{content:&quot;&quot;}.fa-ambulance:before{content:&quot;&quot;}.fa-medkit:before{content:&quot;&quot;}.fa-fighter-jet:before{content:&quot;&quot;}.fa-beer:before{content:&quot;&quot;}.fa-h-square:before{content:&quot;&quot;}.fa-plus-square:before{content:&quot;&quot;}.fa-angle-double-left:before{content:&quot;&quot;}.fa-angle-double-right:before{content:&quot;&quot;}.fa-angle-double-up:before{content:&quot;&quot;}.fa-angle-double-down:before{content:&quot;&quot;}.fa-angle-left:before{content:&quot;&quot;}.fa-angle-right:before{content:&quot;&quot;}.fa-angle-up:before{content:&quot;&quot;}.fa-angle-down:before{content:&quot;&quot;}.fa-desktop:before{content:&quot;&quot;}.fa-laptop:before{content:&quot;&quot;}.fa-tablet:before{content:&quot;&quot;}.fa-mobile-phone:before,.fa-mobile:before{content:&quot;&quot;}.fa-circle-o:before{content:&quot;&quot;}.fa-quote-left:before{content:&quot;&quot;}.fa-quote-right:before{content:&quot;&quot;}.fa-spinner:before{content:&quot;&quot;}.fa-circle:before{content:&quot;&quot;}.fa-mail-reply:before,.fa-reply:before{content:&quot;&quot;}.fa-github-alt:before{content:&quot;&quot;}.fa-folder-o:before{content:&quot;&quot;}.fa-folder-open-o:before{content:&quot;&quot;}.fa-smile-o:before{content:&quot;&quot;}.fa-frown-o:before{content:&quot;&quot;}.fa-meh-o:before{content:&quot;&quot;}.fa-gamepad:before{content:&quot;&quot;}.fa-keyboard-o:before{content:&quot;&quot;}.fa-flag-o:before{content:&quot;&quot;}.fa-flag-checkered:before{content:&quot;&quot;}.fa-terminal:before{content:&quot;&quot;}.fa-code:before{content:&quot;&quot;}.fa-mail-reply-all:before,.fa-reply-all:before{content:&quot;&quot;}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:&quot;&quot;}.fa-location-arrow:before{content:&quot;&quot;}.fa-crop:before{content:&quot;&quot;}.fa-code-fork:before{content:&quot;&quot;}.fa-unlink:before,.fa-chain-broken:before{content:&quot;&quot;}.fa-question:before{content:&quot;&quot;}.fa-info:before{content:&quot;&quot;}.fa-exclamation:before{content:&quot;&quot;}.fa-superscript:before{content:&quot;&quot;}.fa-subscript:before{content:&quot;&quot;}.fa-eraser:before{content:&quot;&quot;}.fa-puzzle-piece:before{content:&quot;&quot;}.fa-microphone:before{content:&quot;&quot;}.fa-microphone-slash:before{content:&quot;&quot;}.fa-shield:before{content:&quot;&quot;}.fa-calendar-o:before{content:&quot;&quot;}.fa-fire-extinguisher:before{content:&quot;&quot;}.fa-rocket:before{content:&quot;&quot;}.fa-maxcdn:before{content:&quot;&quot;}.fa-chevron-circle-left:before{content:&quot;&quot;}.fa-chevron-circle-right:before{content:&quot;&quot;}.fa-chevron-circle-up:before{content:&quot;&quot;}.fa-chevron-circle-down:before{content:&quot;&quot;}.fa-html5:before{content:&quot;&quot;}.fa-css3:before{content:&quot;&quot;}.fa-anchor:before{content:&quot;&quot;}.fa-unlock-alt:before{content:&quot;&quot;}.fa-bullseye:before{content:&quot;&quot;}.fa-ellipsis-h:before{content:&quot;&quot;}.fa-ellipsis-v:before{content:&quot;&quot;}.fa-rss-square:before{content:&quot;&quot;}.fa-play-circle:before{content:&quot;&quot;}.fa-ticket:before{content:&quot;&quot;}.fa-minus-square:before{content:&quot;&quot;}.fa-minus-square-o:before{content:&quot;&quot;}.fa-level-up:before{content:&quot;&quot;}.fa-level-down:before{content:&quot;&quot;}.fa-check-square:before{content:&quot;&quot;}.fa-pencil-square:before{content:&quot;&quot;}.fa-external-link-square:before{content:&quot;&quot;}.fa-share-square:before{content:&quot;&quot;}.fa-compass:before{content:&quot;&quot;}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:&quot;&quot;}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:&quot;&quot;}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:&quot;&quot;}.fa-euro:before,.fa-eur:before{content:&quot;&quot;}.fa-gbp:before{content:&quot;&quot;}.fa-dollar:before,.fa-usd:before{content:&quot;&quot;}.fa-rupee:before,.fa-inr:before{content:&quot;&quot;}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:&quot;&quot;}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:&quot;&quot;}.fa-won:before,.fa-krw:before{content:&quot;&quot;}.fa-bitcoin:before,.fa-btc:before{content:&quot;&quot;}.fa-file:before{content:&quot;&quot;}.fa-file-text:before{content:&quot;&quot;}.fa-sort-alpha-asc:before{content:&quot;&quot;}.fa-sort-alpha-desc:before{content:&quot;&quot;}.fa-sort-amount-asc:before{content:&quot;&quot;}.fa-sort-amount-desc:before{content:&quot;&quot;}.fa-sort-numeric-asc:before{content:&quot;&quot;}.fa-sort-numeric-desc:before{content:&quot;&quot;}.fa-thumbs-up:before{content:&quot;&quot;}.fa-thumbs-down:before{content:&quot;&quot;}.fa-youtube-square:before{content:&quot;&quot;}.fa-youtube:before{content:&quot;&quot;}.fa-xing:before{content:&quot;&quot;}.fa-xing-square:before{content:&quot;&quot;}.fa-youtube-play:before{content:&quot;&quot;}.fa-dropbox:before{content:&quot;&quot;}.fa-stack-overflow:before{content:&quot;&quot;}.fa-instagram:before{content:&quot;&quot;}.fa-flickr:before{content:&quot;&quot;}.fa-adn:before{content:&quot;&quot;}.fa-bitbucket:before{content:&quot;&quot;}.fa-bitbucket-square:before{content:&quot;&quot;}.fa-tumblr:before{content:&quot;&quot;}.fa-tumblr-square:before{content:&quot;&quot;}.fa-long-arrow-down:before{content:&quot;&quot;}.fa-long-arrow-up:before{content:&quot;&quot;}.fa-long-arrow-left:before{content:&quot;&quot;}.fa-long-arrow-right:before{content:&quot;&quot;}.fa-apple:before{content:&quot;&quot;}.fa-windows:before{content:&quot;&quot;}.fa-android:before{content:&quot;&quot;}.fa-linux:before{content:&quot;&quot;}.fa-dribbble:before{content:&quot;&quot;}.fa-skype:before{content:&quot;&quot;}.fa-foursquare:before{content:&quot;&quot;}.fa-trello:before{content:&quot;&quot;}.fa-female:before{content:&quot;&quot;}.fa-male:before{content:&quot;&quot;}.fa-gittip:before,.fa-gratipay:before{content:&quot;&quot;}.fa-sun-o:before{content:&quot;&quot;}.fa-moon-o:before{content:&quot;&quot;}.fa-archive:before{content:&quot;&quot;}.fa-bug:before{content:&quot;&quot;}.fa-vk:before{content:&quot;&quot;}.fa-weibo:before{content:&quot;&quot;}.fa-renren:before{content:&quot;&quot;}.fa-pagelines:before{content:&quot;&quot;}.fa-stack-exchange:before{content:&quot;&quot;}.fa-arrow-circle-o-right:before{content:&quot;&quot;}.fa-arrow-circle-o-left:before{content:&quot;&quot;}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:&quot;&quot;}.fa-dot-circle-o:before{content:&quot;&quot;}.fa-wheelchair:before{content:&quot;&quot;}.fa-vimeo-square:before{content:&quot;&quot;}.fa-turkish-lira:before,.fa-try:before{content:&quot;&quot;}.fa-plus-square-o:before{content:&quot;&quot;}.fa-space-shuttle:before{content:&quot;&quot;}.fa-slack:before{content:&quot;&quot;}.fa-envelope-square:before{content:&quot;&quot;}.fa-wordpress:before{content:&quot;&quot;}.fa-openid:before{content:&quot;&quot;}.fa-institution:before,.fa-bank:before,.fa-university:before{content:&quot;&quot;}.fa-mortar-board:before,.fa-graduation-cap:before{content:&quot;&quot;}.fa-yahoo:before{content:&quot;&quot;}.fa-google:before{content:&quot;&quot;}.fa-reddit:before{content:&quot;&quot;}.fa-reddit-square:before{content:&quot;&quot;}.fa-stumbleupon-circle:before{content:&quot;&quot;}.fa-stumbleupon:before{content:&quot;&quot;}.fa-delicious:before{content:&quot;&quot;}.fa-digg:before{content:&quot;&quot;}.fa-pied-piper-pp:before{content:&quot;&quot;}.fa-pied-piper-alt:before{content:&quot;&quot;}.fa-drupal:before{content:&quot;&quot;}.fa-joomla:before{content:&quot;&quot;}.fa-language:before{content:&quot;&quot;}.fa-fax:before{content:&quot;&quot;}.fa-building:before{content:&quot;&quot;}.fa-child:before{content:&quot;&quot;}.fa-paw:before{content:&quot;&quot;}.fa-spoon:before{content:&quot;&quot;}.fa-cube:before{content:&quot;&quot;}.fa-cubes:before{content:&quot;&quot;}.fa-behance:before{content:&quot;&quot;}.fa-behance-square:before{content:&quot;&quot;}.fa-steam:before{content:&quot;&quot;}.fa-steam-square:before{content:&quot;&quot;}.fa-recycle:before{content:&quot;&quot;}.fa-automobile:before,.fa-car:before{content:&quot;&quot;}.fa-cab:before,.fa-taxi:before{content:&quot;&quot;}.fa-tree:before{content:&quot;&quot;}.fa-spotify:before{content:&quot;&quot;}.fa-deviantart:before{content:&quot;&quot;}.fa-soundcloud:before{content:&quot;&quot;}.fa-database:before{content:&quot;&quot;}.fa-file-pdf-o:before{content:&quot;&quot;}.fa-file-word-o:before{content:&quot;&quot;}.fa-file-excel-o:before{content:&quot;&quot;}.fa-file-powerpoint-o:before{content:&quot;&quot;}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:&quot;&quot;}.fa-file-zip-o:before,.fa-file-archive-o:before{content:&quot;&quot;}.fa-file-sound-o:before,.fa-file-audio-o:before{content:&quot;&quot;}.fa-file-movie-o:before,.fa-file-video-o:before{content:&quot;&quot;}.fa-file-code-o:before{content:&quot;&quot;}.fa-vine:before{content:&quot;&quot;}.fa-codepen:before{content:&quot;&quot;}.fa-jsfiddle:before{content:&quot;&quot;}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:&quot;&quot;}.fa-circle-o-notch:before{content:&quot;&quot;}.fa-ra:before,.fa-resistance:before,.fa-rebel:before{content:&quot;&quot;}.fa-ge:before,.fa-empire:before{content:&quot;&quot;}.fa-git-square:before{content:&quot;&quot;}.fa-git:before{content:&quot;&quot;}.fa-y-combinator-square:before,.fa-yc-square:before,.fa-hacker-news:before{content:&quot;&quot;}.fa-tencent-weibo:before{content:&quot;&quot;}.fa-qq:before{content:&quot;&quot;}.fa-wechat:before,.fa-weixin:before{content:&quot;&quot;}.fa-send:before,.fa-paper-plane:before{content:&quot;&quot;}.fa-send-o:before,.fa-paper-plane-o:before{content:&quot;&quot;}.fa-history:before{content:&quot;&quot;}.fa-circle-thin:before{content:&quot;&quot;}.fa-header:before{content:&quot;&quot;}.fa-paragraph:before{content:&quot;&quot;}.fa-sliders:before{content:&quot;&quot;}.fa-share-alt:before{content:&quot;&quot;}.fa-share-alt-square:before{content:&quot;&quot;}.fa-bomb:before{content:&quot;&quot;}.fa-soccer-ball-o:before,.fa-futbol-o:before{content:&quot;&quot;}.fa-tty:before{content:&quot;&quot;}.fa-binoculars:before{content:&quot;&quot;}.fa-plug:before{content:&quot;&quot;}.fa-slideshare:before{content:&quot;&quot;}.fa-twitch:before{content:&quot;&quot;}.fa-yelp:before{content:&quot;&quot;}.fa-newspaper-o:before{content:&quot;&quot;}.fa-wifi:before{content:&quot;&quot;}.fa-calculator:before{content:&quot;&quot;}.fa-paypal:before{content:&quot;&quot;}.fa-google-wallet:before{content:&quot;&quot;}.fa-cc-visa:before{content:&quot;&quot;}.fa-cc-mastercard:before{content:&quot;&quot;}.fa-cc-discover:before{content:&quot;&quot;}.fa-cc-amex:before{content:&quot;&quot;}.fa-cc-paypal:before{content:&quot;&quot;}.fa-cc-stripe:before{content:&quot;&quot;}.fa-bell-slash:before{content:&quot;&quot;}.fa-bell-slash-o:before{content:&quot;&quot;}.fa-trash:before{content:&quot;&quot;}.fa-copyright:before{content:&quot;&quot;}.fa-at:before{content:&quot;&quot;}.fa-eyedropper:before{content:&quot;&quot;}.fa-paint-brush:before{content:&quot;&quot;}.fa-birthday-cake:before{content:&quot;&quot;}.fa-area-chart:before{content:&quot;&quot;}.fa-pie-chart:before{content:&quot;&quot;}.fa-line-chart:before{content:&quot;&quot;}.fa-lastfm:before{content:&quot;&quot;}.fa-lastfm-square:before{content:&quot;&quot;}.fa-toggle-off:before{content:&quot;&quot;}.fa-toggle-on:before{content:&quot;&quot;}.fa-bicycle:before{content:&quot;&quot;}.fa-bus:before{content:&quot;&quot;}.fa-ioxhost:before{content:&quot;&quot;}.fa-angellist:before{content:&quot;&quot;}.fa-cc:before{content:&quot;&quot;}.fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:&quot;&quot;}.fa-meanpath:before{content:&quot;&quot;}.fa-buysellads:before{content:&quot;&quot;}.fa-connectdevelop:before{content:&quot;&quot;}.fa-dashcube:before{content:&quot;&quot;}.fa-forumbee:before{content:&quot;&quot;}.fa-leanpub:before{content:&quot;&quot;}.fa-sellsy:before{content:&quot;&quot;}.fa-shirtsinbulk:before{content:&quot;&quot;}.fa-simplybuilt:before{content:&quot;&quot;}.fa-skyatlas:before{content:&quot;&quot;}.fa-cart-plus:before{content:&quot;&quot;}.fa-cart-arrow-down:before{content:&quot;&quot;}.fa-diamond:before{content:&quot;&quot;}.fa-ship:before{content:&quot;&quot;}.fa-user-secret:before{content:&quot;&quot;}.fa-motorcycle:before{content:&quot;&quot;}.fa-street-view:before{content:&quot;&quot;}.fa-heartbeat:before{content:&quot;&quot;}.fa-venus:before{content:&quot;&quot;}.fa-mars:before{content:&quot;&quot;}.fa-mercury:before{content:&quot;&quot;}.fa-intersex:before,.fa-transgender:before{content:&quot;&quot;}.fa-transgender-alt:before{content:&quot;&quot;}.fa-venus-double:before{content:&quot;&quot;}.fa-mars-double:before{content:&quot;&quot;}.fa-venus-mars:before{content:&quot;&quot;}.fa-mars-stroke:before{content:&quot;&quot;}.fa-mars-stroke-v:before{content:&quot;&quot;}.fa-mars-stroke-h:before{content:&quot;&quot;}.fa-neuter:before{content:&quot;&quot;}.fa-genderless:before{content:&quot;&quot;}.fa-facebook-official:before{content:&quot;&quot;}.fa-pinterest-p:before{content:&quot;&quot;}.fa-whatsapp:before{content:&quot;&quot;}.fa-server:before{content:&quot;&quot;}.fa-user-plus:before{content:&quot;&quot;}.fa-user-times:before{content:&quot;&quot;}.fa-hotel:before,.fa-bed:before{content:&quot;&quot;}.fa-viacoin:before{content:&quot;&quot;}.fa-train:before{content:&quot;&quot;}.fa-subway:before{content:&quot;&quot;}.fa-medium:before{content:&quot;&quot;}.fa-yc:before,.fa-y-combinator:before{content:&quot;&quot;}.fa-optin-monster:before{content:&quot;&quot;}.fa-opencart:before{content:&quot;&quot;}.fa-expeditedssl:before{content:&quot;&quot;}.fa-battery-4:before,.fa-battery:before,.fa-battery-full:before{content:&quot;&quot;}.fa-battery-3:before,.fa-battery-three-quarters:before{content:&quot;&quot;}.fa-battery-2:before,.fa-battery-half:before{content:&quot;&quot;}.fa-battery-1:before,.fa-battery-quarter:before{content:&quot;&quot;}.fa-battery-0:before,.fa-battery-empty:before{content:&quot;&quot;}.fa-mouse-pointer:before{content:&quot;&quot;}.fa-i-cursor:before{content:&quot;&quot;}.fa-object-group:before{content:&quot;&quot;}.fa-object-ungroup:before{content:&quot;&quot;}.fa-sticky-note:before{content:&quot;&quot;}.fa-sticky-note-o:before{content:&quot;&quot;}.fa-cc-jcb:before{content:&quot;&quot;}.fa-cc-diners-club:before{content:&quot;&quot;}.fa-clone:before{content:&quot;&quot;}.fa-balance-scale:before{content:&quot;&quot;}.fa-hourglass-o:before{content:&quot;&quot;}.fa-hourglass-1:before,.fa-hourglass-start:before{content:&quot;&quot;}.fa-hourglass-2:before,.fa-hourglass-half:before{content:&quot;&quot;}.fa-hourglass-3:before,.fa-hourglass-end:before{content:&quot;&quot;}.fa-hourglass:before{content:&quot;&quot;}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:&quot;&quot;}.fa-hand-stop-o:before,.fa-hand-paper-o:before{content:&quot;&quot;}.fa-hand-scissors-o:before{content:&quot;&quot;}.fa-hand-lizard-o:before{content:&quot;&quot;}.fa-hand-spock-o:before{content:&quot;&quot;}.fa-hand-pointer-o:before{content:&quot;&quot;}.fa-hand-peace-o:before{content:&quot;&quot;}.fa-trademark:before{content:&quot;&quot;}.fa-registered:before{content:&quot;&quot;}.fa-creative-commons:before{content:&quot;&quot;}.fa-gg:before{content:&quot;&quot;}.fa-gg-circle:before{content:&quot;&quot;}.fa-tripadvisor:before{content:&quot;&quot;}.fa-odnoklassniki:before{content:&quot;&quot;}.fa-odnoklassniki-square:before{content:&quot;&quot;}.fa-get-pocket:before{content:&quot;&quot;}.fa-wikipedia-w:before{content:&quot;&quot;}.fa-safari:before{content:&quot;&quot;}.fa-chrome:before{content:&quot;&quot;}.fa-firefox:before{content:&quot;&quot;}.fa-opera:before{content:&quot;&quot;}.fa-internet-explorer:before{content:&quot;&quot;}.fa-tv:before,.fa-television:before{content:&quot;&quot;}.fa-contao:before{content:&quot;&quot;}.fa-500px:before{content:&quot;&quot;}.fa-amazon:before{content:&quot;&quot;}.fa-calendar-plus-o:before{content:&quot;&quot;}.fa-calendar-minus-o:before{content:&quot;&quot;}.fa-calendar-times-o:before{content:&quot;&quot;}.fa-calendar-check-o:before{content:&quot;&quot;}.fa-industry:before{content:&quot;&quot;}.fa-map-pin:before{content:&quot;&quot;}.fa-map-signs:before{content:&quot;&quot;}.fa-map-o:before{content:&quot;&quot;}.fa-map:before{content:&quot;&quot;}.fa-commenting:before{content:&quot;&quot;}.fa-commenting-o:before{content:&quot;&quot;}.fa-houzz:before{content:&quot;&quot;}.fa-vimeo:before{content:&quot;&quot;}.fa-black-tie:before{content:&quot;&quot;}.fa-fonticons:before{content:&quot;&quot;}.fa-reddit-alien:before{content:&quot;&quot;}.fa-edge:before{content:&quot;&quot;}.fa-credit-card-alt:before{content:&quot;&quot;}.fa-codiepie:before{content:&quot;&quot;}.fa-modx:before{content:&quot;&quot;}.fa-fort-awesome:before{content:&quot;&quot;}.fa-usb:before{content:&quot;&quot;}.fa-product-hunt:before{content:&quot;&quot;}.fa-mixcloud:before{content:&quot;&quot;}.fa-scribd:before{content:&quot;&quot;}.fa-pause-circle:before{content:&quot;&quot;}.fa-pause-circle-o:before{content:&quot;&quot;}.fa-stop-circle:before{content:&quot;&quot;}.fa-stop-circle-o:before{content:&quot;&quot;}.fa-shopping-bag:before{content:&quot;&quot;}.fa-shopping-basket:before{content:&quot;&quot;}.fa-hashtag:before{content:&quot;&quot;}.fa-bluetooth:before{content:&quot;&quot;}.fa-bluetooth-b:before{content:&quot;&quot;}.fa-percent:before{content:&quot;&quot;}.fa-gitlab:before{content:&quot;&quot;}.fa-wpbeginner:before{content:&quot;&quot;}.fa-wpforms:before{content:&quot;&quot;}.fa-envira:before{content:&quot;&quot;}.fa-universal-access:before{content:&quot;&quot;}.fa-wheelchair-alt:before{content:&quot;&quot;}.fa-question-circle-o:before{content:&quot;&quot;}.fa-blind:before{content:&quot;&quot;}.fa-audio-description:before{content:&quot;&quot;}.fa-volume-control-phone:before{content:&quot;&quot;}.fa-braille:before{content:&quot;&quot;}.fa-assistive-listening-systems:before{content:&quot;&quot;}.fa-asl-interpreting:before,.fa-american-sign-language-interpreting:before{content:&quot;&quot;}.fa-deafness:before,.fa-hard-of-hearing:before,.fa-deaf:before{content:&quot;&quot;}.fa-glide:before{content:&quot;&quot;}.fa-glide-g:before{content:&quot;&quot;}.fa-signing:before,.fa-sign-language:before{content:&quot;&quot;}.fa-low-vision:before{content:&quot;&quot;}.fa-viadeo:before{content:&quot;&quot;}.fa-viadeo-square:before{content:&quot;&quot;}.fa-snapchat:before{content:&quot;&quot;}.fa-snapchat-ghost:before{content:&quot;&quot;}.fa-snapchat-square:before{content:&quot;&quot;}.fa-pied-piper:before{content:&quot;&quot;}.fa-first-order:before{content:&quot;&quot;}.fa-yoast:before{content:&quot;&quot;}.fa-themeisle:before{content:&quot;&quot;}.fa-google-plus-circle:before,.fa-google-plus-official:before{content:&quot;&quot;}.fa-fa:before,.fa-font-awesome:before{content:&quot;&quot;}.fa-handshake-o:before{content:&quot;&quot;}.fa-envelope-open:before{content:&quot;&quot;}.fa-envelope-open-o:before{content:&quot;&quot;}.fa-linode:before{content:&quot;&quot;}.fa-address-book:before{content:&quot;&quot;}.fa-address-book-o:before{content:&quot;&quot;}.fa-vcard:before,.fa-address-card:before{content:&quot;&quot;}.fa-vcard-o:before,.fa-address-card-o:before{content:&quot;&quot;}.fa-user-circle:before{content:&quot;&quot;}.fa-user-circle-o:before{content:&quot;&quot;}.fa-user-o:before{content:&quot;&quot;}.fa-id-badge:before{content:&quot;&quot;}.fa-drivers-license:before,.fa-id-card:before{content:&quot;&quot;}.fa-drivers-license-o:before,.fa-id-card-o:before{content:&quot;&quot;}.fa-quora:before{content:&quot;&quot;}.fa-free-code-camp:before{content:&quot;&quot;}.fa-telegram:before{content:&quot;&quot;}.fa-thermometer-4:before,.fa-thermometer:before,.fa-thermometer-full:before{content:&quot;&quot;}.fa-thermometer-3:before,.fa-thermometer-three-quarters:before{content:&quot;&quot;}.fa-thermometer-2:before,.fa-thermometer-half:before{content:&quot;&quot;}.fa-thermometer-1:before,.fa-thermometer-quarter:before{content:&quot;&quot;}.fa-thermometer-0:before,.fa-thermometer-empty:before{content:&quot;&quot;}.fa-shower:before{content:&quot;&quot;}.fa-bathtub:before,.fa-s15:before,.fa-bath:before{content:&quot;&quot;}.fa-podcast:before{content:&quot;&quot;}.fa-window-maximize:before{content:&quot;&quot;}.fa-window-minimize:before{content:&quot;&quot;}.fa-window-restore:before{content:&quot;&quot;}.fa-times-rectangle:before,.fa-window-close:before{content:&quot;&quot;}.fa-times-rectangle-o:before,.fa-window-close-o:before{content:&quot;&quot;}.fa-bandcamp:before{content:&quot;&quot;}.fa-grav:before{content:&quot;&quot;}.fa-etsy:before{content:&quot;&quot;}.fa-imdb:before{content:&quot;&quot;}.fa-ravelry:before{content:&quot;&quot;}.fa-eercast:before{content:&quot;&quot;}.fa-microchip:before{content:&quot;&quot;}.fa-snowflake-o:before{content:&quot;&quot;}.fa-superpowers:before{content:&quot;&quot;}.fa-wpexplorer:before{content:&quot;&quot;}.fa-meetup:before{content:&quot;&quot;}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}.mfp-counter{font-family:Georgia,Times,serif}.mfp-bg{top:0;left:0;width:100%;height:100%;z-index:1042;overflow:hidden;position:fixed;background:#000;opacity:.8;filter:alpha(opacity=80)}.mfp-wrap{top:0;left:0;width:100%;height:100%;z-index:1043;position:fixed;outline:none !important;-webkit-backface-visibility:hidden}.mfp-container{text-align:center;position:absolute;width:100%;height:100%;left:0;top:0;padding:0 8px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.mfp-container:before{content:&#39;&#39;;display:inline-block;height:100%;vertical-align:middle}.mfp-align-top .mfp-container:before{display:none}.mfp-content{position:relative;display:inline-block;vertical-align:middle;margin:0 auto;text-align:left;z-index:1045}.mfp-inline-holder .mfp-content,.mfp-ajax-holder .mfp-content{width:100%;cursor:auto}.mfp-ajax-cur{cursor:progress}.mfp-zoom-out-cur,.mfp-zoom-out-cur .mfp-image-holder .mfp-close{cursor:-moz-zoom-out;cursor:-webkit-zoom-out;cursor:zoom-out}.mfp-zoom{cursor:pointer;cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in}.mfp-auto-cursor .mfp-content{cursor:auto}.mfp-close,.mfp-arrow,.mfp-preloader,.mfp-counter{-webkit-user-select:none;-moz-user-select:none;user-select:none}.mfp-loading.mfp-figure{display:none}.mfp-hide{display:none !important}.mfp-preloader{color:#ccc;position:absolute;top:50%;width:auto;text-align:center;margin-top:-0.8em;left:8px;right:8px;z-index:1044}.mfp-preloader a{color:#ccc}.mfp-preloader a:hover{color:#fff}.mfp-s-ready .mfp-preloader{display:none}.mfp-s-error .mfp-content{display:none}button.mfp-close,button.mfp-arrow{overflow:visible;cursor:pointer;background:transparent;border:0;-webkit-appearance:none;display:block;outline:none;padding:0;z-index:1046;-webkit-box-shadow:none;box-shadow:none}button::-moz-focus-inner{padding:0;border:0}.mfp-close{width:44px;height:44px;line-height:44px;position:absolute;right:0;top:0;text-decoration:none;text-align:center;opacity:1;filter:alpha(opacity=100);padding:0 0 18px 10px;color:#fff;font-style:normal;font-size:28px;font-family:Georgia,Times,serif}.mfp-close:hover,.mfp-close:focus{opacity:1;filter:alpha(opacity=100)}.mfp-close:active{top:1px}.mfp-close-btn-in .mfp-close{color:#fff}.mfp-image-holder .mfp-close,.mfp-iframe-holder .mfp-close{color:#fff;right:-6px;text-align:right;padding-right:6px;width:100%}.mfp-counter{position:absolute;top:0;right:0;color:#ccc;font-size:12px;line-height:18px}.mfp-arrow{position:absolute;opacity:1;filter:alpha(opacity=100);margin:0;top:50%;margin-top:-55px;padding:0;width:90px;height:110px;-webkit-tap-highlight-color:transparent}.mfp-arrow:active{margin-top:-54px}.mfp-arrow:hover,.mfp-arrow:focus{opacity:1;filter:alpha(opacity=100)}.mfp-arrow:before,.mfp-arrow:after,.mfp-arrow .mfp-b,.mfp-arrow .mfp-a{content:&#39;&#39;;display:block;width:0;height:0;position:absolute;left:0;top:0;margin-top:35px;margin-left:35px;border:medium inset transparent}.mfp-arrow:after,.mfp-arrow .mfp-a{border-top-width:13px;border-bottom-width:13px;top:8px}.mfp-arrow:before,.mfp-arrow .mfp-b{border-top-width:21px;border-bottom-width:21px;opacity:0.7}.mfp-arrow-left{left:0}.mfp-arrow-left:after,.mfp-arrow-left .mfp-a{border-right:17px solid #fff;margin-left:31px}.mfp-arrow-left:before,.mfp-arrow-left .mfp-b{margin-left:25px;border-right:27px solid #fff}.mfp-arrow-right{right:0}.mfp-arrow-right:after,.mfp-arrow-right .mfp-a{border-left:17px solid #fff;margin-left:39px}.mfp-arrow-right:before,.mfp-arrow-right .mfp-b{border-left:27px solid #fff}.mfp-iframe-holder{padding-top:40px;padding-bottom:40px}.mfp-iframe-holder .mfp-content{line-height:0;width:100%;max-width:900px}.mfp-iframe-holder .mfp-close{top:-40px}.mfp-iframe-scaler{width:100%;height:0;overflow:hidden;padding-top:56.25%}.mfp-iframe-scaler iframe{position:absolute;display:block;top:0;left:0;width:100%;height:100%;box-shadow:0 0 8px rgba(0,0,0,0.6);background:#000}img.mfp-img{width:auto;max-width:100%;height:auto;display:block;line-height:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:40px 0 40px;margin:0 auto}.mfp-figure{line-height:0}.mfp-figure:after{content:&#39;&#39;;position:absolute;left:0;top:40px;bottom:40px;display:block;right:0;width:auto;height:auto;z-index:-1;box-shadow:0 0 8px rgba(0,0,0,0.6);background:#444}.mfp-figure small{color:#bdbdbd;display:block;font-size:12px;line-height:14px}.mfp-figure figure{margin:0}.mfp-figure figcaption{margin-top:0;margin-bottom:0}.mfp-bottom-bar{margin-top:-36px;position:absolute;top:100%;left:0;width:100%;cursor:auto}.mfp-title{text-align:left;line-height:18px;color:#f3f3f3;word-wrap:break-word;padding-right:36px}.mfp-image-holder .mfp-content{max-width:100%}.mfp-gallery .mfp-image-holder .mfp-figure{cursor:pointer}@media screen and (max-width: 800px) and (orientation: landscape), screen and (max-height: 300px){.mfp-img-mobile .mfp-image-holder{padding-left:0;padding-right:0}.mfp-img-mobile img.mfp-img{padding:0}.mfp-img-mobile .mfp-figure:after{top:0;bottom:0}.mfp-img-mobile .mfp-figure small{display:inline;margin-left:5px}.mfp-img-mobile .mfp-bottom-bar{background:rgba(0,0,0,0.6);bottom:0;margin:0;top:auto;padding:3px 5px;position:fixed;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.mfp-img-mobile .mfp-bottom-bar:empty{padding:0}.mfp-img-mobile .mfp-counter{right:5px;top:3px}.mfp-img-mobile .mfp-close{top:0;right:0;width:35px;height:35px;line-height:35px;background:rgba(0,0,0,0.6);position:fixed;text-align:center;padding:0}}@media all and (max-width: 900px){.mfp-arrow{-webkit-transform:scale(0.75);transform:scale(0.75)}.mfp-arrow-left{-webkit-transform-origin:0;transform-origin:0}.mfp-arrow-right{-webkit-transform-origin:100%;transform-origin:100%}.mfp-container{padding-left:6px;padding-right:6px}}.mfp-ie7 .mfp-img{padding:0}.mfp-ie7 .mfp-bottom-bar{width:600px;left:50%;margin-left:-300px;margin-top:5px;padding-bottom:5px}.mfp-ie7 .mfp-container{padding:0}.mfp-ie7 .mfp-content{padding-top:44px}.mfp-ie7 .mfp-close{top:0;right:0;padding-top:0}a:focus{outline:thin dotted #f89406;outline:5px auto #f89406;outline-offset:-2px}*,*:before,*:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}html{box-sizing:border-box;background-color:#fff;font-size:16px;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}@media (min-width: 22.5em){html{font-size:18px}}@media (min-width: 30em){html{font-size:20px}}@media (min-width: 80em){html{font-size:22px}}body{margin:0}::-moz-selection{color:#fff;background:#000}::selection{color:#fff;background:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}audio,canvas,video{display:inline-block;*display:inline;*zoom:1}audio:not([controls]){display:none}a{color:#52adc8}a:hover,a:active{outline:0}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{max-width:100%;width:auto9;height:auto;display:block;margin:auto;vertical-align:middle;border:0;-ms-interpolation-mode:bicubic}.emoji img{display:inline}#map_canvas img,.google-maps img{max-width:none}button,input,select,textarea{margin:0;font-size:100%;vertical-align:middle}button,input{*overflow:visible;line-height:normal}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}button,html input[type=&quot;button&quot;],input[type=&quot;reset&quot;],input[type=&quot;submit&quot;]{-webkit-appearance:button;cursor:pointer}label,select,button,input[type=&quot;button&quot;],input[type=&quot;reset&quot;],input[type=&quot;submit&quot;],input[type=&quot;radio&quot;],input[type=&quot;checkbox&quot;]{cursor:pointer}input[type=&quot;search&quot;]{box-sizing:content-box;-webkit-appearance:textfield}input[type=&quot;search&quot;]::-webkit-search-decoration,input[type=&quot;search&quot;]::-webkit-search-cancel-button{-webkit-appearance:none}textarea{overflow:auto;vertical-align:top}html{position:relative;min-height:100%}body{counter-reset:h1;margin:0;padding:0;color:#494e52;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;line-height:1.5}body.overflow--hidden{overflow:hidden}h1,h2,h3,h4,h5,h6{margin:1.5em 0 0.5em;line-height:1.2;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-weight:bold}h1 a,h2 a,h3 a,h4 a,h5 a,h6 a{color:inherit;text-decoration:none}h1{counter-reset:h2;font-size:1.25em;color:#134268}h1:before{counter-increment:h1;content:counter(h1) &quot;. &quot;}h2{margin-left:0.5em;counter-reset:h3;font-size:1em;color:#1a5b8f}h2:before{counter-increment:h2;content:counter(h1) &quot;. &quot; counter(h2) &quot;. &quot;}h2 ~ p{margin-left:0.5em}h2 ~ ul{margin-left:0.5em}h2 ~ ol{margin-left:0.5em}h3{margin-left:1em;counter-reset:h4;font-size:1em;color:#2174b6}h3:before{counter-increment:h3;content:counter(h1) &quot;. &quot; counter(h2) &quot;. &quot; counter(h3) &quot;. &quot;}h3 ~ p{margin-left:1em}h3 ~ ul{margin-left:1em}h3 ~ ol{margin-left:1em}h4{margin-left:1.5em;font-size:1em;color:#2686d2}h4:before{counter-increment:h4;content:counter(h1) &quot;. &quot; counter(h2) &quot;. &quot; counter(h3) &quot;. &quot; counter(h4) &quot;. &quot;}h4 ~ p{margin-left:1.5em}h4 ~ ul{margin-left:1.5em}h4 ~ ol{margin-left:1.5em}h5{font-size:.85em;font-style:italic}h6{font-size:.75em}small,.small{font-size:.75em}li{font-size:0.9em}li&gt;ul{margin-left:0}p{margin-bottom:1.3em}u,ins{text-decoration:none;border-bottom:1px solid #494e52}u a,ins a{color:inherit}del a{color:inherit}p,pre,blockquote,ul,ol,dl,figure,table,fieldset{orphans:3;widows:3}abbr[title],abbr[data-original-title]{text-decoration:none;cursor:help;border-bottom:1px dotted #494e52}blockquote{margin:2em 1em 2em 0;padding-left:1em;padding-right:1em;font-style:italic;border-left:0.25em solid #7a8288}blockquote cite{font-style:italic}blockquote cite:before{content:&quot;2014&quot;;padding-right:5px}a:hover,a:active{outline:0}tt,code,kbd,samp,pre{font-family:Monaco,Consolas,&quot;Lucida Console&quot;,monospace}pre{overflow-x:auto}p&gt;code,a&gt;code,li&gt;code,figcaption&gt;code,td&gt;code{padding-top:0.1rem;padding-bottom:0.1rem;font-size:1em;background:#fafafa;border:1px solid #f2f3f3;border-radius:4px;box-shadow:0 1px 1px rgba(0,0,0,0.125)}p&gt;code:before,p&gt;code:after,a&gt;code:before,a&gt;code:after,li&gt;code:before,li&gt;code:after,figcaption&gt;code:before,figcaption&gt;code:after,td&gt;code:before,td&gt;code:after{letter-spacing:-0.2em;content:&quot;00a0&quot;}hr{display:block;margin:1em 0;border:0;border-top:1px solid #f2f3f3}ul li,ol li{margin-bottom:0.3em}figure{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:start;align-items:flex-start;flex-wrap:wrap;margin:2em 0}figure img,figure iframe,figure .fluid-width-video-wrapper{margin-bottom:1em}figure img{max-width:100%;border-radius:4px;-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out}figure&gt;a{display:block}@media (min-width: 18.75em){figure.half&gt;a,figure.half&gt;img{width:calc(50% - 0.5em)}}figure.half figcaption{width:100%}@media (min-width: 18.75em){figure.third&gt;a,figure.third&gt;img{width:calc(33.3333% - 0.5em)}}figure.third figcaption{width:100%}figcaption{margin-bottom:0.5em;color:#777a7d;font-family:Georgia,Times,serif;font-size:.85em}figcaption a{color:inherit;text-decoration:none;border-bottom:1px solid #bdc1c4;-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out}figcaption a:hover{color:#000;border-bottom-color:#000}svg:not(:root){overflow:hidden}nav ul{margin:0;padding:0}nav li{list-style:none}nav a{text-decoration:none}nav ul li,nav ol li{margin-bottom:0}nav li ul,nav li ol{margin-top:0}b,i,strong,em,blockquote,p,q,span,figure,img,h1,h2,header,input,a,tr,td,form button,input[type=&quot;submit&quot;],.btn,#goog-wm-sb,.highlight,.archive__item-teaser{-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out}form{margin:0 0 5px 0}form fieldset{margin-bottom:5px;padding:0;border-width:0}form legend{display:block;width:100%;margin-bottom:10px;*margin-left:-7px;padding:0;color:#494e52;border:0;border-bottom:1px solid #ccc;white-space:normal}form p{margin-bottom:5px / 2}form ul{list-style-type:none;margin:0 0 5px 0;padding:0}form br{display:none}label,input,button,select,textarea{vertical-align:baseline;*vertical-align:middle}input,button,select,textarea{box-sizing:border-box;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif}label{display:block;color:#494e52;cursor:pointer}label small{font-size:.85em}label input,label textarea,label select{display:block}input,textarea,select{display:inline-block;width:100%;padding:0.25em;margin-bottom:0.5em;color:#494e52;background-color:#ffb5b5;border:1px solid #ccc;border-radius:4px;box-shadow:0 1px 1px rgba(0,0,0,0.125)}input:hover,textarea:hover,select:hover{border-color:#bdc1c4}.input-mini{width:60px}.input-small{width:90px}input[type=&quot;image&quot;],input[type=&quot;checkbox&quot;],input[type=&quot;radio&quot;]{width:auto;height:auto;padding:0;margin:3px 0;*margin-top:0;line-height:normal;cursor:pointer;border-radius:0;border:0 9}input[type=&quot;checkbox&quot;],input[type=&quot;radio&quot;]{box-sizing:border-box;padding:0;*width:13px;*height:13px}input[type=&quot;image&quot;]{border:0;box-shadow:none}input[type=&quot;file&quot;]{width:auto;padding:initial;line-height:initial;border:initial;background-color:transparent;background-color:initial;box-shadow:none}input[type=&quot;button&quot;],input[type=&quot;reset&quot;],input[type=&quot;submit&quot;]{width:auto;height:auto;cursor:pointer;*overflow:visible}select,input[type=&quot;file&quot;]{*margin-top:4px}select{width:auto;background-color:#fff}select[multiple],select[size]{height:auto}textarea{resize:vertical;height:auto;overflow:auto;vertical-align:top}input[type=&quot;hidden&quot;]{display:none}.form{position:relative}.radio,.checkbox{padding-left:18px;font-weight:normal}.radio input[type=&quot;radio&quot;],.checkbox input[type=&quot;checkbox&quot;]{float:left;margin-left:-18px}.radio.inline,.checkbox.inline{display:inline-block;padding-top:5px;margin-bottom:0;vertical-align:middle}.radio.inline+.radio.inline,.checkbox.inline+.checkbox.inline{margin-left:10px}input[disabled],select[disabled],textarea[disabled],input[readonly],select[readonly],textarea[readonly]{opacity:0.5;cursor:not-allowed}input:focus,textarea:focus{border-color:#7a8288;outline:0;outline:thin dotted 9}input[type=&quot;file&quot;]:focus,input[type=&quot;radio&quot;]:focus,input[type=&quot;checkbox&quot;]:focus,select:focus{box-shadow:none}.help-block,.help-inline{color:#52adc8}.help-block{display:block;margin-bottom:1em;line-height:1em}.help-inline{display:inline-block;vertical-align:middle;padding-left:5px}.form-inline input,.form-inline textarea,.form-inline select{display:inline-block;margin-bottom:0}.form-inline label{display:inline-block}.form-inline .radio,.form-inline .checkbox,.form-inline .radio{padding-left:0;margin-bottom:0;vertical-align:middle}.form-inline .radio input[type=&quot;radio&quot;],.form-inline .checkbox input[type=&quot;checkbox&quot;]{float:left;margin-left:0;margin-right:3px}.form-search input,.form-search textarea,.form-search select{display:inline-block;margin-bottom:0}.form-search .search-query{padding-left:14px;padding-right:14px;margin-bottom:0;border-radius:14px}.form-search label{display:inline-block}.form-search .radio,.form-search .checkbox,.form-inline .radio{padding-left:0;margin-bottom:0;vertical-align:middle}.form-search .radio input[type=&quot;radio&quot;],.form-search .checkbox input[type=&quot;checkbox&quot;]{float:left;margin-left:0;margin-right:3px}.form--loading:before{content:&#39;&#39;}.form--loading .form__spinner{display:block}.form:before{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(255,255,255,0.7);z-index:10}.form__spinner{display:none;position:absolute;top:50%;left:50%;z-index:11}#goog-fixurl ul{list-style:none;margin-left:0;padding-left:0}#goog-fixurl ul li{list-style-type:none}#goog-wm-qt{width:auto;margin-right:10px;margin-bottom:20px;padding:8px 20px;display:inline-block;font-size:.85em;background-color:#fff;color:#000;border-width:2px !important;border-style:solid !important;border-color:gray;border-radius:4px}table{margin-bottom:1em;width:100%;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:.85em;border-collapse:collapse;border:1px solid #bdc1c4}table+table{margin-top:1em}table.gsc-search-box{margin-bottom:0;width:100%;font-size:.85em;border:0px}thead{background-color:#f2f3f3;border-bottom:1px solid #bdc1c4}th{padding:0.5em;font-weight:bold;text-align:left;border-right:1px solid #bdc1c4}td{padding:0.5em;border-bottom:1px solid #bdc1c4;border-right:1px solid #bdc1c4}td.gsc-input{border:0px}tr,td,th{vertical-align:middle}@-webkit-keyframes intro{0%{opacity:0}100%{opacity:1}}@keyframes intro{0%{opacity:0}100%{opacity:1}}.btn,#goog-wm-sb{display:inline-block;margin-bottom:0.25em;padding:0.5em 1em;color:#fff !important;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:.85em;font-weight:bold;text-align:center;text-decoration:none;background-color:#7a8288;border:0 !important;border-radius:4px;cursor:pointer}.btn:hover,#goog-wm-sb:hover{background-color:#333}.btn .icon,#goog-wm-sb .icon{margin-right:0.5em}.btn .icon+.hidden,#goog-wm-sb .icon+.hidden{margin-left:-0.5em}.btn--block{display:block;width:100%}.btn--block+.btn--block{margin-top:0.25em}.btn--inverse{color:#7a8288 !important;border:1px solid #bdc1c4 !important;background-color:#fff}.btn--inverse:hover{color:#fff !important;border-color:#7a8288}.btn--light-outline{border:1px solid #fff !important;background-color:transparent}.btn--info{background-color:#52adc8}.btn--info:hover{background-color:#428aa0}.btn--warning{background-color:#f89406}.btn--warning:hover{background-color:#c67605}.btn--success{background-color:#62c462}.btn--success:hover{background-color:#4e9d4e}.btn--danger{background-color:#ee5f5b}.btn--danger:hover{background-color:#be4c49}.btn--disabled{pointer-events:none;cursor:not-allowed;filter:alpha(opacity=65);box-shadow:none;opacity:0.65}.btn--facebook{background-color:#3b5998}.btn--facebook:hover{background-color:#2f477a}.btn--twitter{background-color:#55acee}.btn--twitter:hover{background-color:#448abe}.btn--google-plus{background-color:#dd4b39}.btn--google-plus:hover{background-color:#b13c2e}.btn--linkedin{background-color:#007bb6}.btn--linkedin:hover{background-color:#006292}.btn--x-large{font-size:1.25em}.btn--large{font-size:1em}.btn--small{font-size:.75em}.notice{margin:2em 0 !important;padding:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:16px !important;text-indent:initial;background-color:#f8f9f9;border-radius:4px;box-shadow:0 1px 1px rgba(189,193,196,0.25)}.notice a{color:#52adc8;text-decoration:none}.notice a:hover{color:#254e5a}.notice code{background-color:#fcfcfc}.notice ul:last-child{margin-bottom:0}.notice--primary{margin:2em 0 !important;padding:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:16px !important;text-indent:initial;background-color:#f2f3f3;border-radius:4px;box-shadow:0 1px 1px rgba(122,130,136,0.25)}.notice--primary a{color:#52adc8;text-decoration:none}.notice--primary a:hover{color:#254e5a}.notice--primary code{background-color:#f8f9f9}.notice--primary ul:last-child{margin-bottom:0}.notice--info{margin:2em 0 !important;padding:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:16px !important;text-indent:initial;background-color:#eef7fa;border-radius:4px;box-shadow:0 1px 1px rgba(82,173,200,0.25)}.notice--info a{color:#52adc8;text-decoration:none}.notice--info a:hover{color:#254e5a}.notice--info code{background-color:#f6fbfc}.notice--info ul:last-child{margin-bottom:0}.notice--warning{margin:2em 0 !important;padding:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:16px !important;text-indent:initial;background-color:#fef4e6;border-radius:4px;box-shadow:0 1px 1px rgba(248,148,6,0.25)}.notice--warning a{color:#52adc8;text-decoration:none}.notice--warning a:hover{color:#254e5a}.notice--warning code{background-color:#fffaf3}.notice--warning ul:last-child{margin-bottom:0}.notice--success{margin:2em 0 !important;padding:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:16px !important;text-indent:initial;background-color:#eff9ef;border-radius:4px;box-shadow:0 1px 1px rgba(98,196,98,0.25)}.notice--success a{color:#52adc8;text-decoration:none}.notice--success a:hover{color:#254e5a}.notice--success code{background-color:#f7fcf7}.notice--success ul:last-child{margin-bottom:0}.notice--danger{margin:2em 0 !important;padding:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:16px !important;text-indent:initial;background-color:#fdefef;border-radius:4px;box-shadow:0 1px 1px rgba(238,95,91,0.25)}.notice--danger a{color:#52adc8;text-decoration:none}.notice--danger a:hover{color:#254e5a}.notice--danger code{background-color:#fef7f7}.notice--danger ul:last-child{margin-bottom:0}.masthead{position:sticky;top:0px;z-index:10}.masthead__inner-wrap{max-width:100%;margin-left:auto;margin-right:auto;clear:both;display:-webkit-box;display:block;-webkit-box-pack:justify;justify-content:space-between;padding:0em 1em 0em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif}.masthead__inner-wrap:after{content:&quot; &quot;;display:block;clear:both}.masthead__inner-wrap::after{clear:both;content:&quot;&quot;;display:table}@media (min-width: 80em){.masthead__inner-wrap{max-width:1280px}}.masthead__inner-wrap nav{z-index:10}.masthead__inner-wrap a{text-decoration:none}.masthead__search-wrap{max-width:1280px;margin-left:auto;margin-right:auto;clear:both;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;padding:0em 0em 0em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif}.site-title{display:flex;align-self:stretch;-webkit-box-align:center;align-items:center;font-weight:bold;z-index:20}.masthead__menu{width:100%}.masthead__menu .site-nav{margin-left:0}@media (min-width: 18.75em){.masthead__menu .site-nav{float:right}}.masthead__menu ul{margin:0;padding:0;clear:both;list-style-type:none}.masthead__menu-item{display:block;list-style-type:none;white-space:nowrap}.masthead__menu-item--lg{padding-right:2em;font-weight:700}.container{overflow:hidden;background-color:#333;font-family:Arial;max-width:1280px;margin-left:auto;margin-right:auto}.dropdown{float:left;overflow:hidden}.dropdown .dropbtn{font-size:16px;border:none;outline:none;color:#fff;padding:14px 16px;background-color:#333;height:52px}.container a:hover,.dropdown:hover .dropbtn{background-color:#2581DC}.dropdown-content{display:none;position:absolute;background-color:#777;min-width:150px;z-index:1}.dropdown-content-wrapper{float:none;position:relative}.dropdown-content a{font-size:14px;color:#fff;padding:6px 16px;text-decoration:none;text-align:left;display:block}.dropdown-content a:hover{background-color:#333}.dropdown:hover .dropdown-content{display:block}.dropdown-2nd-content{display:none;position:absolute;right:-150px;top:-0.5px;background-color:#999;min-width:150px;box-shadow:0px 4px 8px 0px rgba(0,0,0,0.2);z-index:2}.dropdown-2nd-content a{float:none;color:#fff;padding:6px 16px;text-decoration:none;display:block;text-align:left}.dropdown-2nd-content a:hover{background-color:#333}.dropdown-content-wrapper:hover .dropdown-2nd-content{display:block}.breadcrumbs{max-width:100%;margin-left:auto;margin-right:auto;clear:both;margin-top:0;margin-bottom:0;padding-left:2em;padding-right:2em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;-webkit-animation:intro 0.3s both;animation:intro 0.3s both;-webkit-animation-delay:0.30s;animation-delay:0.30s}.breadcrumbs:after{content:&quot; &quot;;display:block;clear:both}.breadcrumbs::after{clear:both;content:&quot;&quot;;display:table}@media (min-width: 30em){.breadcrumbs{padding-left:1em;padding-right:1em}}@media (min-width: 80em){.breadcrumbs{max-width:1280px}}.breadcrumbs ol{padding:0;list-style:none;font-size:.85em}@media (min-width: 30em){.breadcrumbs ol{width:83.05085%;float:right;margin-right:0}}@media (min-width: 80em){.breadcrumbs ol{padding-left:4.23729%}}.breadcrumbs li{display:inline}.breadcrumbs .current{font-weight:bold}.pagination{clear:both;width:100%;float:left;margin-left:0;margin-right:0;clear:both;margin-top:1em;padding-top:1em}.pagination::after{clear:both;content:&quot;&quot;;display:table}.pagination ul{margin:0;padding:0;list-style-type:none;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif}.pagination li{display:block;float:left;margin-left:-1px}.pagination li a{display:block;margin-bottom:0.25em;padding:0.5em 1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:14px;font-weight:bold;line-height:1.5;text-align:center;text-decoration:none;color:#9ba1a6;border:1px solid #bdc1c4;border-radius:0}.pagination li a:hover{color:#3e8296}.pagination li a.current{color:#fff;background:#7a8288}.pagination li a.disabled{color:#dee0e1;pointer-events:none;cursor:not-allowed}.pagination li:first-child{margin-left:0}.pagination li:first-child a{border-top-left-radius:4px;border-bottom-left-radius:4px}.pagination li:last-child a{border-top-right-radius:4px;border-bottom-right-radius:4px}.pagination--pager{display:block;padding:1em 2em;float:left;width:50%;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:1em;font-weight:bold;text-align:center;text-decoration:none;color:#52adc8;border:1px solid #bdc1c4;border-radius:4px}.pagination--pager:hover{color:#3e8296}.pagination--pager:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.pagination--pager:last-child{margin-left:-1px;border-top-left-radius:0;border-bottom-left-radius:0}.pagination--pager.disabled{color:#dee0e1;pointer-events:none;cursor:not-allowed}.page__content+.pagination,.page__meta+.pagination,.comment__date+.pagination,.page__share+.pagination,.page__comments+.pagination{margin-top:2em;padding-top:2em;border-top:1px solid #f2f3f3}.greedy-nav{position:relative;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;background:#fff}.greedy-nav a{padding:0.3rem;color:#000;text-decoration:none}.greedy-nav a:hover{color:#5c6266}.greedy-nav button{padding:0 0.5rem;align-self:stretch;border:0;outline:none;color:#fff;background-color:#7a8288;cursor:pointer}.greedy-nav .visible-links{display:-webkit-box;display:flex;-webkit-box-pack:end;justify-content:flex-end;-webkit-box-flex:1;flex:1;padding-right:2rem;overflow:hidden}.greedy-nav .visible-links li{-webkit-box-flex:0;flex:none}.greedy-nav .visible-links li:last-child a{margin-right:0}.greedy-nav .visible-links a{position:relative}.greedy-nav .visible-links a:before{content:&quot;&quot;;position:absolute;left:0;bottom:0;height:4px;background:#bdc1c4;width:100%;-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out;-webkit-transform:scaleX(0) translate3d(0, 0, 0);transform:scaleX(0) translate3d(0, 0, 0)}.greedy-nav .visible-links a:hover:before{-webkit-transform:scaleX(1);-ms-transform:scaleX(1);transform:scaleX(1)}.greedy-nav .hidden-links{position:absolute;top:100%;right:0;margin-top:15px;padding:5px;border:1px solid #f2f3f3;border-radius:4px;background:#fff;box-shadow:0 2px 4px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12)}.greedy-nav .hidden-links.hidden{display:none}.greedy-nav .hidden-links a{margin:0;padding:10px 20px;font-size:1em}.greedy-nav .hidden-links a:hover{color:#5c6266;background:#dee0e1}.greedy-nav .hidden-links:before{content:&quot;&quot;;position:absolute;top:-11px;right:10px;width:0;border-style:solid;border-width:0 10px 10px;border-color:#f2f3f3 transparent;display:block;z-index:0}.greedy-nav .hidden-links:after{content:&quot;&quot;;position:absolute;top:-10px;right:10px;width:0;border-style:solid;border-width:0 10px 10px;border-color:#fff transparent;display:block;z-index:1}.greedy-nav .hidden-links li{display:block;border-bottom:1px solid #f2f3f3}.greedy-nav .hidden-links li:last-child{border-bottom:none}.nav__list{margin-bottom:1.5em}.nav__list .nav__items{margin:0;font-size:1.25rem}.nav__items{width:100%;max-width:600px;background:#4d5158;margin:4em auto}.nav__items ul{display:none}.nav__items li{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nav__items input[type=radio]{position:absolute;opacity:0}.nav__items label,.nav__items a{position:relative;display:block;background:#fff;box-shadow:inset 0 -1px #2174b6;color:#494e52;font-size:0.8rem;padding:3px 10px}.nav__items label:hover,.nav__items a:hover{background:#eee}.nav__items input[type=radio]:checked+label::after{background-position:-32px 0}.nav__items input[type=radio]:checked+label+ul,.nav__items input[type=radio]:checked+label:nth-of-type(n)+ul{display:block}.nav__items ul label,.nav__items ul a{background:#fff;box-shadow:inset 0 -1px #50adf7;color:#487ea9;font-size:0.9em;padding:3px 20px}.nav__items ul label:hover,.nav__items ul a:hover{background:#eee}.nav__items&gt;li:last-of-type&gt;label,.nav__items&gt;li:last-of-type&gt;a,.nav__items&gt;li&gt;ul&gt;li:last-of-type label,.nav__items&gt;li&gt;ul&gt;li:last-of-type a{box-shadow:none}.nav__items ul ul label,.nav__items ul ul a{font-size:0.9em;padding-left:30px}.nav__items ul ul ul label,.nav__items ul ul ul a{padding-left:118px}@media (max-width: 29.9375em){.nav__list input:checked ~ .nav__items{-webkit-transition:0.5s ease-in-out;transition:0.5s ease-in-out;max-height:9999px;overflow:visible;opacity:1;margin-top:1em;-webkit-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}}.nav__title{margin:0;padding:0.5rem 1rem;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:1em;font-weight:bold}.nav__sub-title{display:block;margin:0.5rem 0;padding:0.5rem 0;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:.85em;font-weight:bold;text-transform:uppercase;border-bottom:1px solid #f2f3f3}.toc{font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;color:#7a8288;text-transform:uppercase;letter-spacing:1px;background-color:#fff;border:1px solid #f2f3f3;border-radius:4px;box-shadow:0 1px 1px rgba(0,0,0,0.125)}.toc .nav__title{color:#fff;font-size:.85em;background:#7a8288;border-top-left-radius:4px;border-top-right-radius:4px}.toc__menu{margin:0;padding:0;width:100%;list-style:none;font-size:0.8rem}.toc__menu a{display:block;padding:0.5rem 1rem;color:#7a8288;font-size:.75em;font-weight:bold;line-height:1.5;border-bottom:1px solid #f2f3f3}.toc__menu a:hover{color:#000;background:#f2f3f3}.toc__menu&gt;li:last-child a{border-bottom:none}.toc__menu li ul&gt;li a{padding-left:2rem;font-weight:normal}.toc__menu li&gt;ul li{display:none}@media (min-width: 22.5em){.toc__menu li&gt;ul li{display:block}}.page__footer{clear:both;width:100%;float:left;margin-left:0;margin-right:0;clear:both;position:absolute;bottom:0;width:100%;clear:both;height:auto;margin-top:3em;color:#9ba1a6;-webkit-animation:intro 0.3s both;animation:intro 0.3s both;-webkit-animation-delay:0.45s;animation-delay:0.45s;background-color:#f2f3f3;border-top:1px solid #bdc1c4}.page__footer::after{clear:both;content:&quot;&quot;;display:table}.page__footer footer{max-width:100%;margin-left:auto;margin-right:auto;clear:both;margin-top:0em;padding:0 1em 0.5em}.page__footer footer:after{content:&quot; &quot;;display:block;clear:both}.page__footer footer::after{clear:both;content:&quot;&quot;;display:table}@media (min-width: 80em){.page__footer footer{max-width:1280px}}.page__footer a{color:inherit;text-decoration:none}.page__footer a:hover{text-decoration:underline}.page__footer .fa{color:#9ba1a6}.page__footer-copyright{font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:.75em}.page__footer-follow ul{margin:0;padding:0;list-style-type:none}.page__footer-follow li{display:inline-block;padding-top:5px;padding-bottom:5px;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:.85em;text-transform:uppercase}.page__footer-follow li+li:before{content:&quot;&quot;;padding-right:5px}.page__footer-follow a{padding-right:10px;font-weight:bold}div.highlighter-rouge,figure.highlight{position:relative;margin-bottom:1em;font-family:Monaco,Consolas,&quot;Lucida Console&quot;,monospace;font-size:.85em;line-height:1.8;border:1px solid #f2f3f3;border-radius:4px;background-color:#fafafa;box-shadow:0 1px 1px rgba(0,0,0,0.125)}div.highlighter-rouge:before,figure.highlight:before{position:absolute;top:0;right:0;padding:0.5em;background-color:#f2f3f3;content:&quot;f121&quot;;font-family:&quot;fontawesome&quot; !important;line-height:1;text-transform:none;speak:none}div.highlighter-rouge .highlight,figure.highlight .highlight{margin:0;padding:1em}figure.highlight{padding-left:1em;padding-right:1em}.highlight table{font-size:1em;border:0}.highlight table td{padding:5px;border:0}.highlight table td.gutter{padding-right:1em;color:#bdc1c4}.highlight table pre{margin:0}.highlight pre{width:100%}.highlight .c{color:#93a1a1}.highlight .err{color:#586e75}.highlight .g{color:#586e75}.highlight .k{color:#859900}.highlight .l{color:#586e75}.highlight .n{color:#586e75}.highlight .o{color:#859900}.highlight .x{color:#cb4b16}.highlight .p{color:#586e75}.highlight .cm{color:#93a1a1}.highlight .cp{color:#859900}.highlight .c1{color:#93a1a1}.highlight .cs{color:#859900}.highlight .gd{color:#2aa198}.highlight .ge{color:#586e75;font-style:italic}.highlight .gr{color:#dc322f}.highlight .gh{color:#cb4b16}.highlight .gi{color:#859900}.highlight .go{color:#586e75}.highlight .gp{color:#586e75}.highlight .gs{color:#586e75;font-weight:bold}.highlight .gu{color:#cb4b16}.highlight .gt{color:#586e75}.highlight .kc{color:#cb4b16}.highlight .kd{color:#22b3eb}.highlight .kn{color:#859900}.highlight .kp{color:#859900}.highlight .kr{color:#22b3eb}.highlight .kt{color:#dc322f}.highlight .ld{color:#586e75}.highlight .m{color:#2aa198}.highlight .s{color:#2aa198}.highlight .na{color:#586e75}.highlight .nb{color:#B58900}.highlight .nc{color:#22b3eb}.highlight .no{color:#cb4b16}.highlight .nd{color:#22b3eb}.highlight .ni{color:#cb4b16}.highlight .ne{color:#cb4b16}.highlight .nf{color:#22b3eb}.highlight .nl{color:#586e75}.highlight .nn{color:#586e75}.highlight .nx{color:#586e75}.highlight .py{color:#586e75}.highlight .nt{color:#22b3eb}.highlight .nv{color:#22b3eb}.highlight .ow{color:#859900}.highlight .w{color:#586e75}.highlight .mf{color:#2aa198}.highlight .mh{color:#2aa198}.highlight .mi{color:#2aa198}.highlight .mo{color:#2aa198}.highlight .sb{color:#93a1a1}.highlight .sc{color:#2aa198}.highlight .sd{color:#586e75}.highlight .s2{color:#2aa198}.highlight .se{color:#cb4b16}.highlight .sh{color:#586e75}.highlight .si{color:#2aa198}.highlight .sx{color:#2aa198}.highlight .sr{color:#dc322f}.highlight .s1{color:#2aa198}.highlight .ss{color:#2aa198}.highlight .bp{color:#22b3eb}.highlight .vc{color:#22b3eb}.highlight .vg{color:#22b3eb}.highlight .vi{color:#22b3eb}.highlight .il{color:#2aa198}.hidden{display:none;visibility:hidden}.load{display:none}.transparent{opacity:0}.visually-hidden,.screen-reader-text,.screen-reader-text span,.screen-reader-shortcut{position:absolute !important;clip:rect(1px, 1px, 1px, 1px);height:1px !important;width:1px !important;border:0 !important;overflow:hidden}body:hover .visually-hidden a,body:hover .visually-hidden input,body:hover .visually-hidden button{display:none !important}.screen-reader-text:focus,.screen-reader-shortcut:focus{clip:auto !important;height:auto !important;width:auto !important;display:block;font-size:1em;font-weight:bold;padding:15px 23px 14px;background:#fff;z-index:100000;text-decoration:none;box-shadow:0 0 2px 2px rgba(0,0,0,0.6)}.skip-link{position:fixed;z-index:20;margin:0;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;white-space:nowrap}.skip-link li{height:0;width:0;list-style:none}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.text-justify{text-align:justify}.text-nowrap{white-space:nowrap}.cf{clear:both}.wrapper{max-width:100%;margin-left:auto;margin-right:auto}.wrapper:after{content:&quot; &quot;;display:block;clear:both}.align-left{display:block;margin-left:auto;margin-right:auto}@media (min-width: 18.75em){.align-left{float:left;margin-right:1em}}.align-right{display:block;margin-left:auto;margin-right:auto}@media (min-width: 18.75em){.align-right{float:right;margin-left:1em}}.align-center{display:block;margin-left:auto;margin-right:auto}@media (min-width: 30em){.full{margin-right:-19.49153% !important}}.icon{display:inline-block;fill:currentColor;width:1em;height:1.1em;line-height:1;position:relative;top:-0.1em;vertical-align:middle}.social-icons .fa{color:#000}.social-icons .fa-behance,.social-icons .fa-behance-square{color:#1769FF}.social-icons .fa-bitbucket,.social-icons .fa-bitbucket-square{color:#205081}.social-icons .fa-dribbble{color:#ea4c89}.social-icons .fa-facebook,.social-icons .fa-facebook-square{color:#3b5998}.social-icons .fa-flickr{color:#ff0084}.social-icons .fa-foursquare{color:#0072b1}.social-icons .fa-github,.social-icons .fa-github-alt,.social-icons .fa-github-square{color:#171516}.social-icons .fa-google-plus,.social-icons .fa-google-plus-square{color:#dd4b39}.social-icons .fa-instagram{color:#517fa4}.social-icons .fa-lastfm,.social-icons .fa-lastfm-square{color:#d51007}.social-icons .fa-linkedin,.social-icons .fa-linkedin-square{color:#007bb6}.social-icons .fa-pinterest,.social-icons .fa-pinterest-p,.social-icons .fa-pinterest-square{color:#cb2027}.social-icons .fa-rss,.social-icons .fa-rss-square{color:#fa9b39}.social-icons .fa-soundcloud{color:#f30}.social-icons .fa-stack-exchange,.social-icons .fa-stack-overflow{color:#fe7a15}.social-icons .fa-tumblr,.social-icons .fa-tumblr-square{color:#32506d}.social-icons .fa-twitter,.social-icons .fa-twitter-square{color:#55acee}.social-icons .fa-vimeo,.social-icons .fa-vimeo-square{color:#1ab7ea}.social-icons .fa-vine{color:#00bf8f}.social-icons .fa-youtube,.social-icons .fa-youtube-square,.social-icons .fa-youtube-play{color:#b00}.social-icons .fa-xing,.social-icons .fa-xing-square{color:#006567}.navicon{position:relative;width:1.5rem;height:.25rem;background:#fff;margin:auto;-webkit-transition:0.3s;transition:0.3s}.navicon:before,.navicon:after{content:&quot;&quot;;position:absolute;left:0;width:1.5rem;height:.25rem;background:#fff;-webkit-transition:0.3s;transition:0.3s}.navicon:before{top:-.5rem}.navicon:after{bottom:-.5rem}.close .navicon{background:transparent}.close .navicon:before,.close .navicon:after{-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;top:0;width:1.5rem}.close .navicon:before{-webkit-transform:rotate3d(0, 0, 1, 45deg);transform:rotate3d(0, 0, 1, 45deg)}.close .navicon:after{-webkit-transform:rotate3d(0, 0, 1, -45deg);transform:rotate3d(0, 0, 1, -45deg)}@media (min-width: 30em){.sticky{clear:both;position:-webkit-sticky;position:sticky;top:5em}.sticky::after{clear:both;content:&quot;&quot;;display:table}.sticky&gt;*{display:block}}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.05)}.show-modal{overflow:hidden;position:relative}.show-modal:before{position:absolute;content:&quot;&quot;;top:0;left:0;width:100%;height:100%;z-index:999;background-color:rgba(255,255,255,0.85)}.show-modal .modal{display:block}.modal{display:none;position:fixed;width:300px;top:50%;left:50%;margin-left:-150px;margin-top:-150px;min-height:0;z-index:9999;background:#fff;border:1px solid #f2f3f3;border-radius:4px;box-shadow:0 1px 1px rgba(0,0,0,0.125)}.modal__title{margin:0;padding:0.5em 1em}.modal__supporting-text{padding:0 1em 0.5em 1em}.modal__actions{padding:0.5em 1em;border-top:1px solid #f2f3f3}.footnote{color:#9ba1a6;text-decoration:none}.footnotes{color:#9ba1a6}.footnotes ol,.footnotes li,.footnotes p{margin-bottom:0;font-size:.85em}a.reversefootnote{color:#7a8288;text-decoration:none}a.reversefootnote:hover{text-decoration:underline}.required{color:#ee5f5b;font-weight:bold}.gsc-control-cse table,.gsc-control-cse tr,.gsc-control-cse td{border:0}.responsive-video-container{position:relative;margin-bottom:1em;padding-bottom:56.25%;height:0;overflow:hidden;max-width:100%}.responsive-video-container iframe,.responsive-video-container object,.responsive-video-container embed{position:absolute;top:0;left:0;width:100%;height:100%}:-webkit-full-screen-ancestor .masthead,:-webkit-full-screen-ancestor .page__footer{position:static}#main{max-width:100%;margin-left:auto;margin-right:auto;clear:both;margin-top:1em;padding-left:1em;padding-right:1em;-webkit-animation:intro 0.3s both;animation:intro 0.3s both;-webkit-animation-delay:0.35s;animation-delay:0.35s}#main:after{content:&quot; &quot;;display:block;clear:both}#main::after{clear:both;content:&quot;&quot;;display:table}@media (min-width: 80em){#main{max-width:1280px}}@media (min-width: 30em){.page{width:83.05085%;float:right;margin-right:0;padding-left:4.23729%;padding-right:16.94915%}}.page .page__inner-wrap{clear:both;width:100%;float:left;margin-left:0;margin-right:0}.page .page__inner-wrap .page__content,.page .page__inner-wrap .page__meta,.page .page__inner-wrap .comment__date,.page .page__inner-wrap .page__share{clear:both;width:100%;float:left;margin-left:0;margin-right:0}.page__title{margin-top:0;line-height:1}.page__title+.page__meta,.page__title+.comment__date{margin-top:-0.5em}.page__lead{font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:1.25em}.page__content h2{padding-bottom:0.5em;border-bottom:1px solid #f2f3f3}.page__content p,.page__content li,.page__content dl{font-size:1em}.page__content p{margin:0 0 1.3em}.page__content a{text-decoration:none}.page__content a:hover{text-decoration:underline}.page__content a:hover img{box-shadow:0 0 10px rgba(0,0,0,0.25)}.page__content dt{margin-top:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-weight:bold}.page__content dd{margin-left:1em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:.85em}.page__content .small{font-size:.85em}.page__content blockquote+.small{margin-top:-1.5em;padding-left:1.25rem}.page__share{margin-top:2em;padding-top:1em;border-top:1px solid #f2f3f3}@media (max-width: 18.75em){.page__share .btn span,.page__share #goog-wm-sb span{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}}.page__share-title{margin-bottom:10px;font-size:.85em;text-transform:uppercase}.page__meta,.comment__date{margin-top:2em;color:#9ba1a6;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:.85em}.page__meta p,.comment__date p{margin:0}.page__meta a,.comment__date a{color:inherit}.page__meta-title{margin-bottom:10px;font-size:.85em;text-transform:uppercase}.page__taxonomy .sep{display:none}.page__taxonomy strong{margin-right:10px}.page__taxonomy-item{display:inline-block;margin-right:5px;margin-bottom:8px;padding:5px 10px;text-decoration:none;border:1px solid #bdc1c4;border-radius:4px}.page__taxonomy-item:hover{text-decoration:none;color:#3e8296}.page__comments{clear:both;width:100%;float:left;margin-left:0;margin-right:0}.page__comments-title{margin-top:2rem;margin-bottom:10px;padding-top:2rem;font-size:.85em;border-top:1px solid #f2f3f3;text-transform:uppercase}.page__comments-form{padding:1em;background:#f2f3f3;-webkit-transition:all 0.2s ease-in-out;transition:all 0.2s ease-in-out}.page__comments-form.disabled input,.page__comments-form.disabled button,.page__comments-form.disabled textarea,.page__comments-form.disabled label{pointer-events:none;cursor:not-allowed;filter:alpha(opacity=65);box-shadow:none;opacity:0.65}.comment{clear:both;margin:1em 0}.comment::after{clear:both;content:&quot;&quot;;display:table}.comment:not(:last-child){border-bottom:1px solid #f2f3f3}.comment__avatar-wrapper{float:left;width:60px;height:60px}@media (min-width: 30em){.comment__avatar-wrapper{width:100px;height:100px}}.comment__avatar{width:40px;height:40px;border-radius:50%}@media (min-width: 30em){.comment__avatar{width:80px;height:80px;padding:5px;border:1px solid #f2f3f3}}.comment__content-wrapper{float:right;width:calc(100% - 60px)}@media (min-width: 30em){.comment__content-wrapper{width:calc(100% - 100px)}}.comment__author{margin:0}.comment__author a{text-decoration:none}.comment__date{margin:0}.comment__date a{text-decoration:none}.page__related{margin-top:2em;padding-top:1em;border-top:1px solid #f2f3f3;clear:both;float:left}.page__related::after{clear:both;content:&quot;&quot;;display:table}@media (min-width: 30em){.page__related{margin-left:21.18644%}}.page__related a{color:inherit;text-decoration:none}.page__related-title{margin-bottom:10px;font-size:.85em;text-transform:uppercase}.archive{margin-bottom:2em}@media (min-width: 22.5em){.archive{width:100%;float:left;margin-left:0;margin-right:0}}@media (min-width: 30em){.archive{width:74.57627%;float:right;margin-right:0}}.archive__subtitle{margin:1.414em 0 0;padding-bottom:0.5em;font-size:1em;color:#9ba1a6;border-bottom:1px solid #f2f3f3}.archive__subtitle+.list__item .archive__item-title{margin-top:0.5em}.archive__item-title{margin-bottom:0.25em;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif}.archive__item-title a+a{opacity:0.5}.page__content .archive__item-title{margin-top:1em;border-bottom:none}.archive__item-excerpt{margin-top:0;font-size:.85em}.archive__item-excerpt+p{text-indent:0}.archive__item-teaser{border-radius:4px;overflow:hidden}.archive__item-teaser img{width:100%}.archive__item:hover .archive__item-teaser{box-shadow:0 0 10px rgba(0,0,0,0.25)}.archive__item:hover .archive__item-title{text-decoration:underline}.sidebar{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);clear:both;margin-bottom:1em}.sidebar::after{clear:both;content:&quot;&quot;;display:table}@media (min-width: 30em){.sidebar{width:23.72881%;float:left;margin-right:1.69492%;-webkit-transition:opacity 0.2s ease-in-out;transition:opacity 0.2s ease-in-out}}@media (min-width: 80em){.sidebar{padding-right:0;padding-left:0}}.sidebar h2,.sidebar h3,.sidebar h4,.sidebar h5,.sidebar h6{margin-bottom:0;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif}.sidebar p,.sidebar li{font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:0.8rem;line-height:1.5}.sidebar img{width:100%}.sidebar__right{margin-bottom:1em}@media (min-width: 30em){.sidebar__right{position:relative;float:right;width:400px;margin-left:2.54237%;z-index:10}}@media (min-width: 80em){.sidebar__right{width:500px}}.author__avatar{display:table-cell;vertical-align:top;width:36px;height:36px}@media (min-width: 30em){.author__avatar{display:block;width:auto;height:auto}}.author__avatar img{max-width:110px;border-radius:50%}@media (min-width: 30em){.author__avatar img{padding:5px;border:1px solid #f2f3f3}}.author__content{display:table-cell;vertical-align:top;padding-left:15px;padding-right:25px;line-height:1}@media (min-width: 30em){.author__content{display:block;width:100%;padding-left:0;padding-right:0}}.author__name{margin:0}@media (min-width: 30em){.author__name{margin-top:10px;margin-bottom:10px}}.sidebar .author__name{font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;font-size:1em}.author__bio{margin:0}@media (min-width: 30em){.author__bio{margin-top:10px;margin-bottom:20px}}.author__urls-wrapper{position:relative;display:table-cell;vertical-align:middle;font-family:-apple-system,&quot;.SFNSText-Regular&quot;,&quot;San Francisco&quot;,&quot;Roboto&quot;,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;Lucida Grande&quot;,Arial,sans-serif;z-index:10;position:relative;cursor:pointer}.author__urls-wrapper li:last-child a{margin-bottom:0}@media (min-width: 30em){.author__urls-wrapper{display:block}}.author__urls-wrapper button{margin-bottom:0}@media (min-width: 30em){.author__urls-wrapper button{display:none}}.author__urls{display:none;position:absolute;right:0;margin-top:15px;padding:10px;list-style-type:none;border:1px solid #f2f3f3;border-radius:4px;background:#fff;z-index:-1;box-shadow:0 2px 4px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);cursor:default}@media (min-width: 30em){.author__urls{display:block;position:relative;margin:0;padding:0;border:0;background:transparent;box-shadow:none}}.author__urls:before{display:block;content:&quot;&quot;;position:absolute;top:-11px;left:calc(50% - 10px);width:0;border-style:solid;border-width:0 10px 10px;border-color:#f2f3f3 transparent;z-index:0}@media (min-width: 30em){.author__urls:before{display:none}}.author__urls:after{display:block;content:&quot;&quot;;position:absolute;top:-10px;left:calc(50% - 10px);width:0;border-style:solid;border-width:0 10px 10px;border-color:#fff transparent;z-index:1}@media (min-width: 30em){.author__urls:after{display:none}}.author__urls li{white-space:nowrap}.author__urls a{display:block;margin-bottom:5px;padding-right:5px;padding-top:2px;padding-bottom:2px;color:inherit;font-size:1em;text-decoration:none}.author__urls a:hover{text-decoration:underline}@media print{[hidden]{display:none}*{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}html{font-size:16px;margin:0;padding:0}body{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;background:#fff !important;color:#000 !important;font-size:1rem;line-height:1.5;margin:0 auto;text-rendering:optimizeLegibility}h1,h2,h3,h4,h5,h6{color:#000;line-height:1.2;margin-bottom:0.75rem;margin-top:0}h1{font-size:2.5rem}h2{font-size:2rem}h3{font-size:1.75rem}h4{font-size:1.5rem}h5{font-size:1.25rem}h6{font-size:1rem}a,a:visited{color:#000;text-decoration:underline;word-wrap:break-word}table{border-collapse:collapse}thead{display:table-header-group}table,th,td{border-bottom:1px solid #000}td,th{padding:8px 16px}img{border:0;display:block;max-width:100% !important;vertical-align:middle}hr{border:0;border-bottom:2px solid #bbb;height:0;margin:2.25rem 0;padding:0}dt{font-weight:bold}dd{margin:0;margin-bottom:0.75rem}abbr[title],acronym[title]{border:0;text-decoration:none}table,blockquote,pre,code,figure,li,hr,ul,ol,a,tr{page-break-inside:avoid}h2,h3,h4,p,a{orphans:3;widows:3}h1,h2,h3,h4,h5,h6{page-break-after:avoid;page-break-inside:avoid}h1+p,h2+p,h3+p{page-break-before:avoid}img{page-break-after:auto;page-break-before:auto;page-break-inside:avoid}pre{white-space:pre-wrap !important;word-wrap:break-word}a[href^=&#39;http://&#39;]:after,a[href^=&#39;https://&#39;]:after,a[href^=&#39;ftp://&#39;]:after{content:&quot; (&quot; attr(href) &quot;)&quot;;font-size:80%}abbr[title]:after,acronym[title]:after{content:&quot; (&quot; attr(title) &quot;)&quot;}.page-break,.page-break-before{page-break-before:always}.page-break-after{page-break-after:always}.no-print{display:none}a.no-reformat:after{content:&#39;&#39;}abbr[title].no-reformat:after,acronym[title].no-reformat:after{content:&#39;&#39;}.page__hero-caption{color:#000 !important;background:#fff !important;opacity:1}.page__hero-caption a{color:#000 !important}.masthead,.toc,.page__share,.page__related,.pagination,.ads,.page__footer,.author__avatar,.author__content,.author__urls-wrapper,.nav__list,.adsbygoogle{display:none !important}}",
        "url": " "
      } ,
  
<<<<<<< HEAD
=======
      "docs-en-dxl-mx-mx-106-2":  {
        "title": "MX-106(2.0)",
      "content"	 : "Specifications            Item      Specifications                  MCU      ST CORTEX-M3 ( STM32F103C8 @ 72MHZ,32BIT)              Position Sensor      Contactless absolute encoder (12BIT,360 DEGREE)Maker : ams (www.ams.com), Part No : AS5045              Motor      Maxon              Baud Rate      8000 bps ~ 4.5 Mbps              Control Algorithm      PID Control              Resolution      0.088°              Operation Modes      Current Control ModeVelocity Control ModePosition Control Mode(0° ~ 360°)Extended Position Ctrl Mode(Multi-turn)Current-based Position Ctrl ModePWM Control Mode              Weight      153g              Dimensions (W x H x D)      40.2mm x 65.1mm x 46mm              Gear Ratio      225 : 1              Stall Torque      8.0Nm @ 11.1V, 4.8A8.4Nm @ 12V, 5.2A10.0Nm @ 14.8V, 6.3A              No Load Speed      41rpm @ 11.1V45rpm @ 12V55rpm @ 14.8V              Operating Temperature      -5°C ~ +80°C              Input Voltage      10 ~ 14.8V (Recommended : 12V)              Standby Current      100mA              Command Signal      Digital Packet              Protocol Type      MX-106T: Half Duplex Asynchronous Serial CommunicationMX-106R: RS485 Asynchronous Serial Communication(8bit,1stop, No Parity)              Physical Connection      MX-106T: TTL Level Multidrop BUSMX-106R: RS485 Multidrop BUS              ID      0 ~ 252              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal GearMetal(Front), Engineering Plastic(Middle, Back)      Performance GraphStall torque Peak stall torque read from transient statePerformance Graph(N-T Curve) A graph shows torque measured in stable condition while increasing load. Normally, stall torque is bigger than maximum torque on performance graph.Caution When connecting to power supply:  For the stable power supply, we recommend using ROBOTIS controller or SMPS2Dynamixel.  Connect your DYNAMIXEL to power supply while it’s off and turn on/off with the power switch.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      321              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Baud Rate      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              10      1      Drive Mode      Drive Mode      RW      0              11      1      Operating Mode      Operating Mode      RW      3              12      1      Secondary(Shadow) ID      Secondary ID      RW      255              13      1      Protocol Version      Protocol Version      RW      2              20      4      Homing Offset      Home Position Offset      RW      0              24      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      10              31      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              32      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      160              34      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      95              36      2      PWM Limit      Maximum PWM Limit      RW      885              38      2      Current Limit      Maximum Current Limit      RW      2047              40      4      Acceleration Limit      Maximum Acceleration Limit      RW      32767              44      4      Velocity Limit      Maximum Velocity Limit      RW      360              48      4      Max Position Limit      Maximum Position Limit      RW      4095              52      4      Min Position Limit      Minimum Position Limit      RW      0              63      1      Shutdown      Shutdown Error Information      RW      52      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  64      1      Torque Enable      Motor Torque On/Off      RW      0              65      1      LED      Status LED On/Off      RW      0              68      1      Status Return Level      Select Types of Status Return      RW      2              69      1      Registered Instruction      REG_WRITE Instruction Flag      R      0              70      1      Hardware Error Status      Hardware Error Status      R      0              76      2      Velocity I Gain      I Gain of Velocity      RW      1920              78      2      Velocity P Gain      P Gain of Velocity      RW      100              80      2      Position D Gain      D Gain of Position      RW      0              82      2      Position I Gain      I Gain of Position      RW      0              84      2      Position P Gain      P Gain of Position      RW      850              88      2      Feedforward 2nd Gain      2nd Gain of Feed-Forward      RW      0              90      2      Feedforward 1st Gain      1st Gain of Feed-Forward      RW      0              98      1      BUS Watchdog      Dynamixel BUS Watchdog      RW      0              100      2      Goal PWM      Target PWM Value      RW      -              102      2      Goal Current      Target Current Value      RW      -              104      4      Goal Velocity      Target Velocity Value      RW      -              108      4      Profile Acceleration      Acceleration Value of Profile      RW      0              112      4      Profile Velocity      Velocity Value of Profile      RW      0              116      4      Goal Position      Target Position      RW      -              120      2      Realtime Tick      Count Time in Millisecond      R      -              122      1      Moving      Movement Flag      R      0              123      1      Moving Status      Detailed Information of Movement Status      R      0              124      2      Present PWM      Present PWM Value      R      -              126      2      Present Current      Present Current Value      R      -              128      4      Present Velocity      Present Velocity Value      R      -              132      4      Present Position      Present Position Value      R      -              136      4      Velocity Trajectory      Target Velocity Trajectory from Profile      R      -              140      4      Position Trajectory      Target Position Trajectory from Profile      R      -              144      2      Present Input Voltage      Present Input Voltage      R      -              146      1      [Present Temperature]      Present Internal Temperature      R      -              168      2      Indirect Address 1      Indirect Address 1      RW      224              170      2      Indirect Address 2      Indirect Address 2      RW      225              172      2      Indirect Address 3      Indirect Address 3      RW      226              …      …      …      …      …      …              218      2      Indirect Address 26      Indirect Address 26      RW      249              220      2      Indirect Address 27      Indirect Address 27      RW      250              222      2      Indirect Address 28      Indirect Address 28      RW      251              224      1      Indirect Data 1      Indirect Data 1      RW      0              225      1      Indirect Data 2      Indirect Data 2      RW      0              226      1      Indirect Data 3      Indirect Data 3      RW      0              …      …      …      …      …      …              249      1      Indirect Data 26      Indirect Data 26      RW      0              250      1      Indirect Data 27      Indirect Data 27      RW      0              251      1      Indirect Data 28      Indirect Data 28      RW      0              578      2      Indirect Address 29      Indirect Address 29      RW      634              580      2      Indirect Address 30      Indirect Address 30      RW      635              582      2      Indirect Address 31      Indirect Address 31      RW      636              …      …      …      …      …      …              628      2      Indirect Address 54      Indirect Address 54      RW      659              630      2      Indirect Address 55      Indirect Address 55      RW      660              632      2      Indirect Address 56      Indirect Address 56      RW      661              634      1      Indirect Data 29      Indirect Data 29      RW      0              635      1      Indirect Data 30      Indirect Data 30      RW      0              636      1      Indirect Data 31      Indirect Data 31      RW      0              …      …      …      …      …      …              659      1      Indirect Data 54      Indirect Data 54      RW      0              660      1      Indirect Data 55      Indirect Data 55      RW      0              661      1      Indirect Data 56      Indirect Data 56      RW      0      Caution Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate      Margin of Error                  7      4.5M      0.000%              6      4M      0.000%              5      3M      0.000%              4      2M      0.000%              3      1M      0.000%              2      115,200      0.000%              1(Default)      57,600      0.000%              0      9,600      0.000%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Drive Mode(10)Drive Mode is availabe from the firmware version 38.            Bit      Item      Description                  Bit 2 ~ 7      N/A      Unused, always ‘0’              Bit 1      Master/Slave Setting(Dual Joint)      Master Mode(0): Operate as a Master DynamixelSlave Mode(1): Operate as a Slave Dynamixel              Bit 0      Direction of Rotation      Normal Mode(0): CCW(Positive), CW(Negative)Reverse Mode(1): CCW(Negative), CW(Positive)      Note If Reverse mode(‘1’) of Direction of rotation is set, the Dynamixel’s rotation direction changes. Therefore, the direction of Position, Velocity, Current and PWM are changed. It can be used conveniently when constructing a symmetrical joint structure or wheel drive system.Master/Slave configuration (Dual joint) is a method to simultaneously control two Dynamixels like one Dynamixel. Master Dynamixel and Slave Dynamixel must be connected with a sync cable. Slave Dynamixel is directly controlled by the Master Dynamixel’s PWM signal transmitted through the sync cable. Therefore, the Slave Dynamixel’s Goal Position, Goal Velocity, Goal Current and Goal PWM are ignored.            Sync Cable      Description                  Normal Mode Sync Cable      Slave Dynamixel is controlled by the Master Dynamixel’s PWM signal. Slave Dynamixel rotates to the same direction of the Master Dynamixel.              Reverse Mode Sync Cable      Slave Dynamixel is controlled by the inverted PWM signal of the Master Dynamixel. Slave Dynamixel rotates to the opposite direction of the Master Dynamixel.      Note In a dual master-slave configuration position information from the slave is ignored and the position of the dual configuration is based on the master in PWM control. When master and slave are not physically connected there could be a slight difference on the driven load. Use the frame shown in the below image to achieve dual configuration.Operating Mode(11)            Value      Operating Mode      Description                  0      Current Control Mode      DYNAMIXEL only controls current(torque) regardless of speed and position. This mode is ideal for a gripper or a system that only uses current(torque) control or a system that has additional velocity/position controllers.              1      Velocity Control Mode      This mode controls velocity. This mode is identical to the Wheel Mode(endless) from existing DYNAMIXELs. This mode is ideal for wheel-type robots.              3(Default)      Position Control Mode      This mode controls position. This mode is identical to the Joint Mode from existing DYNAMIXELs. Operating position range is limited by Max Position Limit(48) and Min Position Limit(52). This mode is ideal for articulated robots that each joint rotates less than 360 degrees.              4      Extended Position Control Mode(Multi-turn)      This mode controls position. This mode is identical to the Multi-Turn Mode from existing DYNAMIXELs. 512 turns are supported(-256[rev] ~ 256[rev]). This mode is ideal for multi-turn wrists or conveyer systems or a system that requires an additional reduction gear.              5      Current-based Position Control Mode      This mode controls both position and current(torque). Up to 512 turns are supported(-256[rev] ~ 256[rev]). This mode is ideal for a system that requires both position and current control such as articulated robots or grippers.              16      PWM Control Mode  (Voltage Control Mode)      This mode directly controls PWM output. (Voltage Control Mode)        Note Switching Operating Mode will reset gains(PID, Feedfoward) properly to the selected Operating Mode. The profile generator and limits will also be reset.  Profile Velocity(112), Profile Acceleration(108) : Reset to ‘0’  Goal PWM(100), Goal Current(102) : Reset to PWM Limit(36), Current Limit(38) respectively  Current-based Position Control Mode : Reset to Position Gain(PID) and PWM Limit(36) values.Changed Position Gain(PID) and PWM Limit(36) values can be read from the Control Table.Note PWM is the abbreviation for Pulse Width Modulation that modulates PWM Duty to control motors. The PWM Control Mode changes pulse width to control average supply voltage to the motor and this technique is widely used in the motor control field. Therefore, PWM Control Mode uses Goal PWM(100) value to control supply voltage for DYNAMIXEL. PWM Control Mode is similar to the Wheel Mode of DYNAMIXEL AX and RX series.Secondary(Shadow) ID(12)Set the Dynamixel’s Secondary ID. Secondary ID(12) is a value to identify each Dynamixel, just like the ID(7).However, unlike ID(7), Secondary ID(12) is not a unique value.Therefore, Dynamixels with the same Secondary ID value form a group.The differences between Secondary ID(12) and ID(7) are as follows :  Secondary ID(12) is not a unique value. i.e., a lot of Dynamixels may have the same Secondary ID value.  ID(7) has a higher priority than Secondary ID(12). i.e., if Secondary ID(12) and ID(7) are the same, ID(7) will be applied first.  The EEPROM area of the Control Table cannot be modified with Secondary ID(12). Only the RAM area can be modified.  If Instruction Packet ID is the same as Secondary ID(12), the Status Packet will not be returned.  If the value of Secondary ID(12) is 253 or higher, the Secondary ID function is deactivated.            Values      Description                  0 ~ 252      Activate Secondary ID function              253 ~ 255      Deactivate Secondary ID function, Default value ‘255’      The following are examples of operation when there are five Dynamixels with ID (7) set from 1 to 5.  Set all five Dynamixels’ Secondary ID(12) to ‘5’.  Send Write Instruction Packet(ID = 1, LED(65) = 1).  Turn on LED of Dynamixel with ID ‘1’ and return the Status Packet.  Send Write Instruction Packet(ID = 5, LED(65) = 1).  Turn on LED on five Dynamixels. However, Status Packet of Dynamixel with ID ‘5’ will be returned.  Set the Secondary ID(12) of all five Dynamixels to ‘100’.  Send Write Instruction Packet(ID = 100, LED(65) = 0).  Turn off LED on five Dynamixels. However, as there is no Dynamixel with ID ‘100’, Status Packet is not returned.Protocol Version(13)Users can select Dynamixel protocol version (1.0 and 2.0).It is recommended to use an identical protocol version for multiple Dynamixels.            Value      Protocol Version      Compatible Dynamixels                  1      1.0      AX Series, DX Series, RX Series, EX Series, MX Series with Firmware below v39              2(default)      2.0      MX-28/64/106 with Firmware v39 or above, X Series, Pro Series      Note The protocol 2.0 is greatly enhanced from the protocol 1.0. Accessing some of the Control Table area might be denied if protocol 1.0 is selected. This manual complies with protocol 2.0. Please refer to the Protocol section of e-Manual for more details about the protocol.Homing Offset(20)Users can adjust the Home position by setting Home Offset(20). The Homing Offset value is added to the Present Position(132).Present Position(132) = Actual Position + Homing Offset(20).            Unit      Value Range      Description                  about 0.088°      -1,044,479 ~ 1,044,479(-255 ~ 255[rev])      4,096 resolution      Note In case of the Position Control Mode(Joint Mode) that rotates less than 360 degrees, any invalid Homing Offset(20) values will be ignored(valid range : -1,024 ~ 1,024).Moving Threshold(24)This value helps to determine whether the Dynamixel is in motion or not.When the absolute value of Present Velocity(128) is greater than the Moving Threshold(24), Moving(122) is set to ‘1’, otherwise it is cleared to ‘0’.                   Values      Description                  Unit      about 0.229 rpm      All velocity related Data uses the same unit              Range      0 ~ 1,023      -      Maximum Temperature Limit(31)This value limits operating temperature. When the Present Temperature(146) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(31), the Over Heating Error Bit(0x04) and Hardware Error Bit(0x80) in the Hardware Error Status(70) will be set. If Overheating Error Bit(0x04) is configured in the Shutdown(63), Torque Enable(64) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(63) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(34, 32)It is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.PWM Limit(36)This value indicates maximum PWM output. Goal PWM(100) can’t be configured with any values exceeding PWM Limit(36). PWM Limit(36) is commonly used in all operating mode as an output limit, therefore decreasing PWM output will result in decreasing torque and velocity. For more details, please refer to the Gain section of each operating modes.            Values      Description                  0(0%) ~ 885(100%)      885 = 100[%] output      Current Limit (38)This value indicates maximum current(torque) output limit. Goal Current(102) can’t be configured with any values exceeding Current Limit(38). The Current Limit(38) is used in Torque Control Mode and Current-based Position Control Mode, therefore decreasing Current Limit(38) will result in decreasing torque of DYNAMIXEL. For more details, please refer to the Position PID Gain(80 ~ 84).            Unit      Value Range                  about  3.36[mA]      0 ~ 2,047      Note Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.Acceleration Limit(40)This value indicates maximum Profile Acceleration(108). Profile Acceleration(108) can’t be configured with any values exceeding Acceleration Limit(40). Profile Acceleration(108) is used in all operating mode except PWM Control Mode in order to generate a target trajectory. For more details, please refer to the Profile Velocity(112).            Unit      Value Range                  214.577 Rev/min2      0 ~ 32,767      Note Bit information of the Error field in the Status Packet is different from protocol 1.0 and protocol 2.0. This manual complies with protocol 2.0. Please refer to the Protocol section of e-Manual for more details about the protocol.Velocity Limit(44)This value indicates maximum velocity of Goal Velocity(104) and Profile Velocity(112). For more details, please refer to the Profile Velocity(112).            Unit      Value Range                  0.229rpm      0 ~ 1,023      Min/Max Position Limits(52, 48)These values limit maximum and minimum target positions for Position Control Mode(Joint Mode) within the range of 1 rotation(0 ~ 4,095). Therefore, Goal Position(116) should be configured within the position limit range. These values are not used in Extended Position Control Mode and Current-based Position Control Mode.            Unit      Value Range                  0.088°      0 ~ 4,095(1 rotation)      Note Max Position Limit(48) and Min Position Limit(52) are only used in Position Control Mode with a single turn.Shutdown(63)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(63), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(64) is cleared to ‘0’ and the motor output becomes 0[%]. REBOOT is the only method to reset Torque Enable(64) to ‘1’(Torque ON) after the shutdown. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      Unused, Always ‘0’              Bit 6      -      Unused, Always ‘0’              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      -      Unused, Always ‘0’              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Torque Enable(64)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).LED(65)Turn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Status Return Level(68)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Registered Instruction(69)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Hardware Error Status(70)This value indicates hardware error status.The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(63), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(64) is cleared to ‘0’ and the motor output becomes 0[%]. REBOOT is the only method to reset Torque Enable(64) to ‘1’(Torque ON) after the shutdown. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      Unused, Always ‘0’              Bit 6      -      Unused, Always ‘0’              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      -      Unused, Always ‘0’              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Velocity PI Gain(78, 76)These values indicate Gains of Velocity Control Mode. Gains of DYNAMIXEL’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and that of the Control Table is abbreviated to KVP(TBL).                   Controller Gain      Conversion Equations      Range      Description                  Velocity I Gain(76)      KVI      KVI = KVI(TBL) / 65536      0 ~ 16383      I Gain              Velocity P Gain(78)      KVP      KVP = KVP(TBL) / 128      0 ~ 16383      P Gain      Below figure is a block diagram describing the velocity controller in Velocity Control Mode. When the instruction transmitted from the user is received by DYNAMIXEL, it takes following steps until driving the horn.  An Instruction from the user is transmitted via DYNAMIXEL bus, then registered to Goal Velocity(104).  Goal Velocity(104) is converted to target velocity trajectory by Profile Acceleration(108).  The target velocity trajectory is stored at Velocity Trajectory(136).  PI controller calculates PWM output for the motor based on the target velocity trajectory.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of DYNAMIXEL is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).Note Ka stands for Anti-windup Gain and ‘β’ is a conversion coefficient of position and velocity that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)These Gains are used in Position Control Mode and Extended Position Control Mode. Gains of Dynamixel’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Position P Gain of Dynamixel’s internal controller is abbreviated to KPP and that of the Control Table is abbreviated to KPP(TBL).                   Controller Gain      Conversion Equations      Range      Description                  Position D Gain(80)      KPD      KPD = KPD(TBL) / 16      0 ~ 16,383      D Gain              Position I Gain(82)      KPI      KPI = KPI(TBL) / 65,536      0 ~ 16,383      I Gain              Position P Gain(84)      KPP      KPP = KPP(TBL) / 128      0 ~ 16,383      P Gain              Feedforward 2nd Gain(88)      KFF2nd      KFF2nd(TBL) / 4      0 ~ 16,383      Feedforward Acceleration Gain              Feedforward 1st Gain(90)      KFF1st      KFF1st(TBL) / 4      0 ~ 16,383      Feedforward Velocity Gain      Below figure is a block diagram describing the position controller in Position Control Mode and Extended Position Control Mode. When the instruction from the user is received by Dynamixel, it takes following steps until driving the horn.  An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).  Goal Position(116) is converted to target position trajectory and target velocity trajectory by Profile Velocity(112) and Profile Acceleration(108).  The target position trajectory and target velocity trajectory is stored at Position Trajectory(140) and Velocity Trajectory(136) respectively.  Feedforward and PID controller calculate PWM output for the motor based on target trajectories.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of Dynamixel is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).Note In case of PWM Control Mode, both PID controller and Feedforward controller are deactivated while Goal PWM(100) value is directly controlling the motor through an Inverter. In this manner, users can directly control the supplying voltage to the motor.Note Ka is an Anti-windup Gain that cannot be modified by users. For more details about the PID controller and Feedforward controller, please refer to the PID Controller and Feed Forward.Below figure is a block diagram describing the current-based position controller in Current-based Position Control Mode. As Current-based Position Control Mode is quite similar to Position Control Mode, differences will be focused in the following steps. The differences are highlighted with a green marker in the block diagram as well.  Feedforward and PID controller calculates target current based on target trajectory.  Goal Current(102) decides the final target current by setting a limit on the calculated target current.  Current controller calculates PWM output for the motor based on the final target current.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of DYNAMIXEL is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).BUS Watchdog(98)Bus Watchdog (98) is a safety device (Fail-safe) that stops the DYNAMIXEL if the communication between the controller and DYNAMIXEL communication (RS485, TTL) is disconnected due to an unspecified error.Communication is defined as all the Instruction Packet in the DYNAMIXEL Protocol.                   Values      Description                  Unit      20[ms]      -              Range      0      Deactivate Bus Watchdog Function, Clear Bus Watchdog Error              Range      1 ~ 127      Activate Bus Watchdog              Range      -1      Bus Watchdog Error Status      The Bus Watchdog function monitors the communication interval (time) between the controller and DYNAMIXEL when Torque Enable (64) is ‘1’.If the measured communication interval (time) is larger than Bus Watchdog (98), the DYNAMIXEL will stop. Bus Watchdog (98) will be changed to ‘-1’ (Bus Watchdog Error).If the Bus Watchdog Error screen appears, the Goal Value (Goal PWM(100), Goal Current(102), Goal Velocity(104), Goal Position(116)) will be changed to read-only-access.Therefore, when a new value is written to the Goal Value, a Range Error will be returned via the Status packet.If the value of Bus Watchdog (98) is changed to ‘0’, Bus Watchdog Error will be cleared.Note For details of Range Error, please refer to the protocol of the e-Manual.The following are examples of the operation of the Bus Watchdog function.  After setting the operating mode (11) to speed control mode, change the Torque Enable (64) to ‘1’.  If ‘50’ is written in the Goal Velocity (104), the DYNAMIXEL will rotate in CCW direction.  Change the value of Bus Watchdog (98) to ‘100’ (2,000 [ms]). (Activate Bus Watchdog Function)  If no instruction packet is received for 2,000 [ms], the DYNAMIXEL will stop. When it stops, the Profile Acceleration (108) and Profile Velocity (112) are applied as ‘0’.  The value of Bus Watchdog (98) changes to ‘-1’ (Bus Watchdog Error). At this time, the access to the Goal Value will be changed to read-only.  If ‘150’ is written to the Goal Velocity (104), Range Error will be returned via Status Packet.  If the value of Bus Watchdog (98) is changed to ‘0’, Bus Watchdog Error will be cleared.  If “150” is written in the Goal Velocity (104), the DYNAMIXEL will rotate in CCW direction.Goal PWM(100)In case of PWM Control Mode, both PID controller and Feedforward controller are deactivated while Goal PWM(100) value is directly controlling the motor through an Inverter. In other control modes, this value is used to limit PWM value. This value cannot exceed PWM Limit(36). Please refer to the Gain section in order to see how Goal PWM(100) affects to different control modes.            Range      Description                  -PWM Limit(36) ~ PWM Limit(36)      Initial Value of PWM Limit(36) : ‘885’      Goal Current (102)In case of Torque Control Mode, Goal Current(102) can be used to set a target current. This value sets a limit to current in Current-based Position Control mode. This value cannot exceed Current Limit(38).            Unit      Value Range                  about  3.36[mA]      -Current Limit(38) ~ Current Limit(38)      Note Applying high current to the motor for long period of time might damage the motor.Goal Velocity(104)In case of Velocity Control Mode, Goal Velocity(104) can be used to set a target velocity. This value cannot exceed Velocity Limit(44). For now, Goal Velocity(104) is used for target velocity, but this value is not used to limit the velocity.            Unit      Value Range                  0.229 rpm      -Velocity Limit(44) ~ Velocity Limit(44)      Note The maximum velocity and maximum torque of DYNAMIXEL is affected by supplying voltage. Therefore, if supplying voltage changes, so does the maximum velocity. This manual complies with recommended supply voltage(12[V]).Note If Profile Acceleration(108) and Goal Velocity(104) are modified simultaneously, modified Profile Acceleration(108) will be used to process Goal Velocity(104).Profile Acceleration(108)The acceleration of Profile can be set with this value. Profile Acceleration(108) can be used in all control modes except Torque Control Mode. Profile Acceleration(108) cannot exceed Acceleration Limit(40). For more details, please refer to the Profile Velocity(112).            Unit      Value Range      Description                  214.577 Rev/min2      0 ~ Acceleration Limit(40)      ‘0’ stands for an infinite acceleration      Profile Velocity(112)The Maximum velocity of Profile can be set with this value. Profile Velocity(112) can be used in all control modes except Torque Control Mode and Velocity Control Mode. Profile Velocity(112) cannot exceed Velocity Limit(44). Velocity Control Mode only uses Profile Acceleration(108) instead of Profile Velocity(112).            Unit      Value Range      Description                  0.229 rpm      0 ~ Velocity Limit(44)      ‘0’ stands for an infinite velocity      The Profile is an acceleration/deceleration control method to reduce vibration, noise and load of the motor by controlling dramatically changing velocity and acceleration. It is also called Velocity Profile as it controls acceleration and deceleration based on velocity. DYNAMIXEL provides 4 different types of Profile. The following explains 4 Profiles and how to select them. Profiles are usually selected by a combination of Profile Velocity(112) and Profile Acceleration(108). Triangular and Trapezoidal Profiles exceptionally consider total travel distance(ΔPos, the distance difference between target position and current position) as an additional factor. For convenience, Profile Velocity(112) is abbreviated to VPRFL and Profile Acceleration(108) is abbreviated to VPRFL. ‘X’ stands for “Don’t Care” case.When given Goal Position(116), Dynamixel’s profile creates target velocity trajectory based on current velocity(initial velocity of the Profile). When Dynamixel receives updated target position from a new Goal Position(116) while it is moving toward the previous Goal Position(116), velocity smoothly varies for the new target velocity trajectory. Maintaining velocity continuity while updating target velocity trajectory is called Velocity Override. For a simple calculation, let’s assume that the initial velocity of the Profile is ‘0’. The following explains how Profile processes Goal Position(116) instruction in Position Control mode, Extended Position Control Mode, Current-based Position Control Mode.  An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).  Acceleration time(t1) is calculated from Profile Velocity(112) and Profile Acceleration(108).  Types of Profile is decided based on Profile Velocity(112), Profile Acceleration(108) and total travel distance(ΔPos, the distance difference between target position and current position).  Selected Profile type is stored at Moving Status(123).(Refer to the Moving Status(123))  Dynamixel is driven by the calculated target trajectory from Profile.  Target velocity trajectory and target position trajectory from Profile are stored at Velocity Trajectory(136) and Position Trajectory(140) respectively.  VPRFL_TRI of ③ and Travel time(t3) to reach Goal Position(116) is calculated as below.            Condition      Types of Profile                  VPRFL(112) = 0      Profile not used(Step Instruction)              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) = 0)      Rectangular Profile              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) ≠ 0) &amp;amp; (VPRFL_TRI ≤ VPRFL(112))      Triangular Profile              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) ≠ 0) &amp;amp; (VPRFL_TRI ＞ VPRFL(112))      Trapezoidal Profile      Note Dynamixel supports Jerk control in order to minimize dramatic change of acceleration. Therefore, actual travel time by the target trajectory of Profile could be longer than t3(t4 of above figure).  Note Velocity Control Mode only uses Profile Acceleration(108). Step and Trapezoidal Profiles are supported. Velocity Override and Jerk control are supported as well. Acceleration time(t1) can be calculated as below equation.Goal Velocity(104) / Profile Acceleration(108) * t1 = 64Goal Position(116)Target position can be set with Goal Position(116). From the front view of Dynamixels, CCW is an increasing direction whereas CW is a decreasing direction. The way to reaching Goal Position(116) is differ by 4 Profiles provided by Dynamixels. Please refer to the Profile Velocity(112) for more details.            Mode      Values      Description                  Position Control Mode      Min Position Limit(52) ~ Max Position Limit(48)      Initial Value : 0 ~ 4,095              Extended Position Control Mode      -1,048,575 ~ 1,048,575      -256[rev] ~ 256[rev]              Current-based Position Control Mode      -1,048,575 ~ 1,048,575      -256[rev] ~ 256[rev]                  Degree Conversion Constant      Description                  0.088°/Value      1[rev] : 0 ~ 4,095      Note If Profile Acceleration(108), Profile Velocity(112) and Goal Position(116) are modified simultaneously, Goal Position(116) is processed based on updated Profile Acceleration(108) and Profile Velocity(112).Realtime Tick(120)This value indicates Dynamixel’s time.            Unit      Value Range      Description                  1 ms      0 ~ 32,767      The value resets to ‘0’ when it exceeds 32,767      Moving(122)This value indicates whether Dynamixel is in motion or not. If absolute value of Present Velocity(128) is greater than Moving Threshold(24), Moving(122) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(128) while Profile is in progress with Goal Position(116) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(116) instruction is being processed)      Moving Status(123)This value provides additional information about the movement. Following Error Bit(0x08) and In-Position Bit(0x01) only work with Position Control Mode, Extended Position Control Mode, Current-based Position Control Mode.                          Details      Description                  Bit 7      0x80      -      Unused              Bit 6      0x40      -      Unused              Bit 5~Bit 4      0x30      Profile Type(0x30)Profile Type(0x20)Profile Type(0x10)Profile Type(0x00)      Trapezoidal Velocity ProfileTriangular Velocity ProfileRectangular Velocity ProfileProfile is not used              Bit 3      0x08      Following Error      Dynamixel fails to reach target position trajectory              Bit 2      0x04      -      Unused              Bit 1      0x02      Profile Ongoing      Profile is in progress with Goal Position(116) instruction              Bit 0      0x01      In-Position      Dynamixel is reached to target position      Present PWM(124)This value indicates present PWM. For more details, please refer to the Goal PWM(100).Present Load(126)This value indicates current Current. For more details, please refer to the Goal Current(102).Present Velocity(128)This value indicates present Velocity. For more details, please refer to the Goal Velocity(104).Present Position(132)This value indicates present Position. For more details, please refer to the Goal Position(116).  Note Present Position(132) represents 4 byte continuous range(-2,147,483,648 ~ 2,147,483,647) when Torque is turned off regardless of Operating Mode(11). However, Present Position(132) will be reset in those cases:  Present Position(132) is reset with the value within 1 rev (0 ~ 4,095) when Operating Mode(11) is changed to Position Control Mode.  Present Position(132) is reset with the value within 1 rev (0 ~ 4,095) when Torque is turned on in Position Control Mode.Reset Present Position(132) value can be affected by Homing Offset(20).Velocity Trajectory(136)This is a target velocity trajectory created by Profile. Operating method can be changed based on control mode. For more details, please refer to the Profile Velocity(112).  Velocity Control Mode : When Profile reaches to the endpoint, Velocity Trajectory(136) becomes equal to Goal Velocity(104).  Position Control Mode, Extended Position Control Mode, Current-based Position Control Mode : Velocity Trajectory is used to create Position Trajectory(140). When Profile reaches to an endpoint, Velocity Trajectory(136) is cleared to ‘0’.Position Trajectory(140)This is a target position trajectory created by Profile. This value is only used in Position Control Mode, Extended Position Control Mode and Current-based Position Control Mode. For more details, please refer to the Profile Velocity(112).Present Input Voltage(144)This value indicates present voltage that is being supplied. For more details, please refer to the Max/Min Voltage Limit(32, 34).Present Temperature(146)This value indicates internal temperature of Dynamixel. For more details, please refer to the Temperature Limit(31).Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 64 ~ 661).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, allocating 65(Address of LED) to Indirect Address 1(168), Indirect Data 1(224) can perform exactly same as LED(65).Example 1 Allocating Size 1 byte LED(65) to Indirect Data 1(224).  Indirect Address 1(168) : change the value to ‘65’ which is the address of LED.  Set Indirect Data 1(224) to ‘1’ : LED(65) also becomes ‘1’ and LED is turned on.  Set Indirect Data 1(224) to ‘0’ : LED(65) also becomes ‘0’ and LED is turned off.Example 2 Allocating Size 4 byte Goal Position(116) to Indirect Data 2(225), 4 sequential bytes have to be allocated.  Indirect Address 2(170) : change the value to ‘116’ which is the first address of Goal Position.  Indirect Address 3(172) : change the value to ‘117’ which is the second address of Goal Position.  Indirect Address 4(174) : change the value to ‘118’ which is the third address of Goal Position.  Indirect Address 5(176) : change the value to ‘119’ which is the fourth address of Goal Position.  Set 4 byte value ‘1,024’ to Indirect Data 2 : Goal Position(116) also becomes ‘1024’ and Dynamixel moves.            Indirect Address Range      Description                  64 ~ 661      EEPROM address can’t be assigned to Indirect Address      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.How to AssembleOptional Frames      FR05-F101 and FR08-X101        FR05-S101        FR08-B101        FR08-H101        FR08-H110 and FR08-D101  Horns      HN05-N102        HN05-I101  Combination StructuresMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideVideosQuick StartDrawingsDownload MX-106T",
        "url": " http://localhost:4000/emanual/docs/en/dxl/mx/mx-106-2/"
      } ,
  
      "docs-en-dxl-mx-mx-106":  {
        "title": "MX-106",
      "content"	 : "Note Compliance has been replaced with PID Gains.Note Although the MX-106T (TTL) and MX-106R (RS-485) differ in communications protocols both have the same features and perform equally. (TTL uses 3-pin connectors while RS-485 uses 4)Note In order to use Protocol 2.0, please update the firmware to V39 or above. (Update firmware using R+ Manager 2.0)Warning For MX-106(2.0) Protocol, please refer to the MX-106(2.0) Control Table as they are different.Specifications            Item      Specifications                  MCU      ST CORTEX-M3 ( STM32F103C8 @ 72MHZ,32BIT)              Position Sensor      Contactless absolute encoder (12BIT,360 DEGREE)Maker : ams (www.ams.com), Part No : AS5045              Motor      Maxon              Baud Rate      8000 bps ~ 4.5 Mbps              Control Algorithm      PID Control              Resolution      0.088°              Running Degree      0° ~ 360°Endless Turn              Weight      153g              Dimensions (W x H x D)      40.2mm x 65.1mm x 46mm              Gear Ratio      225 : 1              Stall Torque      8.0Nm @ 11.1V, 4.8A8.4Nm @ 12V, 5.2A10.0Nm @ 14.8V, 6.3A              No Load Speed      41rpm @ 11.1V45rpm @ 12V55rpm @ 14.8V              Operating Temperature      -5°C ~ +80°C              Input Voltage      10 ~ 14.8V (Recommended : 12V)              Standby Current      100mA              Command Signal      Digital Packet              Protocol Type      MX-106T: Half Duplex Asynchronous Serial CommunicationMX-106R: RS485 Asynchronous Serial Communication(8bit,1stop, No Parity)              Physical Connection      MX-106T: TTL Level Multidrop BUSMX-106R: RS485 Multidrop BUS              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal GearMetal(Front), Engineering Plastic(Middle, Back)      Performance GraphStall torque Peak stall torque read from transient statePerformance Graph(N-T Curve) A graph shows torque measured in stable condition while increasing load. Normally, stall torque is bigger than maximum torque on performance graph.Caution When connecting to power supply:  For the stable power supply, we recommend using ROBOTIS controller or SMPS2Dynamixel.  Connect your DYNAMIXEL to power supply while it’s off and turn on/off with the power switch.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      320              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      4095              10      1      Drive Mode      Dual Mode Setting      RW      0              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      160              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36              20      2      Multi Turn Offset      Adjust Position with Offset      RW      0              22      1      Resolution Divider      Divider for Position Resolution      RW      1      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      D Gain      Derivative Gain      RW      0              27      1      I Gain      Integral Gain      RW      0              28      1      P Gain      Proportional Gain      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed(Moving Velocity)      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      0              68      2      Current      Consuming Current      RW      0              70      1      Torque Ctrl Mode Enable      Torque Control Mode On/Off      RW      0              71      2      Goal Torque      Goal Torque      RW      0              73      1      Goal Acceleration      Goal Acceleration      RW      0      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.For BPS over 250 values :            Value      Baud Rate      Margin of Error                  250      2,250,000      0.000%              251      2,500,000      0.000%              252      3,000,000      0.000%      Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following three modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0              Multi-turn Mode      both are 4095      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles. Multi-turn mode allows joint mode control over multiple rotations (Position range : -28,672 ~ 28,672)Drive Mode            Bit      Item      Description                  Bit 2 ~ 7      N/A      -              Bit 1      Master/Slave Mode      0: Master Mode1 : Slave Mode              Bit 0      Normal/Reverse Mode      0: Normal Mode1: Reverse mode            Master ModeIn case of being used as dual joints, it is set to designate as master.        Slave ModeIn case of being used as dual joints, it is set to designate as slave.        General ModeSets the direction of rotation to set direction.Reads normal data values from position.        Reverse ModeSets the direction of rotation  opposite to set direction.Reads inverse data values from position.    Note Reverse mode is to reverse the rotational direction. It can be used conveniently when a symmetrical joint is required.  Dual joint-offsetDual joints are used as 1 joint by controlling 2 motors simultaneously.To use the dual joints, 1 unit of motor set in master mode and 1 unit of motor set in slave mode are needed.Next, the motors must be connected to each other using synchronization cable.  Normal mode synch cable: Drives Master and PWM signals synchronized.  Reverse mode synch cable: Drives PWM signals in reverse.Note Slave is synchronized by directly receiving the control command through synchronization cable from Master.  Slave Mode unit responds to communication through command packets, but data related to motor drive are processed only through the synchronization.Note In a dual master-slave configuration position information from the slave is ignored and the position of the dual configuration is based on the master in PWM control. When master and slave are not physically connected there could be a slight difference on the driven load. Use the frame shown in the below image to achieve dual configuration.The Maximum Temperature Limit            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 160      5.0 ~ 16.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Multi-turn OffsetAdjusts offset position. This offset value is added to the Present Position(36).Initial value is 0 and the range is from -24,576 to 24,576.Dynamixel with a Present position of 2,048 with an offset of 1,024 will return an adjusted Present position of 3,072.Note This offset feature is only available in multi-turn mode.Resolution DividerIt allows the user to change Dynamixel’s resolution.The default Resolution Divider Value is set as 1. (1 ~ 4 available)When resolution is lowered, revolutions (in both directions) can be increased (up to 28 turns in each direction).Present Position = Real Position / Resolution DividerFor example, a Real Position of 2048 with a Resolution Divider set as 2 will yield a Present Position value of 1024 (2048/2 = 1024). A Dynamixel with Resolution Divider set as 2 will have a resolution 2048 for a single revolution.The Present Position can be obtained while Multi-turn Offset and Resolution Divider are taken into account.Present position = (Real Position / Resolution Divider) + Multi-turn OffsetFor example, a Dynamixel with a Real Position of 2048 with a Resolution Divider set as 4 and Multi-turn Offset as 1024 will yield a Present Position of 1535 ((2048/4) + 1024 = 1535).Note: This feature is only applied in multi-turn mode and will be ignored in other modes.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      PID GainsMX series will use the PID controller as a main control method.P gain : value of proportional band.I gain : value of integral action.D Gain : value of derivative action.Gains values are in between 0~254.Kp = P Gain / 8Ki = I Gain * 1,000 / 2,048Kd = D Gain * 4 / 1,000The relationship between Compliance Slop and PID            Slope      P Gain                  8      128              16      64              32      32              64      16              128      8      The less the P gain, The larger the back lash, and the weaker the amount of output near goal position.At some extent, it is like a combined concept of margine and slope.It does not exactly match the previous concept of compliance. So it is obvious if you see the difference in terms of motion.Explanation for PID required.For the brief explanation about general PID, please refer to the website(link) below.http://en.wikipedia.org/wiki/PID_controllerFYI, PID control theory is not only limited to the control of motor(actuator) but is a generic theory that can be applied to all kinds of control.Goal PositionIt is a position value of destination.0 to 4,095 (0xFFF) is available.  The unit is 0.088°.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelIn multi-turn mode Dynamixel has a range from -28,672 to 28,672 (can turn up to 7 revolutions in either CW or CCW direction).When resolution divider is set to a different value revolutions can increase.Note If it is set to Wheel Mode, Goal Position value is not used.Moving Speed      Join Mode, Multi-Turn modeIt is a moving speed to Goal Position.0 ~ 1,023 (0x3FF) can be used, and the unit is about 0.114rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 116.62rpm.For example, if it is set to 300, it is about 34.2 rpm.However, the rpm will not exceed the No Load Speed.        Wheel ModeIt is a moving speed to Goal direction.0 ~ 2,047 (0x7FF) can be used, and the unit is about 0.114rpm.If a value in the range of 0 ~ 1,023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1,024 ~ 2,047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.    Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~4095 (0xFFF), and the unit is 0.088 degree.The picture above is the front view of Dynamixel.In multi-turn mode, the range is from -28672 to 28672 with unit values dependent on Resolution Divider (0.088 * Resolution Divider)Note In multi-turn mode, Present position depends on resolution divider and multi-turn offset For more information turn to the section on Multi Turn offset and Resolution Divider.Present SpeedIs the current moving speed.0 ~ 2,047 (0x000 ~ 0x7FF) can be used.If a value is in the rage of 0 ~ 1,023 then the motor rotates to the CCW direction.If a value is in the rage of 1,024 ~ 2,047 then the motor rotates to the CW direction.The 10th bit becomes the direction bit to control the direction; 0 and 1,024 are equal.The value unit is about 0.11rpm.For example, if it is set to 300 then the motor is moving to the CCW direction at a rate of about 34.33rpm.Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.CurrentAt an idle state without current flow, this value is 2,048(0x800).When positive current flows, this value becomes larger than 2,048(0x800) while negative current flow returns a value smaller than 2,048(0x800).The following is current flow calculation formula.I = ( 4.5mA ) * (CURRENT – 2048 ) in amps unit (A).For example, 68 gives a value of 2148, which corresponds to 450mA of current flow.Torque Control Mode Enable            Value      Meaning                  0      Turn off the torque mode. Executes Joint mode or Wheel mode              1      Turn on the torque mode. Cannot control the position or moving speed but only Torque      When Torque Control Mode Enable is 1, DYNAMIXEL behaves like the followings  DYNAMIXEL does not control position or velocity.  DYNAMIXEL is controlled by the Goal Torque value.  DYNAMIXEL does not affected by the Goal position and Goal speed values.  Since position/moving speed is not controlled, DYNAMIXEL behaves as if it is in the wheel mode.Goal TorqueYou can use 0 ~ 2,047 (0x7FF) and the unit is 4.5mA (Torque is directly proportional to the current value).If you use a value between 0 ~ 1,023, torque is applied to the CCW direction, and setting it to 0 will stops.If you use a value between 1,024 ~ 2,047, torque is applied to the CW direction, and setting it to 1,024 will stops.That means, 10th bit becomes the CW/CCW direction bit, which controls rotational direction.Goal Torque cannot be bigger than Torque Limit(34,35).Goal AccelerationThis is Goal Acceleration value.It can be used from 0~254(0XFE) and the unit is approximately 8.583° / sec2.When it is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When the goal speead is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When it is set to 254, it becomes 2,180° / sec2.For example, the current speed of Dynamixel is 0, and Goal acceleration is 10.The speed of Dynamixel after 1 second will be 14.3 RPM.How to AssembleOptional Frames      FR05-F101 and FR08-X101        FR05-S101        FR08-B101        FR08-H101        FR08-H110 and FR08-D101  Horns      HN05-N102        HN05-I101  Combination StructuresMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideVideosQuick StartDrawingsDownload MX-106T",
        "url": " http://localhost:4000/emanual/docs/en/dxl/mx/mx-106/"
      } ,
  
      "docs-en-dxl-mx-mx-12w":  {
        "title": "MX-12W",
      "content"	 : "Specifications            Item      Specifications                  Baud Rate      8000 bps ~ 4.5 Mbps              Resolution      0.088°              Running Degree      0° ~ 360°Endless Turn              Weight      54.6g              Dimensions (W x H x D)      32mm x 50mm x 40mm              Gear Ratio      32 : 1              No Load Speed      470rpm (at 12V)              Operating Temperature      -5°C ~ +80°C              Input Voltage      10 ~ 14.8V (Recommended : 12V)              Standby Current      60mA              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      TTL Level Multidrop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Engineering Plastic      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      104              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      1              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      4095              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      160              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36              20      2      Multi Turn Offset      Adjust Position with Offset      RW      0              22      1      Resolution Divider      Divider for Position Resolution      RW      1      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      D Gain      Derivative Gain      RW      8              27      1      I Gain      Integral Gain      RW      0              28      1      P Gain      Proportional Gain      RW      8              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed(Moving Velocity)      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32              73      1      Goal Acceleration      Goal Acceleration      RW      0      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.For BPS over 250 values :            Value      Baud Rate      Margin of Error                  250      2,250,000      0.000%              251      2,500,000      0.000%              252      3,000,000      0.000%      Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following three modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0              Multi-turn Mode      both are 4095      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles. Multi-turn mode allows joint mode control over multiple rotations (Position range : -28,672 ~ 28,672)The Maximum Temperature Limit            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 160      5.0 ~ 16.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Multi-turn OffsetAdjusts offset position. This offset value is added to the Present Position(36).Initial value is 0 and the range is from -24,576 to 24,576.Dynamixel with a Present position of 2,048 with an offset of 1,024 will return an adjusted Present position of 3,072.Note This offset feature is only available in multi-turn mode.Resolution DividerIt allows the user to change Dynamixel’s resolution.The default Resolution Divider Value is set as 1. (1 ~ 4 available)When resolution is lowered, revolutions (in both directions) can be increased (up to 28 turns in each direction).Present Position = Real Position / Resolution DividerFor example, a Real Position of 2048 with a Resolution Divider set as 2 will yield a Present Position value of 1024 (2048/2 = 1024). A Dynamixel with Resolution Divider set as 2 will have a resolution 2048 for a single revolution.The Present Position can be obtained while Multi-turn Offset and Resolution Divider are taken into account.Present position = (Real Position / Resolution Divider) + Multi-turn OffsetFor example, a Dynamixel with a Real Position of 2048 with a Resolution Divider set as 4 and Multi-turn Offset as 1024 will yield a Present Position of 1535 ((2048/4) + 1024 = 1535).Note: This feature is only applied in multi-turn mode and will be ignored in other modes.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      PID GainsMX series will use the PID controller as a main control method.P gain : value of proportional band.I gain : value of integral action.D Gain : value of derivative action.Gains values are in between 0~254.Kp = P Gain / 8Ki = I Gain * 1,000 / 2,048Kd = D Gain * 4 / 1,000The relationship between Compliance Slop and PID            Slope      P Gain                  8      128              16      64              32      32              64      16              128      8      The less the P gain, The larger the back lash, and the weaker the amount of output near goal position.At some extent, it is like a combined concept of margine and slope.It does not exactly match the previous concept of compliance. So it is obvious if you see the difference in terms of motion.Explanation for PID required.For the brief explanation about general PID, please refer to the website(link) below.http://en.wikipedia.org/wiki/PID_controllerFYI, PID control theory is not only limited to the control of motor(actuator) but is a generic theory that can be applied to all kinds of control.Goal PositionIt is a position value of destination.0 to 4,095 (0xFFF) is available.  The unit is 0.088°.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelIn multi-turn mode Dynamixel has a range from -28,672 to 28,672 (can turn up to 7 revolutions in either CW or CCW direction).When resolution divider is set to a different value revolutions can increase.Note If it is set to Wheel Mode, Goal Position value is not used.Moving Speed      Join Mode, Multi-Turn modeIt is a moving speed to Goal Position.0~1023 (0X3FF) can be used, and the unit is about 0.916rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 937.1rpm.For example, if it is set to 300, it is about 274.8 rpm.However, the rpm will not exceed the No Load Speed.        Wheel ModeIt is a moving speed to Goal direction.0~2047 (0X7FF) can be used, and the unit is about 0.916rpm.If a value in the range of 0~1023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1024~2047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.    Note Wheel mode allows to check max rpm. Any values higher than max rpm will not take effect.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~4095 (0xFFF), and the unit is 0.088 degree.The picture above is the front view of Dynamixel.In multi-turn mode, the range is from -28672 to 28672 with unit values dependent on Resolution Divider (0.088 * Resolution Divider)Note In multi-turn mode, Present position depends on resolution divider and multi-turn offset For more information turn to the section on Multi Turn offset and Resolution Divider.Present SpeedIs the current moving speed.0~2047 (0x000 ~ 0x7FF) can be used.If a value is in the rage of 0~1023 then the motor rotates to the CCW direction.If a value is in the rage of 1024~2047 then the motor rotates to the CW direction.The 10th bit becomes the direction bit to control the direction; 0 and 1024 are equal.The value unit is about 0.916rpm.For example, if it is set to 300 then the motor is moving to the CCW direction at a rate of about 274.8rpm.Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.Goal AccelerationThis is Goal Acceleration value.It can be used from 0~254(0XFE) and the unit is approximately 8.583° / sec2.When it is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When the goal speead is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When it is set to 254, it becomes 2,180° / sec2.For example, the current speed of Dynamixel is 0, and Goal acceleration is 10.The speed of Dynamixel after 1 second will be 14.3 RPM.How to AssembleMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideVideosQuick StartDrawings",
        "url": " http://localhost:4000/emanual/docs/en/dxl/mx/mx-12w/"
      } ,
  
      "docs-en-dxl-mx-mx-28-2":  {
        "title": "MX-28(2.0)",
      "content"	 : "Specifications            Item      Specifications                  MCU      ST CORTEX-M3 ( STM32F103C8 @ 72MHZ,32BIT)              Position Sensor      Contactless absolute encoder (12BIT,360 DEGREE)Maker : ams (www.ams.com), Part No : AS5045              Motor      Maxon              Baud Rate      8000 bps ~ 4.5 Mbps              Control Algorithm      PID Control              Resolution      0.088°              Operation Modes      Velocity Control ModePosition Control Mode(0° ~ 360°)Extended Position Ctrl Mode(Multi-turn)PWM Control Mode              Weight      MX-28AR/AT : 77g, MX-28R/T : 72g              Dimensions (W x H x D)      35.6mm x 50.6mm x 35.5mm              Gear Ratio      193 : 1              Stall Torque      2.3Nm @ 11.1V, 1.3A2.5Nm @ 12V, 1.4A3.1Nm @ 14.8V, 1.7A              No Load Speed      50rpm @ 11.1V55rpm @ 12V67rpm @ 14.8V              Operating Temperature      -5°C ~ +80°C              Input Voltage      10 ~ 14.8V (Recommended : 12V)              Standby Current      100mA              Command Signal      Digital Packet              Protocol Type      MX-28T/MX-28AT: Half Duplex Asynchronous Serial CommunicationMX-28R/MX-28AR: RS485 Asynchronous Serial Communication(8bit,1stop, No Parity)              Physical Connection      MX-28T/MX-28AT: TTL Level Multidrop BUSMX-28R/MX-28AR: RS485 Multidrop BUS              ID      0 ~ 252              Feedback      Position, Velocity, Temperature, Load, Input Voltage, Trajectory, Realtime Tick, etc              Material      Full Metal GearMX-28AR/AT: Metal(Front), Engineering Plastic(Middle, Back)MX-28R/T: Engineering Plastic(Front, Middle, Back)      Performance GraphStall torque Peak stall torque read from transient statePerformance Graph(N-T Curve) A graph shows torque measured in stable condition while increasing load. Normally, stall torque is bigger than maximum torque on performance graph.Caution When connecting to power supply:  For the stable power supply, we recommend using ROBOTIS controller or SMPS2Dynamixel.  Connect your DYNAMIXEL to power supply while it’s off and turn on/off with the power switch.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      30              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Baud Rate      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              10      1      Drive Mode      Drive Mode      RW      0              11      1      Operating Mode      Operating Mode      RW      3              12      1      Secondary(Shadow) ID      Secondary ID      RW      255              13      1      Protocol Version      Protocol Version      RW      2              20      4      Homing Offset      Home Position Offset      RW      0              24      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      10              31      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              32      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      160              34      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      95              36      2      PWM Limit      Maximum PWM Limit      RW      885              40      4      Acceleration Limit      Maximum Acceleration Limit      RW      32767              44      4      Velocity Limit      Maximum Velocity Limit      RW      380              48      4      Max Position Limit      Maximum Position Limit      RW      4095              52      4      Min Position Limit      Minimum Position Limit      RW      0              63      1      Shutdown      Shutdown Error Information      RW      52      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  64      1      Torque Enable      Motor Torque On/Off      RW      0              65      1      LED      Status LED On/Off      RW      0              68      1      Status Return Level      Select Types of Status Return      RW      2              69      1      Registered Instruction      REG_WRITE Instruction Flag      R      0              70      1      Hardware Error Status      Hardware Error Status      R      0              76      2      Velocity I Gain      I Gain of Velocity      RW      1920              78      2      Velocity P Gain      P Gain of Velocity      RW      100              80      2      Position D Gain      D Gain of Position      RW      0              82      2      Position I Gain      I Gain of Position      RW      0              84      2      Position P Gain      P Gain of Position      RW      850              88      2      Feedforward 2nd Gain      2nd Gain of Feed-Forward      RW      0              90      2      Feedforward 1st Gain      1st Gain of Feed-Forward      RW      0              98      1      BUS Watchdog      Dynamixel BUS Watchdog      RW      0              100      2      Goal PWM      Target PWM Value      RW      -              104      4      Goal Velocity      Target Velocity Value      RW      -              108      4      Profile Acceleration      Acceleration Value of Profile      RW      0              112      4      Profile Velocity      Velocity Value of Profile      RW      0              116      4      Goal Position      Target Position      RW      -              120      2      Realtime Tick      Count Time in Millisecond      R      -              122      1      Moving      Movement Flag      R      0              123      1      Moving Status      Detailed Information of Movement Status      R      0              124      2      Present PWM      Present PWM Value      R      -              126      2      Present Load      Present Load Value      R      -              128      4      Present Velocity      Present Velocity Value      R      -              132      4      Present Position      Present Position Value      R      -              136      4      Velocity Trajectory      Target Velocity Trajectory from Profile      R      -              140      4      Position Trajectory      Target Position Trajectory from Profile      R      -              144      2      Present Input Voltage      Present Input Voltage      R      -              146      1      [Present Temperature]      Present Internal Temperature      R      -              168      2      Indirect Address 1      Indirect Address 1      RW      224              170      2      Indirect Address 2      Indirect Address 2      RW      225              172      2      Indirect Address 3      Indirect Address 3      RW      226              …      …      …      …      …      …              218      2      Indirect Address 26      Indirect Address 26      RW      249              220      2      Indirect Address 27      Indirect Address 27      RW      250              222      2      Indirect Address 28      Indirect Address 28      RW      251              224      1      Indirect Data 1      Indirect Data 1      RW      0              225      1      Indirect Data 2      Indirect Data 2      RW      0              226      1      Indirect Data 3      Indirect Data 3      RW      0              …      …      …      …      …      …              249      1      Indirect Data 26      Indirect Data 26      RW      0              250      1      Indirect Data 27      Indirect Data 27      RW      0              251      1      Indirect Data 28      Indirect Data 28      RW      0              578      2      Indirect Address 29      Indirect Address 29      RW      634              580      2      Indirect Address 30      Indirect Address 30      RW      635              582      2      Indirect Address 31      Indirect Address 31      RW      636              …      …      …      …      …      …              628      2      Indirect Address 54      Indirect Address 54      RW      659              630      2      Indirect Address 55      Indirect Address 55      RW      660              632      2      Indirect Address 56      Indirect Address 56      RW      661              634      1      Indirect Data 29      Indirect Data 29      RW      0              635      1      Indirect Data 30      Indirect Data 30      RW      0              636      1      Indirect Data 31      Indirect Data 31      RW      0              …      …      …      …      …      …              659      1      Indirect Data 54      Indirect Data 54      RW      0              660      1      Indirect Data 55      Indirect Data 55      RW      0              661      1      Indirect Data 56      Indirect Data 56      RW      0      Caution Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate      Margin of Error                  7      4.5M      0.000%              6      4M      0.000%              5      3M      0.000%              4      2M      0.000%              3      1M      0.000%              2      115,200      0.000%              1(Default)      57,600      0.000%              0      9,600      0.000%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Drive Mode(10)Drive Mode is availabe from the firmware version 38.            Bit      Item      Description                  Bit 1 ~ 7      N/A      Unused, always ‘0’              Bit 0      Direction of Rotation      Normal Mode(0): CCW(Positive), CW(Negative)Reverse Mode(1): CCW(Negative), CW(Positive)      Operating Mode(11)            Value      Operating Mode      Description                  1      Velocity Control Mode(0° ~ 360°)      This mode controls velocity and ideal for wheel operation.This mode is identical to the Wheel Mode(endless) from existing Dynamixels.              3(Default)      Position Control Mode      This mode controls position and identical to the Joint Mode.Operating position range is limited by Max Position Limit(48) and Min Position Limit(52).This mode is ideal for articulated robots that each joint rotates less than 360°.              4      Extended Position Control Mode(Multi-turn)      This mode controls position and identical to Multi-turn Mode.512 turns are supported(-256[rev] ~ 256[rev]) and ideal for multi-turn wrists or conveyer systems or a system that requires an additional reduction gear.              16      PWM Control Mode(Voltage Control Mode)      This mode directly controls PWM output (Voltage Control Mode)        Note Switching Operating Mode will reset gains(PID, Feedfoward) properly to the selected Operating Mode. The profile generator and limits will also be reset.  Profile Velocity(112), Profile Acceleration(108) : Reset to ‘0’  Goal PWM(100) : Reset to PWM Limit(36)  Note PWM is the abbreviation for Pulse Width Modulation that modulates PWM Duty to control motors. The PWM Control Mode changes pulse width to control average supply voltage to the motor and this technique is widely used in the motor control field.Therefore, PWM Control Mode uses Goal PWM(100) value to control supply voltage for Dynamixel. PWM Control Mode is similar to the Wheel Mode of Dynamixel AX and RX series.Secondary(Shadow) ID(12)Set the Dynamixel’s Secondary ID. Secondary ID(12) is a value to identify each Dynamixel, just like the ID(7).However, unlike ID(7), Secondary ID(12) is not a unique value.Therefore, Dynamixels with the same Secondary ID value form a group.The differences between Secondary ID(12) and ID(7) are as follows :  Secondary ID(12) is not a unique value. i.e., a lot of Dynamixels may have the same Secondary ID value.  ID(7) has a higher priority than Secondary ID(12). i.e., if Secondary ID(12) and ID(7) are the same, ID(7) will be applied first.  The EEPROM area of the Control Table cannot be modified with Secondary ID(12). Only the RAM area can be modified.  If Instruction Packet ID is the same as Secondary ID(12), the Status Packet will not be returned.  If the value of Secondary ID(12) is 253 or higher, the Secondary ID function is deactivated.            Values      Description                  0 ~ 252      Activate Secondary ID function              253 ~ 255      Deactivate Secondary ID function, Default value ‘255’      The following are examples of operation when there are five Dynamixels with ID (7) set from 1 to 5.  Set all five Dynamixels’ Secondary ID(12) to ‘5’.  Send Write Instruction Packet(ID = 1, LED(65) = 1).  Turn on LED of Dynamixel with ID ‘1’ and return the Status Packet.  Send Write Instruction Packet(ID = 5, LED(65) = 1).  Turn on LED on five Dynamixels. However, Status Packet of Dynamixel with ID ‘5’ will be returned.  Set the Secondary ID(12) of all five Dynamixels to ‘100’.  Send Write Instruction Packet(ID = 100, LED(65) = 0).  Turn off LED on five Dynamixels. However, as there is no Dynamixel with ID ‘100’, Status Packet is not returned.Protocol Version(13)Users can select Dynamixel protocol version (1.0 and 2.0).It is recommended to use an identical protocol version for multiple Dynamixels.            Value      Protocol Version      Compatible Dynamixels                  1      1.0      AX Series, DX Series, RX Series, EX Series, MX Series with Firmware below v39              2(default)      2.0      MX-28/64/106 with Firmware v39 or above, X Series, Pro Series      Note The protocol 2.0 is greatly enhanced from the protocol 1.0. Accessing some of the Control Table area might be denied if protocol 1.0 is selected. This manual complies with protocol 2.0. Please refer to the Protocol section of e-Manual for more details about the protocol.Homing Offset(20)Users can adjust the Home position by setting Home Offset(20). The Homing Offset value is added to the Present Position(132).Present Position(132) = Actual Position + Homing Offset(20).            Unit      Value Range      Description                  about 0.088°      -1,044,479 ~ 1,044,479(-255 ~ 255[rev])      4,096 resolution      Note In case of the Position Control Mode(Joint Mode) that rotates less than 360 degrees, any invalid Homing Offset(20) values will be ignored(valid range : -1,024 ~ 1,024).Moving Threshold(24)This value helps to determine whether the Dynamixel is in motion or not.When the absolute value of Present Velocity(128) is greater than the Moving Threshold(24), Moving(122) is set to ‘1’, otherwise it is cleared to ‘0’.                   Values      Description                  Unit      about 0.229 rpm      All velocity related Data uses the same unit              Range      0 ~ 1,023      -      Maximum Temperature Limit(31)This value limits operating temperature. When the Present Temperature(146) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(31), the Over Heating Error Bit(0x04) and Hardware Error Bit(0x80) in the Hardware Error Status(70) will be set. If Overheating Error Bit(0x04) is configured in the Shutdown(63), Torque Enable(64) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(63) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(34, 32)It is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 160      5.0 ~ 16.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.PWM Limit(36)This value indicates maximum PWM output. Goal PWM(100) can’t be configured with any values exceeding PWM Limit(36). PWM Limit(36) is commonly used in all operating mode as an output limit, therefore decreasing PWM output will result in decreasing torque and velocity. For more details, please refer to the Gain section of each operating modes.            Values      Description                  0(0%) ~ 885(100%)      885 = 100[%] output      Acceleration Limit(40)This value indicates maximum Profile Acceleration(108). Profile Acceleration(108) can’t be configured with any values exceeding Acceleration Limit(40). Profile Acceleration(108) is used in all operating mode except PWM Control Mode in order to generate a target trajectory. For more details, please refer to the Profile Velocity(112).            Unit      Value Range                  214.577 Rev/min2      0 ~ 32,767      Note Bit information of the Error field in the Status Packet is different from protocol 1.0 and protocol 2.0. This manual complies with protocol 2.0. Please refer to the Protocol section of e-Manual for more details about the protocol.Velocity Limit(44)This value indicates maximum velocity of Goal Velocity(104) and Profile Velocity(112). For more details, please refer to the Profile Velocity(112).            Unit      Value Range                  0.229rpm      0 ~ 1,023      Min/Max Position Limits(52, 48)These values limit maximum and minimum target positions for Position Control Mode(Joint Mode) within the range of 1 rotation(0 ~ 4,095). Therefore, Goal Position(116) should be configured within the position limit range. These values are not used in Extended Position Control Mode and Current-based Position Control Mode.            Unit      Value Range                  0.088°      0 ~ 4,095(1 rotation)      Note Max Position Limit(48) and Min Position Limit(52) are only used in Position Control Mode with a single turn.Shutdown(63)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(63), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(64) is cleared to ‘0’ and the motor output becomes 0[%]. REBOOT is the only method to reset Torque Enable(64) to ‘1’(Torque ON) after the shutdown. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      Unused, Always ‘0’              Bit 6      -      Unused, Always ‘0’              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      -      Unused, Always ‘0’              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Torque Enable(64)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).LED(65)Turn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Status Return Level(68)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Registered Instruction(69)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Hardware Error Status(70)This value indicates hardware error status.The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(63), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(64) is cleared to ‘0’ and the motor output becomes 0[%]. REBOOT is the only method to reset Torque Enable(64) to ‘1’(Torque ON) after the shutdown. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      Unused, Always ‘0’              Bit 6      -      Unused, Always ‘0’              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      -      Unused, Always ‘0’              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Velocity PI Gain(78, 76)These values indicate Gains of Velocity Control Mode. Gains of DYNAMIXEL’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and that of the Control Table is abbreviated to KVP(TBL).                   Controller Gain      Conversion Equations      Range      Description                  Velocity I Gain(76)      KVI      KVI = KVI(TBL) / 65536      0 ~ 16383      I Gain              Velocity P Gain(78)      KVP      KVP = KVP(TBL) / 128      0 ~ 16383      P Gain      Below figure is a block diagram describing the velocity controller in Velocity Control Mode. When the instruction transmitted from the user is received by DYNAMIXEL, it takes following steps until driving the horn.  An Instruction from the user is transmitted via DYNAMIXEL bus, then registered to Goal Velocity(104).  Goal Velocity(104) is converted to target velocity trajectory by Profile Acceleration(108).  The target velocity trajectory is stored at Velocity Trajectory(136).  PI controller calculates PWM output for the motor based on the target velocity trajectory.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of DYNAMIXEL is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).Note Ka stands for Anti-windup Gain and ‘β’ is a conversion coefficient of position and velocity that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)These Gains are used in Position Control Mode and Extended Position Control Mode. Gains of Dynamixel’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Position P Gain of Dynamixel’s internal controller is abbreviated to KPP and that of the Control Table is abbreviated to KPP(TBL).                   Controller Gain      Conversion Equations      Range      Description                  Position D Gain(80)      KPD      KPD = KPD(TBL) / 16      0 ~ 16,383      D Gain              Position I Gain(82)      KPI      KPI = KPI(TBL) / 65,536      0 ~ 16,383      I Gain              Position P Gain(84)      KPP      KPP = KPP(TBL) / 128      0 ~ 16,383      P Gain              Feedforward 2nd Gain(88)      KFF2nd      KFF2nd(TBL) / 4      0 ~ 16,383      Feedforward Acceleration Gain              Feedforward 1st Gain(90)      KFF1st      KFF1st(TBL) / 4      0 ~ 16,383      Feedforward Velocity Gain      Below figure is a block diagram describing the position controller in Position Control Mode and Extended Position Control Mode. When the instruction from the user is received by Dynamixel, it takes following steps until driving the horn.  An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).  Goal Position(116) is converted to target position trajectory and target velocity trajectory by Profile Velocity(112) and Profile Acceleration(108).  The target position trajectory and target velocity trajectory is stored at Position Trajectory(140) and Velocity Trajectory(136) respectively.  Feedforward and PID controller calculate PWM output for the motor based on target trajectories.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of Dynamixel is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).Note In case of PWM Control Mode, both PID controller and Feedforward controller are deactivated while Goal PWM(100) value is directly controlling the motor through an Inverter. In this manner, users can directly control the supplying voltage to the motor.Note Ka is an Anti-windup Gain that cannot be modified by users. For more details about the PID controller and Feedforward controller, please refer to the PID Controller and Feed Forward.BUS Watchdog(98)Bus Watchdog (98) is a safety device (Fail-safe) that stops the DYNAMIXEL if the communication between the controller and DYNAMIXEL communication (RS485, TTL) is disconnected due to an unspecified error.Communication is defined as all the Instruction Packet in the DYNAMIXEL Protocol.                   Values      Description                  Unit      20[ms]      -              Range      0      Deactivate Bus Watchdog Function, Clear Bus Watchdog Error              Range      1 ~ 127      Activate Bus Watchdog              Range      -1      Bus Watchdog Error Status      The Bus Watchdog function monitors the communication interval (time) between the controller and DYNAMIXEL when Torque Enable (64) is ‘1’.If the measured communication interval (time) is larger than Bus Watchdog (98), the DYNAMIXEL will stop. Bus Watchdog (98) will be changed to ‘-1’ (Bus Watchdog Error).If the Bus Watchdog Error screen appears, the Goal Value (Goal PWM(100), Goal Current(102), Goal Velocity(104), Goal Position(116)) will be changed to read-only-access.Therefore, when a new value is written to the Goal Value, a Range Error will be returned via the Status packet.If the value of Bus Watchdog (98) is changed to ‘0’, Bus Watchdog Error will be cleared.Note For details of Range Error, please refer to the protocol of the e-Manual.The following are examples of the operation of the Bus Watchdog function.  After setting the operating mode (11) to speed control mode, change the Torque Enable (64) to ‘1’.  If ‘50’ is written in the Goal Velocity (104), the DYNAMIXEL will rotate in CCW direction.  Change the value of Bus Watchdog (98) to ‘100’ (2,000 [ms]). (Activate Bus Watchdog Function)  If no instruction packet is received for 2,000 [ms], the DYNAMIXEL will stop. When it stops, the Profile Acceleration (108) and Profile Velocity (112) are applied as ‘0’.  The value of Bus Watchdog (98) changes to ‘-1’ (Bus Watchdog Error). At this time, the access to the Goal Value will be changed to read-only.  If ‘150’ is written to the Goal Velocity (104), Range Error will be returned via Status Packet.  If the value of Bus Watchdog (98) is changed to ‘0’, Bus Watchdog Error will be cleared.  If “150” is written in the Goal Velocity (104), the DYNAMIXEL will rotate in CCW direction.Goal PWM(100)In case of PWM Control Mode, both PID controller and Feedforward controller are deactivated while Goal PWM(100) value is directly controlling the motor through an Inverter. In other control modes, this value is used to limit PWM value. This value cannot exceed PWM Limit(36). Please refer to the Gain section in order to see how Goal PWM(100) affects to different control modes.            Range      Description                  -PWM Limit(36) ~ PWM Limit(36)      Initial Value of PWM Limit(36) : ‘885’      Goal Velocity(104)In case of Velocity Control Mode, Goal Velocity(104) can be used to set a target velocity. This value cannot exceed Velocity Limit(44). For now, Goal Velocity(104) is used for target velocity, but this value is not used to limit the velocity.            Unit      Value Range                  0.229 rpm      -Velocity Limit(44) ~ Velocity Limit(44)      Note The maximum velocity and maximum torque of DYNAMIXEL is affected by supplying voltage. Therefore, if supplying voltage changes, so does the maximum velocity. This manual complies with recommended supply voltage(12[V]).Note If Profile Acceleration(108) and Goal Velocity(104) are modified simultaneously, modified Profile Acceleration(108) will be used to process Goal Velocity(104).Profile Acceleration(108)The acceleration of Profile can be set with this value. Profile Acceleration(108) can be used in all control modes except Torque Control Mode. Profile Acceleration(108) cannot exceed Acceleration Limit(40). For more details, please refer to the Profile Velocity(112).            Unit      Value Range      Description                  214.577 Rev/min2      0 ~ Acceleration Limit(40)      ‘0’ stands for an infinite acceleration      Profile Velocity(112)The Maximum velocity of Profile can be set with this value. Profile Velocity(112) can be used in all control modes except Torque Control Mode and Velocity Control Mode. Profile Velocity(112) cannot exceed Velocity Limit(44). Velocity Control Mode only uses Profile Acceleration(108) instead of Profile Velocity(112).            Unit      Value Range      Description                  0.229 rpm      0 ~ Velocity Limit(44)      ‘0’ stands for an infinite velocity      The Profile is an acceleration/deceleration control method to reduce vibration, noise and load of the motor by controlling dramatically changing velocity and acceleration. It is also called Velocity Profile as it controls acceleration and deceleration based on velocity. DYNAMIXEL provides 4 different types of Profile. The following explains 4 Profiles and how to select them. Profiles are usually selected by a combination of Profile Velocity(112) and Profile Acceleration(108). Triangular and Trapezoidal Profiles exceptionally consider total travel distance(ΔPos, the distance difference between target position and current position) as an additional factor. For convenience, Profile Velocity(112) is abbreviated to VPRFL and Profile Acceleration(108) is abbreviated to VPRFL. ‘X’ stands for “Don’t Care” case.When given Goal Position(116), Dynamixel’s profile creates target velocity trajectory based on current velocity(initial velocity of the Profile). When Dynamixel receives updated target position from a new Goal Position(116) while it is moving toward the previous Goal Position(116), velocity smoothly varies for the new target velocity trajectory. Maintaining velocity continuity while updating target velocity trajectory is called Velocity Override. For a simple calculation, let’s assume that the initial velocity of the Profile is ‘0’. The following explains how Profile processes Goal Position(116) instruction in Position Control mode, Extended Position Control Mode, Current-based Position Control Mode.  An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).  Acceleration time(t1) is calculated from Profile Velocity(112) and Profile Acceleration(108).  Types of Profile is decided based on Profile Velocity(112), Profile Acceleration(108) and total travel distance(ΔPos, the distance difference between target position and current position).  Selected Profile type is stored at Moving Status(123).(Refer to the Moving Status(123))  Dynamixel is driven by the calculated target trajectory from Profile.  Target velocity trajectory and target position trajectory from Profile are stored at Velocity Trajectory(136) and Position Trajectory(140) respectively.  VPRFL_TRI of ③ and Travel time(t3) to reach Goal Position(116) is calculated as below.            Condition      Types of Profile                  VPRFL(112) = 0      Profile not used(Step Instruction)              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) = 0)      Rectangular Profile              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) ≠ 0) &amp;amp; (VPRFL_TRI ≤ VPRFL(112))      Triangular Profile              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) ≠ 0) &amp;amp; (VPRFL_TRI ＞ VPRFL(112))      Trapezoidal Profile      Note Dynamixel supports Jerk control in order to minimize dramatic change of acceleration. Therefore, actual travel time by the target trajectory of Profile could be longer than t3(t4 of above figure).  Note Velocity Control Mode only uses Profile Acceleration(108). Step and Trapezoidal Profiles are supported. Velocity Override and Jerk control are supported as well. Acceleration time(t1) can be calculated as below equation.Goal Velocity(104) / Profile Acceleration(108) * t1 = 64Goal Position(116)Target position can be set with Goal Position(116). From the front view of Dynamixels, CCW is an increasing direction whereas CW is a decreasing direction. The way to reaching Goal Position(116) is differ by 4 Profiles provided by Dynamixels. Please refer to the Profile Velocity(112) for more details.            Mode      Values      Description                  Position Control Mode      Min Position Limit(52) ~ Max Position Limit(48)      Initial Value : 0 ~ 4,095              Extended Position Control Mode      -1,048,575 ~ 1,048,575      -256[rev] ~ 256[rev]              Current-based Position Control Mode      -1,048,575 ~ 1,048,575      -256[rev] ~ 256[rev]                  Degree Conversion Constant      Description                  0.088°/Value      1[rev] : 0 ~ 4,095      Note If Profile Acceleration(108), Profile Velocity(112) and Goal Position(116) are modified simultaneously, Goal Position(116) is processed based on updated Profile Acceleration(108) and Profile Velocity(112).Realtime Tick(120)This value indicates Dynamixel’s time.            Unit      Value Range      Description                  1 ms      0 ~ 32,767      The value resets to ‘0’ when it exceeds 32,767      Moving(122)This value indicates whether Dynamixel is in motion or not. If absolute value of Present Velocity(128) is greater than Moving Threshold(24), Moving(122) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(128) while Profile is in progress with Goal Position(116) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(116) instruction is being processed)      Moving Status(123)This value provides additional information about the movement. Following Error Bit(0x08) and In-Position Bit(0x01) only work with Position Control Mode, Extended Position Control Mode, Current-based Position Control Mode.                          Details      Description                  Bit 7      0x80      -      Unused              Bit 6      0x40      -      Unused              Bit 5~Bit 4      0x30      Profile Type(0x30)Profile Type(0x20)Profile Type(0x10)Profile Type(0x00)      Trapezoidal Velocity ProfileTriangular Velocity ProfileRectangular Velocity ProfileProfile is not used              Bit 3      0x08      Following Error      Dynamixel fails to reach target position trajectory              Bit 2      0x04      -      Unused              Bit 1      0x02      Profile Ongoing      Profile is in progress with Goal Position(116) instruction              Bit 0      0x01      In-Position      Dynamixel is reached to target position      Present PWM(124)This value indicates present PWM. For more details, please refer to the Goal PWM(100).Present Load(126)It means currently applied load.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Unit      Value Range      Description                  0.1%      -1,000 ~ 1,000      Positive(CCW Load), Negative(CW Load)      Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present Velocity(128)This value indicates present Velocity. For more details, please refer to the Goal Velocity(104).Present Position(132)This value indicates present Position. For more details, please refer to the Goal Position(116).  Note Present Position(132) represents 4 byte continuous range(-2,147,483,648 ~ 2,147,483,647) when Torque is turned off regardless of Operating Mode(11). However, Present Position(132) will be reset in those cases:  Present Position(132) is reset with the value within 1 rev (0 ~ 4,095) when Operating Mode(11) is changed to Position Control Mode.  Present Position(132) is reset with the value within 1 rev (0 ~ 4,095) when Torque is turned on in Position Control Mode.Reset Present Position(132) value can be affected by Homing Offset(20).Velocity Trajectory(136)This is a target velocity trajectory created by Profile. Operating method can be changed based on control mode. For more details, please refer to the Profile Velocity(112).  Velocity Control Mode : When Profile reaches to the endpoint, Velocity Trajectory(136) becomes equal to Goal Velocity(104).  Position Control Mode, Extended Position Control Mode : Velocity Trajectory is used to create Position Trajectory(140). When Profile reaches to an endpoint, Velocity Trajectory(136) is cleared to ‘0’.Position Trajectory(140)This is a target position trajectory created by Profile. This value is only used in Position Control Mode, Extended Position Control Mode. For more details, please refer to the Profile Velocity(112).Present Input Voltage(144)This value indicates present voltage that is being supplied. For more details, please refer to the Max/Min Voltage Limit(32, 34).Present Temperature(146)This value indicates internal temperature of Dynamixel. For more details, please refer to the Temperature Limit(31).Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 64 ~ 661).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, allocating 65(Address of LED) to Indirect Address 1(168), Indirect Data 1(224) can perform exactly same as LED(65).Example 1 Allocating Size 1 byte LED(65) to Indirect Data 1(224).  Indirect Address 1(168) : change the value to ‘65’ which is the address of LED.  Set Indirect Data 1(224) to ‘1’ : LED(65) also becomes ‘1’ and LED is turned on.  Set Indirect Data 1(224) to ‘0’ : LED(65) also becomes ‘0’ and LED is turned off.Example 2 Allocating Size 4 byte Goal Position(116) to Indirect Data 2(225), 4 sequential bytes have to be allocated.  Indirect Address 2(170) : change the value to ‘116’ which is the first address of Goal Position.  Indirect Address 3(172) : change the value to ‘117’ which is the second address of Goal Position.  Indirect Address 4(174) : change the value to ‘118’ which is the third address of Goal Position.  Indirect Address 5(176) : change the value to ‘119’ which is the fourth address of Goal Position.  Set 4 byte value ‘1,024’ to Indirect Data 2 : Goal Position(116) also becomes ‘1024’ and Dynamixel moves.            Indirect Address Range      Description                  64 ~ 661      EEPROM address can’t be assigned to Indirect Address      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.How to AssembleFrames      FR07-B101 Option Frame        FR07-F101_FR07-X101 Option Frame        FR07-H101 Option Frame        FR07-S101 Option Frame  Horns      HN07-I101        HN07-N101  Combination StructuresMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideVideosQuick StartDrawingsDownload MX-28AT_AR.pdf",
        "url": " http://localhost:4000/emanual/docs/en/dxl/mx/mx-28-2/"
      } ,
  
      "docs-en-dxl-mx-mx-28":  {
        "title": "MX-28",
      "content"	 : "Note Compliance has been replaced with PID Gains.Note Although the MX-28AT (TTL) and MX-28AR (RS-485) differ in communications protocols both have the same features and perform equally. (TTL uses 3-pin connectors while RS-485 uses 4)Note In order to use Protocol 2.0, please update the firmware to V39 or above. (Update firmware using R+ Manager 2.0)Warning For MX-28(2.0) Protocol, please refer to the MX-28(2.0) Control Table as they are different.Specifications            Item      Specifications                  MCU      ST CORTEX-M3 ( STM32F103C8 @ 72MHZ,32BIT)              Position Sensor      Contactless absolute encoder (12BIT,360 DEGREE)Maker : ams (www.ams.com), Part No : AS5045              Motor      Maxon              Baud Rate      8000 bps ~ 4.5 Mbps              Control Algorithm      PID Control              Resolution      0.088°              Running Degree      0° ~ 360°Endless Turn              Weight      MX-28AR, MX-28AT : 77gMX-28R, MX-28T : 72g              Dimensions (W x H x D)      35.6mm x 50.6mm x 35.5mm              Gear Ratio      193 : 1              Stall Torque      2.3Nm @ 11.1V, 1.3A2.5Nm @ 12V, 1.4A3.1Nm @ 14.8V, 1.7A              No Load Speed      50rpm @ 11.1V55rpm @ 12V67rpm @ 14.8V              Operating Temperature      -5°C ~ +80°C              Input Voltage      10 ~ 14.8V (Recommended : 12V)              Standby Current      100mA              Command Signal      Digital Packet              Protocol Type      MX-28T/MX-28AT: Half Duplex Asynchronous Serial CommunicationMX-28R/MX-28AR: RS485 Asynchronous Serial Communication(8bit,1stop, No Parity)              Physical Connection      MX-28T/MX-28AT: TTL Level Multidrop BUSMX-28R/MX-28AR: RS485 Multidrop BUS              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal GearMX-28AR/MX-28AT: Metal(Front), Engineering Plastic(Middle, Back)MX-28R/MX-28T: Engineering Plastic(Front, Middle, Back)      Performance GraphStall torque Peak stall torque read from transient statePerformance Graph(N-T Curve) A graph shows torque measured in stable condition while increasing load. Normally, stall torque is bigger than maximum torque on performance graph.Caution When connecting to power supply:  For the stable power supply, we recommend using ROBOTIS controller or SMPS2Dynamixel.  Connect your DYNAMIXEL to power supply while it’s off and turn on/off with the power switch.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      29              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      4095              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      160              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36              20      2      Multi Turn Offset      Adjust Position with Offset      RW      0              22      1      Resolution Divider      Divider for Position Resolution      RW      1      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      D Gain      Derivative Gain      RW      0              27      1      I Gain      Integral Gain      RW      0              28      1      P Gain      Proportional Gain      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed(Moving Velocity)      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      0              73      1      Goal Acceleration      Goal Acceleration      RW      0      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.For BPS over 250 values :            Value      Baud Rate      Margin of Error                  250      2,250,000      0.000%              251      2,500,000      0.000%              252      3,000,000      0.000%      Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following three modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0              Multi-turn Mode      both are 4095      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles. Multi-turn mode allows joint mode control over multiple rotations (Position range : -28,672 ~ 28,672)The Maximum Temperature Limit            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 160      5.0 ~ 16.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Multi-turn OffsetAdjusts offset position. This offset value is added to the Present Position(36).Initial value is 0 and the range is from -24,576 to 24,576.Dynamixel with a Present position of 2,048 with an offset of 1,024 will return an adjusted Present position of 3,072.Note This offset feature is only available in multi-turn mode.Resolution DividerIt allows the user to change Dynamixel’s resolution.The default Resolution Divider Value is set as 1. (1 ~ 4 available)When resolution is lowered, revolutions (in both directions) can be increased (up to 28 turns in each direction).Present Position = Real Position / Resolution DividerFor example, a Real Position of 2048 with a Resolution Divider set as 2 will yield a Present Position value of 1024 (2048/2 = 1024). A Dynamixel with Resolution Divider set as 2 will have a resolution 2048 for a single revolution.The Present Position can be obtained while Multi-turn Offset and Resolution Divider are taken into account.Present position = (Real Position / Resolution Divider) + Multi-turn OffsetFor example, a Dynamixel with a Real Position of 2048 with a Resolution Divider set as 4 and Multi-turn Offset as 1024 will yield a Present Position of 1535 ((2048/4) + 1024 = 1535).Note: This feature is only applied in multi-turn mode and will be ignored in other modes.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      PID GainsMX series will use the PID controller as a main control method.P gain : value of proportional band.I gain : value of integral action.D Gain : value of derivative action.Gains values are in between 0~254.Kp = P Gain / 8Ki = I Gain * 1,000 / 2,048Kd = D Gain * 4 / 1,000The relationship between Compliance Slop and PID            Slope      P Gain                  8      128              16      64              32      32              64      16              128      8      The less the P gain, The larger the back lash, and the weaker the amount of output near goal position.At some extent, it is like a combined concept of margine and slope.It does not exactly match the previous concept of compliance. So it is obvious if you see the difference in terms of motion.Explanation for PID required.For the brief explanation about general PID, please refer to the website(link) below.http://en.wikipedia.org/wiki/PID_controllerFYI, PID control theory is not only limited to the control of motor(actuator) but is a generic theory that can be applied to all kinds of control.Goal PositionIt is a position value of destination.0 to 4,095 (0xFFF) is available.  The unit is 0.088°.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelIn multi-turn mode Dynamixel has a range from -28,672 to 28,672 (can turn up to 7 revolutions in either CW or CCW direction).When resolution divider is set to a different value revolutions can increase.Note If it is set to Wheel Mode, Goal Position value is not used.Moving Speed      Join Mode, Multi-Turn modeIt is a moving speed to Goal Position.0~1023 (0X3FF) can be used, and the unit is about 0.114rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 116.62rpm.For example, if it is set to 300, it is about 34.2 rpm.However, the rpm will not exceed the No Load Speed.        Wheel ModeIt is a moving speed to Goal direction.0~2047 (0X7FF) can be used, and the unit is about 0.114rpm.If a value in the range of 0~1023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1024~2047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.    Note Wheel mode allows to check max rpm. Any values higher than max rpm will not take effect.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~4095 (0xFFF), and the unit is 0.088 degree.The picture above is the front view of Dynamixel.In multi-turn mode, the range is from -28672 to 28672 with unit values dependent on Resolution Divider (0.088 * Resolution Divider)Note In multi-turn mode, Present position depends on resolution divider and multi-turn offset For more information turn to the section on Multi Turn offset and Resolution Divider.Present SpeedIs the current moving speed.0 ~ 2,047 (0x000 ~ 0x7FF) can be used.If a value is in the rage of 0 ~ 1,023 then the motor rotates to the CCW direction.If a value is in the rage of 1,024 ~ 2,047 then the motor rotates to the CW direction.The 10th bit becomes the direction bit to control the direction; 0 and 1,024 are equal.The value unit is about 0.11rpm.For example, if it is set to 300 then the motor is moving to the CCW direction at a rate of about 34.33rpm.Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.Goal AccelerationThis is Goal Acceleration value.It can be used from 0~254(0XFE) and the unit is approximately 8.583° / sec2.When it is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When the goal speead is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When it is set to 254, it becomes 2,180° / sec2.For example, the current speed of Dynamixel is 0, and Goal acceleration is 10.The speed of Dynamixel after 1 second will be 14.3 RPM.How to AssembleFrames      FR07-B101 Option Frame        FR07-F101_FR07-X101 Option Frame        FR07-H101 Option Frame        FR07-S101 Option Frame  Horns      HN07-I101        HN07-N101  Combination StructuresMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideVideosQuick StartDrawingsDownload MX-28AT_AR.pdf",
        "url": " http://localhost:4000/emanual/docs/en/dxl/mx/mx-28/"
      } ,
  
      "docs-en-dxl-mx-mx-64-2":  {
        "title": "MX-64(2.0)",
      "content"	 : "Specifications            Item      Specifications                  MCU      ST CORTEX-M3 ( STM32F103C8 @ 72MHZ,32BIT)              Position Sensor      Contactless absolute encoder (12BIT,360 DEGREE)Maker : ams (www.ams.com), Part No : AS5045              Motor      Maxon              Baud Rate      8000 bps ~ 4.5 Mbps              Control Algorithm      PID Control              Resolution      0.088°              Operation Modes      Current Control ModeVelocity Control ModePosition Control Mode(0° ~ 360°)Extended Position Ctrl Mode(Multi-turn)Current-based Position Ctrl ModePWM Control Mode              Weight      MX-64AR/AT : 135g, MX-64R/T : 126g              Dimensions (W x H x D)      40.2mm x 61.1mm x 41mm              Gear Ratio      200 : 1              Stall Torque      5.5Nm @ 11.1V, 3.9A6.0Nm @ 12V, 4.1A7.3Nm @ 14.8V, 5.2A              No Load Speed      58rpm @ 11.1V63rpm @ 12V78rpm @ 14.8V              Operating Temperature      -5°C ~ +80°C              Input Voltage      10 ~ 14.8V (Recommended : 12V)              Standby Current      100mA              Command Signal      Digital Packet              Protocol Type      MX-64T/MX-64AT: Half Duplex Asynchronous Serial CommunicationMX-64R/MX-64AR: RS485 Asynchronous Serial Communication(8bit,1stop, No Parity)              Physical Connection      MX-64T/MX-64AT: TTL Level Multidrop BUSMX-64R/MX-64AR: RS485 Multidrop BUS              ID      0 ~ 252              Feedback      Position, Velocity, Current, Realtime Tick, Trajectory, Input Voltage, etc              Material      Full Metal GearMX-64AR/AT: Metal(Front), Engineering Plastic(Middle, Back)MX-64R/T: Engineering Plastic(Front, Middle, Back)      Performance GraphStall torque Peak stall torque read from transient statePerformance Graph(N-T Curve) A graph shows torque measured in stable condition while increasing load. Normally, stall torque is bigger than maximum torque on performance graph.Caution When connecting to power supply:  For the stable power supply, we recommend using ROBOTIS controller or SMPS2Dynamixel.  Connect your DYNAMIXEL to power supply while it’s off and turn on/off with the power switch.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 2.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(64) is cleared to ‘0’.SizeThe Size of data varies from 1 to 4 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. For data larger than 2 bytes will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      311              2      4      Model Information      Model Information      R      -              6      1      Firmware Version      Firmware Version      R      -              7      1      ID      DYNAMIXEL ID      RW      1              8      1      Baud Rate      Communication Baud Rate      RW      1              9      1      Return Delay Time      Response Delay Time      RW      250              10      1      Drive Mode      Drive Mode      RW      0              11      1      Operating Mode      Operating Mode      RW      3              12      1      Secondary(Shadow) ID      Secondary ID      RW      255              13      1      Protocol Version      Protocol Version      RW      2              20      4      Homing Offset      Home Position Offset      RW      0              24      4      Moving Threshold      Velocity Threshold for Movement Detection      RW      10              31      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              32      2      Max Voltage Limit      Maximum Input Voltage Limit      RW      160              34      2      Min Voltage Limit      Minimum Input Voltage Limit      RW      95              36      2      PWM Limit      Maximum PWM Limit      RW      885              38      2      Current Limit      Maximum Current Limit      RW      1941              40      4      Acceleration Limit      Maximum Acceleration Limit      RW      32767              44      4      Velocity Limit      Maximum Velocity Limit      RW      435              48      4      Max Position Limit      Maximum Position Limit      RW      4095              52      4      Min Position Limit      Minimum Position Limit      RW      0              63      1      Shutdown      Shutdown Error Information      RW      52      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  64      1      Torque Enable      Motor Torque On/Off      RW      0              65      1      LED      Status LED On/Off      RW      0              68      1      Status Return Level      Select Types of Status Return      RW      2              69      1      Registered Instruction      REG_WRITE Instruction Flag      R      0              70      1      Hardware Error Status      Hardware Error Status      R      0              76      2      Velocity I Gain      I Gain of Velocity      RW      1920              78      2      Velocity P Gain      P Gain of Velocity      RW      100              80      2      Position D Gain      D Gain of Position      RW      0              82      2      Position I Gain      I Gain of Position      RW      0              84      2      Position P Gain      P Gain of Position      RW      850              88      2      Feedforward 2nd Gain      2nd Gain of Feed-Forward      RW      0              90      2      Feedforward 1st Gain      1st Gain of Feed-Forward      RW      0              98      1      BUS Watchdog      Dynamixel BUS Watchdog      RW      0              100      2      Goal PWM      Target PWM Value      RW      -              102      2      Goal Current      Target Current Value      RW      -              104      4      Goal Velocity      Target Velocity Value      RW      -              108      4      Profile Acceleration      Acceleration Value of Profile      RW      0              112      4      Profile Velocity      Velocity Value of Profile      RW      0              116      4      Goal Position      Target Position      RW      -              120      2      Realtime Tick      Count Time in Millisecond      R      -              122      1      Moving      Movement Flag      R      0              123      1      Moving Status      Detailed Information of Movement Status      R      0              124      2      Present PWM      Present PWM Value      R      -              126      2      Present Current      Present Current Value      R      -              128      4      Present Velocity      Present Velocity Value      R      -              132      4      Present Position      Present Position Value      R      -              136      4      Velocity Trajectory      Target Velocity Trajectory from Profile      R      -              140      4      Position Trajectory      Target Position Trajectory from Profile      R      -              144      2      Present Input Voltage      Present Input Voltage      R      -              146      1      [Present Temperature]      Present Internal Temperature      R      -              168      2      Indirect Address 1      Indirect Address 1      RW      224              170      2      Indirect Address 2      Indirect Address 2      RW      225              172      2      Indirect Address 3      Indirect Address 3      RW      226              …      …      …      …      …      …              218      2      Indirect Address 26      Indirect Address 26      RW      249              220      2      Indirect Address 27      Indirect Address 27      RW      250              222      2      Indirect Address 28      Indirect Address 28      RW      251              224      1      Indirect Data 1      Indirect Data 1      RW      0              225      1      Indirect Data 2      Indirect Data 2      RW      0              226      1      Indirect Data 3      Indirect Data 3      RW      0              …      …      …      …      …      …              249      1      Indirect Data 26      Indirect Data 26      RW      0              250      1      Indirect Data 27      Indirect Data 27      RW      0              251      1      Indirect Data 28      Indirect Data 28      RW      0              578      2      Indirect Address 29      Indirect Address 29      RW      634              580      2      Indirect Address 30      Indirect Address 30      RW      635              582      2      Indirect Address 31      Indirect Address 31      RW      636              …      …      …      …      …      …              628      2      Indirect Address 54      Indirect Address 54      RW      659              630      2      Indirect Address 55      Indirect Address 55      RW      660              632      2      Indirect Address 56      Indirect Address 56      RW      661              634      1      Indirect Data 29      Indirect Data 29      RW      0              635      1      Indirect Data 30      Indirect Data 30      RW      0              636      1      Indirect Data 31      Indirect Data 31      RW      0              …      …      …      …      …      …              659      1      Indirect Data 54      Indirect Data 54      RW      0              660      1      Indirect Data 55      Indirect Data 55      RW      0              661      1      Indirect Data 56      Indirect Data 56      RW      0      Caution Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.Control Table DescriptionCaution Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.Model Number(0)This address stores model number of the DYNAMIXEL.Firmware Version(6)This address stores firmware version of the DYNAMIXEL.ID(7)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate(4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate      Margin of Error                  7      4.5M      0.000%              6      4M      0.000%              5      3M      0.000%              4      2M      0.000%              3      1M      0.000%              2      115,200      0.000%              1(Default)      57,600      0.000%              0      9,600      0.000%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time(5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      Drive Mode(10)Drive Mode is availabe from the firmware version 38.            Bit      Item      Description                  Bit 1 ~ 7      N/A      Unused, always ‘0’              Bit 0      Direction of Rotation      Normal Mode(0): CCW(Positive), CW(Negative)Reverse Mode(1): CCW(Negative), CW(Positive)      Operating Mode(11)            Value      Operating Mode      Description                  0      Current Control Mode      DYNAMIXEL only controls current(torque) regardless of speed and position. This mode is ideal for a gripper or a system that only uses current(torque) control or a system that has additional velocity/position controllers.              1      Velocity Control Mode      This mode controls velocity. This mode is identical to the Wheel Mode(endless) from existing DYNAMIXELs. This mode is ideal for wheel-type robots.              3(Default)      Position Control Mode      This mode controls position. This mode is identical to the Joint Mode from existing DYNAMIXELs. Operating position range is limited by Max Position Limit(48) and Min Position Limit(52). This mode is ideal for articulated robots that each joint rotates less than 360 degrees.              4      Extended Position Control Mode(Multi-turn)      This mode controls position. This mode is identical to the Multi-Turn Mode from existing DYNAMIXELs. 512 turns are supported(-256[rev] ~ 256[rev]). This mode is ideal for multi-turn wrists or conveyer systems or a system that requires an additional reduction gear.              5      Current-based Position Control Mode      This mode controls both position and current(torque). Up to 512 turns are supported(-256[rev] ~ 256[rev]). This mode is ideal for a system that requires both position and current control such as articulated robots or grippers.              16      PWM Control Mode  (Voltage Control Mode)      This mode directly controls PWM output. (Voltage Control Mode)        Note Switching Operating Mode will reset gains(PID, Feedfoward) properly to the selected Operating Mode. The profile generator and limits will also be reset.  Profile Velocity(112), Profile Acceleration(108) : Reset to ‘0’  Goal PWM(100), Goal Current(102) : Reset to PWM Limit(36), Current Limit(38) respectively  Current-based Position Control Mode : Reset to Position Gain(PID) and PWM Limit(36) values.Changed Position Gain(PID) and PWM Limit(36) values can be read from the Control Table.Note PWM is the abbreviation for Pulse Width Modulation that modulates PWM Duty to control motors. The PWM Control Mode changes pulse width to control average supply voltage to the motor and this technique is widely used in the motor control field. Therefore, PWM Control Mode uses Goal PWM(100) value to control supply voltage for DYNAMIXEL. PWM Control Mode is similar to the Wheel Mode of DYNAMIXEL AX and RX series.Secondary(Shadow) ID(12)Set the Dynamixel’s Secondary ID. Secondary ID(12) is a value to identify each Dynamixel, just like the ID(7).However, unlike ID(7), Secondary ID(12) is not a unique value.Therefore, Dynamixels with the same Secondary ID value form a group.The differences between Secondary ID(12) and ID(7) are as follows :  Secondary ID(12) is not a unique value. i.e., a lot of Dynamixels may have the same Secondary ID value.  ID(7) has a higher priority than Secondary ID(12). i.e., if Secondary ID(12) and ID(7) are the same, ID(7) will be applied first.  The EEPROM area of the Control Table cannot be modified with Secondary ID(12). Only the RAM area can be modified.  If Instruction Packet ID is the same as Secondary ID(12), the Status Packet will not be returned.  If the value of Secondary ID(12) is 253 or higher, the Secondary ID function is deactivated.            Values      Description                  0 ~ 252      Activate Secondary ID function              253 ~ 255      Deactivate Secondary ID function, Default value ‘255’      The following are examples of operation when there are five Dynamixels with ID (7) set from 1 to 5.  Set all five Dynamixels’ Secondary ID(12) to ‘5’.  Send Write Instruction Packet(ID = 1, LED(65) = 1).  Turn on LED of Dynamixel with ID ‘1’ and return the Status Packet.  Send Write Instruction Packet(ID = 5, LED(65) = 1).  Turn on LED on five Dynamixels. However, Status Packet of Dynamixel with ID ‘5’ will be returned.  Set the Secondary ID(12) of all five Dynamixels to ‘100’.  Send Write Instruction Packet(ID = 100, LED(65) = 0).  Turn off LED on five Dynamixels. However, as there is no Dynamixel with ID ‘100’, Status Packet is not returned.Protocol Version(13)Users can select Dynamixel protocol version (1.0 and 2.0).It is recommended to use an identical protocol version for multiple Dynamixels.            Value      Protocol Version      Compatible Dynamixels                  1      1.0      AX Series, DX Series, RX Series, EX Series, MX Series with Firmware below v39              2(default)      2.0      MX-28/64/106 with Firmware v39 or above, X Series, Pro Series      Note The protocol 2.0 is greatly enhanced from the protocol 1.0. Accessing some of the Control Table area might be denied if protocol 1.0 is selected. This manual complies with protocol 2.0. Please refer to the Protocol section of e-Manual for more details about the protocol.Homing Offset(20)Users can adjust the Home position by setting Home Offset(20). The Homing Offset value is added to the Present Position(132).Present Position(132) = Actual Position + Homing Offset(20).            Unit      Value Range      Description                  about 0.088°      -1,044,479 ~ 1,044,479(-255 ~ 255[rev])      4,096 resolution      Note In case of the Position Control Mode(Joint Mode) that rotates less than 360 degrees, any invalid Homing Offset(20) values will be ignored(valid range : -1,024 ~ 1,024).Moving Threshold(24)This value helps to determine whether the Dynamixel is in motion or not.When the absolute value of Present Velocity(128) is greater than the Moving Threshold(24), Moving(122) is set to ‘1’, otherwise it is cleared to ‘0’.                   Values      Description                  Unit      about 0.229 rpm      All velocity related Data uses the same unit              Range      0 ~ 1,023      -      Maximum Temperature Limit(31)This value limits operating temperature. When the Present Temperature(146) that indicates internal temperature of Dynamixel is greater than the Temperature Limit(31), the Over Heating Error Bit(0x04) and Hardware Error Bit(0x80) in the Hardware Error Status(70) will be set. If Overheating Error Bit(0x04) is configured in the Shutdown(63), Torque Enable(64) is cleared to ‘0’ and Torque will be disabled. For more details, please refer to the Shutdown(63) section.            Unit      Value Range      Description                  About 1°      0 ~ 100      0 ~ 100°      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage Limit(34, 32)It is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.PWM Limit(36)This value indicates maximum PWM output. Goal PWM(100) can’t be configured with any values exceeding PWM Limit(36). PWM Limit(36) is commonly used in all operating mode as an output limit, therefore decreasing PWM output will result in decreasing torque and velocity. For more details, please refer to the Gain section of each operating modes.            Values      Description                  0(0%) ~ 885(100%)      885 = 100[%] output      Current Limit (38)This value indicates maximum current(torque) output limit. Goal Current(102) can’t be configured with any values exceeding Current Limit(38). The Current Limit(38) is used in Torque Control Mode and Current-based Position Control Mode, therefore decreasing Current Limit(38) will result in decreasing torque of DYNAMIXEL. For more details, please refer to the Position PID Gain(80 ~ 84).            Unit      Value Range                  about  3.36[mA]      0 ~ 1,941      Note Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.Acceleration Limit(40)This value indicates maximum Profile Acceleration(108). Profile Acceleration(108) can’t be configured with any values exceeding Acceleration Limit(40). Profile Acceleration(108) is used in all operating mode except PWM Control Mode in order to generate a target trajectory. For more details, please refer to the Profile Velocity(112).            Unit      Value Range                  214.577 Rev/min2      0 ~ 32,767      Note Bit information of the Error field in the Status Packet is different from protocol 1.0 and protocol 2.0. This manual complies with protocol 2.0. Please refer to the Protocol section of e-Manual for more details about the protocol.Velocity Limit(44)This value indicates maximum velocity of Goal Velocity(104) and Profile Velocity(112). For more details, please refer to the Profile Velocity(112).            Unit      Value Range                  0.229rpm      0 ~ 1,023      Min/Max Position Limits(52, 48)These values limit maximum and minimum target positions for Position Control Mode(Joint Mode) within the range of 1 rotation(0 ~ 4,095). Therefore, Goal Position(116) should be configured within the position limit range. These values are not used in Extended Position Control Mode and Current-based Position Control Mode.            Unit      Value Range                  0.088°      0 ~ 4,095(1 rotation)      Note Max Position Limit(48) and Min Position Limit(52) are only used in Position Control Mode with a single turn.Shutdown(63)The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(63), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(64) is cleared to ‘0’ and the motor output becomes 0[%]. REBOOT is the only method to reset Torque Enable(64) to ‘1’(Torque ON) after the shutdown. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      Unused, Always ‘0’              Bit 6      -      Unused, Always ‘0’              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      -      Unused, Always ‘0’              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Torque Enable(64)Controls Torque ON/OFF. Writing ‘1’ to this address will turn on the Torque and all Data in the EEPROM area will be protected.            Value      Description                  0(Default)      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      Note Present Position(132) can be reset when Operating Mode(11) and Torque Enable(64) are updated. For more details, please refer to the Homing Offset(20) and Present Position(132).LED(65)Turn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Status Return Level(68)This value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Registered Instruction(69)            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Hardware Error Status(70)This value indicates hardware error status.The Dynamixel can protect itself by detecting dangerous situations that could occur during the operation. Each Bit is inclusively processed with the ‘OR’ logic, therefore, multiple options can be generated. For instance, when ‘0x05’ (binary : 00000101) is defined as Shutdown(63), Dynamixel can detect both Input Voltage Error(binary : 00000001) and Overheating Error(binary : 00000100). If those errors are detected, Torque Enable(64) is cleared to ‘0’ and the motor output becomes 0[%]. REBOOT is the only method to reset Torque Enable(64) to ‘1’(Torque ON) after the shutdown. The followings are detectable situations.            Bit      Item      Description                  Bit 7      -      Unused, Always ‘0’              Bit 6      -      Unused, Always ‘0’              Bit 5      Overload Error(default)      Detect persistent load that exceeds maximum output              Bit 4      Electrical Shock Error(default)      Detect electric shock on the circuit or insufficient power to operate the motor              Bit 3      Motor Encoder Error      Detect malfunction of the motor encoder              Bit 2      OverHeating Error(default)      Detect internal temperature exceeds the configured operating temperature              Bit 1      -      Unused, Always ‘0’              Bit 0      Input Voltage Error      Detect input voltage exceeds the configured operating voltage      Note If Shutdown occurs, use below method to reboot Dynamixels.  H/W REBOOT : Turn off the power and turn on again  S/W REBOOT : Transmit REBOOT Instruction (For more details, please refer to the Protocol section of e-Manual.)Velocity PI Gain(78, 76)These values indicate Gains of Velocity Control Mode. Gains of DYNAMIXEL’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and that of the Control Table is abbreviated to KVP(TBL).                   Controller Gain      Conversion Equations      Range      Description                  Velocity I Gain(76)      KVI      KVI = KVI(TBL) / 65536      0 ~ 16383      I Gain              Velocity P Gain(78)      KVP      KVP = KVP(TBL) / 128      0 ~ 16383      P Gain      Below figure is a block diagram describing the velocity controller in Velocity Control Mode. When the instruction transmitted from the user is received by DYNAMIXEL, it takes following steps until driving the horn.  An Instruction from the user is transmitted via DYNAMIXEL bus, then registered to Goal Velocity(104).  Goal Velocity(104) is converted to target velocity trajectory by Profile Acceleration(108).  The target velocity trajectory is stored at Velocity Trajectory(136).  PI controller calculates PWM output for the motor based on the target velocity trajectory.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of DYNAMIXEL is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).Note Ka stands for Anti-windup Gain and ‘β’ is a conversion coefficient of position and velocity that cannot be modified by users. For more details about the PID controller, please refer to the PID Controller at wikipedia.Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)These Gains are used in Position Control Mode and Extended Position Control Mode. Gains of Dynamixel’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Position P Gain of Dynamixel’s internal controller is abbreviated to KPP and that of the Control Table is abbreviated to KPP(TBL).                   Controller Gain      Conversion Equations      Range      Description                  Position D Gain(80)      KPD      KPD = KPD(TBL) / 16      0 ~ 16,383      D Gain              Position I Gain(82)      KPI      KPI = KPI(TBL) / 65,536      0 ~ 16,383      I Gain              Position P Gain(84)      KPP      KPP = KPP(TBL) / 128      0 ~ 16,383      P Gain              Feedforward 2nd Gain(88)      KFF2nd      KFF2nd(TBL) / 4      0 ~ 16,383      Feedforward Acceleration Gain              Feedforward 1st Gain(90)      KFF1st      KFF1st(TBL) / 4      0 ~ 16,383      Feedforward Velocity Gain      Below figure is a block diagram describing the position controller in Position Control Mode and Extended Position Control Mode. When the instruction from the user is received by Dynamixel, it takes following steps until driving the horn.  An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).  Goal Position(116) is converted to target position trajectory and target velocity trajectory by Profile Velocity(112) and Profile Acceleration(108).  The target position trajectory and target velocity trajectory is stored at Position Trajectory(140) and Velocity Trajectory(136) respectively.  Feedforward and PID controller calculate PWM output for the motor based on target trajectories.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of Dynamixel is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).Note In case of PWM Control Mode, both PID controller and Feedforward controller are deactivated while Goal PWM(100) value is directly controlling the motor through an Inverter. In this manner, users can directly control the supplying voltage to the motor.Note Ka is an Anti-windup Gain that cannot be modified by users. For more details about the PID controller and Feedforward controller, please refer to the PID Controller and Feed Forward.Below figure is a block diagram describing the current-based position controller in Current-based Position Control Mode. As Current-based Position Control Mode is quite similar to Position Control Mode, differences will be focused in the following steps. The differences are highlighted with a green marker in the block diagram as well.  Feedforward and PID controller calculates target current based on target trajectory.  Goal Current(102) decides the final target current by setting a limit on the calculated target current.  Current controller calculates PWM output for the motor based on the final target current.  Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.  The final PWM value is applied to the motor through an Inverter, and the horn of DYNAMIXEL is driven.  Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Current(126).BUS Watchdog(98)Bus Watchdog (98) is a safety device (Fail-safe) that stops the DYNAMIXEL if the communication between the controller and DYNAMIXEL communication (RS485, TTL) is disconnected due to an unspecified error.Communication is defined as all the Instruction Packet in the DYNAMIXEL Protocol.                   Values      Description                  Unit      20[ms]      -              Range      0      Deactivate Bus Watchdog Function, Clear Bus Watchdog Error              Range      1 ~ 127      Activate Bus Watchdog              Range      -1      Bus Watchdog Error Status      The Bus Watchdog function monitors the communication interval (time) between the controller and DYNAMIXEL when Torque Enable (64) is ‘1’.If the measured communication interval (time) is larger than Bus Watchdog (98), the DYNAMIXEL will stop. Bus Watchdog (98) will be changed to ‘-1’ (Bus Watchdog Error).If the Bus Watchdog Error screen appears, the Goal Value (Goal PWM(100), Goal Current(102), Goal Velocity(104), Goal Position(116)) will be changed to read-only-access.Therefore, when a new value is written to the Goal Value, a Range Error will be returned via the Status packet.If the value of Bus Watchdog (98) is changed to ‘0’, Bus Watchdog Error will be cleared.Note For details of Range Error, please refer to the protocol of the e-Manual.The following are examples of the operation of the Bus Watchdog function.  After setting the operating mode (11) to speed control mode, change the Torque Enable (64) to ‘1’.  If ‘50’ is written in the Goal Velocity (104), the DYNAMIXEL will rotate in CCW direction.  Change the value of Bus Watchdog (98) to ‘100’ (2,000 [ms]). (Activate Bus Watchdog Function)  If no instruction packet is received for 2,000 [ms], the DYNAMIXEL will stop. When it stops, the Profile Acceleration (108) and Profile Velocity (112) are applied as ‘0’.  The value of Bus Watchdog (98) changes to ‘-1’ (Bus Watchdog Error). At this time, the access to the Goal Value will be changed to read-only.  If ‘150’ is written to the Goal Velocity (104), Range Error will be returned via Status Packet.  If the value of Bus Watchdog (98) is changed to ‘0’, Bus Watchdog Error will be cleared.  If “150” is written in the Goal Velocity (104), the DYNAMIXEL will rotate in CCW direction.Goal PWM(100)In case of PWM Control Mode, both PID controller and Feedforward controller are deactivated while Goal PWM(100) value is directly controlling the motor through an Inverter. In other control modes, this value is used to limit PWM value. This value cannot exceed PWM Limit(36). Please refer to the Gain section in order to see how Goal PWM(100) affects to different control modes.            Range      Description                  -PWM Limit(36) ~ PWM Limit(36)      Initial Value of PWM Limit(36) : ‘885’      Goal Current (102)In case of Torque Control Mode, Goal Current(102) can be used to set a target current. This value sets a limit to current in Current-based Position Control mode. This value cannot exceed Current Limit(38).            Unit      Value Range                  about  3.36[mA]      -Current Limit(38) ~ Current Limit(38)      Note Applying high current to the motor for long period of time might damage the motor.Goal Velocity(104)In case of Velocity Control Mode, Goal Velocity(104) can be used to set a target velocity. This value cannot exceed Velocity Limit(44). For now, Goal Velocity(104) is used for target velocity, but this value is not used to limit the velocity.            Unit      Value Range                  0.229 rpm      -Velocity Limit(44) ~ Velocity Limit(44)      Note The maximum velocity and maximum torque of DYNAMIXEL is affected by supplying voltage. Therefore, if supplying voltage changes, so does the maximum velocity. This manual complies with recommended supply voltage(12[V]).Note If Profile Acceleration(108) and Goal Velocity(104) are modified simultaneously, modified Profile Acceleration(108) will be used to process Goal Velocity(104).Profile Acceleration(108)The acceleration of Profile can be set with this value. Profile Acceleration(108) can be used in all control modes except Torque Control Mode. Profile Acceleration(108) cannot exceed Acceleration Limit(40). For more details, please refer to the Profile Velocity(112).            Unit      Value Range      Description                  214.577 Rev/min2      0 ~ Acceleration Limit(40)      ‘0’ stands for an infinite acceleration      Profile Velocity(112)The Maximum velocity of Profile can be set with this value. Profile Velocity(112) can be used in all control modes except Torque Control Mode and Velocity Control Mode. Profile Velocity(112) cannot exceed Velocity Limit(44). Velocity Control Mode only uses Profile Acceleration(108) instead of Profile Velocity(112).            Unit      Value Range      Description                  0.229 rpm      0 ~ Velocity Limit(44)      ‘0’ stands for an infinite velocity      The Profile is an acceleration/deceleration control method to reduce vibration, noise and load of the motor by controlling dramatically changing velocity and acceleration. It is also called Velocity Profile as it controls acceleration and deceleration based on velocity. DYNAMIXEL provides 4 different types of Profile. The following explains 4 Profiles and how to select them. Profiles are usually selected by a combination of Profile Velocity(112) and Profile Acceleration(108). Triangular and Trapezoidal Profiles exceptionally consider total travel distance(ΔPos, the distance difference between target position and current position) as an additional factor. For convenience, Profile Velocity(112) is abbreviated to VPRFL and Profile Acceleration(108) is abbreviated to VPRFL. ‘X’ stands for “Don’t Care” case.When given Goal Position(116), Dynamixel’s profile creates target velocity trajectory based on current velocity(initial velocity of the Profile). When Dynamixel receives updated target position from a new Goal Position(116) while it is moving toward the previous Goal Position(116), velocity smoothly varies for the new target velocity trajectory. Maintaining velocity continuity while updating target velocity trajectory is called Velocity Override. For a simple calculation, let’s assume that the initial velocity of the Profile is ‘0’. The following explains how Profile processes Goal Position(116) instruction in Position Control mode, Extended Position Control Mode, Current-based Position Control Mode.  An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).  Acceleration time(t1) is calculated from Profile Velocity(112) and Profile Acceleration(108).  Types of Profile is decided based on Profile Velocity(112), Profile Acceleration(108) and total travel distance(ΔPos, the distance difference between target position and current position).  Selected Profile type is stored at Moving Status(123).(Refer to the Moving Status(123))  Dynamixel is driven by the calculated target trajectory from Profile.  Target velocity trajectory and target position trajectory from Profile are stored at Velocity Trajectory(136) and Position Trajectory(140) respectively.  VPRFL_TRI of ③ and Travel time(t3) to reach Goal Position(116) is calculated as below.            Condition      Types of Profile                  VPRFL(112) = 0      Profile not used(Step Instruction)              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) = 0)      Rectangular Profile              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) ≠ 0) &amp;amp; (VPRFL_TRI ≤ VPRFL(112))      Triangular Profile              (VPRFL(112) ≠ 0) &amp;amp; (APRF(108) ≠ 0) &amp;amp; (VPRFL_TRI ＞ VPRFL(112))      Trapezoidal Profile      Note Dynamixel supports Jerk control in order to minimize dramatic change of acceleration. Therefore, actual travel time by the target trajectory of Profile could be longer than t3(t4 of above figure).  Note Velocity Control Mode only uses Profile Acceleration(108). Step and Trapezoidal Profiles are supported. Velocity Override and Jerk control are supported as well. Acceleration time(t1) can be calculated as below equation.Goal Velocity(104) / Profile Acceleration(108) * t1 = 64Goal Position(116)Target position can be set with Goal Position(116). From the front view of Dynamixels, CCW is an increasing direction whereas CW is a decreasing direction. The way to reaching Goal Position(116) is differ by 4 Profiles provided by Dynamixels. Please refer to the Profile Velocity(112) for more details.            Mode      Values      Description                  Position Control Mode      Min Position Limit(52) ~ Max Position Limit(48)      Initial Value : 0 ~ 4,095              Extended Position Control Mode      -1,048,575 ~ 1,048,575      -256[rev] ~ 256[rev]              Current-based Position Control Mode      -1,048,575 ~ 1,048,575      -256[rev] ~ 256[rev]                  Degree Conversion Constant      Description                  0.088°/Value      1[rev] : 0 ~ 4,095      Note If Profile Acceleration(108), Profile Velocity(112) and Goal Position(116) are modified simultaneously, Goal Position(116) is processed based on updated Profile Acceleration(108) and Profile Velocity(112).Realtime Tick(120)This value indicates Dynamixel’s time.            Unit      Value Range      Description                  1 ms      0 ~ 32,767      The value resets to ‘0’ when it exceeds 32,767      Moving(122)This value indicates whether Dynamixel is in motion or not. If absolute value of Present Velocity(128) is greater than Moving Threshold(24), Moving(122) is set to ‘1’. Otherwise, it will be cleared to ‘0’. However, this value will always be set to ‘1’ regardless of Present Velocity(128) while Profile is in progress with Goal Position(116) instruction.            Value      Description                  0      Movement is not detected              1      Movement is detected, or Profile is in progress(Goal Position(116) instruction is being processed)      Moving Status(123)This value provides additional information about the movement. Following Error Bit(0x08) and In-Position Bit(0x01) only work with Position Control Mode, Extended Position Control Mode, Current-based Position Control Mode.                          Details      Description                  Bit 7      0x80      -      Unused              Bit 6      0x40      -      Unused              Bit 5~Bit 4      0x30      Profile Type(0x30)Profile Type(0x20)Profile Type(0x10)Profile Type(0x00)      Trapezoidal Velocity ProfileTriangular Velocity ProfileRectangular Velocity ProfileProfile is not used              Bit 3      0x08      Following Error      Dynamixel fails to reach target position trajectory              Bit 2      0x04      -      Unused              Bit 1      0x02      Profile Ongoing      Profile is in progress with Goal Position(116) instruction              Bit 0      0x01      In-Position      Dynamixel is reached to target position      Present PWM(124)This value indicates present PWM. For more details, please refer to the Goal PWM(100).Present Load(126)This value indicates current Current. For more details, please refer to the Goal Current(102).Present Velocity(128)This value indicates present Velocity. For more details, please refer to the Goal Velocity(104).Present Position(132)This value indicates present Position. For more details, please refer to the Goal Position(116).  Note Present Position(132) represents 4 byte continuous range(-2,147,483,648 ~ 2,147,483,647) when Torque is turned off regardless of Operating Mode(11). However, Present Position(132) will be reset in those cases:  Present Position(132) is reset with the value within 1 rev (0 ~ 4,095) when Operating Mode(11) is changed to Position Control Mode.  Present Position(132) is reset with the value within 1 rev (0 ~ 4,095) when Torque is turned on in Position Control Mode.Reset Present Position(132) value can be affected by Homing Offset(20).Velocity Trajectory(136)This is a target velocity trajectory created by Profile. Operating method can be changed based on control mode. For more details, please refer to the Profile Velocity(112).  Velocity Control Mode : When Profile reaches to the endpoint, Velocity Trajectory(136) becomes equal to Goal Velocity(104).  Position Control Mode, Extended Position Control Mode, Current-based Position Control Mode : Velocity Trajectory is used to create Position Trajectory(140). When Profile reaches to an endpoint, Velocity Trajectory(136) is cleared to ‘0’.Position Trajectory(140)This is a target position trajectory created by Profile. This value is only used in Position Control Mode, Extended Position Control Mode and Current-based Position Control Mode. For more details, please refer to the Profile Velocity(112).Present Input Voltage(144)This value indicates present voltage that is being supplied. For more details, please refer to the Max/Min Voltage Limit(32, 34).Present Temperature(146)This value indicates internal temperature of Dynamixel. For more details, please refer to the Temperature Limit(31).Indirect Address, Indirect DataIndirect Address and Indirect Data are useful when accessing two remote addresses in the Control Table as sequential addresses. Sequential addresses increase Instruction Packet efficiency. Addresses that can be defined as Indirect Address is limited to RAM area(Address 64 ~ 661).If specific address is allocated to Indirect Address, Indirect Address inherits features and properties of the Data from the specific Address. Property includes Size(Byte length), value range, and Access property(Read Only, Read/Write). For instance, allocating 65(Address of LED) to Indirect Address 1(168), Indirect Data 1(224) can perform exactly same as LED(65).Example 1 Allocating Size 1 byte LED(65) to Indirect Data 1(224).  Indirect Address 1(168) : change the value to ‘65’ which is the address of LED.  Set Indirect Data 1(224) to ‘1’ : LED(65) also becomes ‘1’ and LED is turned on.  Set Indirect Data 1(224) to ‘0’ : LED(65) also becomes ‘0’ and LED is turned off.Example 2 Allocating Size 4 byte Goal Position(116) to Indirect Data 2(225), 4 sequential bytes have to be allocated.  Indirect Address 2(170) : change the value to ‘116’ which is the first address of Goal Position.  Indirect Address 3(172) : change the value to ‘117’ which is the second address of Goal Position.  Indirect Address 4(174) : change the value to ‘118’ which is the third address of Goal Position.  Indirect Address 5(176) : change the value to ‘119’ which is the fourth address of Goal Position.  Set 4 byte value ‘1,024’ to Indirect Data 2 : Goal Position(116) also becomes ‘1024’ and Dynamixel moves.            Indirect Address Range      Description                  64 ~ 661      EEPROM address can’t be assigned to Indirect Address      Note In order to allocate Data in the Control Table longer than 2[byte] to Indirect Address, all address must be allocated to Indirect Address like the above Example 2.Note Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.How to AssembleOptional Frames      FR05-B101        FR05-F101 and FR05-X101        FR05-H101        FR05-S101  Horns      HN05-I102        HN05-N101  Combination StructuresMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideVideosQuick StartDrawingsDownload MX-64TDownload MX-64R",
        "url": " http://localhost:4000/emanual/docs/en/dxl/mx/mx-64-2/"
      } ,
  
      "docs-en-dxl-mx-mx-64":  {
        "title": "MX-64",
      "content"	 : "Note Compliance has been replaced with PID Gains.Note Although the MX-64AT (TTL) and MX-64AR (RS-485) differ in communications protocols both have the same features and perform equally. (TTL uses 3-pin connectors while RS-485 uses 4)Note In order to use Protocol 2.0, please update the firmware to V39 or above. (Update firmware using R+ Manager 2.0)Warning For MX-64(2.0) Protocol, please refer to the MX-64(2.0) Control Table as they are different.Specifications            Item      Specifications                  MCU      ST CORTEX-M3 ( STM32F103C8 @ 72MHZ,32BIT)              Position Sensor      Contactless absolute encoder (12BIT,360 DEGREE)Maker : ams (www.ams.com), Part No : AS5045              Motor      Maxon              Baud Rate      8000 bps ~ 4.5 Mbps              Control Algorithm      PID Control              Resolution      0.088°              Running Degree      0° ~ 360°Endless Turn              Weight      135g              Dimensions (W x H x D)      40.2mm x 61.1mm x 41mm              Gear Ratio      200 : 1              Stall Torque      5.5Nm @ 11.1V, 3.9A6.0Nm @ 12V, 4.1A7.3Nm @ 14.8V, 5.2A              No Load Speed      58rpm @ 11.1V63rpm @ 12V78rpm @ 14.8V              Operating Temperature      -5°C ~ +80°C              Input Voltage      10 ~ 14.8V (Recommended : 12V)              Standby Current      100mA              Command Signal      Digital Packet              Protocol Type      MX-64T/MX-64AT: Half Duplex Asynchronous Serial CommunicationMX-64R/MX-64AR: RS485 Asynchronous Serial Communication(8bit,1stop, No Parity)              Physical Connection      MX-64T/MX-64AT: TTL Level Multidrop BUSMX-64R/MX-64AR: RS485 Multidrop BUS              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal GearMX-64AR/MX-64AT: Metal(Front), Engineering Plastic(Middle, Back)MX-64R/MX-64T: Engineering Plastic(Front, Middle, Back)      Performance GraphStall torque Peak stall torque read from transient statePerformance Graph(N-T Curve) A graph shows torque measured in stable condition while increasing load. Normally, stall torque is bigger than maximum torque on performance graph.Caution When connecting to power supply:  For the stable power supply, we recommend using ROBOTIS controller or SMPS2Dynamixel.  Connect your DYNAMIXEL to power supply while it’s off and turn on/off with the power switch.Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      310              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      4095              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      240              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36              20      2      Multi Turn Offset      Adjust Position with Offset      RW      0              22      1      Resolution Divider      Divider for Position Resolution      RW      1      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      D Gain      Derivative Gain      RW      0              27      1      I Gain      Integral Gain      RW      0              28      1      P Gain      Proportional Gain      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed(Moving Velocity)      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      0              68      2      Current      Consuming Current      RW      0              70      1      Torque Ctrl Mode Enable      Torque Control Mode On/Off      RW      0              71      2      Goal Torque      Goal Torque      RW      0              73      1      Goal Acceleration      Goal Acceleration      RW      0      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.For BPS over 250 values :            Value      Baud Rate      Margin of Error                  250      2,250,000      0.000%              251      2,500,000      0.000%              252      3,000,000      0.000%      Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following three modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0              Multi-turn Mode      both are 4095      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles. Multi-turn mode allows joint mode control over multiple rotations (Position range : -28,672 ~ 28,672)The Maximum Temperature Limit            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Multi-turn OffsetAdjusts offset position. This offset value is added to the Present Position(36).Initial value is 0 and the range is from -24,576 to 24,576.Dynamixel with a Present position of 2,048 with an offset of 1,024 will return an adjusted Present position of 3,072.Note This offset feature is only available in multi-turn mode.Resolution DividerIt allows the user to change Dynamixel’s resolution.The default Resolution Divider Value is set as 1. (1 ~ 4 available)When resolution is lowered, revolutions (in both directions) can be increased (up to 28 turns in each direction).Present Position = Real Position / Resolution DividerFor example, a Real Position of 2048 with a Resolution Divider set as 2 will yield a Present Position value of 1024 (2048/2 = 1024). A Dynamixel with Resolution Divider set as 2 will have a resolution 2048 for a single revolution.The Present Position can be obtained while Multi-turn Offset and Resolution Divider are taken into account.Present position = (Real Position / Resolution Divider) + Multi-turn OffsetFor example, a Dynamixel with a Real Position of 2048 with a Resolution Divider set as 4 and Multi-turn Offset as 1024 will yield a Present Position of 1535 ((2048/4) + 1024 = 1535).Note: This feature is only applied in multi-turn mode and will be ignored in other modes.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      PID GainsMX series will use the PID controller as a main control method.P gain : value of proportional band.I gain : value of integral action.D Gain : value of derivative action.Gains values are in between 0~254.Kp = P Gain / 8Ki = I Gain * 1,000 / 2,048Kd = D Gain * 4 / 1,000The relationship between Compliance Slop and PID            Slope      P Gain                  8      128              16      64              32      32              64      16              128      8      The less the P gain, The larger the back lash, and the weaker the amount of output near goal position.At some extent, it is like a combined concept of margine and slope.It does not exactly match the previous concept of compliance. So it is obvious if you see the difference in terms of motion.Explanation for PID required.For the brief explanation about general PID, please refer to the website(link) below.http://en.wikipedia.org/wiki/PID_controllerFYI, PID control theory is not only limited to the control of motor(actuator) but is a generic theory that can be applied to all kinds of control.Goal PositionIt is a position value of destination.0 to 4,095 (0xFFF) is available.  The unit is 0.088°.If Goal Position is out of the range, Angle Limit Error Bit (Bit1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelIn multi-turn mode Dynamixel has a range from -28,672 to 28,672 (can turn up to 7 revolutions in either CW or CCW direction).When resolution divider is set to a different value revolutions can increase.Note If it is set to Wheel Mode, Goal Position value is not used.Moving Speed      Join Mode, Multi-Turn modeIt is a moving speed to Goal Position.0~1023 (0X3FF) can be used, and the unit is about 0.114rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 116.62rpm.For example, if it is set to 300, it is about 34.2 rpm.However, the rpm will not exceed the No Load Speed.        Wheel ModeIt is a moving speed to Goal direction.0~2047 (0X7FF) can be used, and the unit is about 0.114rpm.If a value in the range of 0~1023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1024~2047 is used, it is stopped by setting to 1024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.    Note Wheel mode allows to check max rpm. Any values higher than max rpm will not take effect.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~4095 (0xFFF), and the unit is 0.088 degree.The picture above is the front view of Dynamixel.In multi-turn mode, the range is from -28672 to 28672 with unit values dependent on Resolution Divider (0.088 * Resolution Divider)Note In multi-turn mode, Present position depends on resolution divider and multi-turn offset For more information turn to the section on Multi Turn offset and Resolution Divider.Present SpeedIs the current moving speed.0 ~ 2,047 (0x000 ~ 0x7FF) can be used.If a value is in the rage of 0 ~ 1,023 then the motor rotates to the CCW direction.If a value is in the rage of 1,024 ~ 2,047 then the motor rotates to the CW direction.The 10th bit becomes the direction bit to control the direction; 0 and 1,024 are equal.The value unit is about 0.11rpm.For example, if it is set to 300 then the motor is moving to the CCW direction at a rate of about 34.33rpm.Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.CurrentAt an idle state without current flow, this value is 2,048(0x800).When positive current flows, this value becomes larger than 2,048(0x800) while negative current flow returns a value smaller than 2,048(0x800).The following is current flow calculation formula.I = ( 4.5mA ) * (CURRENT – 2048 ) in amps unit (A).For example, 68 gives a value of 2148, which corresponds to 450mA of current flow.Torque Control Mode Enable            Value      Meaning                  0      Turn off the torque mode. Executes Joint mode or Wheel mode              1      Turn on the torque mode. Cannot control the position or moving speed but only Torque      When Torque Control Mode Enable is 1, DYNAMIXEL behaves like the followings  DYNAMIXEL does not control position or velocity.  DYNAMIXEL is controlled by the Goal Torque value.  DYNAMIXEL does not affected by the Goal position and Goal speed values.  Since position/moving speed is not controlled, DYNAMIXEL behaves as if it is in the wheel mode.Goal TorqueYou can use 0 ~ 2,047 (0x7FF) and the unit is 4.5mA (Torque is directly proportional to the current value).If you use a value between 0 ~ 1,023, torque is applied to the CCW direction, and setting it to 0 will stops.If you use a value between 1,024 ~ 2,047, torque is applied to the CW direction, and setting it to 1,024 will stops.That means, 10th bit becomes the CW/CCW direction bit, which controls rotational direction.Goal Torque cannot be bigger than Torque Limit(34,35).Goal AccelerationThis is Goal Acceleration value.It can be used from 0~254(0XFE) and the unit is approximately 8.583° / sec2.When it is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When the goal speead is set to 0, there is no control over acceleration and moves with the maximum acceleration of the motor.When it is set to 254, it becomes 2,180° / sec2.For example, the current speed of Dynamixel is 0, and Goal acceleration is 10.The speed of Dynamixel after 1 second will be 14.3 RPM.How to AssembleOptional Frames      FR05-B101        FR05-F101 and FR05-X101        FR05-H101        FR05-S101  Horns      HN05-I102        HN05-N101  Combination StructuresMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideVideosQuick StartDrawingsDownload MX-64TDownload MX-64R",
        "url": " http://localhost:4000/emanual/docs/en/dxl/mx/mx-64/"
      } ,
  
      "docs-en-edu-bioloid-premium":  {
        "title": "BIOLOID Premium",
      "content"	 : "Introduction  Excellent walking humanoid (Self-Adjusts posture while walking)  Various sensors including Gyro, Distance, and IR  Remote control capability (IR-default, Bluetooth-optional)  C-style programming &amp;amp; motion teaching with RoboPlus S/W (USB interface included)  Semi-transparent humanoid skin for customization  Digital packet communication with daisy chain topology  Build various robots through versatile expansion mechanismGetting StartedPart List  CM-530  AX-12A  DMS Sensor  IR Sensor  Gyro Sensor  USB2DynamixelOperatingDownloading the Program  Program for type A is installed by default in CM-530.  You can find task codes and motion files for other actions on the Default Program page.Turning the Robot on  Turn the power switch on and the LED will start blinking.  Use the MODE button to move the LED to “PLAY”. (The LED will move each time you press the MODE button)  Press the START button. (Check whether the LED on “PLAY” is blinking)          If the LED does not turn on, check the power cable/connection.      If there are no problems with cable, recharge your battery. (Please refer to Charging for more information)      The power does not turn on.  Is the battery properly connected?  Is the battery fully charged?  Is the battery fuse intact?          Please refer Fuse Replacement for information on how to replace the fuse.      I want to check how much battery I have left.Turn the CM-530 on and press the U button. The LED will turn on to show how much battery you have left as seen in the figure below.The robot makes a continuous warning sound while moving.  The alarm indicates that the robot is low on batteries.  Immediately recharge your battery(Refer to Charge).  If you do not replace the battery right away, the robot may turn off without warning and fall, which can cause severe damage.Checking the robot’s basic posture (To check whether the robot has been assembled correctly)  The robot should stand in the basic stance and play a melody according to its type as in the picture below.  Make sure to hold the robot in its basic posture for 1 minute.          This is to allow the robot to automatically configure its gyro sensors so that it can walk properly.        Check the angles of the arms and legs. If they are different from the picture, go back to “Check Assembly Mode”  Check whether the cables have been assembled on the outer part of the leg.If the robot has been incorrectly assembled to an extent where it may be severely damaged, a warning sound will be activated. Also, the LED of the motor with the problem will turn on and release its torque to prevent damage.The robot’s basic posture and movements are awkward.  Awkward Basic Posture?          Go back to “Check Assembly Mode” and re-check whether all the dynamixels have been properly assembled.        Unable to detect obstacles while in Free Walk Mode?          Check whether the absolute distance measurement sensor’s cables are properly in place.      The robot falls down easily while walking or is otherwise unstable.  The gyro sensor used to detect the robot’s posture is not working          Please refer to the Assembly Manual to check whether the gyro sensor has been properly assembled.      The torque is released and the dynamixel’s LED turns on after a warning sound.  If the motor and frames have not been properly assembled or if the robot’s joints can not move properly, a warning sound will be activated to prevent damage.          Find the motor indicated by the LED and refer to the Assembly Manual to check whether it has been assembled correctly.              Make sure that the joints are free of cables or other debris.  Please refer to “Check Assembly Mode”      The robot type and melody do not match.  Check whether the motors with ID 7 ~ 10 are assembled properly. Check for loose connections            Robot Type      “Do”      “Do Re”      “Do Re Mi”      Repeat “Do Re Mi”                  TYPE A      O(Correctly Assembled)      Check cables for ID 9~10      Check cables for ID 7~8      Some of the cables have not been connected properly. Please refer to the Assembly Manual and check again.              TYPE B      -      O(Correctly Assembled)      ID 9 and10 connected where ID 7 and 8 should be connected      Some of the cables have not been connected properly. Please refer to the Assembly Manual and check again.              TYPE C      -      ID 7 and 8 connected where  ID 9 and 10 should be connected      O(Correctly Assembled)      Some of the cables have not been connected properly. Please refer to the Assembly Manual and check again.      Robot in Action  R : Remote Control Mode  D : Demo Mode  L : Autonomous Walking Mode  U : Check Assembly ModeNote If you press a button on RC-100 before choosing a mode, the robot will enter remote control mode.Remote Control ModeThe RC-100 is used to control the robot.  Press the POWER/MODE button for 2 seconds.  Press the buttons below to control the robot.          Walking : U / L / D / R      Change Posture : 1 + U / L / D / R      Demonstration Moves : 2 + U / L / D / R      Soccer Moves : 3 + U / L / D / R      Battle Moves : 4 + U / L / D / R      Walking Motions            Buttons      Motion                  U      Forward              D      Backward              L      Turn Left              R      Turn Right              U + L      Walk Forward + Left              D + L      Walk Left Sideways              U + R      Walk Forward + Right              D + R      Walk Right Sideways      Change Postures            Buttons      Motion                  1 + U      Getting up Backward (When lying on stomach)              1 + D      Getting up Forward (When lying on back)              1 + L      Push-up              1 + R      Handstand              2 + U      Pound Chest              2 + D      Scratch Head              2 + L      Cheer              2 + R      Bow      Soccer Motions            Buttons      Motion                  3 + U      Block Right (Release button to return to normal position)              3 + D      Block Left (Release button to return to normal position)              3 + L      Shoot with left foot              3 + R      Shoot with right foot      Battle Motions            Buttons      Motion                  4 + U      Attack              4 + D      Defend (Release button to return to normal position)              4 + L      Attack Left              4 + R      Attack Right      Setting the CM-510 IR ChannelsAfter mounting the IR receiver on CM-530 under control mode, you can set the channels to control it remotely by pressing the Aux button. If you change the channel of the controller, you must also change the channel of RC-100. On how to change the channel of RC-100, please refer to Changing RC-100’s Channel.            Buttons      Motion                  Start + U      Set the RC-100 channel as 1              Start + D      Set the RC-100 channel as 3              Start + L      Set the RC-100 channel as 2              Start + R      Set the RC-100 channel as 4        If the robot does not receive commends for a period of time, it will standby in a seated position.                                          When being controlled             Seated in a standby position      My remote controller does not work properly.  Set to control mode.  Check whether the IR receiver has been properly connected.  Check whether the remote controller is on. Replace the battery and try again.Point towards the IR receiver and try again.Check if there are others controlling robots nearby, which may cause wireless interferences.We want to play soccer or battle with several robots.  In order to play a game with several users, you must install the ZIG-110 set.  ZIG-110 set is available at the Robotis shopping mall.  Please refer to Controller and RC-100 for installation information.Demo ModeThe robot will clap depending on how many times you clap.When DMS senor detects an object, the robot greets the user.If the robot does not sense any sound or object for a while, it performs various motions on its own.                                          Claps depending on how many times you clap             Shows various movements      Autonomous Walking ModeThe robot will walk by itself while avoiding obstacles.  When absolute distance sensor detects an obstacle, the robot will stop and turn left until the obstacle is no longer detected.  If it falls down while walking, it will get back up in the direction it was moving.Check Assembly ModeYou may use the Check Assembly Mode to see whether your robot has been properly assembled. Isolate each motor and compare it to the standard posture.  Start the Check Assembly Mode. It will release the torque.  Press the U or D button and check one motor at a time. The selected motor’s LED will turn on and move to its basic position. ( U : Increases the ID by 1,  D : Decreases the ID by 1 )  Check the ID of the motor with the LED and compare it with the ID in the Assembly Manual.          If the ID does not exist in the robot, a warning sound will be activated.        Compare the position of the motors you have assembled to the basic posture.          If the LED is on but the torque is released, check the cables or the motor’s assembly status.      Battery ChargeYou may obtain Lithium polymer batteries from www.robotis-shop-en.com.If the robot alarm sounds off during operations then recharge the battery.During charging the charger’s red LED turns on. When complete the green LED turns on.  Take the battery out  Connect the charger  ChargeCharging(Red LED), Complete(Green LED)      You can connect the robot to an external power source through SMPS.            The battery is equipped with a connector to charge the battery and another to move the robot      Charging Time and Battery Life/OperatingCharging Time  When fully discharged : 1~1.5 hour  Leaving the battery fully discharged for too long may reduce its lifespan drastically.  Time to charge the battery depends on the status of the battery(If the charging time or battery life becomes too short, you may need to replace your battery).  Caution  Do NOT  keep the battery connected with a robot or a charger.  If you will not use the battery for a long time from now on, please keep it HALF-CHARGED.  Do NOT  put the battery with an environment with high temperature or humidity.VideoTutorialScreen OutputObjective for this tutorial is to print 1 and 2 on the output screen as below.Write Task Code  Execute RoboPlus Task Program.As seen in the picture below, go to Start &amp;gt; All Programs &amp;gt; ROBOTIS &amp;gt; RoboPlus &amp;gt; Software &amp;gt; RoboPlus Task to execute RoboPlus Task.  RoboPlus Task Initial Screen  Select a Controller.Double click an empty line or press Enter, In the Select Control window, select the controller to use, then press the OK button.  Generating Start Program.Select Start Program from the Select Instruction Type window, Start Program will be automatically generated in RoboPlus Task.  Input Endless Loop commandTo print the numbers on the screen endlessly, use the Endless Loop command(Create a command line).  Double click or press Enter on an empty line between { and } of Start Program to invoke the Select Instruction Type window. Select Loop &amp;gt; Endless Loop(while(1)) from the list.  Input Load commandUse Load command to input a Print command, which is needed to print numbers on the screen.  Insert Execute &amp;gt; Load (Assignment value) into an empty line between { and } of Endless Loop.  Load 1 into PrintChoose the left parameter ( ? ) among the Load parameters(Explanation on the parameter).  The left parameter receives input from the right parameter.  Double click the left parameter ( ? ), or press Enter key after clicking it once to invoke the Select Parameter Window.  Select Controller &amp;gt; Print then press OK.Select Constant Numbers &amp;gt; Number &amp;gt; 1 for the right parameter ( ? ) in the same way.When both parameters of the Load command have been set, it should look like below.  Load 2 into Print with LineSelect } under Print command (at the end of the endless loop section), and add new lines by pressing the Space key. Repeat Steps 5 and 6 to input the Load command and to input  Controller &amp;gt; Print with Line and 2. The final task code is shown below.  Save Task CodePress Ctrl + S or the Save icon.Download Task CodeDownload the task code created above.(How to Download Task Code)Execute Task Code  Open the Program Output MonitorTo see the output of the program, you must open the Program Output Monitor BEFORE executing the program.  There are three ways to open the Program Output Monitor.      Click on the View Print of Program in the Download Program window        Click on the View Print of Program button in TOOLS.  Press F5 or click on View Print of Program (V)  menu under Program (P).  Executing the ProgramWhen you turn on the controller, the LED will blink, showing it is in standby mode.  Press the MODE button to move it to PLAY, then press START to execute the downloaded task code.  You should see “1” and “2” being printed on the Program Output Monitor.Button &amp;amp; LEDObjective for this tutorial is to program the U button to turn the AUX LED on and the D button to turn it off. Pressing the START button will end the program.Write Task CodeDownload Task CodeDownload the task code created above.(How to Download Task Code)Execute Task CodeExecute the program and check whether the AUX LED turns on when you press the U button and turns off when you press the D button. Press START button to end.Walking MachineObjective for this tutorial is to learn how to use the Walking Machine.Waking Machine is a combination of a walking motion file made up of specific patterns and a task code that plays theh role of smoothly connecting the walking motions in this motion file.  Download Walking Motion File  Download Walking Task CodeLet’s use the Walking Machine to learn about how walking motions are converted smoothly.Motion File OverviewWalking Motion FileThe walking motion files used in the Walking Machine can be found on pages 31~224. Several motion pages are gathered and repeatedly played to make up one walking pattern (forward, backward, etc). Each page is made to be conveniently converted to the next walking pattern’s motion page.The walking patterns written in the Walking Motion FileThe walking motion files used in the Walking Machine contain 16 different walking patterns shown below.            Forward      Backward      Left Turn      Right Turn                                                      Walk Sideways + Left      Walk Sideways + Right      Turn Left + Forward      Turn Right + Forward                                                      Backward + Left      Backward + Right      Avoid Left      Avoid Right                                                      Forward + Left Diagonally      Forward + Right Diagonally      Backward + Left Diagonally      Backward + Right Diagonally                                          Task Code OverviewThe walking machine task code includes a InitializationWalk Function and a WalkExecute function. There are samples that use these 2 functions to control the robot with a remote controller.InitializationWalk FunctionThe InitializationWalk function initializes the variables and brings the robot to its default position.WalkExecute FunctionThe WalkExecute function executes each walking pattern and smoothly joins the walking pattern.Walk Command No.            No.      Walking Pattern      No.      Walking Pattern      No.      Walking Pattern      No.      Walking Pattern                  1      Forward      2      Backward      3      Left Turn      4      Right Turn              5      Walk Sideways + Left      6      Walk Sideways + Right      7      Turn Left + Forward      8      Turn Right + Forward              9      Backward + Left      10      Backward + Right      11      Avoid Left      12      Avoid Right              13      Forward + Left Diagonally      14      Forward + Right Diagonally      15      Backward + Left Diagonally      16      Backward + Right Diagonally      Start ProgramLet’s try writing a simple “Start Program” sample using the “InitializationWalk” function and “WalkExecute” functions to smoothly connect walking patterns.  First, call the InitializationWalk function to initialize the variable and to bring the robot to its default position.  Select and input a walking pattern between 0 and 16 for the WalkCommand variable, then call the WalkExecute function to run the selected walking pattern.  When you input a different number in the WalkCommand variable and call the WalkExecute function, it will convert to the new walking pattern as naturally as possible.There are 16 different walking pattern sample codes to control via remote control in the walking machine’s task code file. Change the Start Program function in the sample codes to suit your needs.Gyro SensorPrerequisite : Walking MachineCode to control the gyro sensor will be added to the task code used in the Walking Machine section. Review the Walking Machine section before getting started.Objective for this tutorial is to learn how to adjust a humanoid’s posture using a gyro sensor.A Gyro sensor is used to determine angular velocity (angular variation per second). When the robot tilts and angular velocity increases in a specific direction, the servo motor’s value can be adjusted in the opposite direction to straighten the robot.Download TASK Code(BIO_PRM_GyroSensorExam_EN.tsk)Things to Prepare  The gyro sensor’s X-axis value should be connected to port #3, and Y-axis value should be connected to port #4.  Other than that, modify the task code to suit your robot.Concept      Callback Function    A humanoid with a gyro uses the Callback Function to determin the posture adjustment value.The callback function is a function that runs independently of the main program routine and is automatically executed at  fixed intervals. Therefore, by calculating the adjustment value  and using the value in a callback function to adjust the posture at regular intervals, the robot can adjust its posture automatically.        Joint Offset    The joint off set is added to the adjustment value from the gyro sensor before being used to adjust the humanoid’s posture. (More information on Joint Offset) This is a parameter that gives an offset to the specific actuator’s joint position value. Thus, the actuator with joint offset execute their motions using the position value + joint offset value, which are designated in the motion file.  Task Code Overview  InitializationGyro Call Function  Execute BalancePage to Apply Joint OffsetIn order to apply the joint offset a motion must be executed. When no motion is being played, the joint offset will not be applied even if a  value is input by the gyro sensor. The BalancePage is used to apply the joint when no motion is being executed.  InitializationGyro FunctionThe InitializeGyro function reads the gyro sensor value 10 times in a 0.128 second intervals and saves the average value as a gyro sensor standard value. (The standard value is Approximate 250 degrees.) If the gyro sensor value is less than 230 or greater than 270, it assumes there is no gyro sensor and does not use adjustment (when there is no gyro sensor or the robot has moved during initialization).  Calculating the adjustment value in the Callback FunctionAt regular intervals, the callback function reads the current gyro sensor value and compares it to the standard value to calculate the adjustment value. If the UseGyro variable is false, the robot it will not adjust itself. Thus, set the UseGyro variable to false where you do not wish to use the gyro adjustment.Apply the calculated adjustment value to the joint offset and adjust the robot’s posture.  To adjust the front/back tilt, you must use the joints in the knees and ankle, which are actuators 13-16.  To adjust the left/right tilt, you must use the joints in the ankle and waist, which are actuators 9-10 and 17-18.Adjustment Test  Download the task code to your robot(How to Download Task Code).  In order to initialize the gyro, you must leave your robot on flat ground for at least 1.5 seconds after executing the task code.  If the gyro sensor is not connected or if there is movement while initializing the gyro, the gyro will not make any  adjustments.  Check whether the robot attempts to adjust itself when its posture is changed by a strong outside force while standing straight.  Compare the robot’s actions when it uses and does not use a gyro while stanind on a slope.Custom Motions : CreatePrerequisite : Walking MachineMotions will be added to the motion file used in the “Walking Machine” section. Review the “Walking Machine” section before getting started.Objective for this tutorial is to add a new motion using RoboPlus Motion.Let’s learn how to add 4 motions below using the RoboPlus Motion program.            Motion Page No      Movement Description      Motion Page No      Movement Description                  14      Block ball on the right      27      Get up while lying on stomach              16      Block ball on the left      28      Get up while lying on back      Download Motion File(BIO_PRM_UserMotionExam_EN.mtn)Make a motion to block a ball on the right  Execute RoboPlus Motion, then connect it to the controller(Please refer to Connect Robot)  To add the “Block Ball” motion in page 14, input a name and step.  Turn off all motors, then set the robot’s pose.  The “Block ball on the right” pose is shown below.  Set the robot’s pose as above. When you press the “torque on” button, the robot’s current actuator values will automatically be saved. When you press the left arrow button, you can read the robot’s current input actuator values into Step’s Pose column.  You can adjust the pause and play durations. (Click here for more information on STEP STOP/PLAY)  Designating the NEXT page as itself(14) will cause the robot to enter an infinite loop and maintain its pose.  Also designate an EXIT page for the robot to smoothly transiton into when it exits the infinite loop.  Make a motion to return to the standard position on the page designated as the Exit page (15). Add the following 3 steps and poses to page 15.  Additional settings (Number of Repeats, Play Speed, etc)You can also set the number of repeats, entire speed, etc. for each page.Make a motion to block a ball on the leftRepeat STEP 1 to make a motion to block a ball on the left on pages 16 and 17.Make motions to get up when the robot lying on its back and chest.Add the following steps in motion page 27 and 28 to make a “Get up while lying on stomach” and “Get up while lying on back” motions.      Get up while lying on the stomach            Get up while lying on the back      SaveUse the Save(S) command to save your work in the robot or use Save As(A) to save as a .mtn file in your PC.Custom Motions : Task CodePrerequisite : Adjustment using the Gyro Sensor, Custom Motions: CreateCode to execute user-defined motions will be added to the task code used in  the Adjustment using the Gyro Sensor section.  The motion file is from the Custom Motions: Create section.  Review the two sections before getting started.Write task code to execute user-defined motions.Let’s learn how to run the motion added on “ User-defined Motions 1 : Create Motion “ with the RC-100.  Download Motion File(BIO_PRM_UserMotionExam_KR.mtn)  Download TASK Code(BIO_PRM_UserMotionExam_KR.tsk)Task Code OverviewCode to execute user-defined motions has been added to the task code written in “Adjusting using the Gyro Sensor.”  Set WalkCommand  as 0 to make the robot stop.  If the motion added by the user does not require the gyro sensor to maintain posture, you must turn off the gyro sensor adjustment to prevent motion variation due to the offset. Set the UseGyro variable as FALSE.  Then call the EXITPageWaitMotion function and wait for the robot to come to a complete stop.  The Getting Up motions added in motion pages 27 and 28 can be played just once. Thus, execute the motion, and wait for the motion to finish before executing another motion.  The Block Ball motions added in motion page 14 and 16 are endlessly repeating motions. Thus, in order to end the motion, an EXIT page is needed.  Using the WAIT WHILE command so that if the button is not pressed and held, the EXITPageWaitMotion function will execute the EXIT to end the motion(For more information, please refer to the Motion Page).  After the user’s motion ends, set the UseGyro variable back to TRUE to restore gyro adjustment.Gripper ControlPrerequisite : Custom Motions: Create, Custom Motions: Task CodetestReview the two sections before getting started.Objective for this tutorial is to learn how to control the grippers regardless of the motions.When you add a gripper to your robot, there is a need to keep the robot’s arm fixed regardless of the motion.In this case, it is not necessary to revise the motions to keep the arm still.  Instead, let’s learn to control the gripper using the task code, while preventing specific actuators from being controlled by the motion data.  Download Motion File(BIO_PRM_HumanoidTypeB_EN.mtn)  Download TASK Code(BIO_PRM_GripperExam_EN.tsk)Background KnowledgeSetting priorities to control the gripper and motions separately.      Normal Control Priorities    Normally, motion data has the highest priority and task code has the next highest priority. Thus, under normal circumstances, if a motion is executed, it is impossible to control specific dyanmixels using task code.        Changing Control Priorities    There are 2 methods to control the motor (entire arm including the gripper) with a task code while a motion is being executed.          Uncheck the “Using Now/Not Using” checkbox for the acutator’s ID in the motion data.      Set the actuator’s “Joint Offset” parameter to 1024.        The first method disables the actuator in the entire page.  Even If there is a motion requiring the corresponding actuator, there is no way to control it with the motion data. Therefore, the second method, which allows you to activate /deactivate the application of the motion data for the specific actuator depending on your needs, may be the better option.  AssemblyPlease refer to the Gripper AssemblyWriting Task Code  Initializing Gripper ControlSet the joint offsets of the actuatorsfor both arms to 1024, so that they are not controlled by the motion data.  Initialize the other data , such as  the arms’ and grippers’ movement speeds, and gripper’s grasping power and flexibility, then place the arms in their default position.  Revise Callback Function (Gyro Adjustment)If the joint offset is used in the callback function to apply the gyro adjustment value, the joint offset should not be set for the joints used by the grippers.  This is to prevent the values set as 1024 in STEP 1 from being changed.  Gripper/Arm Control FunctionCopy the following fuction to control the gripper and arm.  This function can control the gripper’s and arm’s movements, regardless of the motion status.Write a function for the left arm and gripper as above.  Controlling the arm and gripper with a remote controllerAdd code to control the gripper and arm using the remote controller. Reviewing [Custom Motions: Task Code] will help you understand the code below.[ STEP 4 ]Download and Verify ResultDownload the task code written in STEP 2. (How to download task code)While controlling the robot’s motion with the remote controller, check whether the gripper and arm are fixed.Control the gripper with the remote controller.ReferencesReplacing Fuse(CM-5)The fuse prevents the over power that flows in the CM-5 which can damage the circuit.If the CM-5 does not turn on with the battery but turns on when connected to the SMPS, replace your fuse.If the fuse is disconnected, followings will happen.  Can turn on the power of CM-5 with SMPS only.  The LED doesn’t blink even when you press the U button for charging.The fuse used for CM-5 is available at electric shops( Fuse Volume : 220V/5A )Dynamixel ManagementDynamixels used as robot actuators possess many functions. This section explains how to change the dynamixel’s settings.Changing the ID  Select the port the controller is connected to.  Click “Connect”.  A list of connected dynamixels is shown on the left. Click on the dynamixel you wish to change the ID of.  Click on the ID row in the Control Table.  Click on the ID List combo box to see a list of possible ID’s. Select the ID, then click Apply.  To use in RoboPlus Motion and RoboPlus Task, the ID must be within the following ranges.          The Dynamixel’s ID must be between 0 and 25.      The ID for AX-S1 should be set between 100 and 109.      Changing the Movement ModeThe dynamixel can operate in 2 different modes.  Wheel Mode : Rotates 360 degrees like a regular motor.  Joint Mode : Moves at a set angle with normal servo motors.The mode can be changed using RoboPlus Manager. Once the mode is set, it will be maintained, even when turned off.  Select the port the controller is connected to.  Click “Connect”.  A list of connected Dynamixels is shown on the left.  Click on the Dynamixel you wish to change the mode of. Then, click on the CW/CCW Angle Limit line in the Control Table.  To set to Wheel Mode, change the CW/CCW Angle Limit value to “0.”  Or, simply click on the “Wheel Mode” button.  To set to Joint Mode again, set the CW/CCW Angle Limit value to any number other than “0”.The initial values for Joint Mode are “0” for CW Angle Limit, and “1023” for CCW Angle Limit.TroubleshootingIf you cannot find the dynamixel you are looking for using RoboPlus Manager, try the following :  Connect just 1 Dynamixel and check if there are any duplicate IDs. If you see a Dynamixel on the left even though only 1 Dynamixel is connected, there is a high probability of a duplicate ID. Change the ID immediately.  If you are unable to find any Dynamixels as in the image below, click on “Dynamixel Search”. If the communication speed is not set to 1Mbps, the “Dynamixel Search” function automatically resets the controller’s communication speed to 1Mbps to enable it to be recognized.If the problem persists, your dynamixel may need repair. Please contact the service department of the company you purchased from.ZIGBee Wireless ControlZIGBeeZIG-100/110 uses ZIGBee for wireless communication. ZIGBee, like Bluetooth, is the communication technology commonly used in Personal Area Network (PAN). The communication quality of ZIGBee is better than that of IR, so it allows many users to control their robots without interferences.Caution Please note that not all products include a zigbee module and may need to be purchased separately.Controller &amp;amp; ZIGBeeOLLO and Bioloid both use the RC-100, which uses IR communication method. To upgrade to the Zigbee communication method, you must purchase the  ZIG-110 set separately. The ZIG-110 set includes one Zig-100 module, which is attached to the RC-100, and one Zig-110 module which is attached to the Controller.Note The modules in a single Zigbee set have been preconfigured to communicate with each other. Therefore, a module from one set may not work with a module from another set. Please be careful not to mix them up.            ZIG-100 installed in RC-100      ZIG-110 installed in CM-100                                          ZIG-110 installed in CM-510      ZIG-100 installed in CM-5                              Control Multiple RobotsThis method is to give out commands at once to several robots being used for dance or demonstrationGives out commands to the robot at once using the zigbee module’s broadcast modeBioloid(Entry/Advanced)      Communication with the Zig2Serial and carious robots            Communication with the RC-100 and carious robots        To use the CM-5, connect the controller and ZIG-100 module together.  Use the RoboPlus Manager to set the wireless ID of ZIG-100 module on the opposite party’s robot to 65535.  No need to set the broadcast channel for communication.  Use the RC-100 to give commands directly or use the Zig2Serial to give commands using the PC.            Device      Channel Default Value      Whether or not the channel can be changed                  CM-5      1      Unchangeable              Zig2Serial      1      Changeable              RC-100      1      Changeable      The channel for the ZIG-100 mounted on the CM-5 is unchangeable. Thus, all users must set their channel to #1 for broadcast communication. All channels for the devises must pair to communicate.Bioloid Premium Kit(CM-700)      Communication with the Zig2Serial and carious robots            Communication with the RC-100 and carious robots        When using the CM-510/CM-700, connect the ZIG-100 module with the controller.  Use the RoboPlus Manager to change the opposite party’s wireless ID to 65535.  The channel on the ZIG-110 connected to the controller it set to #4, so the channels on the Zig2Serial and RC-100 must be set to #4.  How to change the RC-100 channel  How to change the Zig2Serial channel            Device      Channel Default Value      Whether or not the channel can be changed                  CM-510CM530      4      Unchangeable              Zig2Serial      1      Changeable              RC-100      1      Changeable      The channel for the zigbee connected to the controller is not changeable. Thus, all users must set their channel to #4 for broadcast communicationAll channels for the devises must pair to communicate.",
        "url": " http://localhost:4000/emanual/docs/en/edu/bioloid/premium/"
      } ,
  
      "docs-en-software-rplus1-task-programming-01":  {
        "title": "R+ Task 1.0",
      "content"	 : "ProgrammingEditThese are the methods used for editing in RoboPlus Task.Select Multiple LinesRoboPlus Task provides a function to select and edit (cut, copy, delete, comment,etc) multiple lines of program code. There are multiple ways to select multiple lines.      While pressing the Ctrl key, click on the lines with the mouse.        Click on the first line, and while pressing the Shift key, click on the last. The lines between the two lines will be selected.      Click and drag on the lines you want to select.            To select all lines, right-click on the code, then click select “Select All”. You may also press Ctrl + A.      Insert New LineRoboPlus Task provides a function to insert a line between existing lines. There are multiple ways to insert new lines.(New lines will be inserted below the highlighted line.  Press the Space bar.      Right click, then select “Insert Line”’.      Delete LinesRoboPlus Task provides a function to delete lines.  One or more lines may be deleted at once. There are multiple ways to delete lines.      Select the line(s) to delete, right-click, and click “Clear Line”. The lines will be cleared, resulting in blank lines. You may also press the Backspace (←) key.            Select the line(s) to delete, right-click, and click “Delete Line”. The lines will be deleted, and the lines below the deleted lines will move up.  You may also press the Delete key.      Enable/Disable LinesRoboPlus Task provides a function to enable or disable lines. There are multiple ways to enable/disable lines.  Select the line to enable or disable, right-click, and click “Enable/Disable”.      Select the line to enable or disable, and press Ctrl + E        The function will enable disabled lines and disable enabled lines.  This function is commonly used to keep certain commands from being executed in certain situations, such as when testing code.Copy/Cut/PasteRoboPlus Task provides a function to cut, copy and paste lines.Copy  Select one or more lines, right-click, and click ‘Copy’.  The selected line will be copied to a temporary clipboard.  When you perform the ‘Copy’ function, the data in the clipboard will be replaced with the new selection.      The shortcut is Ctrl+C.      Cut  Select one or more lines, right-click, and click “Cut”.  The selected line will be deleted and stored in a temporary clipboard.  When you perform the “Cut” function, the data in the clipboard will be replaced with the new selection.      The shortcut is Ctrl+X.      Paste  You can use this function only when there is data in the clipboard.  Select the line where the data will be pasted, right-click, and click “Paste”.  The data in the clipboard will remain even after it has been pasted, so you can paste the same data many times.  If you perform the “Paste” function on a line with code, the code will be overwritten with data from the clipboard.      The shortcut is Ctrl+V.      Find NameRoboPlus Task provides a function to search for used elements.  From the “‘edit” menu, select the”‘Find Name” function. The shortcut is Ctrl+F.  Enter a keyword and click the “Find Next” button.CommandsStart Program“Start Program” designates the beginning of a program. Regardless of the line number, the program will always start at this point. “Start Program” is like the “main” function in the C language.Usage  “Start Program” is executed regardless of its line number.  A program cannot have more than one “Start Program” command.  The body of the command must be enclosed by brackets.  The program will end when the closing bracket( } ) is reached.ExampleStart a program with the “Start Program” command.End ProgramIf this command is called during program execution, the program exits immediately. There are 2 ways to end a programme.      When the end of “Start Program” is reached(Natural Exit).          When “End Program” is called(Forced Exit).    UsageCall the command at the point in the program where you want it to end.ExampleIn this sample code, the program will end when the touch connected to Port3 is pressed.Start/End of SectionA block or a section (identified by “{“ and “}”) is a group of commands. All commands in a block have the same scope. The concept of  a block is the same as in the C language.UsageEach block has an opening bracket ({) and a closing bracket (}). RoboPlus Task performs automatic indentation to show whether the brackets have been paired properly. If there are missing brackets, they must be added before the program can run indentation. If they were not arranged properly, you have to revise them by yourself.Each block must be “owned” by a command. Blocks cannot be used independently with commands. The followings are the most commonly used commands that are followed by a block.  Start Program  If / Else if / Else  Endless Loop  Loop For  Loop While  Callback Function  FunctionIf a command is made by one line, it is possible to skip the block brackets.ExampleThe “Start Program” and “Endless Loop” commands must be followed by blocks, as shown in the example below.Comments/NotesThis command is used to insert a comment or a note in the program code.  Comments are helpful when interpreting or reviewing the code later. They are mostly used to mark easily forgotten parts or to emphasize important information.  Comments and notes do not affect the program in any way.  Like in C, comments can be made with two slashes(//).  Comments blocks ( ‘/*’, ‘*/’ ) are not supported.Usage  Insert the commend where you would like to write a comment or note.  When “//” is added, double click or press Enter to write in the comment or note.  Pressing ESC while writing will erase what has been written and return the line to its previous state.  When finished, press Enter.ExampleThis code will print “10” on the screen.  The comment explains how  the command line below will be executed.Calculate“Calculate” is a command to perform an arithmetic operation on two numbers.“Calculate” can perform the following operations:  Basic Operations (supports negative numbers)          Addition(+): Add two values.      Subtraction(-): Subtract the second number from the first number.      Multiplication(*): Multiply two numbers.      Division(/): Divide the first number by the second number (Remainders are discarded.)        Bit Operations(Means 2 decimal operation).          AND(&amp;amp;): Perform a logical AND operation.      OR(|): Perform a logical OR operation.      UsageYou can choose an operator by double clicking a mouse or by pressing the Enter key.Choose the appropriate 3 parameters (result, operand1, operand2) necessary for the command.ExampleThis example shows how to add 10 and 20 and to display the result on the screen.LoadLoad is defined as “to place into an appropriate device”. In RoboPlus Task, Load places a value in a device.Load is used for the followings:  To execute a device’s function.  To move a value.UsageChoose the appropriate 2 parameters (destination, source) necessary for the command.ExampleTo execute a device(Set the timer to 1.024 seconds).To set a value (Insert 10 into the variable)Label/JumpLabel and Jump are used to branch a program. Branching is used to change the order commands in a program are executed. Jump branches the program and Label designates where to branch to. It is the same function as Label and Goto in the C language.Usage  Label names must abide by the following rules:          There cannot be duplicate label names.      Label must exist within a program or function body.      A jump to a label in another function is not possible.      Spaces and Special characters(!, @, #, $, etc.) are not allowed in label names.      Labels cannot start with a number.        While inputting the label name, Press Esc to cancel.  Otherwise, press Enter to save  While selecting the label to jump to, Press Esc to cancel.      Otherwise, click the appropriate label or press Enter while the label is highlighted to save.        A jump can only be made to an existing label.      The label must be in the same function block as the jump command.      ExampleIn this sample code, the program jumps to “JumpPoint” as soon as it starts and executes “Routine 2”.If/Else if/ElseThese commands will branch the flow of the program depending on whether the condition is true or false.  If : Execute if the clause is true.  This is the equivalent of the “if” statement in C language.  Else If : Execute if the clause is true and previous clause (“if” or “else if” clause) is false.  This is the equivalent of the “else if” statement in C language.  Else : Execute if none of the conditions are true.  This is the equivalent of the “else” statement in C language.What’s a Conditional Clause?Conditional clause is a feature to perform different actions depending on whether the condition evaluates to true (condition is met) or false (condition is not met).Conditional clause is composed of the following 3 parts: parameter 1, relational operator, and parameter 2 in order.These are 6 types of relational operators.  == : True if the two parameters are equal.  != : True if the two parameters are not equal.  &amp;gt;= : True if parameter 1 is greater than or equal to parameter 2.  &amp;gt; :  True if parameter 1 is greater than parameter 2.  &amp;lt;= : True parameter 1 is less than or equal to parameter 2.  &amp;lt; : True if parameter 1 is less than parameter 2.Conditional clause can be combined into a complex conditional clause using conditional operators.A complex conditional clause is composed of the following 3 parts: conditional clause 1, conditional operator, conditional clause 2.There are 3 types of conditional operators.  then : Does not link any clauses.  AND(&amp;amp;&amp;amp;) : True if both conditional clauses are true.  OR(||) : True if one of the conditional clauses is true.There is no limit to how many conditional clauses can be combined into one complex conditional clause. Each conditional clause is evaluated in order, and the final value will be either “true” or “false.”Usage  An ‘IF’ command must always precede an “Else if” or an “Else” command.      A block, designated by brackets, needs to follow each clause(However, if the block consists of only one line, the block need not be enclosed with brackets).      ExampleThe examples below shows how to program the following conditions.  When the variable is greater than or equal to 90.  When the variable is greater than or equal to 50 and less than 90.      Other cases      Endless LoopThis command is used to repeat the command lines in the block without end.UsageA block is always required(However, if the block consists of only one, the block need not be enclosed with brackets).Use the “Break Loop” command to exit the loop.ExampleContinuously prints “10” on the Program Output Monitor.Loop WhileThis command is used to repeat the command lines in the block while the clause is true.It is the equivalent of the “while”function in C language..What is a conditional clause?UsageA block is always required(However, if the block consists of only one line, the block need not be enclosed with brackets).Use the Break Loop command to exit the loop.ExampleContinuously prints the value of on the Program Output Monitor until the variable reaches 30.Loop ForThis command is used to repeat the command lines in the block for the specified number of times. Given an initial value and a terminal value, the loop will repeat while increasing the variable by 1.The number of executions can be calculated as:  Number to Executions = Terminal Value - Initial Value + 1This is the equivalent of the “for” function in C language.UsageChoose the appropriate 3 parameters (variable, Start value, End value) necessary for the command.The initial value must be less than the terminal value. If the initial value is greater than the terminal value, the loop will not be executed.A block is always required. (However, if the block consists of only one line, the block need not be enclosed with brackets.)Use the Break Loop command to exit the loop.ExampleThis example will repeat the loop as many as the detected sound quantity.Break LoopThis command is used to exit the loop while it is being executed.It is the equivalent of the “break” function in C language.UsageThe command must always be used in the block being repeated.ExampleContinuously prints the number “10” on the screen until the value of the center IR sensor becomes bigger than 400, in which case it exits the loop and prints “30” on the screen.Wait WhileThis command is used to pause execution when a conditional clause is true.It is the equivalent of the “while” function in C language.What is a conditional clause?UsageSet the appropriate conditions without the use of blocks.ExampleThe program will wait for the timer.Exit FunctionWhen this command is executed, it will end the operating  function immediately even if not every command line was executed yet, and will return to the function called position. It is the equivalent of the “return” statement in C language.UsageCan be used only within a general function or a callback function.ExampleIn the following example, UserFunction is called repeatedly. Because of the Return command in UserFunction, the last 3 lines will never be executed.Make/Call FunctionIf the same code need to be repeated multiple times, or if the code needs to be distinguished according to its role, you can make the code as a function, and can all the function whenever necessary. This is similar to the concept of a function in C language. The only difference is that there are no return values and input parameters. When used properly, you can easily figure out the flows of the program, and can avoid to write the same command lines again and again. Functions are executed by calling them. After a called function ends, execution will be returned to the point of the calling and started from the next command line.Usage  The following rules apply when making a function:          There cannot be duplicate function names.      A function must exist outside another function or program body.      Spaces and special characters(!, @, #, $ etc.) are not allowed in function names.      Function names cannot start with numbers.        While inputting function names, press Esc to cancel.  Otherwise, press Enter to save.  While selecting the function to call, press ESC to cancel.  Otherwise, click the appropriate function or press Enter while the function is highlighted to save.  A function cannot call itself.ExampleThe program will continuously call the functions to move forward, backward, right and left.Callback FunctionCallback function is a function that runs independently of the main program routine and is automatically executed at fixed intervals. Therefore, a callback function cannot include code that requires much time. Use of loops, variables, and function calls are limited.Usage  The callback function cannot exist inside another function or program body.  There can be only one callback function.  A callback function does not have a name and cannot be called.Precautions  Can not use commands such as Endless Loop, Loop While, Loop For, Label, Jump, and Call Function.  Communication between the controller external devices is limited to 2 times.  Size of the command must not exceed 512 bytesExampleThis example shows how periodically receive wireless data and to save it in a variable.",
        "url": " http://localhost:4000/emanual/docs/en/software/rplus1/task/programming_01/"
      } ,
  
>>>>>>> contents
      "docs-kr-software-rplus1-task-programming-01":  {
        "title": "R+ Task 1.0",
      "content"	 : "프로그래밍편집RoboPlus Task에서 편집할 때 사용하는 방법들입니다.여러줄 선택RoboPlus Task는 프로그램 코드에서 잘라내기, 복사, 삭제, 주석처리 등의 편집을 위해 여러줄 선택 기능을 지원합니다.프로그램 코드에서 여러줄을 선택하는 방법은 다음과 같습니다.      컨트롤(Ctrl) 키를 누른 상태에서 마우스 클릭으로 여러줄 선택        쉬프트(Shift) 키를 누른 상태에서 선택하려는 첫 번째 명령줄을 마우스 클릭 후, 마지막 명령줄을 클릭하여 여러줄 선택      마우스로 클릭 후 드래그하여 여러줄 선택하여도 같은 결과를 얻을 수 있습니다.            프로그램 코드 전체를 선택하려면 마우스 오른쪽 버튼을 눌러 ‘모두 선택’ 명령을 실행합니다. 단축키는, 컨트롤(Ctrl) + A 입니다.      줄 삽입프로그램 코드에 빈 줄을 삽입하는 방법은 다음과 같습니다.  삽입하고자 하는 명령줄 위를 선택한 후 스페이스바(SpaceBar)를 입력합니다.      삽입하고자 하는 명령줄 위를 선택한 후 마우스 오른쪽 버튼을 눌러 ‘줄 삽입’ 명령을 실행합니다.      줄 지우기하나의 줄, 혹은 여러 줄을 선택하여 지울 수 있습니다.프로그램 코드에서 줄을 지우는 방법은 다음과 같습니다.      지우고자 하는 명령줄을 선택한 후 마우스 오른쪽 버튼을 눌러 ‘줄 내용 지우기’ 명령을 실행합니다. 선택된 명령줄의 내용만 지워지고 명령줄은 그대로 남아있게 됩니다. 단축키는 백스페이스키(BackSpace, ←)입니다.            지우고자 하는 명령줄을 선택한 후 마우스 오른쪽 버튼을 눌러 ‘줄 지우기’ 명령을 실행합니다. 선택된 명령줄과 내용이 모두 삭제되며, 아래줄 내용이 위로 당겨집니다. 단축키는 삭제키(Delete)입니다.      줄 활성/비활성프로그램 코드에서 명령줄을 활성, 비활성시키는 방법은 다음과 같습니다.  활성, 혹은 비활성하고자 하는 명령줄을 선택한 후  마우스 오른쪽 버튼을 눌러 ‘줄 활성/비활성’ 명령을 실행합니다.      활성, 혹은 비활성하고자 하는 명령줄을 선택한 후  컨트롤(Ctrl) + E 를 입력합니다.        활성화 되어있는 줄에서 이 명령을 실행하면 비활성 상태로 바뀌며, 비활성 상태에 있는 줄에서 이 명령을 실행하면 활성화 상태로 바뀌게 됩니다.  주로 프로그램 작성 중 테스트를 위해 잠시 명령을 실행하지 않도록 하는 등의 목적으로 많이 사용됩니다.복사/잘라내기/붙여넣기잘라내기하나의 줄을 선택하거나, 여러줄을 선택한 후 마우스 오른쪽 버튼을 눌러 잘라내기 명령을 실행합니다. 잘라내기를 실행한 줄은 지워지며, 그 내용은 임시 저장소에 저장됩니다. 잘라내기 명령을 실행하는 순간, 기존에 임시 저장소에 저장되어 있던 내용은 삭제됩니다. 단축키는 컨트롤(Ctrl) + X 입니다.복사하기하나의 줄을 선택하거나, 여러줄을 선택한 후 마우스 오른쪽 버튼을 눌러 복사 명령을 실행합니다. 복사하기를 실행한 줄은 그대로 남아있으며, 그 내용은 임시 저장소에 저장됩니다. 복사하기 명령을 실행하는 순간, 기존에 임시 저장소에 저장되어 있던 내용은 삭제됩니다. 단축키는 컨트롤(Ctrl) + C 입니다.붙여넣기임시 저장소에 데이터가 저장되어 있는 경우 실행할 수 있습니다. 붙여넣기를 실행 할 명령줄을 선택한 후 마우스 오른쪽 버튼을 눌러 붙여넣기 명령을 실행합니다. 붙여넣기를 하여도 임시 저장소의 내용은 그대로 남아있으며, 따라서 같은 내용을 여러번 붙여넣을 수 있습니다. 만약 빈 명령줄이 아닌, 기존에 선택된 내용 위에 붙여넣기를 하면 덮어쓰기가 됩니다. 단축키는 컨트롤(Ctrl) + V 입니다.이름찾기프로그램 코드에서 사용한 요소의 찾기 기능을 지원합니다.  편집 메뉴에서 이름 찾기 명령을 실행합니다. 단축키는 컨트롤(Ctrl) + F 입니다.  찾고자 하는 내용을 입력 후 ‘다음 찾기’ 버튼을 누릅니다.명렁어프로그램 시작프로그램 시작은 말 그대로 제일 먼저 실행되는 프로그램의 시작 지점입니다. 줄 번호와 상관 없이 무조건 프로그램 시작부터 명령이 실행됩니다. C언어의 main()함수와 같은 개념입니다.사용법  프로그램 시작 명령은 줄 번호와 상관 없이 실행됩니다.  한 프로그램에 두 개 이상의 프로그램 시작이 있을 수 없습니다.  명령 묶음 구간이 반드시 필요합니다.  프로그램 시작 명령 구간의 끝을 만나면 프로그램이 종료됩니다.예제다음과 같이 프로그램 시작 명령을 기본으로 프로그래밍을 시작합니다.프로그램 강제종료프로그램 수행 중에 이 문장을 만나면 그대로 프로그램이 종료됩니다. 프로그램이 종료되는 경우는 다음과 같습니다.      프로그램 시작의 구간을 다 수행한 경우 (자연 종료)          프로그램 강제 종료를 만났을 경우 (강제 종료)    사용법프로그램을 끝내고 싶은 지점에 만듭니다.예제포트 3의 터치센서가 눌렸을 때, 프로그램을 종료하는 예제입니다.구간 시작/끝구간이란 여러 개의 명령문을 묶어놓은 것을 의미합니다. 구간 시작부터 끝까지 같은 명령문에 영향 받습니다. C언어의 ‘{‘, ‘}’와 같은 개념입니다.사용법구간의 시작과 끝은 항상 짝이 맞아야 합니다. RoboPlus Task는 자동으로 구간별로 들여쓰기를 하여 짝이 맞는지 여부를 알려줍니다. 구간의 시작/끝 기호의 줄이 맞지 않는경우, 누락된 구간을 찾아서 적절히 수정해야 합니다.구간은 반드시 소유하는 명령이 있어야 합니다. 즉, 단독으로 사용할 수 없습니다.구간 시작/끝을 반드시 가져야 할 명령은 다음과 같습니다.  프로그램 시작  만약  / 아니면 만약 / 아니면  무조건 반복  조건 반복  횟수 반복  콜백 함수  함수만약에 실행문이 한줄일 경우에는 구간기호가 생략 될 수 있다.예제프로그램 시작 명령과 무조건 반복 명령에 구간의 시작과 끝이 설정되어 있는 예제입니다.주석/메모프로그램 코드 내에 주석이나 메모를 삽입할 수 있습니다. 주석이나 메모를 적절히 사용하면, 나중에 코드를 다시 해석할 때 매우 유용합니다. 잊기 쉬운 내용이나, 중요한 내용을 표시할 때 주로 사용합니다. 주석은  프로그램 실행에 아무런 영향을 주지 않습니다. C언어의 한 줄 주석처리 기호인 ‘//’와 같은 개념입니다. (C언어의 여러 줄 주석 처리 기호인 ‘/’, ‘/’는 지원하지 않습니다.)사용법  주석이나 메모를 삽입하고 싶은 줄에서 명령을 실행합니다.  // 기호가 삽입되면 마우스로 더블클릭하거나 키보드의 엔터(Enter)를 입력한 후, 원하는 내용을 입력 할 수 있습니다.  내용 입력 도중 ESC 키를 입력하면 작성 중에 있던 내용이 취소되고, 입력 전 내용으로 복구 됩니다.  내용 입력을 완료하려면, 키보드의 엔터(Enter)를 입력해야 합니다.예제화면에 10을 출력 후 줄을 바꾸는 예제입니다. 아래와 같이 설명이나 메모를 프로그램에 삽입할 수 있습니다.계산계산은 두 값을 연산하여 결과를 내는 명령어입니다. 의미는 다음과 같습니다.계산 명령어에서 사용할 수 있는 연산자는 다음과 같습니다.  사칙 연산 (음수 연산을 지원합니다.)          덧셈(+): 두 값을 더합니다.      뺄셈(-): 앞에서 뒤의 값을 뺍니다.      곱셈(*): 두 값을 곱합니다.      나눗셈(/): 앞에서 뒤의 값을 나눕니다. (나머지는 무시되어 사라지고 몫만 결과로 나옵니다.)        비트(bit) 연산 (2진수 연산을 의미합니다.)          AND(&amp;amp;): 두 비트를 AND연산 합니다.                                                  OR(              ): 두 비트를 OR연산 합니다.                                          사용법연산자를 마우스로 더블 클릭하거나 키보드의 ENTER키를 누르면 연산자 종류를 선택할 수 있습니다.명령 수행에 필요한 3개의 파라미터(결과, 연산1, 연산2)를 적절히 선택합니다.예제10과 20을 더해서 화면출력하는 예제입니다.로드로드(Load)의 사전적 의미는 적재하다라는 뜻입니다. 즉, 로드는 값을 옮기는 명령을 수행합니다.로드는 다음과 같은 의미로 사용됩니다.  장치의 기능을 실행한다.  값을 옮긴다.사용법명령 수행에 필요한 2개의 파라미터(대상, 원본)를 적절히 선택합니다.예제장치의 기능 실행 용도로 사용된 경우 (타이머를 약 1초로 설정합니다.)값을 옮기는 용도로 사용된 경우 (변수에 5를 넣습니다.)레이블/점프레이블과 점프는 프로그램 분기를 위해 사용됩니다. 프로그램 분기란, 프로그램 수행 순서를 바꾸는 것입니다. 점프는 프로그램 분기를 실행하고, 레이블은 분기할 위치를 지정합니다. C언어의 label/goto와 같은 개념입니다.사용법  레이블 이름은 다음의 규칙을 지켜야 합니다.          레이블 이름은 중복될 수 없습니다.      레이블은 프로그램 시작 구문, 혹은 함수 구문 내부에 존재해야 합니다.      다른 함수의 레이블로 점프할 수 없습니다.      레이블 이름은 띄어쓰기와 특수 기호(!, @, #, $등)를 사용할 수 없습니다.      레이블 이름의 시작은 숫자를 사용할 수 없습니다.        레이블 이름 입력시 키보드의 ESC키를 누르면 취소됩니다.  레이블 이름 입력시 키보드의 ENTER키를 누르면 입력이 완료됩니다.  점프의 레이블 이름 선택시 키보드의 ESC키를 누르면 취소됩니다.      점프의 레이블 이름 선택시 목록을 선택하거나 키보드의 ENTER키를 누르면 입력이 완료됩니다.        점프는 반드시 존재하는 레이블을 선택해야 합니다.      점프는 반드시 함수 구간 내의 레이블만 선택해야 합니다.      예제프로그램을 시작하자마자 ‘실행분기’레이블로 점프하여 루틴2를 실행하게 됩니다.조건문조건의 참, 거짓 결과에 따라 프로그램 흐름을 분기하는 명령입니다.  만약: 조건절의 내용이 참이면 실행합니다. C언어에서 if 구문과 같은 개념입니다.  아니면 만약: ‘만약’에 이어서 조건을 계속 검사할 때 사용합니다. 조건절의 내용이 참이면 실행합니다. C언어의 else if 구문과 같은 개념입니다.  아니면: ‘만약’과 ‘아니면 만약’의 조건 어디에도 해당되지 않으면 실행합니다. C언어의 else 구문과 같은 개념입니다.조건절이란?조건절은 결과를 참과 거짓으로 내는 수식입니다. 참은 조건이 만족된 것이고, 거짓은 조건이 만족되지 못한것입니다.조건절은 다음과 같이 3부분으로 구성되고, 차례대로 비교 파라미터1, 비교 연산자, 비교 파라미터2입니다.비교 연산자의 종류는 다음과 같습니다.  == : 두 비교 값이 같다면 참입니다.  != : 두 비교 값이 다르다면 참입니다.            = : 비교 값1이 비교 값2보다 크거나 같다면 참입니다.                  : 비교 값1이 비교 값2보다 크다면 참입니다.        &amp;lt;= : 비교 값1이 비교 값2보다 작거나 같다면 참입니다.  &amp;lt; : 비교 값1이 비교 값2보다 작다면 참입니다.조건절은 연결 연산자에 의해 연결되어 복합 조건절로 사용할 수 있습니다.복합 조건절은 다음과 같이 3부분으로 구성되고, 차례대로 조건절1, 연결 연산자, 조건절2입니다.연결 연산자의 종류는 다음과 같습니다.  then : 아무 조건절도 연결하지 않습니다.  AND(&amp;amp;&amp;amp;): 두 조건절의 결과를 AND연산합니다.                              **OR(                     )**: 두 조건절의 결과를 OR연산합니다.                    복합 조건절은 제한 없이 연결될 수 있으며 앞에서부터 차례대로 연산되어 최종 값은 참과 거짓으로 표현됩니다.사용법  ‘아니면 만약’과 ‘아니면’은 반드시 먼저 ‘만약’이 나와야 합니다.  각 구문은 명령 묶음인 구간이 반드시 필요합니다. (단, 실행 문이 1줄일 경우에는 별도로 구간 표시를 하지않아도 자동으로 구간으로 인식합니다.)예제다음 조건별로 실행시키고자 할 때 사용되는 예제입니다.  변수 값이 90보다 클 경우  변수 값이 80보다 크고 90보다 작을 경우  변수 값이 70보다 크고 80보다 작을 경우  변수 값이 60보다 크고 70보다 작을 경우  그 외의 경우무조건 반복무조건 반복 명령 구간 시작과 끝 사이를 계속 반복 실행합니다.사용법명령 묶음인 구간이 반드시 필요합니다. (단, 실행 문이 1줄일 경우에는 별도로 구간 표시를 하지않아도 자동으로 구간을 인식합니다.)반복 구문을 빠져나오려면 반복 끝내기를 사용합니다.예제프로그램 출력 화면에 10이라는 수를 계속 출력합니다.조건 반복조건절이 참인 동안 구간내의 명령줄을 반복합니다. C언어의 while구문과 같은 개념입니다.사용법명령 묶음인 구간이 반드시 필요합니다. (단, 실행 문이 1줄일 경우에는 별도로 구간 표시를 하지않아도 자동으로 구간을 인식합니다.)반복 구문을 강제로 빠져나오려면 반복 끝내기를 사용합니다.예제프로그램 출력 화면에 변수 값이 30이 될 때까지 화면 출력을 반복합니다.횟수 반복반복 끝내기조건 대기함수 강제종료함수 만들기/호출콜백 함수제어기 파라미터보낼 무선 데이터받은 무선 데이터새 무선 데이터임의의 숫자Aux LED버튼타이머정밀타이머상대 로봇 무선ID내 로봇 무선ID화면출력/줄바꿈적외선 센서부저 종류부저 울림시간최종 소리감지 횟수실시간 소리감지 횟수시작버튼 눌림횟수자동꺼짐 타이머RC-100 채널스마트앱 파라미터모션 파라미터모션 페이지모션 상태관절 오프셋관절 LED 자동켜기주변장치감속모터서보모터접촉센서LED모듈적외선센서컬러센서자석센서절대거리센서사용자 장치다이나믹셀:액츄에이터모터 켜기LEDCW/CCW MarginCW/CCW Slope목표 위치이동 속도힘 조절현재 위치현재 속도현재 하중전압온도움직임 유무다이나믹셀:EX액츄에이터모터 켜기LEDCW/CCW MarginCW/CCW Slope목표 위치이동 속도힘 조절현재 위치현재 속도현재 하중전압온도움직임 유무소모 전류량다이나믹셀:MX액츄에이터모터 켜기LEDPID 제어목표 위치이동 속도힘 조절현재 위치현재 속도현재 하중전압온도움직임 유무소모 전류량통합센서(S1)거리센서 값조명 밝기물체감지조명감지소리 크기최대 소리 크기소리감지 횟수소리발생 시간부저 음계부저 울림시간새 리모컨 데이터받은 리모컨 데이터보낼 리모컨 데이터물체감지 기준값조명감지 기준값적외선 센서 어레이적외선 센서 값부저 음계부저 울림시간감지 기준값 자동설정적외선 물체감지적외선감지 기준값직접 지정",
        "url": " http://localhost:4000/emanual/docs/kr/software/rplus1/task/programming_01/"
      } ,
  
<<<<<<< HEAD
=======
      "docs-en-software-rplus1-task-programming-02":  {
        "title": "R+ Task 1.0",
      "content"	 : "Controller ParametersRemocon TXDThis parameter is used to transmit data via a wireless communication module (IR, zigbee module).  The data must be a number/value between  0 &amp;amp; 65535 transmitted or sent, wirelessly (IR or Zigbee).  When the “Remocon TXD” parameter is set, the data is immediately sent wirelessly.Note Compatiable Controllers : CM-100, CM-5, CM-510, CM-530, CM-700ExampleIn the example below, the program waits for data, and when the data arrives, the received data is transmitted wirelessly.It is commonly used to send a response to the control program on a PC connected using ZIG2Serial.Remocon RXDThis parameter is used to read the received data received via the wireless communication module (IR, zigbee module).  The data is a number between 0 and 65535.  The [Remocon Arrived] parameter can be used check for new data.  You can save up to maximum 2 wireless data by using a receiving buffer.  When 2 data are saved in the receiving buffer, firstly received data will be read at first, and the remaining data will be read at second according to the received order. If there is only 1 data value in the buffer, when READ is executed, the latest data will be retrieved.Note Compatiable Controllers : CM-100, CM-5, CM-510, CM-700ExampleThe code below shows how to control movement direction using the RC-100.Remocon ArrivedThis parameter is used to check whether there are any new data received via the wireless communication module(IR, zigbee module).This value is either TRUE or FALSE.  TRUE ( 1 ) : There is new data in the input buffer.  FALSE ( 0 ) : All data in the input buffer have been retrieved.Note Compatiable Controllers : CM-100, CM-5, CM-510, CM-530, CM-700ExampleThe code below shows how to control movement direction using RC-100.Normally used to check whether new data has been received to process.Aux LEDThis parameter is either TRUE or FALSE and used to read and set the controller’s Aux LED status.  TRUE (1) :  When the Aux LED parameter is set to TRUE, the LED will turn on. When the Aux LED parameter is read, a value of TRUE signifies that the LED is on.  FALSE (0) : When the Aux LED parameter is set to FALSE, the LED will turn off.  When the Aux LED parameter is read, a value of FALSE signifies that the LED is off. False means that the input buffer is empty. i.e either no data has been received or all data has been retrievedNote Compatiable Controllers : CM-5, CM-510, CM-530, CM-700ExampleIn this example, the Aux LED is turned on and off for 1 second 3 times.ButtonThis parameter is used to read the controller’s button status.  For CM-5, CM-510, CM-530          Each button is assigned a unique value as follows.      R button : 1, L button : 2, D button : 4, U button : 8, START button : 16      When several buttons are pressed, the value assigned to the pressed buttons are added and read.      Even if you do not know the buttons’ code values, you can easily determine which buttons have been pressed by using the buttons’ constant values.        For OpenCM9.04          Use of true/false constants      When button is pressed(ture), When button is not pressed (false)      Note Compatiable Controllers : CM-5, CM-510, CM-530, CM-700, OpenCM9.04ExampleThis example shows how to perform different motions depending on which button is pressed.TimerThis parameter is used read the timer’s current value or to set the timer, which begins to count down automatically.  The timer is located in the controller.You can use “Timer value” constant to set the timer’s value.When a decimal number is entered,  it will automatically be converted to the corresponding timer value.The actual timer value is between 0 and 255.  Each timer value is 0.128 seconds.If you set a value greater than 0 in the timer parameter, the timer will start to count down every 0.128 seconds.Note Compatiable Controllers : CM-100, CM-5, CM-510, CM-530, CM-700ExampleThe code below will print the value from the Center IR sensor every second.HR TimerInternally the controller sets a counter; this is the parameter for the high resolution timer. This timer is set for every 1ms, useful for more accurate timing.  You can use “Timer value” constant to set the timer’s value.  When a decimal number is entered, it will automatically be converted to the corresponding timer value.  The actual timer value is between 0 and 65535.  Each timer value is 0.001 seconds.  If you set a value greater than 0 in the timer parameter, the timer will start to count down every 0.001 seconds.Note Compatiable Controllers : CM-530ExampleWhile in fast forward motion the timer can help the tires react faster upon detection of a line.Remocon IDThis parameter is used to set or read the currently set remote control ID. Please note that the controller will not receive any data if this parameter does not match the ID of the transmitting remote.  The ID is a number between 0 and 65535.  When the opponent’s ID is set to 65535(0xFFFF, in hexadecimal), it will send data to all Zigbee modules, regardless of ID.(Broadcasting Mode)Note Compatiable Controllers : CM-5, CM-510, CM-530, CM-700ExampleThis example sets the opponent’s wireless ID to “123”, reads the value, and prints it on the screen.  For seamless Zigbee communication, the opponent’s wireless ID must be set to the correct value.  Using the broadcasting mode improperly may cause unforeseen problems.My ID  CM-100          This parameter is used to determine whether or not a module ZIG-110 module has been installed.      If a ZIG-110 wireless communication module is installed, TRUE(1) is returned.  Otherwise, FALSE(2), is returned.        Other Controllers : This parameter is used to read the ID of the Zigbee module installed in the robot.          If a ZigBee module is installed, its ID is read (a number between 0 and 65534). If not, 65535 (0xFFFF in hexadecimal) is returned.      Note Compatiable Controllers : CM-100, CM-5, CM-510, CM-530, CM-700ExampleThis example checks whether a ZIG-110 module is installed in the CM-100 controller. If the module is not installed, it sets the RC-100 channel according to the number of times the start button is pressed.This example prints the ZigBee module’s ID. This code can be used with controllers other than CM-100.IR Left/Center/RightThis parameters are used to read the IR sensors’ values.  The sensor value is between 0 and 1023.  For objects with the same or similar color, the closer it is, the higher the value(closer to 1023), and the farther away it is, the lower the value (closer to 0).  For objects with the same distance, the lighter(white) the object, the higher the value, and the darker(black) the object, the lower the value.Note Compatiable Controllers : CM-100ExampleIn this example, specific motions are performed when only the left IR sensor detects an object or when only the right IR sensor detects an object..  Sensor values may be affected by external lights which emit infrared rays such as sunlight or a fluorescent lamp.  Sensor values depend on the object’s color or surrounding light, so using the IR sensor to measure the exact distance is not recommended.  As above mentioned, IR sensor values are different if objects have different colors, even if they are the same distance away. This characteristic can be utilized to distinguish black from white(Can be used for tracing line).Buzzer IndexThis parameter is used to set the musical note or melody to be played or to retrieve the note or melody currently being played using the buzzers in the controller.  The “Buzzer Time” parameter must always be used with the “Buzzer Index” parameter.  “Buzzer Time” must be set before “Buzzer Index” is set. (The order is important) (Click here for more information on “Buzzer Time”.)  Depending on what the “Buzzer Time” is set to, “Buzzer Index” can be set to play a musical note or a melody.          When “Buzzer  Time” is set to 255 : Melody Mode              Choose from 16 different melodies (0~15).                    When “Buzzer Time” is between 0 and 254 : Musical Note Mode              Choose from 27 notes.  The selected notes will play for the length set as “ Buzzer Time”.                    Note Compatiable Controllers : CM-100, CM-510, CM-530ExamplePlays melody 3.Plays Do, Mi and Sol for 0.3 seconds each.Buzzer TimeThis parameter is used to set how long the note or melody will be played or to retrieve how much longer it will be played.  The “Buzzer Time” parameter is always used with the “Buzzer Index” parameter. “Buzzer Time” must be set before “Buzzer Index” is set. (The order is important) (Click here for more information on “Buzzer Time.”)  “Buzzer Time” can be set to a value between 0 and 255.  Each value represents 0.1 second.  For example, when “Buzzer Time” is set to 1, the note will be played for 0.1 second.  The maximum length a note will be played is 5 seconds. Therefore, when values between 50 and 254 are entered, the note will be played for 5 seconds.          When “Buzzer Time” is set to 255 : Melody Mode      Choose from 16 different melodies (‘0~15) .              When the melody finishes playing, “Buzzer Time” is reset to 0.                    When “Buzzer Time” is between 0 and 254 :Musical Note Mode              Choose from 27 notes.  The selected note will play for the length set as “Buzzer Time.”                    Note Compatiable Controllers : CM-100, CM-510, CM-530ExamplePlays melody 3. (Same as the example in “Buzzer Index”)Plays Do, Mi and Sol for 0.3 seconds each.(Same as the example in “Buzzer Index”)  “Buzzer Time” cannot be set while a note or melody is being played.Sound CountA controller equipped with a microphone has a function to count sounds when the sound is louder than a certain threshold.  For example, it is possible to count claps.  This parameter is used to retrieve the number of detected sounds.  “Sound Count” uses the numbers between 0 and  255.  As a result, the maximum number of sounds counted is 255.  When the sounds are no longer detected, the number of detected sounds will be input into the “Sound Count” parameter.  Because “Sound Count” is not initialized automatically, you have to reset it to 0 before use.Note Compatiable Controllers : CM-100, CM-510, CM-530ExampleDetects sounds and repeats a specific motion for as many times as it is detected.  The geared motor connected to the controller may make loud noises while moving, which will be detected by the microphone. Please use the sound detection function only when the OLLO/Bioloid has stopped moving completely.Current Sound CountA controller equipped with a microphone has a function to count sounds when the sound is louder than a certain threshold.  For example, it is possible to count claps.  This parameter is used to retrieve the number of detected sounds.  “Current Sound Count” uses numbers between 0 and 255.  As a result, the maximum number of sounds counted is 255.  The parameter value is increased in real-time whenever a sound is detected.  If a new sound is not detected for 0.8 seconds, the value of the “Current Sound Count” parameter is passed to the “Sound Count” parameter, and the “Current Sound Count” parameter is reset to 0.Note Compatiable Controllers : CM-100, CM-510ExampleThis code saves the current sound count  in the “DetectionCount” variable.This code pauses the program when no sounds are detected.This code executes a block of code when 3 sounds are detected.  When it is connected with controller, sometimes the sounds of geared motor can be too loud to be input in the controller in normal way. Please use the sound detection function only when the OLLO/Bioloid has stopped moving completely.Button CountThis parameter is used to read how many times the START button was pressed when the controller was first turned on.“Button Counts” uses numbers between 0 and 255.  As a result, only up to 255 button presses can be counted .Note Compatiable Controllers : CM-100, CM-150ExampleThe example executes different motions according to how many times the START button was pressed - once, twice, or more.Powersave TimerThe controller has a hibernate function to conserve battery.  If no commands are received for a set period, the controller can turn itself off.  This parameter is used to set how long the controller will wait or how much time is left.      “Powersave timer” can be set using powersave constants.        “Powersave timer” uses numbers between 0 and 255.  The unit is minutes (i.e., a value of 1 equals 1 minute)  The default value is 5 minutes.  Setting the “Powersave timer” to 0 will turn it off.  The time remaining on the timer is always in minutes. For example, when 50 seconds remain, the timer will say that 1 minute remains.Note Compatiable Controllers : CM-100, CM-150ExampleThe controller will be turned off if no data is received for 2 minutes.  If data is received, the timer is reset to 2 minutes.  To keep the controller from turning itself off even when certain actions are performed, you must manually reset “Powersave timer.”RC-100 ChannelThis parameter is used to set up the infrared communication channel or to check the current channel between the controller’s IR receiver and RC-100.      The RC-100 channel can be set using constant numbers.        “RC-100 Channel” uses numbers between 0 and 8.  The Channel 0 is the special one that can be communicated with every other channels.Note Compatiable Controllers : CM-100, CM-510, CM-530ExampleSets the RC-100 channel according to how many times the START button was pressed.  For smooth infrared wireless communication, please refer to the section on how to set the channel for RC-100, and make sure that both RC-100 and the controller’s IR receiver are set to the same channel.Motion ParametersMotion PageThis parameter executes motions.  When the motion page number is entered, the corresponding motion is executed.  “Motion Page” can be read to see which motion is currently being executed.  Certain page numbers can be used to stop the current motion.          When the stop command is executed, “Number of Page Repeats” will be ignored.      To confirm that a motion has stopped completely, check the motion status.      When “Motion Page” is set to 0, the controller will execute to the Exit page and stop.      When “Motion Page” is set to -1, the controller will execute to the current page and stop.        If a page with no motions is set, an error message will be returned. (See error messages)  “Motion Page” uses numbers between 1 and 255. (Some controllers use numbers between 1 and 127.)Note Compatiable Controllers : CM-5, CM-510, CM-530, CM-700ExampleExecutes motion page #3.Motion StatusThis parameter is used to check the status of the motion.  If a motion is being performed, 1 is returned.  Otherwise, 0 is returned.  True/False can also be used.          True: Motion is being performed.      False: Motion is not being performed.      Note Compatiable Controllers : CM-5, CM-510, CM-530, CM-700ExampleExecutes motion page #3 and waits until it is completed.Joint OffsetTo apply the joint offset to a robot, a motion must be performed after the “Joint Offset” parameter is set.This parameter can be applied to each joint separately.  -255 ~ 255 : The offset will be applied to the selected joint’s location value.          Ex) If the location value of the joint with ID #3 is set as 300 → 400 → 500 in the motion data, and the joint offset is -100, the actual location value of the joint will be adjusted to 200 → 300 → 400.        1024 : If the joint offset is set to 1024, the selected joint will not be affected by the motion data during operation.          Ex) This function can be used to control the location values directly, instead of the motion.  A primary example is the Gripper, which should not move when a motion is being performed.      Note Compatiable Controllers : CM-5, CM-510, CM-530, CM-700Example      Set an offset value to a specific joint.While motion page #3 is being performed, set the offset of the joint with ID 4 as -100, and wait for the motion to finish.            Keep a joint from being affected by motion dataSet up joint ID #4 to be unaffected while a motion is being executed.  Peripheral DevicesPeripheral devices are modules connected directly to the controller. The followings are peripheral devices.Reduction MotorThis parameter is used to control the reduction motor’s direction and power (Speed).(Please refer to the Geared Motor GM-12A for more information)  The reduction motor’s control values can be set using motor control constants.      The direction and power must be set together.        CCW (Counter clock wise) 0 ~ 1023 : Decimal numbers between 0 and 1023  CW (Clockwise) 0 ~ 1023 : Decimal numbers between 1024 and 2047The control values are numbers between 0 and 2047.Note Compatiable Controllers : CM-100ExampleIn this example, the reduction motor connected to Port 1 will rotate in the clockwise direction for 1 second at maximum speed, before rotating in the counterclockwise direction for 1 second.  These motions will repeat without end.Tips  Make sure the motor is connected to the correct port.  Speed and direction can be controlled separately using motor control constants.  In this example, the motor in Port 1 is set as “CCW:700”,and the motor in Port 2 is set as “CW:700.”Servo MotorThis parameter is used to set the movements of servo motors.  This parameter consists of 3 sub-parameters (move mode, speed, location), it helps to set up the movement of servo motor in more detailed way. (Please refer to the Servo Motor SM-10A for more information)  Drive mode is set as either True or False.          TRUE (1) : Operate in joint mode.  In joint mode, the speed parameter is used to configure power output, and the location parameter is used to configure angular movement.      False (0) :Operate in rotation mode. In rotation mode, the servo motor operates like a reduction motor, so only the speed parameter is used. The location parameter is ignored.        Motor control constants can be used to set the speed (power).          CCW (Counter clock wise) 0 ~ 1023 : Decimal numbers between 0 and 1023      CW (Clockwise) 0 ~ 1023 : Decimal numbers between 1024 and 2047            Location value constants can be used to set the location in joint mode.          Uses decimal numbers between 0 and 1023.      The red circle indicates the current values. The value can be set by dragging the jog dial with your mouse to the appropriate value.      The maximum controllable angle is 300°. Thus, the minimum controllable angle, indicated by the location value of 1, is 0.29°.(300° / 1024 = 0.29°)          For detailed information about controllable angles, refer to the Servo Motor SM-10A.Note Compatiable Controllers : CM-100ExampleSet the servo motor at Port 3 in rotation mode and turn it clockwise with 600 outputs.Set the servo motor at Port 3 in joint mode and move it to location 500 with maximum speed.Tips  Make sure the motor is connected to the correct port.  The servo motor is not suitable for detailed control, as it lacks the precision and torque of a Dynamixel motor.Warning If a program that controls LED modules is executed while another module (servo motor, IR module, etc.) is connected to the port, the module may be damaged.Touch SensorThis parameter is used to read the status of touch sensor (whether is was touched or not)(Please refer to the Touch Sensor TS-10 for more information)While the sensor being touched, the returned value will be TRUE(1). However, if you take off your hands from touch sensor, the returned value will be reset as False(0).Note Compatiable Controllers : CM-100, CM-510, CM-700ExampleThis example executes a block of code when the touch sensor at Port 3 is touched.LED ModuleThis parameter is used to turn on the LED or to read its current status.(Please refer to the LED Module LM-10 for more information)      LED module output constants can be used.            The actual values are numbers between 0 and 3. The following list shows what each value represents when setting or reading the LED module values.          0 : Turn off both LEDs.      1 : Turn on right LED only.      2 : Turn on left LED only.      3 : Turn on both LEDs.      Note Compatiable Controllers : CM-100ExampleTurn on both LEDs connected to Port 3.Warning If a program that controls LED modules is executed while another module (servo motor, IR module, etc.) is connected to the port, the module may be damaged.IR SensorThis parameter is used to read the value of the IR sensor module.(Please refer to the IR Sensor IRSS-10 for more information)  IR sensor values are numbers between 0 and 1023.  For objects with the same or similar color, the closer it is, the higher the value (closer to 1023), and the farther away it is, the lower the value (closer to 0).  For objects with the same distance, the lighter (white) the object, the higher the value, and the darker (black) the object, the lower the value.Note Compatiable Controllers : CM-100, CM-510, CM-700ExampleThis example executes a block of code if the value of the IR sensor connected to Port 3 is less than 500.Warning If a program that controls IR modules is executed while another module (servo motor, LED module, etc.) is connected to the port, the module may be damaged.DMS SensorThis parameter is used to read the value of the DMS sensor.(Please refer to the Distance Measurement Sensor DMS-80 for more information)  DMS sensor values are numbers between 0 and 1023.  For objects with the same or similar colors, the close it is, the higher the value (closer to 1023) and the farther away it is, the lower the value (closer to 0).  Unlike IR sensors, DMS sensors are hardly affected by colors.Note Compatiable Controllers : CM-510, CM-700ExampleThis example executes a block of code if the value of the DMS sensor connected to Port 3 is less than 500.User DevicesThis parameter is used to set or read the values of user’s devices.(Please refer to the Custom Device for more information)  Although the same address is used to read &amp;amp; write values, the actual port pins are different(Check user’s port pin information).  The value read from the user’s device is the voltage level of the input port.  The value read is a number between 0 and 1023.  When the user’s device is set  as 1, It will deliver 5V to the output port.  Setting the user’s device as 1 does not guarantee that the value read from the user’s device will be 1.  The output of the user’s device can be set using port value constants.Note Compatiable Controllers : CM-510, CM-700ExampleAfter setting the user’s device at Port 3 as 1 (high), if the value read value from Port 3 is less than 500, the output port is set as 0 (low).Dynamixel ParametersTorque EnableThis parameter is used to turn the motor’s torque on or off. It can also be used to determine whether the motor’s torque is currently on or off.The value is either TRUE or FALSE.  TRUE (1) : When set to TRUE, the motor’s torque  turns on.  When the parameter is read, a value of TRUE signifies that the motor’s torque is on.  FALSE (0) : When set to FALSE, the motor’s torque turns off.  When the parameter is read, a value of FALSE signifies that the motor’s torque is OFF.ExampleWhen the R button of the controller is pressed, the actuator with ID 1 will turn on.  When the L button is pressed, it will turn off.LEDThis parameter is used to set or read the Dynamixel’s LED status.The value is either TRUE or FALSE.  TRUE (1 ) : When set to TRUE,  the LED turns on. When the parameter is read, a value of TRUE signifies that the LED is on.  FALSE ( 0 ) : When set to FALSE, the LED turns off.  When the parameter is read, a value of FALSE signifies that the LED is off.ExampleTurns the LED on for 1 second and turns it off.CW/CCW MarginThese parameters are NOT available for MX Series.These parameters are used to set  or read the actuator’s margin value.  Margin values are numbers between 0 and 254.  The margin designates the area around the goal position that receives no torque.  The recommended value is 1. Unless otherwise specified, use the recommended value.ExampleSet both margins as 1.CW/CCW SlopeThese parameters are NOT available for MX Series.These parameters are used to set or read the actuator’s slope value.  The slope value will be created at both CW/CCW  directions, and the output level will be set near the target position.  If you set the lower slope value, it will reach to the target position by reducing the initial power NOT that much. On the contrary, if you set the higher value, it will reach the target position by reducing considerable powers as it reaches to the goal.  If you set the lower slope value, it will resist with maximum power not to stray from target position.  Even if you set the higher value, it will resist with more and more power if it is strayed too much from target position.  Compliance Slope will be changed into 7 Data representative values according to the input Data. In other words, if you input 25, in real operation, 16 -the representative value of 25-, will be used.            Level      Real Data Value      Representative Data Value                  1      0 (0x00) ~ 3(0x03)      2 (0x02)              2      4(0x04) ~ 7(0x07)      4 (0x04)              3      8(0x08)~15(0x0F)      8 (0x08)              4      16(0x10)~31(0x1F)      16 (0x10)              5      32(0x20)~63(0x3F)      32 (0x20)              6      64(0x40)~127(0x7F)      64 (0x40)              7      128(0x80)~254(0xFE)      128 (0x80)        Appropriate Compliance Slope, Power control, and the Compliance Margin values will make it possible to create smoother movement.Note Compatiable Controllers : CM-5, CM-510, CM-700ExampleSets both slope values as 32. Binary numbers are used to set the parameter.PID GainThese parameters are NOT available for AX, DX, RX and EX Series.Parameters for the actuator’s set PID values.  P gain refers to the value of proportional band. A small gap between vales grow bigger near the target value.  I gain refers to the value of integral action.  D Gain refers to the value of derivative action.  Gains values are in between 0~254.ExampleSet the P and I value 32Goal PositionThis parameters is used to set or read the actuator’s goal position.  Position constants can be used.  The value can be input directly, or set using the jog dial.  The position values of AX, DX, and RX-series are numbers between 0 and 1023  The position values of EX-series are numbers between 0 and 4095ExampleWhen the R button of the controller is pressed, the goal position of the actuator with ID 1 will be set as 1.  When the L button is pressed, the goal position will be set as 1023.Moving SpeedThis parameter is used to set or read the speed of actuator.  Motor control constants can be used.  In joint mode, the direction value is meaningless, and only the power value will be used.  In joint mode, set the value as 0 to output at maximum power.  In endless rotation mode, the direction and power values must be set together.  The joint mode or endless rotation mode can be set using at RoboPlus Manager. (Refer to “actuator mode”)ExampleWhen the R button of the controller is pressed, the speed of the actuator with ID1 will be set as 0.  When the L button is pressed, the speed will be set as 500.(If the actuator is in joint mode, the speed of 0 equates to maximum output. )Torque LimitThis parameter is used to set or read the power status of actuator.  Torque limit values are numbers between 0 and 1023 .ExampleSet the maximum torque of the actuator with ID 1 as 500.Present PositionThis parameter is used to read the actuator’s current position.  The current position of the actuator is read.ExamplePrints the present position of the actuator with ID 1 on the screen.Present SpeedThis parameter is used to read the actuator’s current speed.  The current speed of the actuator is read.ExamplePrints the present speed of the actuator ID 1 on the screen.Present LoadThis parameter is used to read the actuator’s current load.  The current load of the actuator is read.ExamplePrints the present load of the actuator with ID 1 on the screen.VoltageThis parameter is used to read the Dynamixel’s current voltage.  The current voltage of the Dynamixel is read.  The actual voltage is 1/10 of the read value. For example, if the returned value is 115, the actual voltage is 11.5V.ExamplePrints the current voltage of the Dynamixel with ID 1 on the screen.TemperatureThis parameter is used to read the Dynamixel’s current temperature.  The current temperature of the Dynamixel is read.xamplePrints the present temperature of the Dynamixel with ID 1 on the screen.MovingThis parameter is used to determine whether the actuator is currently moving or not.  The status of the actuator’s movement (whether it is moving or not) is returned.  If it is moving, 1 is returned.  If it is not, 0 is returned.ExampleSets the goal position of the actuator with ID 1 as 0, and waits for it to stop moving.Sensed CurrentThis parameter is NOT available for AX, DX and RX Series.This parameter is used to check the current being consumed. You can read EX Series motor’s current with this parameter.  If the value is 512, the currnet is 0 ampere.  That is, there is no current flowing.  If the value is larger than 512, the current is rotating the motor clockwise, and the size of the current is proportional to the size of the data. (1 = aprroximately 10 mA)  For example, if the data is 612, 1A (612-512=100 =&amp;gt; 100x10mA = 1,000mA) is being used to rotate the motor in the clockwise direction.  If the value is smaller than 512, the current is rotating the counterclockwise, and the size of the current is proportional to the size of the data. ( 1 = aprroximately. 10 mA)  For example, if the data is 312, 2A (512-312=200 =&amp;gt; 200x10mA=2,000mA) is being used to rotate the motor in the counterclockwise direction.ExampleIf the current of the EX motor with ID 1 is larger than 1A and flowing in the clockwise direction, the LED will turn on.  Otherwise, If it is larger than 2A, the motor will be turned off.Universal Sensor S1IR Left/Center/RightThese parameters are used to read the current IR sensor value from the universal sensor(AX-S1).  The current DMS sensor value of the universal sensor (S1) can be read.  Sensor values depend on the object’s color and surrounding light, so using the IR sensor to measure the exact distance is not recommended.  As mentioned above, IR sensor values are different if objects have different colors, even if they are the same distance away.  This characteristic can be utilized to distinguish black from white. (Used for tracing lines)  The sensor value is between 0 and 255.ExampleIn this example, specific motions are performed when only the left IR sensor detects an object or when only the right IR sensor detects an object.Tip  Sensor values may be affected by external lights that emit infrared rays, such as sunlight or a fluorescent lamp.  Sensor values depend on the object’s color and surrounding light, so using the IR sensor to measure the exact distance is not recommended.  As mentioned above, IR sensor values are different if objects have different colors, even if they are the same distance away. This characteristic can be utilized to distinguish black from white. (Used for tracing lines)Light Left/Center/RightThis parameter is used to read the current light brightness from the universal sensor(S1).  The current light brightness value of the universal sensor(S1) can be read.  The intensity of radiation of near by light sources such as candles and light bulb can be measured.  The sensor value is between 0 and 255.ExampleA block of code is executed when the left sensor detects brightness over 200.Object DetectedThis parameter is used to determine whether an object is detected within a certain distance from an IR sensor (Left/Center/Right) of the universal sensor(S1).  If an object is detected within a certain distance, the following values are returned.  Binary numbers can be used for the bit values.            Binary value      Decimal value             Meaning in Object Detected Commands                  000      0      Not detected                     001      1      Detected by left sensor                     010      2      Detected by center sensor                     011      3      Detected by left and center sensors                     100      4      Detected by right sensor                     101      5      Detected by right and left sensors                     110      6      Detected by right and center sensors                     111      7      Detected by every sensor             ExampleThe object detection threshold is set as 50, and a block of code will be executed when an object is detected within the threshold.Light DetectedThis parameter is used to determine whether a light is detected within a certain distance from an IR sensor (Left/Center/Right) of the universal sensor(S1).Compatible Controller  If a light is detected within a certain distance, the following values are returned.  Binary numbers can be used for the bit values.            Binary value      Decimal value             Meaning in Object Detected Commands                  000      0      Not detected                     001      1      Detected by left sensor                     010      2      Detected by center sensor                     011      3      Detected by left and center sensors                     100      4      Detected by right sensor                     101      5      Detected by right and left sensors                     110      6      Detected by right and center sensors                     111      7      Detected by every sensor             ExampleThe light detection threshold is set as 50, and a block of code will be executed when a light is detected within the threshold.Sound Max DataThis parameter is used to set or read the maximum sound data of the universal sensor(S1).  Reads the maximum sound data detected by the universal sensor(S1).  If the detected volume is louder than the volume of the max sound data, the max sound data is replaced with the detected value.  The value is between 0 and 255.  Because “Sound max data” is not initialized automatically, the user must reset it 0 before use.Note Compatiable Controllers : CM-5, CM-510, CM-700ExampleInitialize “Sound max data” as 0 and execute a block of code when it exceeds 200.Sound DataThis parameter is used to read the current sound level of the universal sensor (S1).  Reads the sound data of the universal sensor(S1).  If no sounds are detected, the returned value will be near 127.  When sounds are detected, the value will change according to the volume.  The louder the sound, the more the value will fluctuate from 127 to 0 and 255.  The value is between 0 and 255.Note Compatiable Controllers : CM-5, CM-510, CM-700ExamplePrints the current sound volume on the screen.Sound CountThis parameter is used to read or initialize the number of sounds detected by the universal sensor(S1).  “Sound Count” uses numbers between 0 and 255.  When sounds are no longer detected, the number of detected sounds will be input into the “‘Sound Count” parameter.  Because “Sound Count” is not initialized automatically, the user must reset it to 0 before use.ExampleInitializes “Sound count” as 0 and wait for a sound to be detected. Then, call the “Play” function.Sound TimeThis parameter is used to set or read how long the sound will be played.  The value is between 0 and 65535.  When “sound count” is initialized as 0, “sound  time” will be also initialized as 0.ExampleThe following example uses two AX-S1 sensors to determine the direction of the detected sound.Buzzer IndexThis parameter is used to set or read the musical note played by the buzzer of the universal sensor (S1).  The “Buzzer Time” parameter must always be used with the “Buzzer Index” parameter.  “Buzzer Time” must be set before “Buzzer Index” is set for the correct sound to be played.  (This order is very important)  (Click here for more information on “Buzzer Time.”)  Depending on what the “Buzzer Time” is set to, “Buzzer Index” can be set to play a musical note or a melody.          “Buzzer Time” is set to 255 : Melody Mode              Choose from 26 different melodies (0 ~ 25).            When “Buzzer Time” is between 0 and 254 : Musical Note Mode      Choose from 51 notes.  The selected note will play for the length set as “Buzzer Time.”      ExamplePlays melody #3.Plays Do, Mi, and Sol for 0.3 seconds each.Buzzer TimeThis parameter is used to set or read how long the sound is played by the buzzer of the universal sensor (S1).Note Compatiable Controllers : CM-5, CM-510, CM-700  “Buzzer Time” parameter must always be used with the “Buzzer Index” parameter.  “Buzzer Time” must be set before “Buzzer Index” is set for the correct sound to be played. (The order is important.) (Click  here for more information on “Buzzer Time.”.)  “Buzzer Time” can be set using buzzer time constants.  “Buzzer Time” can be set to a value between 0 and 255.  Each value represents 0.1 second.  For example, when “Buzzer Time” is set to 1, the note will be played for 0.1 second.  The maximum length a note will be played is 5 seconds.  Therefore, when values between 50 and 254 are entered, the note will be played for 5 seconds.          When “Buzzer Time” is set to 255 : Melody Mode      Choose from 26 different melodies (0-25).              When the melody finishes playing, “Buzzer Time” is reset to 0.            “Buzzer Time” is between 0 and 254 : Musical Note Mode      Choose from 51 notes.  The selected note will play for the length set as “Buzzer Time.”      When it is set to 254, the sound will play without end.      ExamplePlays melody #3 .Plays Do, Mi and Sol for 0.3 seconds each.  (Same as the example in “Buzzer Index”)IR COM ArrivedThis parameter is used to check whether there are any new data received via the wireless communication module.  1 : Indicates that there is new data in the input buffer.  0 : Indicates that all data in the input have been retrieved using the “IR COM RXD”’ parameter.ExampleWaits for new data to arrive and executes a block of code when the received data is 100.IR COM RXDThis parameter is used to read the data received via the wireless communication module.Note Compatiable Controllers : CM-5, CM-510, CM-700  The data is a number between 0 and 65535.  The IR COM Arrived parameter is can be used to check for new data.  Because there is an input buffer, a maximum of 2 data values can be saved.  If the input buffer is filled with 2 data values when READ is executed, the first data will be read and removed from the buffer. If there is only 1 data value in the input buffer when READ is executed, the latest data will be retrieved.ExampleWaits for new data to arrive and executes a block of code when the received data is 100.IR COM TXDThis parameter is used to transmit data via a wireless communication module.Note Compatiable Controllers : CM-5, CM-510, CM-700  The data to send must be a number between 0 and 65535.  When the “Remocon TXD” parameter is set, the data is immediately sent wirelessly.ExampleWaits for new data to arrive, and when the data arrives, the received data is transmitted wirelessly.Object Detection ThresholdThis parameter is used to set or read the object detection threshold.Note Compatiable Controllers : CM-5, CM-510, CM-700  Set the object detection threshold to be used when determining whether an object is detected or not.  There is a short-range detection mode and a long-distance detection mode.  The short range detection mode is activated when the threshold value is set as 0.ExampleThe object detection threshold is set as 50, and a block of code will be executed when an object is detected within the threshold.Light Detection ThresholdThis parameter is used to set or read the light detection threshold of the universal sensor (S1).Note Compatiable Controllers : CM-5, CM-510, CM-700  Set the threshold to be used when determining whether a light is detected or not.ExampleThe light detection threshold is set as 50, and a block of code will be executed when a light is detected within the threshold.IR Sensor ArrayIR Sensor ValueThese parameters are used to read the current IR sensor value from the IR Sensor Array.  The IR array reads values between 1 and 7. The array can be used at distances from 0cm to 5cm.  Textures and colors from walls and obstacles can influence the output values of the IR array.  The sensor value is between 0 and 1023.ExampleDetected values can emit different sounds as following the array’s values.Tip  Sensor values may be affected by external lights that emit infrared rays, such as sunlight or a fluorescent lamp.  Sensor values depend on the object’s color and surrounding light, so using the IR sensor to measure the exact distance is not recommended.  As mentioned above, IR sensor values are different if objects have different colors, even if they are the same distance away. This characteristic can be utilized to distinguish black from white. (Used for tracing lines)IR Array Buzzer IndexThis parameter is used to set or read the musical note played by the buzzer of the ir sensor array  The “Buzzer Time” parameter must always be used with the “Buzzer Index” parameter.  “Buzzer Time” must be set before “Buzzer Index” is set for the correct sound to be played.  (This order is very important) (Click here for more information on “Buzzer Time.”)  Depending on what the “Buzzer Time” is set to, “Buzzer Index” can be set to play a musical note or a melody.          “Buzzer Time” is set to 255 : Melody Mode              Choose from 26 different melodies (0 ~ 25).                    When “Buzzer Time” is between 0 and 254 : Musical Note Mode      Choose from 51 notes.  The selected note will play for the length set as “Buzzer Time.”      ExamplePlays melody #3.Plays Do, Mi, and Sol for 0.3 seconds each.IR Array Buzzer TimeThis parameter is used to set or read how long the sound is played by the buzzer of the ir sensor array.  “Buzzer Time” parameter must always be used with the “Buzzer Index” parameter.  “Buzzer Time” must be set before “Buzzer Index” is set for the correct sound to be played. (The order is important.) (Click  here for more information on “Buzzer Time.”.)  “Buzzer Time” can be set using buzzer time constants.  “Buzzer Time” can be set to a value between 0 and 255.  Each value represents 0.1 second.  For example, when “Buzzer Time” is set to 1, the note will be played for 0.1 second.  The maximum length a note will be played is 5 seconds.  Therefore, when values between 50 and 254 are entered, the note will be played for 5 seconds.          When “Buzzer Time” is set to 255 : Melody Mode      Choose from 26 different melodies (0-25).              When the melody finishes playing, “Buzzer Time” is reset to 0.                    “Buzzer Time” is between 0 and 254 : Musical Note Mode      Choose from 51 notes.  The selected note will play for the length set as “Buzzer Time.”      When it is set to 254, the sound will play without end.      ExamplePlays melody #3.Plays Do, Mi, and Sol for 0.3 seconds each.Auto Threshold ModeParameters for set black values and automatic detection start/set.  Starts when transitioning from ‘0’ to ‘1’ then sets after transitioning from ‘1’ to ‘0’  Also sets the timer from start to set.ExampleDuring a ‘1’ the LED will turn on, detecting a white or black then the array automatically sets values.IR Obstacle DetectedParamenters to determine IR array obstacle values  In the IR array if each IR sensor detected black value is lower than the set black valuethe values will be assigned as shown below; the LED turns on.            Binary value      Decimal Value      Black Detection                  0000001      1      Black detection for IR sensor #1              0000010      2      Black detection for IR sensor #2              0000100      4      Black detection for IR sensor #3              0001000      8      Black detection for IR sensor #4              0010000      16      Black detection for IR sensor #5              0100000      32      Black detection for IR sensor #6              1000000      64      Black detection for IR sensor #7        From the diagram you may check binary values.![IR Obstacle][img_ir_obstacle]ExampleSet sensor #1 to 100; when sensor #1 detects black do a specified action.IR ThresholdReference black/white for the IR array  Determines white/black set values.  sensor and set black values                   Black Detection      LED                  Sensor value &amp;lt;= set value      BIT 1      ON              Sensor value &amp;gt; set value      BIT 0      OFF      ExampleSet sensor #1 to 100; when sensor #1 detects black do a specified action.Direct AccessThe address of peripheral devices such as Dynamixels can be accessed directly and read from or written to.Note Compatiable Controllers : CM-5, CM-510, CM-700  Data can be read from or written to a specific in the form of bytes or words.ExampleWrite 0 at word address 25 of the Dynamixel with ID 105.Print the value stored in the word address 25 of the Dynamixel with ID 105.VariablesThis is a storage place inside a program capable of saving, editing, and reading data.  If a variable with the same name already exists, it is not created.  Instead, the existing varible is used.  Spaces are not permitted in variable names.  Variable names cannot start with a number.  Special characters (!, @, #, $, etc ) are not allowed in variable names.(Underscores ( _ ) are permitted.)ExampleVariables may be used for many purposes.  Existing Variables are listed in the “Set Device or Number” window.TipVariables are useful when a number to be remembered, when a value must be changed depending on the situation, or when multiple values must be changed at once.",
        "url": " http://localhost:4000/emanual/docs/en/software/rplus1/task/programming_02/"
      } ,
  
>>>>>>> contents
      "docs-kr-software-rplus1-task-programming-02":  {
        "title": "R+ Task 1.0",
      "content"	 : "프로그래밍편집여러줄 선택줄 삽입줄 지우기줄 활성/비활성복사/잘라내기/붙여넣기이름찾기명렁어프로그램 시작프로그램 강제종료구간 시작/끝주석/메모계산로드레이블/점프조건문무조건 반복조건 반복횟수 반복반복 끝내기조건 대기함수 강제종료함수 만들기/호출콜백 함수제어기 파라미터보낼 무선 데이터받은 무선 데이터새 무선 데이터임의의 숫자Aux LED버튼타이머정밀타이머상대 로봇 무선ID내 로봇 무선ID화면출력/줄바꿈적외선 센서부저 종류부저 울림시간최종 소리감지 횟수실시간 소리감지 횟수시작버튼 눌림횟수자동꺼짐 타이머RC-100 채널스마트앱 파라미터모션 파라미터모션 페이지모션 상태관절 오프셋관절 LED 자동켜기주변장치감속모터서보모터접촉센서LED모듈적외선센서컬러센서자석센서절대거리센서사용자 장치다이나믹셀:액츄에이터모터 켜기LEDCW/CCW MarginCW/CCW Slope목표 위치이동 속도힘 조절현재 위치현재 속도현재 하중전압온도움직임 유무다이나믹셀:EX액츄에이터모터 켜기LEDCW/CCW MarginCW/CCW Slope목표 위치이동 속도힘 조절현재 위치현재 속도현재 하중전압온도움직임 유무소모 전류량다이나믹셀:MX액츄에이터모터 켜기LEDPID 제어목표 위치이동 속도힘 조절현재 위치현재 속도현재 하중전압온도움직임 유무소모 전류량통합센서(S1)거리센서 값조명 밝기물체감지조명감지소리 크기최대 소리 크기소리감지 횟수소리발생 시간부저 음계부저 울림시간새 리모컨 데이터받은 리모컨 데이터보낼 리모컨 데이터물체감지 기준값조명감지 기준값적외선 센서 어레이적외선 센서 값부저 음계부저 울림시간감지 기준값 자동설정적외선 물체감지적외선감지 기준값직접 지정로보플러스 태스크어떤 일을 처리하기 위한 행동들의 집합을 태스크(Task)라고 합니다. 로봇이 해야할 태스크를 프로그래밍 한 소스를 로보플러스(RoboPlus)에서는 태스크 코드(Task Code)라고 합니다. 로봇은 사용자가 작성한 태스크 코드에 따라 동작하게 되며, 이러한 태스크 코드를 쉽게 작성할 수 있도록 도와주는 것이 로보플러스 태스크(RoboPlus Task) 프로그램입니다.태스크 코드 파일은 PC 에서 .tsk 라는 확장자를 가지며 좌측과 같은 아이콘으로 표시됩니다.참고 상위버젼의 Task 파일은 하위버젼에서 호환되지 않습니다.설치하기다운로드 로보티즈 홈페이지 자료실로보플러스는 모든 로보티즈 제품을 프로그래밍할 수 있는 통합 소프트웨어입니다.RoboPlus 시스템 요구 사항  OS : Windows XP Service Pack 2 이상/ Vista/ 7 (32/64bit)/8 (32/64bit)  800MHz이상의 32비트(x86) 또는 64비트 (x64) 프로세서  3D 가속 기능을 지원하는 그래픽 카드  512MB이상 시스템 메모리  여유공간이 500MB 이상인 하드디스크참고 로보플러스를 실행하기 위해선 .NET FrameWork 3.5이상의 버전이 필요 합니다. 로보플러스 설치시 .NET FrameWork 자동설치가 실패할 경우엔 .NET FreameWork를 별도로 설치하세요.RoboPlus 설치 실패시대부분의 RoboPlus 설치 실패의 원인은 사용자 PC환경에 따른 .NET FrameWork 자동 설치 실패 입니다. 따라서 사용자가 직접 .NET FrameWork 3.5를 수동으로 설치 하셔야 합니다..NET FrameWork 3.5를 수동으로 설치 하기 전에 Windows installer 3.1이상이 설치 되어 있어야 합니다.Windows installer와 .NET Framework는 마이크로소프트 다운로드 센터에서 다운로드가 가능합니다.Windows installer 3.1 다운로드.NET Framework 3.5 다운로드시작하기명령줄 만들기명령을 작성하고 싶은 빈 줄을 더블클릭하거나, 마우스를 클릭 후 엔터를 입력하면 선택한 제어기에서 사용할 수 있는 명령을 입력할 수 있습니다.만약, 제어기가 선택되어 있지 않다면, 사용자에게 현재 프로그램에서 사용할 제어기를 묻게 됩니다.파라미터 만들기파라미터(Parameter)는 명령이 수행되기 위해 필요한 대상입니다. 아무것도 설정되지 않았다면 ‘?’표시로 나타나게 됩니다.명령을 선택한 다음에는 명령줄을 완성하기 위해 파라미터를 만들어야 합니다.      Enter키를 누르거나 마우스를 더블클릭하여 편집 모드로 들어갑니다.            좌/우 방향키를 누르거나 마우스로 클릭하면 만들 파라미터를 선택할 수 있습니다.            Enter키를 누르거나 마우스를 더블클릭하면 파라미터 선택창이 나타납니다.            적절한 파라미터를 선택합니다. 각 파라미터의 사용법을 익히는 것이 매우 중요합니다.  프로그램 다운로드태스크 코드를 제어기에 다운로드합니다. 다운로드 과정은 제어기 내부에 태스크 코드를 저장하므로 한번만 수행하면 됩니다.      PC 와 제어기가 연결되어야 합니다. 태스크 코드를 다운로드하기 위해서는 PC 와 제어기가 연결되어야 합니다. (연결 방법은 각 제어기 정보를 참고하세요.)        사용할 통신 포트를 선택해야 합니다. 자동 찾기 기능을 이용하면 쉽게 통신 포트를 설정할 수 있습니다.        RoboPlus Task 가 제어기를 찾지 못하면 아래와 같은 에러 메시지가 나타납니다.        PC 와 제어기가 연결되어 있는지 확인합니다. (연결 방법은 각 제어기 정보를 참고하세요.) 제어기의 전원이 켜져 있는지 확인합니다. 제어기가 연결된 통신 포트가 바르게 선택되어 있는지 확인합니다.        다운로드 메뉴를 선택합니다. 만약, 프로그램에 오류가 있다면 오류를 찾아 수정해야 합니다. (룰 체크 에러 메시지 확인)            다운로드를 진행합니다. 만약 다운로드에 실패했다면 처음부터 다시 시도합니다.            태스크 코드(Task Code)를 실행합니다. -&amp;gt; 로봇의 동작을 실행 합니다. 제어기를 켜고 다운로드 한 태스크 코드를 실행합니다. (태스크 코드 실행 방법은 각 제어기 정보를  참고하세요.)  동영상      로보플러스 프로그램 다운로드(CM-100)            로보플러스 프로그램 다운로드(CM-510/530)      프로그램 결과 출력일반적으로 제어기는 PC와 같이 모니터와 같은 출력 장치가 없기 때문에 내부 상태를 확인하기 어렵습니다. 따라서, 터미널(Terminal)이라는 프로그램을 통해 PC 모니터를 빌려쓰는 방식을 사용합니다. RoboPlus Task에는 터미널 프로그램이 포함되어 있어서 제어기의 상태를 확인할 수 있습니다.프로그램 출력용 모니터 창 띄우기프로그램 실행 시 화면 출력을 보기 위해서는 반드시 프로그램 실행 전에 프로그램 출력용 모니터 창을 띄워야 합니다. 프로그램 출력용 모니터 창을 띄우는 방법은 아래와 같이 여러 가지가 있습니다.      프로그램 다운로드 창에서 프로그램 출력 보기 버튼을 클릭      도구 모음에서 프로그램 출력 보기 버튼을 클릭  프로그램(P) 메뉴의 프로그램 출력 보기(V) 메뉴 선택 혹은 단축키 F5화면 출력/화면 출력 후 줄바꿈태스크 코드에 화면 출력 파라미터를 사용하면 원하는 값을 볼 수 있습니다.화면 출력 : 값을 출력하고 커서를 옆으로 한 칸 이동시킵니다.화면 출력 후 줄바꿈 : 값을 출력하고 커서를 다음 줄로 이동시킵니다.화면 출력 내용  제어기 자체 출력 내용                  프로그램 시작 메시지가 처음에 출력됩니다.                    프로그램 수행 중 에러 메시지 (에러 메시지 종류 보기)              태스크 코드 출력 내용 : -32767 ~ +32767 범위의 10진수로 표시됩니다. (글자는 출력할 수 없습니다.)                  숫자를 출력하는 경우                    센서 값을 출력하는 경우            화면 지우기화면의 내용을 지울 수 있습니다.가상로봇 조종RboPlus Task는 RC-100 등과 같은 조종기가 없어도 조종 기능을 사용할 수 있도록 가상 로봇 조종 기능을 지원하며, 조종기 버튼을 마우스로 클릭하거나 키보드를 이용하여 사용할 수 있습니다.키보드 조종은 아래 표를 참고하세요.            실제 RC-100 키      가상 RC-100의 키보드 키                  U      방향키(↑)              D      방향키(↓)              L      방향키(←)              R      방향키(→)              1      숫자키(1)              2      숫자키(2)              3      숫자키(3)              4      숫자키(4)              5      숫자키(5)              6      숫자키(6)      ",
        "url": " http://localhost:4000/emanual/docs/kr/software/rplus1/task/programming_02/"
      } ,
  
<<<<<<< HEAD
=======
      "docs-en-dxl-protocol1":  {
        "title": "Protocol 1.0",
      "content"	 : "Instruction PacketInstruction Packet is the command data sent to the Device.            Header1      Header2      ID      Length      Instruction      Param 1      …      Param N      Checksum                  0xFF      0xFF      ID      Length      Instruction      Param 1      …      Param N      CHKSUM      HeaderThe field indicates the start of the Packet.Packet IDThe field that indicates the ID of the Device that should receive the Instruction Packet and process it  Range : 0 ~ 253 (0x00 ~ 0xFD), which is a total of 254 numbers that can be used.  Broadcast ID : 254 (0xFE), which makes all connected devices execute the Instruction Packet.LengthThe length of the Packet(Instruction, Parameter, Checksum fields).Length = number of Parameters + 2InstructionThe field that defines the type of instruction.            Value      Instructions      Description                  0x01      Ping      Instruction that checks whether the Packet has arrived to a device with the same ID as Packet ID              0x02      Read      Instruction to read data from the Device              0x03      Write      Instruction to write data on the Device              0x04      Reg Write      Instruction that registers the Instruction Packet to a standby status; Packet is later executed through the Action instruction              0x05      Action      Instruction that executes the Packet that was registered beforehand using Reg Write              0x06      Factory Reset      Instruction that resets the Control Table to its initial factory default settings              0x83      Sync Write      For multiple devices, Instruction to write data on the same Address with the same length at once      ParametersParameters are used when additional data is required for an instruction.Instruction ChecksumIt is used to check if packet is damaged during communication.Instruction Checksum is calculated according to the following formula.Instruction Checksum = ~( ID + Length + Instruction + Parameter1 + … Parameter N )Where “~” is the Binary Ones Complement operator.When the calculation result of the parenthesis in the above formula is larger than 255 (0xFF), use only lower bytes.For example, when you want to use below Instruction Packet,ID=1(0x01), Length=5(0x05), Instruction=3(0x03),Parameter1=12(0x0C), Parameter2=100(0x64), Parameter3=170(0xAA)Checksum = ~ ( ID + Length + Instruction + Parameter1 + … Parameter 3 )= ~ [ 0x01 + 0x05 + 0x03 + 0x0C + 0x64 + 0xAA ]= ~ [ 0x123 ] // Only the lower byte 0x23 executes the Not operation.= 0xDCThus, Instruction Packet should be 0xFF, 0xFF, 0x01, 0x05, 0x03, 0x0C, 0x64, 0xAA, 0xDC.Status Packet            Header1      Header2      ID      Length      Error      Param 1      …      Param N      Checksum                  0xFF      0xFF      ID      Length      Error      Param 1      …      Param N      CHKSUM      ErrorThis field displays the error status occurred during the operation of Dynamixel.            Bit      Error      Description                  Bit 7      0      -              Bit 6      Instruction Error      In case of sending an undefined instruction or delivering the action instruction without the reg_write instruction, it is set as 1              Bit 5      Overload Error      When the current load cannot be controlled by the set Torque, it is set as 1              Bit 4      Checksum Error      When the Checksum of the transmitted Instruction Packet is incorrect, it is set as 1              Bit 3      Range Error      When an instruction is out of the range for use, it is set as 1              Bit 2      Overheating Error      When internal temperature of Dynamixel is out of the range of operating temperature set in the Control table, it is set as 1              Bit 1      Angle Limit Error      When Goal Position is written out of the range from CW Angle Limit to CCW Angle Limit , it is set as 1              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control table, it is as 1      For example, when Status Packet is returned as below0xFF 0xFF 0x01 0x02 0x24 0xD8It means that the error of 0x24 occurs from Dynamixel whose ID is 01. Since 0x24 is 00100100 as binary, Bit5 and Bit2 become 1. In order words, Overload and Overheating Errors have occurred.Note The error types on the table above are related to actuators, and the contents may vary depending on the type of Dynamixel.Status ChecksumIt is used to check if packet is damaged during communication.Status Checksum is calculated according to the following formula.Status Checksum = ~( ID + Length + Error + Parameter1 + … Parameter N )Instruction DetailsPingThis instruction requests the Status Packet from a specific ID. Even if Status Return Level(16) is 0, Dynamixel returns Status Packet all the time for Ping Instruction.            Instruction      Length      Parameter                  0x01      0x02      -      ExampleConditions  ID 1(RX-64) is connected to the PC with an identical baudrate.Ping Instruction Packet            H1      H2      ID      LEN      INST      CKSM                  0xFF      0xFF      0x01      0x02      0x01      0xFB      ID 1 Status Packet            H1      H2      ID      LEN      ERR      CKSM                  0xFF      0xFF      0x01      0x02      0x00      0xFC      ReadThis instruction is to read data in the Control Table of Dynamixel.            Instruction      Length      Param 1      Param 2                  0x02      0x04      Starting Address of the Data      Length of Data to read      ExampleConditions  ID 1(RX-64) : Read Present Temperature, which is located at the address 43(0x2B)Read Instruction Packet            H1      H2      ID      LEN      INST      P1      P2      CKSM                  0xFF      0xFF      0x01      0x04      0x02      0x2B      0x01      0xCC      ID 1 Status Packet            H1      H2      ID      LEN      ERR      P1      CKSM                  0xFF      0xFF      0x01      0x03      0x00      0x20      0xDB      WriteThis instruction is to write data to the Control Table of DYNAMIXEL            Instruction      Length      Param 1      Param 2      Param 3      Param N+1                  0x03      N + 3      Starting Address of the Data      1st Byte      2nd Byte      Nth Byte      ExampleConditions  ID broadcast(RX-64) : Set the unknwon Dynamixel’s ID as “1” by writing 1 to ID(3)Write Instruction Packet            H1      H2      ID      LEN      INST      P1      P2      CKSM                  0xFF      0xFF      0xFE      0x04      0x03      0x03      0x01      0xF6      Note Status Packet will not be returned if Broadcast ID(0xFE) is used.Reg Write  Instruction that is similar to Write Instruction, but has an improved synchronization characteristic  Write Instruction is executed immediately when an Instruction Packet is received.  Reg Write Instruction registers the Instruction Packet to a standby status, and sets Control table Registered Instruction to ‘1’.  When an Action Instruction is received, the registered Packet is executed, and sets Control Table Registered Instruction to ‘0’.            Instruction      Length      Param 1      Param 2      Param N+1                  0x04      N+3      Starting Address of the Data      1st Byte      Nth Byte      ExampleConditions  ID 1(RX-64) : Reg Write 500(0x1F4) to Goal Position(30) and wait for Action instruction to move.Reg Write Instruction Packet            H1      H2      ID      LEN      INST      P1      P2      P3      CKSM                  0xFF      0xFF      0x01      0x05      0x04      0x1E      0xF4      0x01      0xE2      ID 1 Status Packet            H1      H2      ID      LEN      ERR      CKSM                  0xFF      0xFF      0x01      0x02      0x00      0xFC      ActionThis instruction is to execute the registered Reg Write instruction. The Action instruction is useful when multiple Dynamixels are required to start moving at the same time. When several devices are controlled via communication, there is a minor time difference between enabling the first and last device. Dynamixel has resolved this problem by using Action instruction.            Instruction      Length      Parameter                  0x05      0x02      -      ExampleConditions  All Dynamixels have received Reg Write instructions.Action Instruction Packet            H1      H2      ID      LEN      INST      CKSM                  0xFF      0xFF      0xFE      0x02      0x05      0xFA      Note Status Packet will not be returned if Broadcast ID(0xFE) is used.Factory ResetThis instruction is to reset the Control Table of Dynamixel to the factory default values.Caution Please be careful as Reset instruction will erase saved custom values in the EEPROM.            Instruction      Length      Parameter                  0x06      0x02      -      ExampleConditions  ID 0(RX-64) : Factory Reset the DynamixelFactory Reset Instruction Packet            H1      H2      ID      LEN      INST      CKSM                  0xFF      0xFF      0x00      0x02      0x06      0xF7      ID 0 Status Packet            H1      H2      ID      LEN      ERR      CKSM                  0xFF      0xFF      0x00      0x02      0x00      0xFD      Sync WriteThis instruction is used to control multiple Dynamixels simultaneously with a single Instruction Packet transmission. When this instruction is used, several instructions can be transmitted at once, so that the communication time is reduced when multiple Dynamixels are connected in a single channel. However, the SYNC WRITE instruction can only be used to a single address with an identical length of data over connected Dynamixels. ID should be transmitted as Broadcasting ID.            Item      Description                  Instruction      0x83              Length      ((L + 1) * N) + 4, L:Data Length, N:Number of Dynamixel              Parameter 1      Starting address              Parameter 2      Length of Data to write              Parameter 3      [1st Device] ID              Parameter 4      [1st Device] 1st Byte              Parameter 5      [1st Device] 2nd Byte              …      …              Parameter L+3      [1st Device] L-th Byte              Parameter L+4      [2nd Device] ID              Parameter L+5      [2nd Device] 1st Byte              Parameter L+6      [2nd Device] 2nd Byte              …      …              Parameter 2L+4      [2nd Device] L-th Byte      ExampleConditions  ID 0(RX-64) : Write 0x010 to Goal Position(30, 0x1E) and write 0x150 to Moving Speed(32, 0x20)  ID 1(RX-64) : Write 0x220 to Goal Position(30, 0x1E) and write 0x360 to Moving Speed(32, 0x20)Sync Write Instruction Packet            H1      H2      ID      LEN      INST      P1      P2      P3      P4      P5      P6      P7      P8      P9      P10      P11      P12      CKSM                  0xFF      0xFF      0xFE      0x0E      0x83      0x1E      0x04      0x00      0x10      0x00      0x50      0x01      0x01      0x20      0x02      0x60      0x03      0x67      Note Status Packet will not be returned if Broadcast ID(0xFE) is used.Bulk ReadThis instruction is used for reading values of multiple DYNAMIXELs simultaneously by sending a single Instruction Packet. The packet length is shortened compared to sending multiple READ commands, and the idle time between the status packets being returned is also shortened to save communication time. However, this cannot be used to read a single module. If an identical ID is designated multiple times, only the first designated parameter will be processed.            Item      Description                  Instruction      0x92              Length      3N + 3              Parameter 1      0x00              Parameter 2      [1st Device] Length of Data to read              Parameter 3      [1st Device] ID              Parameter 4      [1st Device] Starting address              …      …              Parameter 3N+2      [Nth Device] Length of Data to read              Parameter 3N+3      [Nth Device] ID              Parameter 3N+4      [Nth Device] Starting address      ExampleConditions  ID 1(RX-64) : Read the 2-byte Goal Position value(30, 0x1E).  ID 2(RX-64) : Read the 2-byte Present Position value(36, 0x24).Bulk Read Instruction Packet            H1      H2      ID      LEN      INST      P1      P2      P3      P4      P5      P6      P7      CKSM                  0xFF      0xFF      0xFE      0x09      0x92      0x00      0x02      0x01      0x1E      0x02      0x02      0x24      0x1D      When Bulk Read instruction is received, Dynamixel with ID 2 monitors the status packet being sent from ID 1 of the data bus (the preceeding device ID), and when device ID 1’s status packet transmission is completed, ID 2 sends its own status packet.ID 1 Status Packet            H1      H2      ID      LEN      ERR      P1      P2      CKSM                  0xFF      0xFF      0x01      0x04      0x00      0x00      0x80      0x7A      ID 2 Status Packet            H1      H2      ID      LEN      ERR      P1      P2      CKSM                  0xFF      0xFF      0x02      0x04      0x00      0x00      0x80      0x79      More Packet Examples",
        "url": " http://localhost:4000/emanual/docs/en/dxl/protocol1/"
      } ,
  
      "docs-en-dxl-protocol2":  {
        "title": "Protocol 2.0",
      "content"	 : "  Protocol 2.0 supported devices: MX-28, MX-64, MX-106(MX Series with Firmware V39 or above), X Series, DYNAMIXEL Pro  Protocol 2.0 supported controllers: CM-150 , CM-200  Other: 2.0 protocol from R+ Smart appInstruction PacketInstruction Packet is the command data sent to the Device.            Header1      Header2      Header3      Reserved      Packet ID      Length1      Length2      Instruction      Param      Param      Param      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      ID      Len_L      Len_H      Instruction      Param 1      …      Param N      CRC_L      CRC_H      HeaderThe field indicates the start of the PacketReserved0x00 (0xFD cannot be used)Packet IDThe field that indicates the ID of the Device that should receive the Instruction Packet and process it  Range : 0 ~ 252 (0x00 ~ 0xFC), which is a total of 253 numbers that can be used  Broadcast ID : 254 (0xFE), which makes all connected devices execute the Instruction Packet  253(0xFD), 255(0xFF) : These are not used in order to avoid duplicate use with HeaderPacket LengthThe length after the Packet Length field (Instruction, Parameter, CRC fields).Packet Length = number of Parameters + 3InstructionThe field that defines the type of command.            Value      Instructions      Description                  0x01      Ping      Instruction that checks whether the Packet has arrived to a device with the same ID as Packet ID              0x02      Read      Instruction to read data from the Device              0x03      Write      Instruction to write data on the Device              0x04      Reg Write      Instruction that registers the Instruction Packet to a standby status; Packet is later executed through the Action command              0x05      Action      Instruction that executes the Packet that was registered beforehand using Reg Write              0x06      Factory Reset      Instruction that resets the Control Table to its initial factory default settings              0x08      Reboot      Instruction to reboot the Device              0x55      Status(Return)      Return Instruction for the Instruction Packet              0x82      Sync Read      For multiple devices, Instruction to read data from the same Address with the same length at once              0x83      Sync Write      For multiple devices, Instruction to write data on the same Address with the same length at once              0x92      Bulk Read      For multiple devices, Instruction to read data from different Addresses with different lengths at once              0x93      Bulk Write      For multiple devices, Instruction to write data on different Addresses with different lengths at once      Parameters  As the auxiliary data field for Instruction, its purpose is different for each Instruction.  Method of expressing negative number data : This is different for each product, so please refer to the e-manual of the corresponding product.CRC16bit CRC field checks if the Packet has been damaged during communication. Please refer to the CRC calculation code.Status Packet            Header1      Header2      Header3      Reserved      Packet ID      Length1      Length2      Instruction      ERR      PARAM      PARAM      PARAM      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      ID      Len_L      Len_H      Instruction      Error      Param 1      …      Param N      CRC_L      CRC_H      InstructionInstruction of the Status Packet is designated to 0x55 (Status)ErrorThe field that indicates the processing result of Instruction Packet            Bit 7      Bit 6 ~ Bit 0                  Alert      Error Number        Alert : When there has been a problem in the Device, this field is set as 1. Checking the Hardware error status value of the Control Table can indicate the cause of the problem.  Error Number : When there has been an Error in the processing of the Instruction Packet.            Value      Error      Description                  0x01      Result Fail      Failed to process the sent Instruction Packet              0x02      Instruction Error      Undefined Instruction has been usedAction has been used without Reg Write              0x03      CRC Error      CRC of the sent Packet does not match              0x04      Data Range Error      Data to be written in the corresponding Address is outside the range of the minimum/maximum value              0x05      Data Length Error      Attempt to write Data that is shorter than the data length of the corresponding Address(ex: when you attempt to only use 2 bytes of a item that has been defined as 4 bytes)              0x06      Data Limit Error      Data to be written in the corresponding Address is outside of the Limit value              0x07      Access Errer      Attempt to write a value in an Address that is Read Only or has not been definedAttempt to read a value in an Address that is Write Only or has not been definedAttempt to write a value in the ROM domain while in a state of Torque Enable(ROM Lock)      Parameter  As the auxiliary data field for Instruction, its purpose is different for each Instruction.  Method of expressing negative number data : This is different for each product, so please refer to the e-manual of the corresponding productPacket ProcessProcessing Order of Transmission  Generate basic form of Packet and afterwards Byte Stuffing(0xFD)          Inspection range : Everything within the Instruction field to the Parameter field (not the CRC)      Processing method : When the pattern “0xFF 0xFF 0xFD” appears, add Byte Stuffing (0xFD) (If “0xFF 0xFF 0xFD” already exists, add a 0xFD to change it to “0xFF 0xFF 0xFD 0xFD”)        Packet Length : Modify to Packet Length with Byte Stuffing applied  CRC : Calculate CRC with Byte Stuffing appliedProcessing Order of Reception  Search for Header(0xFF 0xFF 0xFD) : Ignore the Byte Stuffing(“0xFF 0xFF 0xFD 0xFD”).  Packet ID : If Packet ID is valid, receive additional transmission the size of Packet Length  CRC : Calculate with the received Packet with Byte Stuffing included, and once CRC is matched then remove Byte StuffingInstruction DetailsPingDescription  Instruction to check the existence of a Device and basic information  Regardless of the Status Return Level of the Device, the Status Packet is always sent to Ping Instruction.  When the Packet ID field is 0xFE(Broadcast ID) : All devices send their Status Packet according to their arranged order.Packet ParametersNote Status Packet is received from each Device.            Status Packet      Description                  Parameter 1      Model Number LSB              Parameter 2      Model Number MSB              Parameter 3      Version of Firmware      Example 1Conditions  ID1(XM430-W210) : For Model Number 1030(0x0406), Version of Firmware 38(0x26)  Instruction Packet ID : 1Ping Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x03      0x00      0x01      0x19      0x4E      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      PARAM2      PARAM3      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x07      0x00      0x55      0x00      0x06      0x04      0x26      0x65      0x5D      Example 2Conditions  ID1(XM430-W210) : For Model Number 1030(0x0406), Version of Firmware 38(0x26)  ID2(XM430-W210) : For Model Number 1030(0x0406), Version of Firmware 38(0x26)  Instruction Packet ID : 254(Broadcast ID)Ping Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0xFE      0x03      0x00      0x01      0x31      0x42      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      PARAM2      PARAM3      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x07      0x00      0x55      0x00      0x06      0x04      0x26      0x65      0x5D      ID 2 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      PARAM2      PARAM3      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x02      0x07      0x00      0x55      0x00      0x06      0x04      0x26      0x6F      0x6D      ReadDescription  Instruction to read a value from Control Table  Method of expressing negative number data : This is different for each product, so please refer to the e-manual of the corresponding productPacket Parameters            Instruction Packet      Description                  Parameter 1      Low-order byte from the starting address              Parameter 2      High-order byte from the starting address              Parameter 3      Low-order byte from the data length (X)              Parameter 4      High-order byte from the data length (X)                  Status Packet      Description                  Parameter 1      First Byte              Parameter 2      Second Byte              …      …              Parameter X      X-th Byte      ExampleConditions  ID1(XM430-W210) : Present Position(132, 0x0084, 4[byte]) = 166(0x000000A6)Read Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      PARAM1      PARAM2      PARAM3      PARAM4      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x07      0x00      0x02      0x84      0x00      0x04      0x00      0x1D      0x15      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      PARAM2      PARAM3      PARAM4      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x08      0x00      0x55      0x00      0xA6      0x00      0x00      0x00      0x8C      0xC0      WriteDescription  Instruction to write a value on the Control Table  Method of expressing negative number data : This is different for each product, so please refer to the e-manual of the corresponding productPacket Parameters            Instruction Packet      Description                  Parameter 1      Low-order byte from the starting address              Parameter 2      High-order byte from the starting address              Parameter 2+1      First Byte              Parameter 2+2      Second Byte              …      …              Parameter 2+X      X-th Byte      ExampleConditions  ID1(XM430-W210) : Write 512(0x00000200) to Goal Position(116, 0x0074, 4[byte])Write Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      P2      P3      P4      P5      P6      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x09      0x00      0x03      0x74      0x00      0x00      0x02      0x00      0x00      0xCA      0x89      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x04      0x00      0x55      0x00      0xA1      0x0C      Reg WriteDescription  Instruction that is similar to Write Instruction, but has an improved synchronization characteristic  Write Instruction is executed immediately when an Instruction Packet is received.  Reg Write Instruction registers the Instruction Packet to a standby status, and sets Control table Registered Instruction to ‘1’.  When an Action Instruction is received, the registered Packet is executed, and sets Control Table Registered Instruction to ‘0’.Packet Parameters            Instruction Packet      Description                  Parameter 1      Low-order byte from the starting address              Parameter 2      High-order byte from the starting address              Parameter 2+1      First Byte              Parameter 2+2      Second Byte              …      …              Parameter 2+X      X-th Byte      ExampleCondition  ID1(XM430-W210) : Write 200(0x000000C8) to Goal Velocity(104, 0x0068, 4[byte])Reg Write Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      P2      P3      P4      P5      P6      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x09      0x00      0x04      0x68      0x00      0xC8      0x00      0x00      0x00      0xAE      0x8E      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x04      0x00      0x55      0x00      0xA1      0x0C      ActionDescription  Instruction that executes the Packet that has been registered using Reg Write Instruction  When controlling multiple devices using Write Instruction, there will be a difference in the time of execution between the first device that receives the Packet and the last device that receives the Packet.  By using Reg Write and Action Instruction, one can operate multiple devices simultaneously.ExampleCondition  ID1(XM430-W210) : Instruction has been already registered by the Reg Write Instruction.Action Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x03      0x00      0x05      0x02      0xCE      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x04      0x00      0x55      0x00      0xA1      0x0C      Factory ResetDescription  Instruction that resets the Control Table to its initial factory default settings.Parameters            Instruction Packet      Description                  Parameter 1      0xFF : Reset all0x01 : Reset all except ID0x02 : Reset all except ID and Baudrate      ExampleConditions  ID1(XM430-W210) : Apply reset with option 0x01(Reset all except ID)Factory Reset Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x04      0x00      0x06      0x01      0xA1      0xE6      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x04      0x00      0x55      0x00      0xA1      0x0C      RebootDescription  Instruction to reboot the deviceExampleConditions  ID1(XM430-W210)Reboot Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x03      0x00      0x08      0x2F      0x4E      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x04      0x00      0x55      0x00      0xA1      0x0C      Sync ReadDescription  Instruction to read data from multiple devices simultaneously using one Instruction Packet  The Address and Data Length of the data must all be the same.  If the Address of the data is not continual, an Indirect Address can be used.  Packet ID field : 0xFE (Broadcast ID)Parameters            Instruction Packet      Description                  Parameter 1      Low-order byte from the starting address              Parameter 2      High-order byte from the starting address              Parameter 3      Low-order byte from the data length(X)              Parameter 4      High-order byte from the data length(X)              Parameter 4+1      ID of the 1st Device              Parameter 4+2      ID of the 2nd Device              …      …              Parameter 4+X      ID of the X-th Device      Note Status Packet is received from each Device.            Status Packet      Description                  Parameter 1      Frist Byte              Parameter 2      Second Byte              …      …              Parameter X      X-th Byte      ExampleConditions  ID1(XM430-W210) : Present Position(132, 0x0084, 4[byte]) = 166(0x000000A6)  ID2(XM430-W210) : Present Position(132, 0x0084, 4[byte]) = 2,079(0x0000081F)Sync Read Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      P2      P3      P4      P5      P6      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0xFE      0x09      0x00      0x82      0x84      0x00      0x04      0x00      0x01      0x02      0xCE      0xFA      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      PARAM2      PARAM3      PARAM4      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x08      0x00      0x55      0x00      0xA6      0x00      0x00      0x00      0x8C      0xC0      ID 2 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      PARAM2      PARAM3      PARAM4      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x02      0x08      0x00      0x55      0x00      0x1F      0x08      0x00      0x00      0xBA      0xBE      Sync WriteDescription  Instruction to control multiple devices simultaneously using one Instruction Packet  The Address and Data Length of the data must all be the same.  If the Address of the data is not continual, an Indirect Address can be used.  Packet ID field : 0xFE (Broadcast ID)Parameters            Instruction Packet      Description                  Parameter 1      Low-order byte from the starting address              Parameter 2      High-order byte from the starting address              Parameter 3      Low-order byte from the data length(X)              Parameter 4      High-order byte from the data length(X)              Parameter 5      [1st Device] ID              Parameter 5+1      [1st Device] 1st Byte              Parameter 5+2      [1st Device] 2nd Byte              …      [1st Device]…              Parameter 6+X      [2nd Device] X-th Byte              Parameter 6      [2nd Device] ID              Parameter 6+1      [2nd Device] 1st Byte              Parameter 6+2      [2nd Device] 2nd Byte              …      [2nd Device]…              Parameter 6+X      [2nd Device] X-th Byte              …      …      ExampleConditions  ID1(XM430-W210) : Write 150(0x00000096) to Goal Position(116, 0x0074, 4[byte])  ID2(XM430-W210) : Write 170(0x000000AA) to Goal Position(116, 0x0074, 4[byte])Sync Write Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      P2      P3      P4                  0xFF      0xFF      0xFD      0x00      0xFE      0x11      0x00      0x83      0x74      0x00      0x04      0x00                  P5      P6      P7      P8      P9      P10      P11      P12      P13      P14      CRC1      CRC2                  0x01      0x96      0x00      0x00      0x00      0x02      0xAA      0x00      0x00      0x00      0x82      0x87      Bulk ReadDescription  Similar to Sync Read, this is an Instruction to read data from multiple devices simultaneously using one Instruction Packet  This Instruction can be used even if the Address and Data Length of the data for each device are not all the same.  The same ID cannot be used multiple times in the Parameter. In other words, it can only read once from each individual device.  If the Address of the data is not continual, an Indirect Address can be used.  Packet ID field : 0xFE (Broadcast ID)Parameters            Instruction Packet      Description                  Parameter 1      [1st Device] ID              Parameter 2      [1st Device] Low-order byte from the starting address              Parameter 3      [1st Device] High-order byte from the starting address              Parameter 4      [1st Device] Low-order byte from the data              Parameter 5      [1st Device] High-order byte from the data              Parameter 6      [2nd Device] ID              Parameter 7      [2nd Device] Low-order byte from the starting address              Parameter 8      [2nd Device] High-order byte from the starting address              Parameter 9      [2nd Device] Low-order byte from the data              Parameter 10      [2nd Device] High-order byte from the data              …      …      Note Status Packet is received from each Device.            Status Packet      Description                  Parameter 1      1st Byte              Parameter 2      2nd Byte              …      …              Parameter X      X-th Byte      ExampleCondition  ID1(XM430-W210) : Present Voltage(144, 0x0090, 2[byte]) = 119(0x0077)  ID2(XM430-W210) : Present Temperature(146, 0x0092, 1[byte]) = 36(0x24)Bulk Read Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      P2      P3      P4      P5                  0xFF      0xFF      0xFD      0x00      0xFE      0x0D      0x00      0x92      0x01      0x90      0x00      0x02      0x00                  P6      P7      P8      P9      P10      CRC1      CRC2                  0x02      0x92      0x00      0x01      0x00      0x1A      0x05      ID 1 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      PARAM2      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x01      0x06      0x00      0x55      0x00      0x77      0x00      0xC3      0x69      ID 2 Status Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      ERR      PARAM1      CRC1      CRC2                  0xFF      0xFF      0xFD      0x00      0x02      0x05      0x00      0x55      0x00      0x24      0x8B      0x21      Bulk WriteDescription  Similar to Sync Write, this is an Instruction to control multiple devices simultaneously using one Instruction Packet  This Instruction can be used even if the Address and Data Length of the data for each device are not all the same.  The same ID cannot be used multiple times in the Parameter. In other words, it can only write once for each individual device.  If the Address of the data is not continual, an Indirect Address can be used.  Packet ID field : 0xFE (Broadcast ID)Parameters            Instruction Packet      Description                  Parameter 1      [1st Device] ID              Parameter 2      [1st Device] Low-order byte from the starting address              Parameter 3      [1st Device] High-order byte from the starting address              Parameter 4      [1st Device] Low-order byte from the data length(X)              Parameter 5      [1st Device] High-order byte from the data length(X)              Parameter 5+1      [1st Device] 1st Byte              Parameter 5+2      [1st Device] 2nd Byte              …      …              Parameter 5+X      [1st Device] X-th Byte              Parameter 6+X      [2nd Device] ID              Parameter 7+X      [2nd Device] Low-order byte from the starting address              Parameter 8+X      [2nd Device] High-order byte from the starting address              Parameter 9+X      [2nd Device] Low-order byte from the data length(X)              Parameter 10+X      [2nd Device] High-order byte from the data length(X)              Parameter 10+X+1      [2nd Device] 1st Byte              Parameter 10+X+2      [2nd Device] 2nd Byte              …      …              Parameter 10+X+Y      [2nd Device] Y-th Byte              …      …      ExampleCondition  ID1(XM430-W210) : Set Max Voltage Limit(32, 0x0020, 2[byte]) to 160(0x00A0)  ID2(XM430-W210) : Set Temperature Limit(31, 0x001F, 1[byte]) to 80(0x50)Bulk Write Instruction Packet            H1      H2      H3      RSRV      ID      LEN1      LEN2      INST      P1      P2      P3      P4      P5      P6      P7                  0xFF      0xFF      0xFD      0x00      0xFE      0x10      0x00      0x93      0x01      0x20      0x00      0x02      0x00      0xA0      0x00                  P8      P9      P10      P11      P12      P13      CRC1      CRC2                  0x02      0x1F      0x00      0x01      0x00      0x50      0xB7      0x68      ",
        "url": " http://localhost:4000/emanual/docs/en/dxl/protocol2/"
      } ,
  
      "docs-en-dxl-rx-rx-10":  {
        "title": "RX-10",
      "content"	 : "Warning RX-10 has been discontinued.Specifications            Item      Specifications                  Baud Rate      7343 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      64.5g              Dimensions (W x H x D)      35.6mm x 50.6mm x 35.5mm              Gear Ratio      193 : 1              Stall Torque      1.3 N*m (at 12V, 0.8A)              No Load Speed      54rpm (at 12V)              Operating Temperature      -5°C ~ +80°C              Input Voltage      9 ~ 12V (Recommended : 11.1V)              Standby Current      50mA              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Engineering Plastic Body      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      10              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      190              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0 ~ 1,023(0x3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.        Wheel Mode0 ~ 2,047(0x7FF) can be used, the unit is about 0.1%.If a value in the range of 0 ~ 1,023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1,024 ~ 2,047 is used, it is stopped by setting to 1,024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the present moving speed.0~2,047 (0x7FF) can be used.If a value is in the rage of 0~1,023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1,024~2,047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1,024 are equal.The unit of this value varies depending on operation mode.      Joint Mode    The unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel Mode    The unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.How to Assemble  FR07-B1 Option Frame  FR07-H1 Option Frame  FR07-S1 Option Frame  HN07-N1 Horn  HN07-I1 Horn  HN07-T1 Horn  CombinationsMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/rx/rx-10/"
      } ,
  
      "docs-en-dxl-rx-rx-24f":  {
        "title": "RX-24F",
      "content"	 : "Warning RX-24F has been discontinued.Specifications            Item      Specifications                  Baud Rate      7343 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      67g              Dimensions (W x H x D)      35.6mm x 50.6mm x 35.5mm              Gear Ratio      193 : 1              Stall Torque      2.6 N*m (at 12V, 2.4A)              No Load Speed      126rpm (at 12V)              Operating Temperature      -5°C ~ +80°C              Input Voltage      9 ~ 12V (Recommended : 11.1V)              Standby Current      50mA              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Engineering Plastic Body      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      24              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      190              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0 ~ 1,023(0x3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.        Wheel Mode0 ~ 2,047(0x7FF) can be used, the unit is about 0.1%.If a value in the range of 0 ~ 1,023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1,024 ~ 2,047 is used, it is stopped by setting to 1,024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the present moving speed.0~2,047 (0x7FF) can be used.If a value is in the rage of 0~1,023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1,024~2,047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1,024 are equal.The unit of this value varies depending on operation mode.      Joint Mode    The unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel Mode    The unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.How to Assemble  FR07-B1 Option Frame  FR07-H1 Option Frame  FR07-S1 Option Frame  FR07-B101 Option Frame  FR07-F101, FR07-X101 Option Frame  FR07-H101 Option Frame  FR07-S101 Option Frame  HN07-N1 Horn  HN07-I1 Horn  HN07-T1 Horn  HN07-N101 Horn  HN07-I101 Horn  HN07-T101 Horn  CombinationsMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/rx/rx-24f/"
      } ,
  
      "docs-en-dxl-rx-rx-28":  {
        "title": "RX-28",
      "content"	 : "Warning RX-28 has been discontinued.Specifications            Item      Specifications                  Baud Rate      7343 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      72g              Dimensions (W x H x D)      35.6mm x 50.6mm x 35.5mm              Gear Ratio      193 : 1              Stall Torque      3.7 N*m (at 18.5V, 1.9A)              No Load Speed      85rpm (at 18.5V)              Operating Temperature      -5°C ~ +80°C              Input Voltage      12 ~ 18.5V (Recommended : 14.8V)              Standby Current      50mA              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Engineering Plastic Body      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      28              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      190              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 250      5.0 ~ 25.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0 ~ 1,023(0x3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.        Wheel Mode0 ~ 2,047(0x7FF) can be used, the unit is about 0.1%.If a value in the range of 0 ~ 1,023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1,024 ~ 2,047 is used, it is stopped by setting to 1,024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the present moving speed.0~2,047 (0x7FF) can be used.If a value is in the rage of 0~1,023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1,024~2,047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1,024 are equal.The unit of this value varies depending on operation mode.      Joint Mode    The unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel Mode    The unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.How to Assemble  FR07-B1 Option Frame  FR07-H1 Option Frame  FR07-S1 Option Frame  FR07-B101 Option Frame  FR07-F101, FR07-X101 Option Frame  FR07-H101 Option Frame  FR07-S101 Option Frame  HN07-N1 Horn  HN07-I1 Horn  HN07-T1 Horn  HN07-N101 Horn  HN07-I101 Horn  HN07-T101 Horn  CombinationsMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/rx/rx-28/"
      } ,
  
      "docs-en-dxl-rx-rx-64":  {
        "title": "RX-64",
      "content"	 : "Warning RX-64 has been discontinued.Specifications            Item      Specifications                  Baud Rate      7343 bps ~ 1 Mbps              Resolution      0.29°              Running Degree      0° ~ 300°Endless Turn              Weight      125g              Dimensions (W x H x D)      40.2mm x 61.1mm x 41mm              Gear Ratio      200 : 1              Stall Torque      5.3 N*m (at 18.5V, 2.6A)              No Load Speed      64rpm (at 18.5V)              Operating Temperature      -5°C ~ +80°C              Input Voltage      12 ~ 18.5V (Recommended : 14.8V)              Standby Current      50mA              Command Signal      Digital Packet              Protocol Type      Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity)              Physical Connection      RS485 Multi Drop Bus(Daisy Chain Type Connector)              ID      0 ~ 253              Feedback      Position, Temperature, Load, Input Voltage, etc              Material      Full Metal Gear, Engineering Plastic Body      Control TableThe Control Table is a structure of data implemented in the DYNAMIXEL. Users can read a specific Data to get status of the DYNAMIXEL with Read Instruction Packets, and modify Data as well to control DYNAMIXEL with WRITE Instruction Packets.Control Table, Data, AddressThe Control Table is a structure that consists of multiple Data fields to store status of the DYNAMIXEL or to control the DYNAMIXEL. Users can check current status of the DYNAMIXEL by reading a specific Data from the Control Table with Read Instruction Packets. WRITE Instruction Packets enable users to control the DYNAMIXEL by changing specific Data in the Control Table. The Address is a unique value when accessing a specific Data in the Control Table with Instruction Packets. In order to read or write data, users must designate a specific Address in the Instruction Packet. Please refer to Protocol 1.0 for more details about Instruction Packets.Note Two’s complement is applied for the negative value. For more information, please refer to Two’s complement from Wikipedia.Area (EEPROM, RAM)The Control Table is divided into 2 Areas. Data in the RAM Area is reset to initial values when the DYNAMIXEL is turned on (Volatile). On the other hand, modified data in the EEPROM Area keeps their values even when the DYNAMIXEL is turned off (Non-Volatile). Data in the EEPROM Area can only be changed or modified when the value of Torque Enable(24) is ‘0’ and Dynamixel is in idle state.SizeThe Size of data is 1 or 2 bytes depend on their usage. Please check the size of data when updating the data with an Instruction Packet. 2 bytes data will be saved according to Little Endian.AccessThe Control Table has two different access properties. ‘RW’ property stands for read and write access permission while ‘R’ stands for read only access permission. Data with the read only property cannot be changed by the WRITE Instruction. Read only property(‘R’) is generally used for measuring and monitoring purpose, and read write property(‘RW’) is used for controlling DYNAMIXEL.Initial ValueEach data in the Control Table is restored to initial values when the DYNAMIXEL is turned on. Default values in the EEPROM area are initial values of the DYNAMIXEL (factory default settings). If any values in the EEPROM area are modified by a user, modified values will be restored as initial values when the DYNAMIXEL is turned on. Initial Values in the RAM area are restored when the DYNAMIXEL is turned on.Control Table of EEPROM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  0      2      Model Number      Model Number      R      64              2      1      Firmware Version      Firmware Version      R      -              3      1      ID      DYNAMIXEL ID      RW      1              4      1      Baud Rate      Communication Speed      RW      34              5      1      Return Delay Time      Response Delay Time      RW      250              6      2      CW Angle Limit      Clockwise Angle Limit      RW      0              8      2      CCW Angle Limit      Counter-Clockwise Angle Limit      RW      1023              11      1      Temperature Limit      Maximum Internal Temperature Limit      RW      80              12      1      Min Voltage Limit      Minimum Input Voltage Limit      RW      60              13      1      Max Voltage Limit      Maximum Input Voltage Limit      RW      190              14      2      Max Torque      Maximun Torque      RW      1023              16      1      Status Return Level      Select Types of Status Return      RW      2              17      1      Alarm LED      LED for Alarm      RW      36              18      1      Shutdown      Shutdown Error Information      RW      36      Control Table of RAM Area            Address      Size(Byte)      Data Name      Description      Access      Initial Value                  24      1      Torque Enable      Motor Torque On/Off      RW      0              25      1      LED      Status LED On/Off      RW      0              26      1      CW Compliance Margin      CW Compliance Margin      RW      1              27      1      CCW Compliance Margin      CCW Compliance Margin      RW      1              28      1      CW Compliance Slope      CW Compliance Slope      RW      32              29      1      CCW Compliance Slope      CCW Compliance Slope      RW      32              30      2      Goal Position      Target Position      RW      -              32      2      Moving Speed      Moving Speed      RW      -              34      2      Torque Limit      Torque Limit(Goal Torque)      RW      ADD 14&amp;amp;15              36      2      Present Position      Present Position      R      -              38      2      Present Speed      Present Speed      R      -              40      2      Present Load      Present Load      R      -              42      1      Present Voltage      Present Voltage      R      -              43      1      Present Temperature      Present Temperature      R      -              44      1      Registered      If Instruction is registered      R      0              46      1      Moving      Movement Status      R      0              47      1      Lock      Locking EEPROM      RW      0              48      2      Punch      Minimum Current Threshold      RW      32      Control Table DescriptionModel Number (0)This address stores model number of the DYNAMIXEL.Firmware Version (2)This address stores firmware version of the DYNAMIXEL.ID (3)The ID is a unique value in the network to identify each DYNAMIXEL with an Instruction Packet.0~252 (0xFC) values can be used as an ID, and 254(0xFE) is occupied as a broadcast ID. The Broadcast ID(254, 0xFE) can send an Instruction Packet to all connected DYNAMIXELs simultaneously.Note Please avoid using an identical ID for multiple DYNAMIXELs. You may face communication failure or may not be able to detect Dynamixels with an identical ID.Baud Rate (4)Baud Rate determines serial communication speed between a controller and DYNAMIXELs.            Value      Baud Rate(bps)      Margin of Error                  1      1M      0.000%              3      500,000      0.000%              4      400,000      0.000%              7      250,000      0.000%              9      200,000      0.000%              16      115200      -2.124%              34(Default)      57600      0.794%              103      19200      -0.160%              207      9600      -0.160%      Note Less than 3% of the baud rate error margin will not affect to UART communication.Return Delay Time (5)After the DYNAMIXEL receives an Instruction Packet, it delays transmitting the Status Packet for Return Delay Time (9). For instance, if the Return Delay Time(9) is set to ‘10’, the Status Packet will be returned after 20[μsec] when the Instruction Packet is received.            Unit      Value Range      Description                  2[μsec]      0 ~ 254      Default value ‘250’(500[μsec]), Maximum 508[μsec]      CW/CCW Angle Limit(6, 8)The angle limit allows the motion to be restrained.The range and the unit of the value is the same as Goal Position(Address 30, 31).  CW Angle Limit: the minimum value of Goal Position(Address 30, 31)  CCW Angle Limit: the maximum value of Goal Position(Address 30, 31)The following two modes can be set pursuant to the value of CW and CCW.            Operation Type      CW / CCW                  Wheel Mode      both are 0              Joint Mode      neither are 0      The wheel mode can be used to wheel-type operation robots since motors of the robots spin infinitely. The joint mode can be used to multi-joints robot since the robots can be controlled with specific angles.The Highest Limit Temperature            Unit      Value Range                  About 1°      0 ~ 100      Caution Do not set the temperature lower/higher than the default value. When the temperature alarm shutdown occurs, wait 20 minutes to cool the temperature before re-use. Keep using the product when the temperature is high can cause severe damage.Min/Max Voltage LimitIt is the operation range of voltage.            Unit      Value Range      Description                  About 0.1V      50 ~ 160      5.0 ~ 16.0V      For example, if the value is 80, the voltage is 8V.If Present Voltage(42) is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered as set in the addresses 17 and 18.Max TorqueIt is the torque value of maximum output. 0 to 1,023 (0x3FF) can be used, and the unit is about 0.1%.For example, Data 1,023 (0x3FF) means that Dynamixel will use 100% of the maximum torque it can produce while Data 512 (0x200) means that Dynamixel will use 50% of the maximum torque. When the power is turned on, Torque Limit (Address 34 and 35) uses the value as the initial value.Status Return LevelThis value decides how to return Status Packet when Dynamixel receives an Instruction Packet.            Value      Responding Instructions      Description                  0      PING Instruction      Status Packet will not be returned for all Instructions              1      PING InstructionREAD Instruction      Status Packet will be returned only for READ Instruction              2      All Instructions      Status Packet will be returned for all Instructions      Note If the ID of Instruction Packet is set to Broad Cast ID(0xFE), Status Packet will not be returned for READ and WRITE Instructions regardless of Status Return Level. For more details, please refer to the Protocol section of e-Manual.Alarm LED / Alarm ShutdownDynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.            Bit      Item      Description                  Bit 7      0      -              Bit 6      Instruction Error      When undefined Instruction is transmitted or the Action command is delivered without the reg_write command              Bit 5      Overload Error      When the current load cannot be controlled with the set maximum torque              Bit 4      CheckSum Error      When the Checksum of the transmitted Instruction Packet is invalid              Bit 3      Range Error      When the command is given beyond the range of usage              Bit 2      OverHeating Error      When the internal temperature is out of the range of operating temperature set in the Control Table              Bit 1      Angle Limit Error      When Goal Position is written with the value that is not between CW Angle Limit and CCW Angle Limit              Bit 0      Input Voltage Error      When the applied voltage is out of the range of operating voltage set in the Control Table      It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overheating Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by resetting the value of Torque Limit(34) to 0.Torque Enable            Value      Description                  0      Turn off the torque(Free run state)              1      Turn on the torque and lock EEPROM area      LEDTurn on or turn off the LED on Dynamixel.            Bit      Description                  0(Default)      Turn OFF the LED              1      Turn ON the LED      Compliance MarginIt exists in each direction of CW/CCW and means the error between goal position and present position.The range of the value is 0~255, and the unit is the same as Goal Position.(Address 30,31)The greater the value, the more difference occurs.Compliance SlopeIt exists in each direction of CW/CCW and sets the level of Torque near the goal position.Compliance Slope is set in 7 steps, the higher the value, the more flexibility is obtained.Data representative value is actually used value.  That is, even if the value is set to 25, 16 is used internally as the representative value.            Step      Data Value      Data Representative Value                  1      0(0x00) ~ 3(0x03)      2(0x02)              2      4(0x04) ~ 7(0x07)      4(0x04)              3      8(0x08)~15(0x0F)      8(0x08)              4      16(0x10)~31(0x1F)      16(0x10)              5      32(0x20)~63(0x3F)      32(0x20)              6      64(0x40)~127(0x7F)      64(0x40)              7      128(0x80)~254(0xFE)      128(0x80)      Compliance is to set the control flexibility of the motor.The following diagram shows the relationship between output torque and position of the motor.Goal PositionIt is a position value of destination.0 ~ 1,023 (0x3FF) is available.  The unit is 0.29°.If Goal Position is out of the range, Angle Limit Error Bit (Bit 1) of Status Packet is returned as ‘1’ and Alarm is triggered as set in Alarm LED/Shutdown.The picture above is the front view of DynamixelNote If it is set to Wheel Mode, Goal Position value is not used.Moving SpeedIt is a moving speed to Goal Position.The range and the unit of the value may vary depending on the operation mode.      Join Mode0 ~ 1,023(0x3FF) can be used, and the unit is about 0.111rpm.If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.If it is 1023, it is about 114rpm.For example, if it is set to 300, it is about 33.3 rpm.    Note Please check the maximum rpm of the Dynamixel. The motor cannot exceed the maximum rpm with the higher Moving Speed value.        Wheel Mode0 ~ 2,047(0x7FF) can be used, the unit is about 0.1%.If a value in the range of 0 ~ 1,023 is used, it is stopped by setting to 0 while rotating to CCW direction.If a value in the range of 1,024 ~ 2,047 is used, it is stopped by setting to 1,024 while rotating to CW direction.That is, the 10th bit becomes the direction bit to control the direction.In Wheel Mode, only the output control is possible, not speed.For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  Torque LimitIt is the value of the maximum torque limit.0 ~ 1,023(0x3FF) is available, and the unit is about 0.1%.For example, if the value is 512, it is about 50%; that means only 50% of the maximum torque will be used.If the power is turned on, the value of Max Torque (Address 14, 15) is used as the initial value.Note If the function of Alarm Shutdown is triggered, the motor loses its torque because the value becomes 0. Once error conditions are resolved and this value is changed to the value other than 0, the motor can be operated again.Present PositionIt is the current position value of Dynamixel.The range of the value is 0~1023 (0x3FF), and the unit is 0.29 degree.The picture above is the front view of Dynamixel.Caution If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.Present SpeedIt is the present moving speed.0~2,047 (0x7FF) can be used.If a value is in the rage of 0~1,023, it means that the motor rotates to the CCW direction.If a value is in the rage of 1,024~2,047, it means that the motor rotates to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 0 and 1,024 are equal.The unit of this value varies depending on operation mode.      Joint Mode    The unit is about 0.111rpm.For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.        Wheel Mode    The unit is about 0.1%.For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.  Present LoadIt means currently applied load.The range of the value is 0~2047, and the unit is about 0.1%.If the value is 0~1,023, it means the load works to the CCW direction.If the value is 1,024~2,047, it means the load works to the CW direction.That is, the 10th bit becomes the direction bit to control the direction, and 1,024 is equal to 0.For example, the value is 512, it means the load is detected in the direction of CCW about 50% of the maximum torque.            Bit      15 ~ 11      10      9 ~ 0                  Value      0      Load Direction      Data (Load Ratio)      Note CCW Load : Load Direction = 0, CW Load : Load Direction = 1Note Present load is an inferred value based on the internal output value; not a measured value using torque sensor, etc. Therefore, it may be inaccurate for measuring weight or torque. It is recommended to use it for predicting the direction and size of the force being applied to the joint.Present VoltageIt is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(42) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Alarm is triggered and set the address 17 and set 1 to the Bit 0 of the address 18.Present TemperatureIt is the internal temperature of Dynamixel in Celsius.Data value is identical to the actual temperature in Celsius. For example, if the data value is 85 (0x55), the current internal temperature is 85°C.Registered Instruction            Value      Description                  0      REG_WRITE instruction is not received              1      REG_WRITE instruction is received      Note If ACTION instruction is executed, the value will be changed to 0.Moving            Value      Description                  0      Goal position command execution is completed              1      Goal position command execution is in progress      Lock            Value      Description                  0      EEPROM area can be modified              1      EEPROM area cannot be modified      Caution If Lock is set to 1, the power must be turned off and then turned on again to change into 0.PunchMinimum current to drive motor. This value ranges from 0x20 to 0x3FF.How to Assemble  FR05-B1 Option Frame  FR05-H1 Option Frame  FR05-S1 Option Frame  FR05-S2 Option Frame  FR05-B101 Option Frame  FR05-F101, FR05-X101 Option Frame  FR05-H101 Option Frame  FR05-S101 Option Frame  HN05-N1 Horn  HN05-I1 Horn  HN05-T1 Horn  HN05-N101 Horn  HN05-I101 Horn  HN05-T101 Horn  CombinationsMaintenanceHorn and Bearing ReplacementThe horn is installed on the front wheel gear serration of the DYNAMIXEL whereas the bearing set is installed on the back.Installing the HornPlace the thrust horn washer into the actuator before inserting the horn.You must carefully align the horn to the wheel gear serration by aligning dots.Once alignment is properly done, gently push the center of the horn toward the actuator.Make sure that the horn washer is in place as you tighten the bolt.Installing the Bearing SetYou may need to remove the bearing set from the previous actuator and reinstall it into the new actuator.The bearing set can also be purchased separately.As bearing set is rotating freely, therefore alignment is not required when assembling to DYNAMIXEL.ReferenceNote Compatibility GuideQuick StartDrawingsCommunication CircuitTo control the Dynamixel actuators, the main controller needs to convert its UART signals to the half duplex type. The recommended circuit diagram for this is shown below.TTL CommunicationRS-485 CommunicationThe power of Dynamixel is supplied via Pin1(-), Pin2(+).(The above circuit is built into Dynamixel-only controller.)In the above circuit diagram, the direction of data signal of TxD and RxD in the TTL Level is determined according to the level of DIRECTION 485 as follows:In case of DIRECTION485 Level = High: The signal of TxD is output to D+ and D-.In case of DIRECTION485 Level = Low: The signal of D+ and D- is output to RxD.Pin AssignmentThe connector pin assignments are as the following. The two connectors on the Dynamixel are connected pin to pin, thus the AX-12 can be operated with only one connector attached.",
        "url": " http://localhost:4000/emanual/docs/en/dxl/rx/rx-64/"
      } ,
  
>>>>>>> contents
      "search":  {
        "title": "",
      "content"	 : "",
        "url": " "
      } ,
  
      "search-index-json":  {
        "title": "",
      "content"	 : "{  {% for page in site.pages %}      &quot;{{ page.url | slugify }}&quot;:  {        &quot;title&quot;: &quot;{{ page.sidebar.title | xml_escape }}&quot;,      &quot;content&quot; : &quot;{{page.content | strip_html | strip_newlines | remove:  &quot;&quot; | escape | remove: &quot;&quot;}}&quot;,        &quot;url&quot;: &quot; {{ page.permalink | absolute_url }}&quot;      } {% unless forloop.last %},{% endunless %}  {% endfor %}}",
        "url": " "
      } ,
  
      "docs-kr-edu-smart-smart3-2":  {
        "title": "SMART III Lv.2",
      "content"	 : "# [부품 목록](#부품-목록)![](/assets/images/edu/smart/smart3-2_part-list.jpg)# [작동하기](#작동하기)## [R+ SmartIII 설치하기](#r-smartiii-설치하기)여기에서는 스마트 기기에 R+ SmartIII를 설치합니다.1. 구글 play 스토어에서 &quot;로보티즈&quot;를 검색합니다.2. R+ SmartIII (ROBOTIS)를 선택합니다.3. 설치`Note` 프로그램 매뉴얼 다운로드 : [R+ SmartIII]{: .notice }## [R+ m.Task 2.0 설치하기](#r-mtask-20-설치하기)여기에서는 스마트 기기에 R+ m.Task 2.0을 설치합니다.1. 구글 play 스토어에서 &quot;로보티즈&quot;를 검색합니다.2. R+ m.Task2 (ROBOTIS)를 선택합니다.3. 설치`Note` 프로그램 매뉴얼 다운로드 : [R+ m.Task 2.0]{: .notice }## [모션파일 다운로드](#모션파일-다운로드){% include software/motion_file_download.md %}## [블루투스 연결하기](#블루투스-연결하기)# [교안예제](#교안예제)`Note` 각 예제의 조립 방법이나 실행 시 동작에 관한 내용은 교육키트 2단계 교안을 참고하세요. 또한, 예제 태스크 코드의 다운로드 방법은 여기를 참고하세요. 다운로드시 필요한 BT-410은 1단계 구성품에 포함되어 있습니다. 분실시 쇼핑몰에서 별도구매 해주세요.{: .notice}{% include gallery id=&quot;gallery&quot; caption=&quot;스마트III 2단계 교안 예제&quot; %}[R+ SmartIII]: #[R+ m.Task 2.0]: #",
        "url": " http://localhost:4000/emanual/docs/kr/edu/smart/smart3-2/"
      } ,
  
      "docs-en-edu-bioloid-stem":  {
        "title": "BIOLOID STEM",
      "content"	 : "# [Introduction](#introduction)![](/assets/images/edu/bioloid/stem_product.jpg)- Educational kit for science, technology, engineering, and mathematics- Curricula of 16 sample robots with a total of 48 different types of lessons.- Robots optimized for competition with high-speed Dynamixel and IR array.- Robot kits aimed at solving problems creatively.# [Getting Started](#getting-started)## [Standard Part List](#standard-part-list)![](/assets/images/edu/bioloid/stem_standard_partlist_01_en.png)![](/assets/images/edu/bioloid/stem_standard_partlist_02_en.png)## [Expansion Part List](#expansion-part-list)![](/assets/images/edu/bioloid/stem_expansion_partlist_01_en.png)![](/assets/images/edu/bioloid/stem_expansion_partlist_02_en.png)- [CM-530]- [AX-12W]- [AX-12A]- [IR Sensor Array]- [IR Sensor]## [Operating](#operating)### Download the ProgramYou can find task codes and motion files for other actions on the [Standard](#standard-examples), [Expansion](#expansion-examples) page.{% include en/parts/controller/cm510_530_turnon.md %}### Assembly Check- In Assembly Check mode you can verify whether your robot has been properly assembled. Compare the initial position of the motors.  1. To run Assembly Check mode select ‘Manage’,  hold the ‘D’ button followed by ‘START’.    &gt; Keep holding until melody finished playing.  2. Select the motor with either ‘U’ or ‘D’ buttons. The selected motor with turn its LED on and position itself into its initial position.    &gt; ‘U’ ups ID order while ‘D’ downs ID order.  3. Compare the ID against the assembly check guide.    &gt; If the motor is not detected by the controller then it will beep.  4. Compare whether the motor “froze” or it goes to its initial position.    &gt; Although the LED may be on the motor may be loose; check its wiring.  5. Check the port for the IR array.    &gt; The IR array connected to its pre-assigned will blink when detecting an object.## [Battery Charge](#battery-charge){% include en/edu/bioloid/stem_charge.md %}# [Download](#download)## [Standard Examples](#standard-examples)|Robot|Description||:---:|:---||1. Sequence Racer![Ex_01][img_adv_ex_01]|[Download][adv_ex_1-1] Basic Phase[Download][adv_ex_1-2] Application Phase[Download][adv_ex_1-3] Practical Phase[Download][adv_ex_1-4] Video`Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode`Algorithm`Control the robot’s moving direction with the controller’s directional buttons.`Operation Guide`if you press the forward ‘U’, turn left ‘L’, turn right ‘R’, and reverse ‘D’ sequentially pressing ‘START’ the robot will move in the order the directional buttons were pressed.||2. Bug Fighter![Ex_02][img_adv_ex_02]|[Download][adv_ex_2-1] Basic Phase[Download][adv_ex_2-2] Application Phase[Download][adv_ex_2-3] Practical Phase[Download][adv_ex_2-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode`Algorithm`Robot follows the black line by following said line.`Operation Guide`The robot remains inbounds and push others out if found in the same area.||3. Tumbler![Ex_03][img_adv_ex_03]|[Download][adv_ex_3-1] Basic Phase[Download][adv_ex_3-2] Application Phase[Download][adv_ex_3-3] Practical Phase[Download][adv_ex_3-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode`Algorithm`The IR sensors detect obstacles and control the robot’s direction.`Operation Guide`The robot can go over large or small obstacles; with large obstacles it can change directions or react accordingly if flipped over.||4. Line Follower![Ex_04][img_adv_ex_04]|[Download][adv_ex_4-1] Basic Phase[Download][adv_ex_4-2] Application Phase[Download][adv_ex_4-3] Practical Phase[Download][adv_ex_4-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode`Algorithm`The robot can move on a determined in a criss-cross grid.`Operation Guide`The robot can move forward, reverse, turn left or right along its determined path via its IR array.||5. Digital Piano![Ex_05][img_adv_ex_05]|[Download][adv_ex_5-1] Basic Phase[Download][adv_ex_5-2] Application Phase[Download][adv_ex_5-3] Practical Phase[Download][adv_ex_5-4] Video`Algorithm`Plays a different tune based IR sensor reading.`Operation Guide`The robot can output a musical note from the active sensors from the IR array.||6. Motorcycle![Ex_06][img_adv_ex_06]|[Download][adv_ex_13-1] Basic Phase[Download][adv_ex_13-2] Application Phase[Download][adv_ex_13-3] Practical Phase[Download][adv_ex_13-4] Video `Dynamixel Setting`AX-12W ID[1]: Wheel Mode, AX-12W ID[2]: Joint Mode`Algorithm`Control action by following the black line and avoiding obstacles`Operation Guide`Follows the line while avoiding obstacles by steering itself away from such obstacle.||7. Avoider![Ex_07][img_adv_ex_07]|[Download][adv_ex_7-1] Basic Phase[Download][adv_ex_7-2] Application Phase[Download][adv_ex_7-3] Practical Phase[Download][adv_ex_7-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode`Algorithm`maintains distance by its right sensor.`Operation Guide`The robot can escape a maze by using its left, right and center IR sensors.|## [Expansion Examples](#expansion-examples)|Robot|Description||:---:|:---||8. Scribbler![Ex_08][img_adv_ex_08]|[Download][adv_ex_8-1] Basic Phase[Download][adv_ex_8-2] Application Phase[Download][adv_ex_8-3] Practical Phase[Download][adv_ex_8-4] Video`Dynamixel Setting`AX-12W ID[1]: Wheel Mode, AX-12A ID[3, 4]: Wheel Mode`Algorithm`Robot follows the order of sequentially inputted commands.`Operation Guide`Write &#39;가&#39; and &#39;어&#39; when augmented with a pen.||9. Transporter![Ex_09][img_adv_ex_09]|[Download][adv_ex_9-1] Basic Phase[Download][adv_ex_9-2] Application Phase[Download][adv_ex_9-3] Practical Phase[Download][adv_ex_9-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode, AX-12A ID[3 ~ 5]: Joint Mode`Algorithm`The robot follows a pre-determined path and completes a mission.`Operation Guide`Obstacles at certain locations the robot moves them at 2 specific locations from start the robot follows a determined path until finishing.||10. Probe Car![Ex_10][img_adv_ex_10]|[Download][adv_ex_10-1] Basic Phase[Download][adv_ex_10-2] Application Phase[Download][adv_ex_10-3] Practical Phase[Download][adv_ex_10-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode, AX-12A ID[3, 4]: Joint Mode`Algorithm`While following a path if the robot encounters an obstacle it will move it.`Operation Guide`If the robot detects obstacles over boxes via its IR sensors it moves them to specified locations.||11. Beetle Gripper![Ex_11][img_adv_ex_11]|[Download][adv_ex_11-1] Basic Phase[Download][adv_ex_11-2] Application Phase[Download][adv_ex_11-3] Practical Phase[Download][adv_ex_11-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode, AX-12A ID[3 ~ 5]: Joint Mode`Algorithm`Clamp robot follows button input`Operation Guide`The remote control can control forward, reverse, left and right turns, left and right pivots, grab, lift and lower objects.||12. Robot Arm![Ex_12][img_adv_ex_12]|[Download][adv_ex_12-1] Basic Phase[Download][adv_ex_12-2] Application Phase[Download][adv_ex_12-3] Practical Phase[Download][adv_ex_12-4] Video `Dynamixel Setting`AX-12A ID[3 ~ 6]: Joint Mode`Algorithm`Detects a cup with the IR sensors and move it to a specified location.`Operation Guide`An example robot that moves 2 small cups and 2 big cups to the designated position regardless of the order of dection.||13. Walking Droid![Ex_13][img_adv_ex_13]|[Download][adv_ex_13-1] Basic Phase[Download][adv_ex_13-2] Application Phase[Download][adv_ex_13-3] Practical Phase[Download][adv_ex_13-4] Motion File[Download][adv_ex_13-5] Video `Dynamixel Setting`AX-12A ID[3 ~ 6]: Joint Mode`Algorithm`Robot detects obstacles and avoids it with its IR sensors.`Operation Guide`The robot moves forwards and turns left; it shifts to the right if the left sensors detects an obstacle; shifts to the left if the right sensor detects an obstacle; reverses if the center sensor detects an obstacle.||14. Hexapod![Ex_14][img_adv_ex_14]|[Download][adv_ex_14-1] Basic Phase[Download][adv_ex_14-2] Application Phase[Download][adv_ex_14-3] Practical Phase[Download][adv_ex_14-4] Motion File[Download][adv_ex_14-5] Video `Dynamixel Setting`AX-12A ID[3 ~ 5]: Joint Mode`Algorithm`Robot detects obstacles and avoids it with its IR sensors.`Operation Guide`The robot shifts to the right if the left sensors detects an obstacle; shifts to the left if the right sensor detects an obstacle; it speeds up when the upper sensor detects a hand.||15. Greeting Penguin![Ex_15][img_adv_ex_15]|[Download][adv_ex_15-1] Basic Phase[Download][adv_ex_15-2] Application Phase[Download][adv_ex_15-3] Practical Phase[Download][adv_ex_15-4] Motion File[Download][adv_ex_15-5] Video `Dynamixel Setting`AX-12W ID[1, 2]: Joint Mode, AX-12A ID[3 ~ 6]: Joint Mode`Algorithm`Robot remembers the order of input commands and performs in the same input order.`Operation Guide`Robot remembers lifting of left and right arms and clapping and repeats the motions in the same order.||16. Cannon Shooter![Ex_16][img_adv_ex_16]|[Download][adv_ex_16-1] Basic Phase[Download][adv_ex_16-2] Application Phase[Download][adv_ex_16-3] Practical Phase[Download][adv_ex_16-4] Video `Dynamixel Setting`AX-12W ID[1, 2]: Wheel Mode, AX-12A ID[3 ~ 6]: Joint Mode`Algorithm`Slingshot robot follows input commands for clamping and launching.`Operation Guide`The remote control can control forward, reverse, left and right turns, left and right pivots, grab, lift and lower objects.|# [References](#references)## [Replacing Fuse](#replacing-fuse){% include en/parts/controller/fuse_cm510_530.md %}## [Dynamixel Management](#dynamixel-management){% include en/edu/bioloid/dynamixel_management.md %}{% include en/parts/communication/zigbee_control.md %}[CM-530]: /docs/en/parts/controller/cm-530/[AX-12W]: /docs/en/dxl/ax/ax-12w/[AX-12A]: /docs/en/dxl/ax/ax-12a/[IR Sensor Array]: /docs/en/parts/sensor/ir_array/[IR Sensor]: /docs/en/parts/sensor/irss-10/[img_adv_ex_01]: /assets/images/edu/bioloid/stem_sequenceracer.jpg[img_adv_ex_02]: /assets/images/edu/bioloid/stem_bugfighter.jpg[img_adv_ex_03]: /assets/images/edu/bioloid/stem_tumbler.jpg[img_adv_ex_04]: /assets/images/edu/bioloid/stem_linefollower.jpg[img_adv_ex_05]: /assets/images/edu/bioloid/stem_digitalpiano.jpg[img_adv_ex_06]: /assets/images/edu/bioloid/stem_motorcycle.jpg[img_adv_ex_07]: /assets/images/edu/bioloid/stem_avoider.jpg[img_adv_ex_08]: /assets/images/edu/bioloid/stem_scribbler.jpg[img_adv_ex_09]: /assets/images/edu/bioloid/stem_transporter.jpg[img_adv_ex_10]: /assets/images/edu/bioloid/stem_probecar.jpg[img_adv_ex_11]: /assets/images/edu/bioloid/stem_beetlegripper.jpg[img_adv_ex_12]: /assets/images/edu/bioloid/stem_robotarm.jpg[img_adv_ex_13]: /assets/images/edu/bioloid/stem_walkingdroid.jpg[img_adv_ex_14]: /assets/images/edu/bioloid/stem_hexapod.jpg[img_adv_ex_15]: /assets/images/edu/bioloid/stem_greetingpenguin.jpg[img_adv_ex_16]: /assets/images/edu/bioloid/stem_cannonshooter.jpg[adv_ex_1-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/1.bio_stem_sequenceracer1_en.tsk[adv_ex_1-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/1.bio_stem_sequenceracer2_en.tsk[adv_ex_1-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/1.bio_stem_sequenceracer3_en.tsk[adv_ex_1-4]: http://www.robotis.com/video/BIO_STEM_SequenceRacer.wmv[adv_ex_2-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/2.bio_stem_bugfighter1_en.tsk[adv_ex_2-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/2.bio_stem_bugfighter2_en.tsk[adv_ex_2-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/2.bio_stem_bugfighter3_en.tsk[adv_ex_2-4]: http://www.robotis.com/video/BIO_STEM_BugFighter.wmv[adv_ex_3-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/3.bio_stem_tumbler1_en.tsk[adv_ex_3-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/3.bio_stem_tumbler2_en.tsk[adv_ex_3-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/3.bio_stem_tumbler3_en.tsk[adv_ex_3-4]: http://www.robotis.com/video/BIO_STEM_Tumbler.wmv[adv_ex_4-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/4.bio_stem_linefollower1_en.tsk[adv_ex_4-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/4.bio_stem_linefollower2_en.tsk[adv_ex_4-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/4.bio_stem_linefollower3_en.tsk[adv_ex_4-4]: http://www.robotis.com/video/BIO_STEM_LineFollower.wmv[adv_ex_5-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/5.bio_stem_digitalpiano1_en.tsk[adv_ex_5-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/5.bio_stem_digitalpiano2_en.tsk[adv_ex_5-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/5.bio_stem_digitalpiano3_en.tsk[adv_ex_5-4]: http://www.robotis.com/video/BIO_STEM_DigitalPiano.wmv[adv_ex_6-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/6.bio_stem_motorcycle1_en.tsk[adv_ex_6-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/6.bio_stem_motorcycle2_en.tsk[adv_ex_6-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/6.bio_stem_motorcycle3_en.tsk[adv_ex_6-4]: http://www.robotis.com/video/BIO_STEM_MotorCycle.wmv[adv_ex_7-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/7.bio_stem_avoider1_en.tsk[adv_ex_7-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/7.bio_stem_avoider2_en.tsk[adv_ex_7-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/7.bio_stem_avoider3_en.tsk[adv_ex_7-4]: http://www.robotis.com/video/BIO_STEM_Avoider.wmv[adv_ex_8-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/8.bio_stem_scribbler1_en.tsk[adv_ex_8-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/8.bio_stem_scribbler2_en.tsk[adv_ex_8-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/8.bio_stem_scribbler3_en.tsk[adv_ex_8-4]: http://www.robotis.com/video/BIOLOID_STEM_8.Scribbler.wmv[adv_ex_9-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/9.bio_stem_transporter1_en.tsk[adv_ex_9-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/9.bio_stem_transporter2_en.tsk[adv_ex_9-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/9.bio_stem_transporter3_en.tsk[adv_ex_9-4]: http://www.robotis.com/video/BIOLOID_STEM_9.Transporter.wmv[adv_ex_10-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/10.bio_stem_probecar1_en.tsk[adv_ex_10-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/10.bio_stem_probecar2_en.tsk[adv_ex_10-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/10.bio_stem_probecar3_en.tsk[adv_ex_10-4]: http://www.robotis.com/video/BIOLOID_STEM_10.ProbeCar.wmv[adv_ex_11-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/11.bio_stem_beetlegripper1_en.tsk[adv_ex_11-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/11.bio_stem_beetlegripper2_en.tsk[adv_ex_11-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/11.bio_stem_beetlegripper3_en.tsk[adv_ex_11-4]: http://www.robotis.com/video/BIOLOID_STEM_11.BeetleGripper.wmv[adv_ex_12-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/12.bio_stem_robotarm1_en.tsk[adv_ex_12-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/12.bio_stem_robotarm2_en.tsk[adv_ex_12-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/12.bio_stem_robotarm3_en.tsk[adv_ex_12-4]: http://www.robotis.com/video/BIOLOID_STEM_12.RobotArm.wmv[adv_ex_13-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/13.bio_stem_walking_droid1_en.tsk[adv_ex_13-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/13.bio_stem_walking_droid2_en.tsk[adv_ex_13-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/13.bio_stem_walking_droid3_en.tsk[adv_ex_13-4]: http://support.robotis.com/en/baggage_files/bioloid/stem/13.bio_stem_walking_droid_en.mtn[adv_ex_13-5]: http://www.robotis.com/video/BIOLOID_STEM_13.WalkingDroid.wmv[adv_ex_14-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/14.bio_stem_hexapod1_en.tsk[adv_ex_14-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/14.bio_stem_hexapod2_en.tsk[adv_ex_14-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/14.bio_stem_hexapod3_en.tsk[adv_ex_14-4]: http://support.robotis.com/en/baggage_files/bioloid/stem/14.bio_stem_hexapod_en.mtn[adv_ex_14-5]: http://www.robotis.com/video/BIOLOID_STEM_14.Hexapod.wmv[adv_ex_15-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/15.bio_stem_greetingpenguin1_en.tsk[adv_ex_15-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/15.bio_stem_greetingpenguin2_en.tsk[adv_ex_15-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/15.bio_stem_greetingpenguin3_en.tsk[adv_ex_15-4]: http://support.robotis.com/en/baggage_files/bioloid/stem/15.bio_stem_greetingpenguin_en.mtn[adv_ex_15-5]: http://www.robotis.com/video/BIOLOID_STEM_15.GreetingPenguin.wmv[adv_ex_16-1]: http://support.robotis.com/en/baggage_files/bioloid/stem/16.bio_stem_cannonshooter1_en.tsk[adv_ex_16-2]: http://support.robotis.com/en/baggage_files/bioloid/stem/16.bio_stem_cannonshooter2_en.tsk[adv_ex_16-3]: http://support.robotis.com/en/baggage_files/bioloid/stem/16.bio_stem_cannonshooter3_en.tsk[adv_ex_16-4]: http://www.robotis.com/video/BIOLOID_STEM_16.CannonShooter.wmv",
        "url": " http://localhost:4000/emanual/docs/en/edu/bioloid/stem/"
      } ,
  
      "docs-en-software-rplus1-task-task-misc":  {
        "title": "R+ Task 1.0",
      "content"	 : "# [Miscellenous](#miscellenous)## [Select Controller](#select-controller)The commands and parameters that can be used in RoboPlus Task depend on the controller.  Therefore, a controller must be selected before creating a program.![select controller][select_controller]- If you change the controller while you are writing a program for another controller, errors may be raised during the &quot;rule check&quot; process.- To use a program designed for another controller, the incompatible commands and parameters must be changed accordingly.## [Rule Check](#rule-check)Rule check is the process to verify that the task code has been written appropriately according to the rules.  RoboPlus Task has a function that checks for grammatical errors and prints the causes and locations of errors.  An example of a grammatical error and its location is shown below.```=== Sentence Check(ollo_bug_product_en) ===Line:13 Please select a device or number.=== Tottal Error: 1 ===```Double-click on the error message to move to the location of the error.### [Errors](#errors)The following is a list of grammatical errors1. [Select the number or device](#error_01)2. [Block beginning doesn&#39;t exist](#error_02)3. [A block must be designated](#error_03)4. [Only 1 &quot;Start Program&quot; is permitted](#error_04)5. [&quot;Start Program&quot; cannot be defined in a block](#error_05)6. [A function cannot be defined in a block](#error_06)7. [A command to execute the designated block does not exist](#error_07)8. [This line should be included in a block](#error_08)9. [The start and end of the block are not paired](#error_09)10. [&quot;Start Program&quot; does not exist](#error_10)11. [A function with the same name already exists](#error_11)12. [&quot;Restoration&quot; can only be used in a function](#error_12)13. [A label with same name already exists](#error_13)14. [A function cannot call itself](#error_14)15. [&quot;If/If else&quot; has been used improperly](#error_15)16. [There is no loop to end](#error_16)17. [A block must consist of at least one command](#error_17)18. [A jump to another block is not permitted](#error_18)19. [The called function does not exist](#error_19)20. [Only 1 callback function may exist](#error_20)21. [A callback function cannot be defined in a block](#error_21)22. [This command cannot be used in a callback function](#error_22)23. [This device cannot be used in a callback function](#error_23)24. [This command cannot be used with the selected controller](#error_24)25. [There is a device which cannot be used with the selected controller](#error_25)### [Solutions](#solutions)1. Select the number or device    | Cause of Error | Solution |    | :---: | :---: |    |The parameter has not been set|Properly set to a unset parameter|    |![img_01][img_01]|![img_02][img_02]|2. Block beginning doesn&#39;t exist    | Cause of Error | Solution |    | :---: | :---: |    |A block does not exist in a command line|Properly set the block|    |![img_03][img_03]|![img_04][img_04]|3. A block must be designated    | Cause of Error | Solution |    | :---: | :---: |    |A duplicate block without a command line|Properly set the block|    |![img_05][img_05]|![img_06][img_06]|4. Only 1 &quot;Start Program&quot; is permitted    | Cause of Error | Solution |    | :---: | :---: |    |Two or more “Start Program” exists|Create only one “Start Program”|    |![img_07][img_07]|![img_08][img_08]|5. &quot;Start Program&quot; cannot be defined in a block    | Cause of Error | Solution |    | :---: | :---: |    |“Start Program” exists in the block|Remove the block from the “Start Program”|    |![img_09][img_09]|![img_10][img_10]|6. A function cannot be defined in a block    | Cause of Error | Solution |    | :---: | :---: |    |Function is located within a block|Remove the function from the block|    |![img_11][img_11]|![img_12][img_12]|7. A command to execute the designated block does not exist    | Cause of Error | Solution |    | :---: | :---: |    |Block exists without a command or condition line|Added the omitted command or delete|    |![img_13][img_13]|![img_14][img_14]|8. This line should be included in a block    | Cause of Error | Solution |    | :---: | :---: |    |A command without a block is located outermost|Move the command to a proper location or delete|    |![img_15][img_15]|![img_16][img_16]|9. The start and end of the block are not paired    | Cause of Error | Solution |    | :---: | :---: |    |The start and end of the block are not paired|Please set the area properly|    |![img_17][img_17]|![img_18][img_18]|10. &quot;Start Program&quot; does not exist    | Cause of Error | Solution |    | :---: | :---: |    |“Start Program” does not exist|Create a “Start Program”|    |![img_19][img_19]|![img_20][img_20]|11. A function with the same name already exists    | Cause of Error | Solution |    | :---: | :---: |    |A label with the same name already exists|Change duplicate function name or delete|    |![img_21][img_21]|![img_22][img_22]|12. &quot;Restoration&quot; can only be used in a function    | Cause of Error | Solution |    | :---: | :---: |    |The restoration command is used in a location other than a function|Create a restoration command within a function or delete|    |![img_23][img_23]|![img_24][img_24]|13. A label with same name already exists    | Cause of Error | Solution |    | :---: | :---: |    |Duplicate label name exists|Set to a different name or delete|    |![img_25][img_25]|![img_26][img_26]|14. A function cannot call itself    | Cause of Error | Solution |    | :---: | :---: |    |The function is called within the function|Replace with a proper command or delete|    |![img_27][img_27]|![img_28][img_28]|15. &quot;If/If else&quot; has been used improperly    | Cause of Error | Solution |    | :---: | :---: |    |If else/ If has been used without Else|Revised according to usage If, Else If, Either|    |![img_29][img_29]|![img_30][img_30]|16. There is no loop to end    | Cause of Error | Solution |    | :---: | :---: |    |The &quot;End Repeat&quot; command is used at a location other than a loop|End Repeat command can only be used within the loop, delete if unnecessary|    |![img_31][img_31]|![img_32][img_32]|17. A block must consist of at least one command    | Cause of Error | Solution |    | :---: | :---: |    |A line does not exist behind a command that is required by a block|Add a line required behind the command or delete|    |![img_33][img_33]|![img_34][img_34]|18. A jump to another block is not permitted    | Cause of Error | Solution |    | :---: | :---: |    |The label you wish to jump to is unavailable in the function|Jump to a label within a function or delete|    |![img_35][img_35]|![img_36][img_36]|19. The called function does not exist    | Cause of Error | Solution |    | :---: | :---: |    |The called function does not exist|Create a function or delete|    |![img_37][img_37]|![img_38][img_38]|20. Only 1 callback function may exist    | Cause of Error | Solution |    | :---: | :---: |    |Two or more callback functions exist|Create only one callback function|    |![img_39][img_39]|![img_40][img_40]|21. A callback function cannot be defined in a block    | Cause of Error | Solution |    | :---: | :---: |    |Callback located in the block|Remove callback from block|    |![img_41][img_41]|![img_42][img_42]|22. This command cannot be used in a callback function    | Cause of Error | Solution |    | :---: | :---: |    |Improper command located in callback|The corresponding command has been deleted|    |![img_43][img_43]|![img_44][img_44]|23. This device cannot be used in a callback function    | Cause of Error | Solution |    | :---: | :---: |    |An unusable parameter located in callback|Delete corresponding parameter|    |![img_45][img_45]|![img_46][img_46]|24. This command cannot be used with the selected controller    | Cause of Error | Solution |    | :---: | :---: |    |Unsupported command being used in the current controller|Delete corresponding command or set to supported controller|    |![img_47][img_47]|![img_48][img_48]|25. There is a device which cannot be used with the selected controller    | Cause of Error | Solution |    | :---: | :---: |    |Unusable parameter being used in the controller|Either deleted the corresponding parameter or set to a controller which is supported|    |![img_49][img_49]|![img_50][img_50]|## [Error Messages](#error-messages)The following table provides a list of errors you may see while writing codes and printing the output on the screen with RoboPlus Task.|Error Code|Description|Output Example|| :---: | :--- | :--- ||8100|Trying to communicate with an unconnected Dynamixel ID.If it is connected, please check the cable again.|**{[ERROR:8100:0005:03]}**8100 : Error Code0005 : The Dynamixel ID03 : Confidential Information||0009|Too many consecutive function calls. (More than 6 times)|**{[ERROR:0009:0033:06]}**0009 : Error Code0033 :Confidential Information06 : Confidential Information||8001|Attempting to read an address of the controller designated as &quot;write only&quot;.|**{[ERROR:8001:000C:02]}**8001 : Error Code000C : Confidential Information02 : Confidential Information||8002|Attempting to write at an address of the controller designated as &quot;read only&quot;.|**{[ERROR:8002:0009:02]}**8002 : Error Code0009 : Confidential Information02 :  Confidential Information||None|Motion page to execute does not exist.|**[Invalid Page Read:00FE]**00FE : Motion page number (hexadecimal)|[select_controller]: /assets/images/sw/rplus1/task/task_select_controller.png[img_01]: /assets/images/sw/rplus1/task/task_rule_error_001.png[img_02]: /assets/images/sw/rplus1/task/task_rule_error_002.png[img_03]: /assets/images/sw/rplus1/task/task_rule_error_003.png[img_04]: /assets/images/sw/rplus1/task/task_rule_error_004.png[img_05]: /assets/images/sw/rplus1/task/task_rule_error_005.png[img_06]: /assets/images/sw/rplus1/task/task_rule_error_006.png[img_07]: /assets/images/sw/rplus1/task/task_rule_error_007.png[img_08]: /assets/images/sw/rplus1/task/task_rule_error_008.png[img_09]: /assets/images/sw/rplus1/task/task_rule_error_009.png[img_10]: /assets/images/sw/rplus1/task/task_rule_error_010.png[img_11]: /assets/images/sw/rplus1/task/task_rule_error_011.png[img_12]: /assets/images/sw/rplus1/task/task_rule_error_012.png[img_13]: /assets/images/sw/rplus1/task/task_rule_error_013.png[img_14]: /assets/images/sw/rplus1/task/task_rule_error_014.png[img_15]: /assets/images/sw/rplus1/task/task_rule_error_015.png[img_16]: /assets/images/sw/rplus1/task/task_rule_error_016.png[img_17]: /assets/images/sw/rplus1/task/task_rule_error_017.png[img_18]: /assets/images/sw/rplus1/task/task_rule_error_018.png[img_19]: /assets/images/sw/rplus1/task/task_rule_error_019.png[img_20]: /assets/images/sw/rplus1/task/task_rule_error_020.png[img_21]: /assets/images/sw/rplus1/task/task_rule_error_021.png[img_22]: /assets/images/sw/rplus1/task/task_rule_error_022.png[img_23]: /assets/images/sw/rplus1/task/task_rule_error_023.png[img_24]: /assets/images/sw/rplus1/task/task_rule_error_024.png[img_25]: /assets/images/sw/rplus1/task/task_rule_error_025.png[img_26]: /assets/images/sw/rplus1/task/task_rule_error_026.png[img_27]: /assets/images/sw/rplus1/task/task_rule_error_027.png[img_28]: /assets/images/sw/rplus1/task/task_rule_error_028.png[img_29]: /assets/images/sw/rplus1/task/task_rule_error_029.png[img_30]: /assets/images/sw/rplus1/task/task_rule_error_030.png[img_31]: /assets/images/sw/rplus1/task/task_rule_error_031.png[img_32]: /assets/images/sw/rplus1/task/task_rule_error_032.png[img_33]: /assets/images/sw/rplus1/task/task_rule_error_033.png[img_34]: /assets/images/sw/rplus1/task/task_rule_error_034.png[img_35]: /assets/images/sw/rplus1/task/task_rule_error_035.png[img_36]: /assets/images/sw/rplus1/task/task_rule_error_036.png[img_37]: /assets/images/sw/rplus1/task/task_rule_error_037.png[img_38]: /assets/images/sw/rplus1/task/task_rule_error_038.png[img_39]: /assets/images/sw/rplus1/task/task_rule_error_039.png[img_40]: /assets/images/sw/rplus1/task/task_rule_error_040.png[img_41]: /assets/images/sw/rplus1/task/task_rule_error_041.png[img_42]: /assets/images/sw/rplus1/task/task_rule_error_042.png[img_43]: /assets/images/sw/rplus1/task/task_rule_error_043.png[img_44]: /assets/images/sw/rplus1/task/task_rule_error_044.png[img_45]: /assets/images/sw/rplus1/task/task_rule_error_045.png[img_46]: /assets/images/sw/rplus1/task/task_rule_error_046.png[img_47]: /assets/images/sw/rplus1/task/task_rule_error_047.png[img_48]: /assets/images/sw/rplus1/task/task_rule_error_048.png[img_49]: /assets/images/sw/rplus1/task/task_rule_error_049.png[img_50]: /assets/images/sw/rplus1/task/task_rule_error_050.png",
        "url": " http://localhost:4000/emanual/docs/en/software/rplus1/task/task_misc/"
      } ,
  
      "docs-en-platform-thormang3-thormang3-ros-packages":  {
        "title": "THORMANG3",
      "content"	 : "# [THORMANG3 ROS Packages](#thormang3-ros-packages)## [MPC Packages](#mpc-packages)### [thormang3_manager](#thormang3_manager)`thormang3_manager` is a package to apply ROBOTIS Framework to THORMANG3. Refer to the below link to create a new robot manager.1. Download &amp; Build    `Note` Reference : [MPC Installation]    {: .notice}2. Run    Execute the program with a .launch file in order to load ROS parameters. The command should be executed from the root account to configure the attribute of Thread.    ```    $ sudo bash    [sudo] password for robotis:    # roslaunch thormang3_manager thormang3_manager.launch    ```#### ROS API+ Launch Parameters  - **gazebo (bool, default: false)** : Configure whether to the program run in gazebo mode.  - **gazebo_robot_name (string, default: &quot;&quot;)** : Configure the robot name for joint_state topic name when running in gazebo mode.  ex) If thormang3 is the gazebo_robot_name, /thormang3/joint_states will be subscribed.  - **offset_file_path (string, default: &quot;&quot;)** : This path indicates the location of the file that contains offset data of each joint and initial posture data for offset adjustment.  - **robot_file_path (string, default: &quot;&quot;)** : This path indicates the location of .robot file that contains robot data.  - **init_file_path (string, default: &quot;&quot;)** : This path indicates the location of the file that contains initialization information of each joint.  - **ft_data_path (string, default: &quot;&quot;)** : This path indicates the location of the file that contains calibration matrix and unloaded voltage information of the FT sensor.  - **ft_calibration_data_path (string, default: &quot;&quot;)** : This path indicates the location of the file that contains the reference value for FT sensor calibration.### [thormang3_kinematics_dynamics](#thormang3_kinematics_dynamics)`thormang3_kinematics_dynamics` is a kinematics and dynamics library that provides joint &amp; link information and basic robotics function. To use this library, it is necessary to set the `CMakeList.txt` and `package.xml` of each moduleIn `CMakeList.txt`,```c++find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```In `package.xml`,```c++thormang3_kinematics_dynamics```#### Functions1. LinkData.cpp  + name : Joint name  + parent : Parent joint ID  + sibling : Sibling joint ID  + child : Child joint ID  + mass : Mass  + relative_position : Joint relative position (relative to parent)  + joint_axis : Joint axis vector (relative to parent)  + center_of_mass : Center of mass (Link Local)  + inertia : Moment of Inertia (Link Local)  + joint_limit_max : Joint upper limit  + joint_limit_min : Joint lower limit  + joint_angle : Joint angle  + joint_velocity : Joint velocity  + joint_acceleration : Joint acceleration  + position: Link position  + orientation : Link orientation  + transformation : Link transformation matrix2. ThorMang3KinematicsDynamics.cpp  + THORMANG3 joint &amp; link information    ```c++    ThorMang3KinematicsDynamics(TREE_SELECT tree)    ```  + Find kinematics tree    - arguments : start joint id    - return value : vector ( n x 1 )    ```c++    std::vector findRoute( int to )    ```  + Find kinematics tree    - arguments : start joint id and end joint id    - return value : vector ( n x 1 )    ```c++    std::vector findRoute( int from , int to )    ```  + Calculate total mass    - arguments : start joint id    - return value : total mass    ```c++    double TotalMass( int joint_ID )    ```  + Calculate center of mass    - arguments : start joint id    - return value : 3 x 1 matrix    ```c++    Eigen::MatrixXd CalcMC( int joint_ID )    Eigen::MatrixXd CalcCOM( Eigen::MatrixXd MC )    ```  + Calculate forward kinematics    - arguments : start joint id    ```c++    void ForwardKinematics( int joint_ID )    ```  + Calculate forward kinematics    - arguments : vector ( n x 1 )    - return value : 6 x n matrix    ```c++    Eigen::MatrixXd CalcJacobian( std::vector idx )    ```  + Calculate inverse kinematics    - arguments : end joint id, target position, target orientation, max iteration, calculation error    - return value : true or false    ```c++    bool InverseKinematics    ( int to,      Eigen::MatrixXd tar_position, Eigen::MatrixXd tar_orientation,      int max_iter,                 double ik_err )    ```  + Calculate inverse kinematics    - arguments : start joint id, end joint id, target position, target orientation, max iteration, calculation error    - return value : true or false    ```c++    bool InverseKinematics    ( int from,                     int to,      Eigen::MatrixXd tar_position, Eigen::MatrixXd tar_orientation,      int max_iter,                 double ik_err )    ```  + Calculate inverse kinematics for leg    - arguments : output, target position (x y z), target orientation (roll pitch yaw)    - return value : true or false    ```c++    bool InverseKinematicsforLeg    ( double *out,      double x,    double y,     double z,      double roll, double pitch, double yaw )    ```  + Calculate inverse kinematics for right leg    - arguments : output, target position (x y z), target orientation (roll pitch yaw)    - return value : true or false    ```c++    bool InverseKinematicsforRightLeg    ( double *out,      double x,    double y,     double z,      double roll, double pitch, double yaw);    ```  + Calculate inverse kinematics for left leg    - arguments : output, target position (x y z), target orientation (roll pitch yaw)    - return value : true or false    ```c++    bool InverseKinematicsforLeftLeg    ( double *out,      double x,    double y,     double z,      double roll, double pitch, double yaw);    ```### [thormang3_action_module](#thormang3_action_module)`thormang3_action_module` is one of the Motion Module. This module can load and play a motion file.The motion file is edited with thormang3_action_editor- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/action/page_num`([std_msgs/Int32])     The page number will be played.     If user send a page number between 1 ~ 255, the page will be played.     If user send -1, the action will be stopped.     If user send -2, the action will be broken(stop immediately).    `/robotis/action/start_action`([thormang3_action_module_msgs/StartAction])     The page number and joint names will be played.  - Published Topics    `/robotis/status`([robotis_controller_msgs/StatusMsg])     The message indicates status of the action_module.  - Services    `/robotis/action/is_running`([thormang3_action_module_msgs/IsRunning])     The service that checks whether THORMANG3&#39;s action is being played or not.### [thormang3_base_module](#thormang3_base_module)`thormang3_base_module` is a module for initial posture. This module is included in thormang3_manager as a library.- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}  The Motion Module is used in the manager as a form of library.  `Note` Reference : Creating new robot manager  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/base/ini_pose`([std_msgs/String])     A command to take the initial posture(This command is effective even when the base module is inactive).  - Published Topics    `/robotis/enable_ctrl_module`([std_msgs/String])     A base_module activation topic to take the initial posture.    `/robotis/status`([robotis_controller_msgs/StatusMsg])     A message that contains the status of base_module.### [thormang3_manipulation_module](#thormang3_manipulation_module)THORMANG3 manipulation module for the upper body.- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/manipulation/ini_pose_msg` (std_msgs/String)     A message to take the initial posture.    `/robotis/manipulation/joint_pose_msg` (thormang3_manipulation_module_msgs/JointPose)     A message to move to the target point in the Joint Space.    `/robotis/manipulation/kinematics_pose_msg` (thormang3_manipulation_module_msgs/KinematicsPose)     A message to move to the target pose in the Task Space.  - Published Topics    `/robotis/status` (robotis_controller_msgs/StatusMsg)     A status message of THORMANG3  - Services    `/robotis/manipulation/get_joint_pose` (thormang3_manipulation_module_msgs/GetJointPose)     A service that reads the pose of specific joint.    `/robotis/manipulation/get_kinematics_pose` (thormang3_manipulation_module_msgs/GetKinematicsPose)     A service that reads the pose of end effector from a specific kinematics group.### [thormang3_walking_module](#thormang3_walking_module)![](/assets/images/platform/thormang3/thormang3_walking_module_diagram.jpg)As seen from the above figure, thormang3_walking_module is one of the MotionModules from ROS Framework.THROMANG3 can be controlled with Topics and Services.Users can designate almost all Step Parameters.(thormang3_walking_module_msgs/StepData)1. Pattern Generation    thormang3_walking_module includes online walking pattern generator.    The pattern is generated from Foot Step Data input.    ![](/assets/images/platform/thormang3/thormang3_walking_module_algorithm_diagram.jpg)2. Balance Algorithm    The balance algorithm is included as shown below.(thormang3_walking_module_msgs/BalanceParam)    ![](/assets/images/platform/thormang3/thormang3_walking_module_balance_diagram.jpg)- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/sensor/imu/imu` (sensor_msgs/Imu)   Current data of the IMU Sensor  - Published Topics    `/robotis/status`(robotis_controller_msgs/StatusMsg)   Status message of THORMANG3  - Services    `/robotis/walking/get_reference_step_data`(thormang3_walking_module_msgs/GetReferenceStrpData)   A service that collects current location of THORMANG3 in the Global from the Walking Module.    `/robotis/walking/add_step_data`(thormang3_walking_module_msgs/AddStepDataArray)   A service that adds StepData created by the user.    `/robotis/walking/walking_start`(thormang3_walking_module_msgs/WalkingStart)   A service that commands to start walking.    `/robotis/walking/is_running`(thormang3_walking_module_msgs/IsRunning)   A service that checks whether THORMANG3 is walking or not.    `/robotis/walking/set_balance_param`(thormang3_walking_module_msgs/SetBalanceParam)   A service that can set Balance Algorithm parameters.    `/robotis/walking/remove_existing_step_data`(thormang3_walking_module_msgs/RemoveExistingStepData)   A service that deletes existing StepData.### [thormang3_head_control_module](#thormang3_head_control_module)This module is to control the head. This module is included in the Thormang3 Manager as a library.- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}`Note` Reference : Creating new robot manager{: .notice}#### ROS API- Subscribed Topics    `/robotis/head_control/move_lidar`(std_msgs/String)     The command moves the head in order to obtain Lidar data.    `/robotis/head_control/move_lidar_with_range`(std_msgs/Float64)     This command scans up and down a given range at the current head position to generate 3D lidar data.    `/robotis/head_control/set_joint_states`(sensor_msgs/JointState)     The message controls joints that are connected to the head.    `/robotis/head_control/set_joint_states_time`(thormang3_head_control_module_msgs/HeadJointPose)     The message moves head joints for given time.- Published Topics    `/robotis/sensor/move_lidar`(std_msgs/String)     This message reports the head movement to the Node which assembles LiDAR data.    `/robotis/status`(robotis_controller_msgs/StatusMsg)     The message indicates status of the head_control_module.### [ati_ft_sensor](#ati_ft_sensor)This is a library to use ForceTorque Sensor(FT Sensor) of ATI Inc in the ROS.The library can load saved Calibration Matrix and Unloaded Voltage from the YAML File.The library does not include functions to communicate with hardwares. It can convert voltage output from the FT sensor to N or Nm.#### Functions1. ATIForceTorqueSensorTWE Class```cppbool Initialize(const std::string&amp; ft_data_path,                const std::string&amp; ft_data_key,                const std::string&amp; ft_frame_id,                const std::string&amp; ft_raw_publish_name,                const std::string&amp; ft_scaled_publish_name)```  - arguments :      - ft_data_path : Location of the YAML file to save Calibration Matrix and Unloaded Voltage      - ft_data_key        - The key to read data from YAML        - Key format used to read YAML looks like : ft_data_key + &quot;_calibration_matrix&quot; 와 _ft_data_key + &quot;_unload&quot;        - For example, if &quot;ft_right_foot_calibration_matrix&quot; and &quot;ft_right_foot_unload&quot; are saved in the YAML, ft_data_key should be &quot;ft_right_foot&quot;.      - ft_frame_id : The frame_id to publish sensor outputs      - ft_raw_publish_name : The topic name for raw outputs      - ft_scaled_publish_name : The topic name for scaled outputs  - description : The function that configures variables in the Class according to Arguments  - return value : Indicates Initialization success/failure result ```cppvoid SetScaleFactor(double ft_scale_factor)```  - arguments :    - ft_scale_factor : The gain value for calculating scaled output    - Refer to the &quot;SetScaleParam&quot; function.  - description : Function sets the scale gain of the FT sensor  - return value : void ```cppvoid SetNullForceTorque(Eigen::MatrixXd ft_null)```  - arguments :    - ft_null : Null value for calculating scaled output    - Refer to the &quot;SetScaleParam&quot; function  - description : Function sets null value of the FT sensor  - return value : void ```cppvoid SetScaleParam(double ft_scale_factor, Eigen::MatrixXd ft_null)```  - arguments :    - ft_scale_factor : The gain value for calculating scaled output    - ft_null : Null value when calculating scaled output  - description :    - Function sets Parameter for calculating scaled output    - The scaled output can be calculated as below.    - ft_scaled = ft_scale_factor * (ft_raw - ft_null)  - return value : void ```cppvoid SetCurrentVoltageOutput(double voltage0, double voltage1, double voltage2, double voltage3, double voltage4, double voltage5)```  - arguments :    - voltage0 : The output voltage of the FT sensor #0    - voltage1 : The output voltage of the FT sensor #1    - voltage2 : The output voltage of the FT sensor #2    - voltage3 : The output voltage of the FT sensor #3    - voltage4 : The output voltage of the FT sensor #4    - voltage5 : The output voltage of the FT sensor #5  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque.  - return value : void ```cppvoid SetCurrentVoltageOutput(Eigen::MatrixXd _voltage)```  - arguments :    - voltage : The 6x1 matrix form of output voltage of the FT sensor  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque.  - return value : void ```cppEigen::MatrixXd GetCurrentForceTorqueRaw()```  - arguments : void  - description : Return the most recent Raw Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : Raw Force &amp; Raw Torque  - Eigen::MatrixXd ft = GetCurrentForceTorqueRaw()  - force_x = ft.coeff(0,0);  - force_y = ft.coeff(1,0);  - force_z = ft.coeff(2,0);  - torque_x = ft.coeff(3,0);  - torque_y = ft.coeff(4,0);  - torque_z = ft.coeff(5,0); ```cppEigen::MatrixXd GetCurrentForceTorqueScaled()```  - arguments : void  - description : Return the most recent Scaled Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : Scaled Force &amp; Scaled Torque  - Eigen::MatrixXd ft = GetCurrentForceTorqueScaled()  - force_x = ft.coeff(0,0);  - force_y = ft.coeff(1,0);  - force_z = ft.coeff(2,0);  - torque_x = ft.coeff(3,0);  - torque_y = ft.coeff(4,0);  - torque_z = ft.coeff(5,0); ```cppvoid GetCurrentForceTorqueRaw(double* _force_x_N,   double* _force_y_N,   double* _force_z_N,                              double* _torque_x_Nm, double* _torque_y_Nm, double* _torque_z_Nm)```  - arguments : The return pointer of Raw Force and Raw Torque  - description : Return the most recent Raw Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : void ```cppvoid GetCurrentForceTorqueScaled(double* _force_x_N,   double* _force_y_N,   double* _force_z_N,                                 double* _torque_x_Nm, double* _torque_y_Nm, double* _torque_z_Nm)```  - description : Return the most recent Scaled Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : void ```cppvoid SetCurrentVoltageOutputPublishForceTorque(double _voltage0, double _voltage1, double _voltage2,                                               double _voltage3, double _voltage4, double _voltage5)```  - arguments :    - voltage0 : The output voltage of the FT sensor #0    - voltage1 : The output voltage of the FT sensor #1    - voltage2 : The output voltage of the FT sensor #2    - voltage3 : The output voltage of the FT sensor #3    - voltage4 : The output voltage of the FT sensor #4    - voltage5 : The output voltage of the FT sensor #5  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque, then publish the converted force torque.  - return value : void ```cppvoid SetCurrentVoltageOutputPublish(Eigen::MatrixXd _voltage)```  - arguments :    - voltage : The 6x1 matrix form of output voltage of the FT sensor  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque, then publish the converted force torque.  - return value : void### [thormang3_feet_ft_module](#thormang3_feet_ft_module)The sensor module of THORMANG3 that uses ati_ft_sensor library.Acquired sensor values when the robot is hanging on the lift and standing on the ground can be used for the Calibration feature.#### ROS API1. Subscribed Topics  `/robotis/feet_ft/ft_calib_command` (std_msgs/String)   FT Calibration Command2. Published Topics  `/robotis/status` (robotis_controller_msgs/StatusMsg)   The status message of THORMANG3  `/robotis/feet_ft/both_ft_value` (thormang3_feet_ft_module_msgs/BothWrench)   Both Wrench  `/robotis/sensor/ft_right_foot/raw` (geometry_msgs/WrenchStamped)   raw output from the force torque sensor on the right foot  `/robotis/sensor/ft_right_foot/scaled` (geometry_msgs/WrenchStamped)   scaled output from the force torque sensor on the right foot  `/robotis/sensor/ft_right_foot/raw`(geometry_msgs/WrenchStamped)   raw output from the force torque sensor on the left foot  `/robotis/sensor/ft_right_foot/scaled`(geometry_msgs/renchStamped)   scaled output from the force torque sensor on the left foot### [thormang3_balance_control](#thormang3_balance_control)Library for using Balance Algorithm of THORMANG3 in ROS. There is two kinds of algorithm.#### Functions and Variables1. BalanceLowPassFilter Class    `void initialize(double control_cycle_sec_, double cut_off_frequency)`    - arguments :        - control_cycle_sec : control cycle in sec of motion module        - cut_off_frequency : cut off frequency for low pass filter    - description : the function that configures variables in the class according to arguments    - return value : void    `void setCutOffFrequency(double cut_off_frequency)`    - arguments :        -cut off frequency : desired cut off frequency for filtering. If cut_off_frequency is less than 0, filtering is not performed.    - description : the function for setting cut off frequency    - return value : void    `double getCutOffFrequency(void)`    - arguments : void    - description : the function for getting set cut off frequency    - return value : current set cut off frequency    `double getFilteredOutput(double present_raw_value)`    - arguments :        - present_raw_value : raw value    - description : the function for filtering and getting its result    - return value : filtered value2. Damping Controller Class    `double getFeedBack(double present_sensor_output)`    - arguments :        - present_sensor_output : present sensor output    - description : the function for calculating damping control and getting its result    - return value : result calculated by damping controller    `double desired_`    - description : desired value for damping controller    `double gain_`    - description : gain for damping controller    `double time_constant_sec_`    - description : time constant for damping controller    `double output_`    - description : result of damping controller    `double control_cycle_sec_`    - description : control cycle in sec of motion module3. BalancePDController Class    `double getFeedBack(double present_sensor_output)`    - arguments :        - present_sensor_output : present sensor output    - description : the function for calculating PD control and getting its result    - return value : result calculated by PD controller    `double desired_`    - description : desired value for PD controller    `double p_gain_`    - description : P gain for PD controller    `double d_gain_`    - description : D gain for PD controller4. BalanceControlUsingDampingConroller Class    `void initialize(const int control_cycle_msec)`    - arguments :        - control_cycle_msec : control cycel of motion module in milliseconds    - description : the function that configures variables in the class according to arguments    - return value : void    `void setGyroBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with gyro    - return value : void    `void setOrientationBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with orientation from IMU sensor    - return value : void    `void setForceTorqueBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with force and torque from ft sensor    - return value : void    `void process(int *balance_error, Eigen::MatrixXd *robot_to_cob_modified, Eigen::MatrixXd *robot_to_right_foot_modified, Eigen::MatrixXd *robot_to_left_foot_modified)`    - arguments :        - balance_error : the one of below values would be returned            - BalanceControlError::NoError(= 0) : There is no error.            - BalanceControlError::BalanceLimit(= 0) : The modification value by the balance algorithm is greater than the maximum modification.        - robot_to_cob_modified : the center of body modification calculated by balance algorithm        - robot_to_right_foot_modified : the right foot modification calculated by balance algorithm        - robot_to_left_foot_modified : the left_foot of body modification calculated by balance algorithm    - description : calculating balance algorithm using desired values and sensor outputs    - return value : void    `void setDesiredPose(const Eigen::MatrixXd &amp;robot_to_cob, const Eigen::MatrixXd &amp;robot_to_right_foot, const Eigen::MatrixXd &amp;robot_to_left_foot)`    - arguments :        - robot_to_cob : desired pose of center of body with respect to robot&#39;s local coordinate        - robot_to_right_foot : desired pose of right foot with respect to robot&#39;s local coordinate        - robot_to_left_foot : desired pose of left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired pose of right foot, left foot and center of body    - return value : void    `void setDesiredCOBGyro(double gyro_roll, double gyro_pitch)`    - arguments :        - gyro_roll : desired x directional angular velocity with respect robot&#39;s local coordinate        - gyro_pitch : desired y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting desired angular velocity    - return value : void    `void setDesiredCOBOrientation(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : desired roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : desired pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting desired robot&#39;s orientation    - return value : void    `void setDesiredFootForceTorque(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                 double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                 double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                 double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : desired x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : desired y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : desired z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : desired x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : desired y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : desired z directional torque on right foot with respect to robot&#39;s local coordinate        - l_force_x_N : desired x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : desired y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : desired z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired force in newton and torque in newton-meter on feet    - return value : void    `void setCurrentGyroSensorOutput(double gyro_roll, double gyro_pitch)`    - arguments :      - gyro_roll : current x directional angular velocity with respect robot&#39;s local coordinate      - gyro_pitch : current y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting current angular velocity from IMU sensor    - return value :    `void setCurrentOrientationSensorOutput(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : current roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : current pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting current orientation from IMU sensor    - return value : void    `void setCurrentFootForceTorqueSensorOutput(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                               double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                               double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                               double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : current x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : current y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : current z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : current x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : current y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : current z directional torque on right foot with respect to roboti&#39;s local coordinate        - l_force_x_N : current x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : current y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : current z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting current force and torque from force-torque sensor on both feet    - return value : void    `void setMaximumAdjustment(double cob_x_max_adjustment_m,  double cob_y_max_adjustment_m,  double cob_z_max_adjustment_m,                              double cob_roll_max_adjustment_rad, double cob_pitch_max_adjustment_rad, double cob_yaw_max_adjustment_rad,                              double foot_x_max_adjustment_m, double foot_y_max_adjustment_m, double foot_z_max_adjustment_m,                              double foot_roll_max_adjustment_rad, double foot_pitch_max_adjustment_rad, double foot_yaw_max_adjustment_rad)`    - arguments :        - cob_x_max_adjustment_m : the maximum x directinal linear modification of center of body        - cob_y_max_adjustment_m : the maximum y directinal linear modification of center of body        - cob_z_max_adjustment_m : the maximum z directinal linear modification of center of body        - cob_roll_max_adjustment_rad : the maximum x directinal angular modification of center of body        - cob_pitch_max_adjustment_rad : the maximum y directinal angular modification of center of body        - cob_yaw_max_adjustment_rad : the maximum z directinal angular modification of center of body        - foot_x_max_adjustment_m : the maximum x directinal linear modification of foot        - foot_y_max_adjustment_m : the maximum y directinal linear modification of foot        - foot_z_max_adjustment_m : the maximum z directinal linear modification of foot        - foot_roll_max_adjustment_rad : the maximum x directinal angular modification of foot        - foot_pitch_max_adjustment_rad : the maximum y directinal angular modification of foot        - foot_yaw_max_adjustment_rad : the maximum z directinal angular modification of foot    - description : the function for setting maximum modification    - return value : void    `void setCOBManualAdjustment(double cob_x_adjustment_m, double cob_y_adjustment_m, double cob_z_adjustment_m)`    - arguments :        - cob_x_adjustment_m : the x offset of center of body        - cob_y_adjustment_m : the y offset of center of body        - cob_z_adjustment_m : the z offset of center of body    - description : the function for setting manual modification of center of body    - return value : void    `double getCOBManualAdjustmentX()`    - arguments : void    - description : the function for getting x directional manual modification of center of body    - return value : x directional manual modification of center of body    `double getCOBManualAdjustmentY()`    - arguments : void    - description : the function for getting y directional manual modification of center of body    - return value : y directional manual modification of center of body    `double getCOBManualAdjustmentZ()`    - arguments : void    - description : the function for getting z directional manual modification of center of body    - return value : z directional manual modification of center of body    `void setGyroBalanceGainRatio(double gyro_balance_gain_ratio)`    - arguments :    - gyro_balance_gain_ratio : gyro balance gain    - description : the function for setting gyro balance gain    - return value : void    `double getGyroBalanceGainRatio(void)`    - arguments : void    - description : the function for getting set gyro balance gain    - return value : current set gyro balance gain    `DampingController foot_roll_angle_ctrl_`    - description : damping controller for foot using roll angle    `DampingController foot_pitch_angle_ctrl_`    - description : damping controller for foot using pitch angle    `DampingController right_foot_force_x_ctrl_`    - description : damping controller for foot using force x on right foot    `DampingController right_foot_force_y_ctrl_`    - description : damping controller for foot using force y on right foot    `DampingController right_foot_force_z_ctrl_`    - description : damping controller for foot using force z on right foot    `DampingController right_foot_torque_roll_ctrl_`    - description : damping controller for foot using torque x on right foot    `DampingController right_foot_torque_pitch_ctrl_`    - description : damping controller for foot using torque y on right foot    `DampingController left_foot_force_x_ctrl_`    - description : damping controller for foot using force x on left foot    `DampingController left_foot_force_y_ctrl_`    - description : damping controller for foot using force y on left foot    `DampingController left_foot_force_z_ctrl_`    - description : damping controller for foot using force z on left foot    `DampingController left_foot_torque_roll_ctrl_`    - description : damping controller for foot using torque x on left foot    `DampingController left_foot_torque_pitch_ctrl_`    - description : damping controller for foot using torque y on left foot5. BalanceControlUsingPDController Class    `void initialize(const int control_cycle_msec)`    - arguments :        - control_cycle_msec : control cycel of motion module in milliseconds    - description : the function that configures variables in the class according to arguments    - return value : void    `void setGyroBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with gyro    - return value : void    `void setOrientationBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with orientation from IMU sensor    - return value : void    `void setForceTorqueBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with force and torque from ft sensor    - return value : void    `void process(int *balance_error, Eigen::MatrixXd *robot_to_cob_modified, Eigen::MatrixXd *robot_to_right_foot_modified, Eigen::MatrixXd *robot_to_left_foot_modified)`    - arguments :        - balance_error : the one of below values would be returned        - BalanceControlError::NoError(= 0) : There is no error.        - BalanceControlError::BalanceLimit(= 0) : The modification value by the balance algorithm is greater than the maximum modification.        - robot_to_cob_modified : the center of body modification calculated by balance algorithm        - robot_to_right_foot_modified : the right foot modification calculated by balance algorithm        - robot_to_left_foot_modified : the left_foot of body modification calculated by balance algorithm    - description : calculating balance algorithm using desired values and sensor outputs    - return value : void    `void setDesiredPose(const Eigen::MatrixXd &amp;robot_to_cob, const Eigen::MatrixXd &amp;robot_to_right_foot, const Eigen::MatrixXd &amp;robot_to_left_foot)`    - arguments :        - robot_to_cob : desired pose of center of body with respect to robot&#39;s local coordinate        - robot_to_right_foot : desired pose of right foot with respect to robot&#39;s local coordinate        - robot_to_left_foot : desired pose of left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired pose of right foot, left foot and center of body    - return value : void    `void setDesiredCOBGyro(double gyro_roll, double gyro_pitch)`    - arguments :        - gyro_roll : desired x directional angular velocity with respect robot&#39;s local coordinate        - gyro_pitch : desired y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting desired angular velocity    - return value : void    `void setDesiredCOBOrientation(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : desired roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : desired pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting desired robot&#39;s orientation    - return value : void    `void setDesiredFootForceTorque(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                     double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                     double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                     double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : desired x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : desired y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : desired z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : desired x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : desired y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : desired z directional torque on right foot with respect to robot&#39;s local coordinate        - l_force_x_N : desired x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : desired y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : desired z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired force in newton and torque in newton-meter on feet    - return value : void    `void setCurrentGyroSensorOutput(double gyro_roll, double gyro_pitch)`    - arguments :        - gyro_roll : current x directional angular velocity with respect robot&#39;s local coordinate        - gyro_pitch : current y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting current angular velocity from IMU sensor    - return value :    `void setCurrentOrientationSensorOutput(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : current roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : current pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting current orientation from IMU sensor    - return value : void    `void setCurrentFootForceTorqueSensorOutput(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                               double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                               double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                               double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : current x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : current y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : current z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : current x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : current y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : current z directional torque on right foot with respect to robot&#39;s local coordinate        - l_force_x_N : current x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : current y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : current z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting current force and torque from force-torque sensor on both feet    - return value : void    `void setMaximumAdjustment(double cob_x_max_adjustment_m,  double cob_y_max_adjustment_m,  double cob_z_max_adjustment_m,                              double cob_roll_max_adjustment_rad, double cob_pitch_max_adjustment_rad, double cob_yaw_max_adjustment_rad,                              double foot_x_max_adjustment_m, double foot_y_max_adjustment_m, double foot_z_max_adjustment_m,                              double foot_roll_max_adjustment_rad, double foot_pitch_max_adjustment_rad, double foot_yaw_max_adjustment_rad)`    - arguments :        - cob_x_max_adjustment_m : the maximum x directinal linear modification of center of body        - cob_y_max_adjustment_m : the maximum y directinal linear modification of center of body        - cob_z_max_adjustment_m : the maximum z directinal linear modification of center of body        - cob_roll_max_adjustment_rad : the maximum x directinal angular modification of center of body        - cob_pitch_max_adjustment_rad : the maximum y directinal angular modification of center of body        - cob_yaw_max_adjustment_rad : the maximum z directinal angular modification of center of body        - foot_x_max_adjustment_m : the maximum x directinal linear modification of foot        - foot_y_max_adjustment_m : the maximum y directinal linear modification of foot        - foot_z_max_adjustment_m : the maximum z directinal linear modification of foot        - foot_roll_max_adjustment_rad : the maximum x directinal angular modification of foot        - foot_pitch_max_adjustment_rad : the maximum y directinal angular modification of foot        - foot_yaw_max_adjustment_rad : the maximum z directinal angular modification of foot    - description : the function for setting maximum modification    - return value : void    `void setCOBManualAdjustment(double cob_x_adjustment_m, double cob_y_adjustment_m, double cob_z_adjustment_m)`    - arguments :        - cob_x_adjustment_m : the x offset of center of body        - cob_y_adjustment_m : the y offset of center of body        - cob_z_adjustment_m : the z offset of center of body    - description : the function for setting manual modification of center of body    - return value : void    `double getCOBManualAdjustmentX()`    - arguments : void    - description : the function for getting current set x directional manual modification of center of body    - return value : x directional manual modification of center of body    `double getCOBManualAdjustmentY()`    - arguments : void    - description : the function for getting current set y directional manual modification of center of body    - return value : y directional manual modification of center of body    `double getCOBManualAdjustmentZ()`    - arguments : void    - description : the function for getting current set z directional manual modification of center of body    - return value : z directional manual modification of center of body    `BalancePDController foot_roll_gyro_ctrl_`    - description : PD controller for foot using x directional gyro    `BalancePDController foot_pitch_gyro_ctrl_`    - description : PD controller for foot using y directional gyro    `BalancePDController foot_roll_angle_ctrl_`    - description : PD controller for foot using roll angle    `BalancePDController right_foot_force_x_ctrl_`    - description : PD controller for foot using x directional force on right foot    `BalancePDController right_foot_force_y_ctrl_`    - description : PD controller for foot using y directional force on right foot    `BalancePDController right_foot_force_z_ctrl_`    - description : PD controller for foot using z directional force on right foot    `BalancePDController right_foot_torque_roll_ctrl_`    - description : PD controller for foot using x directional torque on right foot    `BalancePDController right_foot_torque_pitch_ctrl_`    - description : PD controller for foot using y directional torque on right foot    `BalancePDController left_foot_force_x_ctrl_`    - description : PD controller for foot using x directional force on left foot    `BalancePDController left_foot_force_y_ctrl_`    - description : PD controller for foot using y directional force on left foot    `BalancePDController left_foot_force_z_ctrl_`    - description : PD controller for foot using z directional force on left foot    `BalancePDController left_foot_torque_roll_ctrl_`    - description : PD controller for foot using x directional torque on left foot    `BalancePDController left_foot_torque_pitch_ctrl_`    - description : PD controller for foot using y directional torque on left foot    `BalanceLowPassFilter roll_gyro_lpf_`    - description : Low Pass Filter for x directional angular velocity from IMU    `BalanceLowPassFilter pitch_gyro_lpf_`    - description : Low Pass Filter for y directional angular velocity from IMU    `BalanceLowPassFilter roll_angle_lpf_;`    - description : Low Pass Filter for roll angle from IMU    `BalanceLowPassFilter pitch_angle_lpf_;`    - description : Low Pass Filter for pitch angle from IMU    `BalanceLowPassFilter right_foot_force_x_lpf_;`    - description : Low Pass Filter for x directional force from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_force_y_lpf_;`    - description : Low Pass Filter for y directional force from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_force_z_lpf_;`    - description : Low Pass Filter for z directional force from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_torque_roll_lpf_;`    - description : Low Pass Filter for x directional torque from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_torque_pitch_lpf_;`    - description : Low Pass Filter for y directional torque from force-torque sensor on right foot    `BalanceLowPassFilter left_foot_force_x_lpf_;`    - description : Low Pass Filter for x directional force from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_force_y_lpf_;`    - description : Low Pass Filter for y directional force from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_force_z_lpf_;`    - description : Low Pass Filter for z directional force from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_torque_roll_lpf_;`    - description : Low Pass Filter for x directional torque from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_torque_pitch_lpf_;`    - description : Low Pass Filter for y directional torque from force-torque sensor on left foot### [imu-3dm-gx4](#imu-3dm-gx4)This module is for the IMU Sensor(MicroStrain 3DM-GX4-25).This module exists in a separated Node, and this module is launched along with the thormang3_manager when executing .launch file of the thormang3_manager.This is the modified version of KumarRobotics/imu_3dm_gx4.#### ROS API- Published Topics    `/robotis/sensor/imu/imu` (sensor_msgs/Imu)    Current output of the IMU Sensor## [PPC Packages](#ppc-packages)## [OPC Packages](#opc-packages)## [Common Packages](#common-packages)## [Tools Packages](#tools-packages)## [THORMANG msgs Package](#thormang-msgs-package)[MPC Installation]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/ROBOTIS-ROS-Package-installation#21-mpc[std_msgs/Int32]: http://docs.ros.org/api/std_msgs/html/msg/Int32.html[std_msgs/String]: http://docs.ros.org/api/std_msgs/html/msg/String.html[thormang3_action_module_msgs/StartAction]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/StartAction.msg[robotis_controller_msgs/StatusMsg]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/StatusMsg.msg[thormang3_action_module_msgs/IsRunning]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/(thormang3_action_module_msgs)IsRunning.srv",
        "url": " http://localhost:4000/emanual/docs/en/platform/thormang3/thormang3_ros_packages/"
      } ,
  
      "docs-en-platform-thormang3-thormang3-ros-packages":  {
        "title": "THORMANG3",
      "content"	 : "# [THORMANG3 ROS Packages](#thormang3-ros-packages)## [MPC Packages](#mpc-packages)### [thormang3_manager](#thormang3_manager)`thormang3_manager` is a package to apply ROBOTIS Framework to THORMANG3. Refer to the below link to create a new robot manager.1. Download &amp; Build    `Note` Reference : [MPC Installation]    {: .notice}2. Run    Execute the program with a .launch file in order to load ROS parameters. The command should be executed from the root account to configure the attribute of Thread.    ```    $ sudo bash    [sudo] password for robotis:    # roslaunch thormang3_manager thormang3_manager.launch    ```#### ROS API+ Launch Parameters  - gazebo (bool, default: false) : Configure whether to the program run in gazebo mode.  - gazebo_robot_name (string, default: &quot;&quot;) : Configure the robot name for joint_state topic name when running in gazebo mode.  ex) If thormang3 is the gazebo_robot_name, /thormang3/joint_states will be subscribed.  - offset_file_path (string, default: &quot;&quot;) : This path indicates the location of the file that contains offset data of each joint and initial posture data for offset adjustment.  - robot_file_path (string, default: &quot;&quot;) : This path indicates the location of .robot file that contains robot data.  - init_file_path (string, default: &quot;&quot;) : This path indicates the location of the file that contains initialization information of each joint.  - ft_data_path (string, default: &quot;&quot;) : This path indicates the location of the file that contains calibration matrix and unloaded voltage information of the FT sensor.  - ft_calibration_data_path (string, default: &quot;&quot;) : This path indicates the location of the file that contains the reference value for FT sensor calibration.### [thormang3_kinematics_dynamics](#thormang3_kinematics_dynamics)`thormang3_kinematics_dynamics` is a kinematics and dynamics library that provides joint &amp; link information and basic robotics function. To use this library, it is necessary to set the `CMakeList.txt` and `package.xml` of each moduleIn `CMakeList.txt`,```c++find_package( thormang3_kinematics_dynamics )target_link_libraries( thormang3_kinematics_dynamics )```In `package.xml`,```c++thormang3_kinematics_dynamics```#### Functions1. LinkData.cpp    + name : Joint name    + parent : Parent joint ID    + sibling : Sibling joint ID    + child : Child joint ID    + mass : Mass    + relative_position : Joint relative position (relative to parent)    + joint_axis : Joint axis vector (relative to parent)    + center_of_mass : Center of mass (Link Local)    + inertia : Moment of Inertia (Link Local)    + joint_limit_max : Joint upper limit    + joint_limit_min : Joint lower limit    + joint_angle : Joint angle    + joint_velocity : Joint velocity    + joint_acceleration : Joint acceleration    + position: Link position    + orientation : Link orientation    + transformation : Link transformation matrix2. ThorMang3KinematicsDynamics.cpp  + THORMANG3 joint &amp; link information    ```c++    ThorMang3KinematicsDynamics(TREE_SELECT tree)    ```  + Find kinematics tree    - arguments : start joint id    - return value : vector ( n x 1 )    ```c++    std::vector findRoute( int to )    ```  + Find kinematics tree    - arguments : start joint id and end joint id    - return value : vector ( n x 1 )    ```c++    std::vector findRoute( int from , int to )    ```  + Calculate total mass    - arguments : start joint id    - return value : total mass    ```c++    double TotalMass( int joint_ID )    ```  + Calculate center of mass    - arguments : start joint id    - return value : 3 x 1 matrix    ```c++    Eigen::MatrixXd CalcMC( int joint_ID )    Eigen::MatrixXd CalcCOM( Eigen::MatrixXd MC )    ```  + Calculate forward kinematics    - arguments : start joint id    ```c++    void ForwardKinematics( int joint_ID )    ```  + Calculate forward kinematics    - arguments : vector ( n x 1 )    - return value : 6 x n matrix    ```c++    Eigen::MatrixXd CalcJacobian( std::vector idx )    ```  + Calculate inverse kinematics    - arguments : end joint id, target position, target orientation, max iteration, calculation error    - return value : true or false    ```c++    bool InverseKinematics    ( int to,      Eigen::MatrixXd tar_position, Eigen::MatrixXd tar_orientation,      int max_iter,                 double ik_err )    ```  + Calculate inverse kinematics    - arguments : start joint id, end joint id, target position, target orientation, max iteration, calculation error    - return value : true or false    ```c++    bool InverseKinematics    ( int from,                     int to,      Eigen::MatrixXd tar_position, Eigen::MatrixXd tar_orientation,      int max_iter,                 double ik_err )    ```  + Calculate inverse kinematics for leg    - arguments : output, target position (x y z), target orientation (roll pitch yaw)    - return value : true or false    ```c++    bool InverseKinematicsforLeg    ( double *out,      double x,    double y,     double z,      double roll, double pitch, double yaw )    ```  + Calculate inverse kinematics for right leg    - arguments : output, target position (x y z), target orientation (roll pitch yaw)    - return value : true or false    ```c++    bool InverseKinematicsforRightLeg    ( double *out,      double x,    double y,     double z,      double roll, double pitch, double yaw);    ```  + Calculate inverse kinematics for left leg    - arguments : output, target position (x y z), target orientation (roll pitch yaw)    - return value : true or false    ```c++    bool InverseKinematicsforLeftLeg    ( double *out,      double x,    double y,     double z,      double roll, double pitch, double yaw);    ```### [thormang3_action_module](#thormang3_action_module)`thormang3_action_module` is one of the Motion Module. This module can load and play a motion file.The motion file is edited with thormang3_action_editor- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/action/page_num`([std_msgs/Int32])     The page number will be played.     If user send a page number between 1 ~ 255, the page will be played.     If user send -1, the action will be stopped.     If user send -2, the action will be broken(stop immediately).    `/robotis/action/start_action`([thormang3_action_module_msgs/StartAction])     The page number and joint names will be played.  - Published Topics    `/robotis/status`([robotis_controller_msgs/StatusMsg])     The message indicates status of the action_module.  - Services    `/robotis/action/is_running`([thormang3_action_module_msgs/IsRunning])     The service that checks whether THORMANG3&#39;s action is being played or not.### [thormang3_base_module](#thormang3_base_module)`thormang3_base_module` is a module for initial posture. This module is included in thormang3_manager as a library.- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}  The Motion Module is used in the manager as a form of library.  `Note` Reference : Creating new robot manager  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/base/ini_pose`([std_msgs/String])     A command to take the initial posture(This command is effective even when the base module is inactive).  - Published Topics    `/robotis/enable_ctrl_module`([std_msgs/String])     A base_module activation topic to take the initial posture.    `/robotis/status`([robotis_controller_msgs/StatusMsg])     A message that contains the status of base_module.### [thormang3_manipulation_module](#thormang3_manipulation_module)THORMANG3 manipulation module for the upper body.- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/manipulation/ini_pose_msg` (std_msgs/String)     A message to take the initial posture.    `/robotis/manipulation/joint_pose_msg` (thormang3_manipulation_module_msgs/JointPose)     A message to move to the target point in the Joint Space.    `/robotis/manipulation/kinematics_pose_msg` (thormang3_manipulation_module_msgs/KinematicsPose)     A message to move to the target pose in the Task Space.  - Published Topics    `/robotis/status` (robotis_controller_msgs/StatusMsg)     A status message of THORMANG3  - Services    `/robotis/manipulation/get_joint_pose` (thormang3_manipulation_module_msgs/GetJointPose)     A service that reads the pose of specific joint.    `/robotis/manipulation/get_kinematics_pose` (thormang3_manipulation_module_msgs/GetKinematicsPose)     A service that reads the pose of end effector from a specific kinematics group.### [thormang3_walking_module](#thormang3_walking_module)![](/assets/images/platform/thormang3/thormang3_walking_module_diagram.jpg)As seen from the above figure, thormang3_walking_module is one of the MotionModules from ROS Framework.THROMANG3 can be controlled with Topics and Services.Users can designate almost all Step Parameters.(thormang3_walking_module_msgs/StepData)1. Pattern Generation    thormang3_walking_module includes online walking pattern generator.    The pattern is generated from Foot Step Data input.    ![](/assets/images/platform/thormang3/thormang3_walking_module_algorithm_diagram.jpg)2. Balance Algorithm    The balance algorithm is included as shown below.(thormang3_walking_module_msgs/BalanceParam)    ![](/assets/images/platform/thormang3/thormang3_walking_module_balance_diagram.jpg)- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}#### ROS API  - Subscribed Topics    `/robotis/sensor/imu/imu` (sensor_msgs/Imu)   Current data of the IMU Sensor  - Published Topics    `/robotis/status`(robotis_controller_msgs/StatusMsg)   Status message of THORMANG3  - Services    `/robotis/walking/get_reference_step_data`(thormang3_walking_module_msgs/GetReferenceStrpData)   A service that collects current location of THORMANG3 in the Global from the Walking Module.    `/robotis/walking/add_step_data`(thormang3_walking_module_msgs/AddStepDataArray)   A service that adds StepData created by the user.    `/robotis/walking/walking_start`(thormang3_walking_module_msgs/WalkingStart)   A service that commands to start walking.    `/robotis/walking/is_running`(thormang3_walking_module_msgs/IsRunning)   A service that checks whether THORMANG3 is walking or not.    `/robotis/walking/set_balance_param`(thormang3_walking_module_msgs/SetBalanceParam)   A service that can set Balance Algorithm parameters.    `/robotis/walking/remove_existing_step_data`(thormang3_walking_module_msgs/RemoveExistingStepData)   A service that deletes existing StepData.### [thormang3_head_control_module](#thormang3_head_control_module)This module is to control the head. This module is included in the Thormang3 Manager as a library.- Download &amp; Build  `Note` Reference : [MPC Installation]  {: .notice}`Note` Reference : Creating new robot manager{: .notice}#### ROS API- Subscribed Topics    `/robotis/head_control/move_lidar`(std_msgs/String)     The command moves the head in order to obtain Lidar data.    `/robotis/head_control/move_lidar_with_range`(std_msgs/Float64)     This command scans up and down a given range at the current head position to generate 3D lidar data.    `/robotis/head_control/set_joint_states`(sensor_msgs/JointState)     The message controls joints that are connected to the head.    `/robotis/head_control/set_joint_states_time`(thormang3_head_control_module_msgs/HeadJointPose)     The message moves head joints for given time.- Published Topics    `/robotis/sensor/move_lidar`(std_msgs/String)     This message reports the head movement to the Node which assembles LiDAR data.    `/robotis/status`(robotis_controller_msgs/StatusMsg)     The message indicates status of the head_control_module.### [ati_ft_sensor](#ati_ft_sensor)This is a library to use ForceTorque Sensor(FT Sensor) of ATI Inc in the ROS.The library can load saved Calibration Matrix and Unloaded Voltage from the YAML File.The library does not include functions to communicate with hardwares. It can convert voltage output from the FT sensor to N or Nm.#### Functions1. ATIForceTorqueSensorTWE Class```cppbool Initialize(const std::string&amp; ft_data_path,                const std::string&amp; ft_data_key,                const std::string&amp; ft_frame_id,                const std::string&amp; ft_raw_publish_name,                const std::string&amp; ft_scaled_publish_name)```  - arguments :      - ft_data_path : Location of the YAML file to save Calibration Matrix and Unloaded Voltage      - ft_data_key        - The key to read data from YAML        - Key format used to read YAML looks like : ft_data_key + &quot;_calibration_matrix&quot; 와 _ft_data_key + &quot;_unload&quot;        - For example, if &quot;ft_right_foot_calibration_matrix&quot; and &quot;ft_right_foot_unload&quot; are saved in the YAML, ft_data_key should be &quot;ft_right_foot&quot;.      - ft_frame_id : The frame_id to publish sensor outputs      - ft_raw_publish_name : The topic name for raw outputs      - ft_scaled_publish_name : The topic name for scaled outputs  - description : The function that configures variables in the Class according to Arguments  - return value : Indicates Initialization success/failure result ```cppvoid SetScaleFactor(double ft_scale_factor)```  - arguments :    - ft_scale_factor : The gain value for calculating scaled output    - Refer to the &quot;SetScaleParam&quot; function.  - description : Function sets the scale gain of the FT sensor  - return value : void ```cppvoid SetNullForceTorque(Eigen::MatrixXd ft_null)```  - arguments :    - ft_null : Null value for calculating scaled output    - Refer to the &quot;SetScaleParam&quot; function  - description : Function sets null value of the FT sensor  - return value : void ```cppvoid SetScaleParam(double ft_scale_factor, Eigen::MatrixXd ft_null)```  - arguments :    - ft_scale_factor : The gain value for calculating scaled output    - ft_null : Null value when calculating scaled output  - description :    - Function sets Parameter for calculating scaled output    - The scaled output can be calculated as below.    - ft_scaled = ft_scale_factor * (ft_raw - ft_null)  - return value : void ```cppvoid SetCurrentVoltageOutput(double voltage0, double voltage1, double voltage2, double voltage3, double voltage4, double voltage5)```  - arguments :    - voltage0 : The output voltage of the FT sensor #0    - voltage1 : The output voltage of the FT sensor #1    - voltage2 : The output voltage of the FT sensor #2    - voltage3 : The output voltage of the FT sensor #3    - voltage4 : The output voltage of the FT sensor #4    - voltage5 : The output voltage of the FT sensor #5  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque.  - return value : void ```cppvoid SetCurrentVoltageOutput(Eigen::MatrixXd _voltage)```  - arguments :    - voltage : The 6x1 matrix form of output voltage of the FT sensor  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque.  - return value : void ```cppEigen::MatrixXd GetCurrentForceTorqueRaw()```  - arguments : void  - description : Return the most recent Raw Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : Raw Force &amp; Raw Torque  - Eigen::MatrixXd ft = GetCurrentForceTorqueRaw()  - force_x = ft.coeff(0,0);  - force_y = ft.coeff(1,0);  - force_z = ft.coeff(2,0);  - torque_x = ft.coeff(3,0);  - torque_y = ft.coeff(4,0);  - torque_z = ft.coeff(5,0); ```cppEigen::MatrixXd GetCurrentForceTorqueScaled()```  - arguments : void  - description : Return the most recent Scaled Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : Scaled Force &amp; Scaled Torque  - Eigen::MatrixXd ft = GetCurrentForceTorqueScaled()  - force_x = ft.coeff(0,0);  - force_y = ft.coeff(1,0);  - force_z = ft.coeff(2,0);  - torque_x = ft.coeff(3,0);  - torque_y = ft.coeff(4,0);  - torque_z = ft.coeff(5,0); ```cppvoid GetCurrentForceTorqueRaw(double* _force_x_N,   double* _force_y_N,   double* _force_z_N,                              double* _torque_x_Nm, double* _torque_y_Nm, double* _torque_z_Nm)```  - arguments : The return pointer of Raw Force and Raw Torque  - description : Return the most recent Raw Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : void ```cppvoid GetCurrentForceTorqueScaled(double* _force_x_N,   double* _force_y_N,   double* _force_z_N,                                 double* _torque_x_Nm, double* _torque_y_Nm, double* _torque_z_Nm)```  - description : Return the most recent Scaled Force and Torque of the voltage calculated from the &quot;SetCurrentVoltageOutput&quot; function.  - return value : void ```cppvoid SetCurrentVoltageOutputPublishForceTorque(double _voltage0, double _voltage1, double _voltage2,                                               double _voltage3, double _voltage4, double _voltage5)```  - arguments :    - voltage0 : The output voltage of the FT sensor #0    - voltage1 : The output voltage of the FT sensor #1    - voltage2 : The output voltage of the FT sensor #2    - voltage3 : The output voltage of the FT sensor #3    - voltage4 : The output voltage of the FT sensor #4    - voltage5 : The output voltage of the FT sensor #5  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque, then publish the converted force torque.  - return value : void ```cppvoid SetCurrentVoltageOutputPublish(Eigen::MatrixXd _voltage)```  - arguments :    - voltage : The 6x1 matrix form of output voltage of the FT sensor  - description : Function sets internal variables for the output voltage of the FT sensors and converts them to force torque, then publish the converted force torque.  - return value : void### [thormang3_feet_ft_module](#thormang3_feet_ft_module)The sensor module of THORMANG3 that uses ati_ft_sensor library.Acquired sensor values when the robot is hanging on the lift and standing on the ground can be used for the Calibration feature.#### ROS API1. Subscribed Topics  `/robotis/feet_ft/ft_calib_command` (std_msgs/String)   FT Calibration Command2. Published Topics  `/robotis/status` (robotis_controller_msgs/StatusMsg)   The status message of THORMANG3  `/robotis/feet_ft/both_ft_value` (thormang3_feet_ft_module_msgs/BothWrench)   Both Wrench  `/robotis/sensor/ft_right_foot/raw` (geometry_msgs/WrenchStamped)   raw output from the force torque sensor on the right foot  `/robotis/sensor/ft_right_foot/scaled` (geometry_msgs/WrenchStamped)   scaled output from the force torque sensor on the right foot  `/robotis/sensor/ft_right_foot/raw`(geometry_msgs/WrenchStamped)   raw output from the force torque sensor on the left foot  `/robotis/sensor/ft_right_foot/scaled`(geometry_msgs/renchStamped)   scaled output from the force torque sensor on the left foot### [thormang3_balance_control](#thormang3_balance_control)Library for using Balance Algorithm of THORMANG3 in ROS. There is two kinds of algorithm.#### Functions and Variables1. BalanceLowPassFilter Class    `void initialize(double control_cycle_sec_, double cut_off_frequency)`    - arguments :        - control_cycle_sec : control cycle in sec of motion module        - cut_off_frequency : cut off frequency for low pass filter    - description : the function that configures variables in the class according to arguments    - return value : void    `void setCutOffFrequency(double cut_off_frequency)`    - arguments :        -cut off frequency : desired cut off frequency for filtering. If cut_off_frequency is less than 0, filtering is not performed.    - description : the function for setting cut off frequency    - return value : void    `double getCutOffFrequency(void)`    - arguments : void    - description : the function for getting set cut off frequency    - return value : current set cut off frequency    `double getFilteredOutput(double present_raw_value)`    - arguments :        - present_raw_value : raw value    - description : the function for filtering and getting its result    - return value : filtered value2. Damping Controller Class    `double getFeedBack(double present_sensor_output)`    - arguments :        - present_sensor_output : present sensor output    - description : the function for calculating damping control and getting its result    - return value : result calculated by damping controller    `double desired_`    - description : desired value for damping controller    `double gain_`    - description : gain for damping controller    `double time_constant_sec_`    - description : time constant for damping controller    `double output_`    - description : result of damping controller    `double control_cycle_sec_`    - description : control cycle in sec of motion module3. BalancePDController Class    `double getFeedBack(double present_sensor_output)`    - arguments :        - present_sensor_output : present sensor output    - description : the function for calculating PD control and getting its result    - return value : result calculated by PD controller    `double desired_`    - description : desired value for PD controller    `double p_gain_`    - description : P gain for PD controller    `double d_gain_`    - description : D gain for PD controller4. BalanceControlUsingDampingConroller Class    `void initialize(const int control_cycle_msec)`    - arguments :        - control_cycle_msec : control cycel of motion module in milliseconds    - description : the function that configures variables in the class according to arguments    - return value : void    `void setGyroBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with gyro    - return value : void    `void setOrientationBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with orientation from IMU sensor    - return value : void    `void setForceTorqueBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with force and torque from ft sensor    - return value : void    `void process(int *balance_error, Eigen::MatrixXd *robot_to_cob_modified, Eigen::MatrixXd *robot_to_right_foot_modified, Eigen::MatrixXd *robot_to_left_foot_modified)`    - arguments :        - balance_error : the one of below values would be returned            - BalanceControlError::NoError(= 0) : There is no error.            - BalanceControlError::BalanceLimit(= 0) : The modification value by the balance algorithm is greater than the maximum modification.        - robot_to_cob_modified : the center of body modification calculated by balance algorithm        - robot_to_right_foot_modified : the right foot modification calculated by balance algorithm        - robot_to_left_foot_modified : the left_foot of body modification calculated by balance algorithm    - description : calculating balance algorithm using desired values and sensor outputs    - return value : void    `void setDesiredPose(const Eigen::MatrixXd &amp;robot_to_cob, const Eigen::MatrixXd &amp;robot_to_right_foot, const Eigen::MatrixXd &amp;robot_to_left_foot)`    - arguments :        - robot_to_cob : desired pose of center of body with respect to robot&#39;s local coordinate        - robot_to_right_foot : desired pose of right foot with respect to robot&#39;s local coordinate        - robot_to_left_foot : desired pose of left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired pose of right foot, left foot and center of body    - return value : void    `void setDesiredCOBGyro(double gyro_roll, double gyro_pitch)`    - arguments :        - gyro_roll : desired x directional angular velocity with respect robot&#39;s local coordinate        - gyro_pitch : desired y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting desired angular velocity    - return value : void    `void setDesiredCOBOrientation(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : desired roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : desired pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting desired robot&#39;s orientation    - return value : void    `void setDesiredFootForceTorque(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                 double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                 double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                 double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : desired x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : desired y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : desired z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : desired x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : desired y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : desired z directional torque on right foot with respect to robot&#39;s local coordinate        - l_force_x_N : desired x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : desired y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : desired z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired force in newton and torque in newton-meter on feet    - return value : void    `void setCurrentGyroSensorOutput(double gyro_roll, double gyro_pitch)`    - arguments :      - gyro_roll : current x directional angular velocity with respect robot&#39;s local coordinate      - gyro_pitch : current y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting current angular velocity from IMU sensor    - return value :    `void setCurrentOrientationSensorOutput(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : current roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : current pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting current orientation from IMU sensor    - return value : void    `void setCurrentFootForceTorqueSensorOutput(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                               double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                               double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                               double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : current x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : current y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : current z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : current x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : current y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : current z directional torque on right foot with respect to roboti&#39;s local coordinate        - l_force_x_N : current x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : current y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : current z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting current force and torque from force-torque sensor on both feet    - return value : void    `void setMaximumAdjustment(double cob_x_max_adjustment_m,  double cob_y_max_adjustment_m,  double cob_z_max_adjustment_m,                              double cob_roll_max_adjustment_rad, double cob_pitch_max_adjustment_rad, double cob_yaw_max_adjustment_rad,                              double foot_x_max_adjustment_m, double foot_y_max_adjustment_m, double foot_z_max_adjustment_m,                              double foot_roll_max_adjustment_rad, double foot_pitch_max_adjustment_rad, double foot_yaw_max_adjustment_rad)`    - arguments :        - cob_x_max_adjustment_m : the maximum x directinal linear modification of center of body        - cob_y_max_adjustment_m : the maximum y directinal linear modification of center of body        - cob_z_max_adjustment_m : the maximum z directinal linear modification of center of body        - cob_roll_max_adjustment_rad : the maximum x directinal angular modification of center of body        - cob_pitch_max_adjustment_rad : the maximum y directinal angular modification of center of body        - cob_yaw_max_adjustment_rad : the maximum z directinal angular modification of center of body        - foot_x_max_adjustment_m : the maximum x directinal linear modification of foot        - foot_y_max_adjustment_m : the maximum y directinal linear modification of foot        - foot_z_max_adjustment_m : the maximum z directinal linear modification of foot        - foot_roll_max_adjustment_rad : the maximum x directinal angular modification of foot        - foot_pitch_max_adjustment_rad : the maximum y directinal angular modification of foot        - foot_yaw_max_adjustment_rad : the maximum z directinal angular modification of foot    - description : the function for setting maximum modification    - return value : void    `void setCOBManualAdjustment(double cob_x_adjustment_m, double cob_y_adjustment_m, double cob_z_adjustment_m)`    - arguments :        - cob_x_adjustment_m : the x offset of center of body        - cob_y_adjustment_m : the y offset of center of body        - cob_z_adjustment_m : the z offset of center of body    - description : the function for setting manual modification of center of body    - return value : void    `double getCOBManualAdjustmentX()`    - arguments : void    - description : the function for getting x directional manual modification of center of body    - return value : x directional manual modification of center of body    `double getCOBManualAdjustmentY()`    - arguments : void    - description : the function for getting y directional manual modification of center of body    - return value : y directional manual modification of center of body    `double getCOBManualAdjustmentZ()`    - arguments : void    - description : the function for getting z directional manual modification of center of body    - return value : z directional manual modification of center of body    `void setGyroBalanceGainRatio(double gyro_balance_gain_ratio)`    - arguments :    - gyro_balance_gain_ratio : gyro balance gain    - description : the function for setting gyro balance gain    - return value : void    `double getGyroBalanceGainRatio(void)`    - arguments : void    - description : the function for getting set gyro balance gain    - return value : current set gyro balance gain    `DampingController foot_roll_angle_ctrl_`    - description : damping controller for foot using roll angle    `DampingController foot_pitch_angle_ctrl_`    - description : damping controller for foot using pitch angle    `DampingController right_foot_force_x_ctrl_`    - description : damping controller for foot using force x on right foot    `DampingController right_foot_force_y_ctrl_`    - description : damping controller for foot using force y on right foot    `DampingController right_foot_force_z_ctrl_`    - description : damping controller for foot using force z on right foot    `DampingController right_foot_torque_roll_ctrl_`    - description : damping controller for foot using torque x on right foot    `DampingController right_foot_torque_pitch_ctrl_`    - description : damping controller for foot using torque y on right foot    `DampingController left_foot_force_x_ctrl_`    - description : damping controller for foot using force x on left foot    `DampingController left_foot_force_y_ctrl_`    - description : damping controller for foot using force y on left foot    `DampingController left_foot_force_z_ctrl_`    - description : damping controller for foot using force z on left foot    `DampingController left_foot_torque_roll_ctrl_`    - description : damping controller for foot using torque x on left foot    `DampingController left_foot_torque_pitch_ctrl_`    - description : damping controller for foot using torque y on left foot5. BalanceControlUsingPDController Class    `void initialize(const int control_cycle_msec)`    - arguments :        - control_cycle_msec : control cycel of motion module in milliseconds    - description : the function that configures variables in the class according to arguments    - return value : void    `void setGyroBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with gyro    - return value : void    `void setOrientationBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with orientation from IMU sensor    - return value : void    `void setForceTorqueBalanceEnable(bool enable)`    - arguments :        - enable : true or false    - description : The function that turns on or off the balance algorithm with force and torque from ft sensor    - return value : void    `void process(int *balance_error, Eigen::MatrixXd *robot_to_cob_modified, Eigen::MatrixXd *robot_to_right_foot_modified, Eigen::MatrixXd *robot_to_left_foot_modified)`    - arguments :        - balance_error : the one of below values would be returned        - BalanceControlError::NoError(= 0) : There is no error.        - BalanceControlError::BalanceLimit(= 0) : The modification value by the balance algorithm is greater than the maximum modification.        - robot_to_cob_modified : the center of body modification calculated by balance algorithm        - robot_to_right_foot_modified : the right foot modification calculated by balance algorithm        - robot_to_left_foot_modified : the left_foot of body modification calculated by balance algorithm    - description : calculating balance algorithm using desired values and sensor outputs    - return value : void    `void setDesiredPose(const Eigen::MatrixXd &amp;robot_to_cob, const Eigen::MatrixXd &amp;robot_to_right_foot, const Eigen::MatrixXd &amp;robot_to_left_foot)`    - arguments :        - robot_to_cob : desired pose of center of body with respect to robot&#39;s local coordinate        - robot_to_right_foot : desired pose of right foot with respect to robot&#39;s local coordinate        - robot_to_left_foot : desired pose of left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired pose of right foot, left foot and center of body    - return value : void    `void setDesiredCOBGyro(double gyro_roll, double gyro_pitch)`    - arguments :        - gyro_roll : desired x directional angular velocity with respect robot&#39;s local coordinate        - gyro_pitch : desired y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting desired angular velocity    - return value : void    `void setDesiredCOBOrientation(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : desired roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : desired pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting desired robot&#39;s orientation    - return value : void    `void setDesiredFootForceTorque(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                     double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                     double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                     double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : desired x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : desired y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : desired z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : desired x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : desired y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : desired z directional torque on right foot with respect to robot&#39;s local coordinate        - l_force_x_N : desired x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : desired y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : desired z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : desired x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting desired force in newton and torque in newton-meter on feet    - return value : void    `void setCurrentGyroSensorOutput(double gyro_roll, double gyro_pitch)`    - arguments :        - gyro_roll : current x directional angular velocity with respect robot&#39;s local coordinate        - gyro_pitch : current y directional angular velocity with respect robot&#39;s local coordinate    - description : the function for setting current angular velocity from IMU sensor    - return value :    `void setCurrentOrientationSensorOutput(double cob_orientation_roll, double cob_orientation_pitch)`    - arguments :        - cob_orientation_roll : current roll angle in radian of robot&#39;s local coordinate        - cob_orientation_pitch : current pitch angle in radian of robot&#39;s local coordinate    - description : the function for setting current orientation from IMU sensor    - return value : void    `void setCurrentFootForceTorqueSensorOutput(double r_force_x_N,      double r_force_y_N,       double r_force_z_N,                                               double r_torque_roll_Nm, double r_torque_pitch_Nm, double r_torque_yaw_Nm,                                               double l_force_x_N,      double l_force_y_N,       double l_force_z_N,                                               double l_torque_roll_Nm, double l_torque_pitch_Nm, double l_torque_yaw_Nm)`    - arguments :        - r_force_x_N : current x directional force on right foot with respect to robot&#39;s local coordinate        - r_force_y_N : current y directional force on right foot with respect to robot&#39;s local coordinate        - r_force_z_N : current z directional force on right foot with respect to robot&#39;s local coordinate        - r_torque_roll_Nm : current x directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_pitch_Nm : current y directional torque on right foot with respect to robot&#39;s local coordinate        - r_torque_yaw_Nm : current z directional torque on right foot with respect to robot&#39;s local coordinate        - l_force_x_N : current x directional force on left foot with respect to robot&#39;s local coordinate        - l_force_y_N : current y directional force on left foot with respect to robot&#39;s local coordinate        - l_force_z_N : current z directional force on left foot with respect to robot&#39;s local coordinate        - l_torque_roll_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_pitch_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate        - l_torque_yaw_Nm : current x directional torque on left foot with respect to robot&#39;s local coordinate    - description : the function for setting current force and torque from force-torque sensor on both feet    - return value : void    `void setMaximumAdjustment(double cob_x_max_adjustment_m,  double cob_y_max_adjustment_m,  double cob_z_max_adjustment_m,                              double cob_roll_max_adjustment_rad, double cob_pitch_max_adjustment_rad, double cob_yaw_max_adjustment_rad,                              double foot_x_max_adjustment_m, double foot_y_max_adjustment_m, double foot_z_max_adjustment_m,                              double foot_roll_max_adjustment_rad, double foot_pitch_max_adjustment_rad, double foot_yaw_max_adjustment_rad)`    - arguments :        - cob_x_max_adjustment_m : the maximum x directinal linear modification of center of body        - cob_y_max_adjustment_m : the maximum y directinal linear modification of center of body        - cob_z_max_adjustment_m : the maximum z directinal linear modification of center of body        - cob_roll_max_adjustment_rad : the maximum x directinal angular modification of center of body        - cob_pitch_max_adjustment_rad : the maximum y directinal angular modification of center of body        - cob_yaw_max_adjustment_rad : the maximum z directinal angular modification of center of body        - foot_x_max_adjustment_m : the maximum x directinal linear modification of foot        - foot_y_max_adjustment_m : the maximum y directinal linear modification of foot        - foot_z_max_adjustment_m : the maximum z directinal linear modification of foot        - foot_roll_max_adjustment_rad : the maximum x directinal angular modification of foot        - foot_pitch_max_adjustment_rad : the maximum y directinal angular modification of foot        - foot_yaw_max_adjustment_rad : the maximum z directinal angular modification of foot    - description : the function for setting maximum modification    - return value : void    `void setCOBManualAdjustment(double cob_x_adjustment_m, double cob_y_adjustment_m, double cob_z_adjustment_m)`    - arguments :        - cob_x_adjustment_m : the x offset of center of body        - cob_y_adjustment_m : the y offset of center of body        - cob_z_adjustment_m : the z offset of center of body    - description : the function for setting manual modification of center of body    - return value : void    `double getCOBManualAdjustmentX()`    - arguments : void    - description : the function for getting current set x directional manual modification of center of body    - return value : x directional manual modification of center of body    `double getCOBManualAdjustmentY()`    - arguments : void    - description : the function for getting current set y directional manual modification of center of body    - return value : y directional manual modification of center of body    `double getCOBManualAdjustmentZ()`    - arguments : void    - description : the function for getting current set z directional manual modification of center of body    - return value : z directional manual modification of center of body    `BalancePDController foot_roll_gyro_ctrl_`    - description : PD controller for foot using x directional gyro    `BalancePDController foot_pitch_gyro_ctrl_`    - description : PD controller for foot using y directional gyro    `BalancePDController foot_roll_angle_ctrl_`    - description : PD controller for foot using roll angle    `BalancePDController right_foot_force_x_ctrl_`    - description : PD controller for foot using x directional force on right foot    `BalancePDController right_foot_force_y_ctrl_`    - description : PD controller for foot using y directional force on right foot    `BalancePDController right_foot_force_z_ctrl_`    - description : PD controller for foot using z directional force on right foot    `BalancePDController right_foot_torque_roll_ctrl_`    - description : PD controller for foot using x directional torque on right foot    `BalancePDController right_foot_torque_pitch_ctrl_`    - description : PD controller for foot using y directional torque on right foot    `BalancePDController left_foot_force_x_ctrl_`    - description : PD controller for foot using x directional force on left foot    `BalancePDController left_foot_force_y_ctrl_`    - description : PD controller for foot using y directional force on left foot    `BalancePDController left_foot_force_z_ctrl_`    - description : PD controller for foot using z directional force on left foot    `BalancePDController left_foot_torque_roll_ctrl_`    - description : PD controller for foot using x directional torque on left foot    `BalancePDController left_foot_torque_pitch_ctrl_`    - description : PD controller for foot using y directional torque on left foot    `BalanceLowPassFilter roll_gyro_lpf_`    - description : Low Pass Filter for x directional angular velocity from IMU    `BalanceLowPassFilter pitch_gyro_lpf_`    - description : Low Pass Filter for y directional angular velocity from IMU    `BalanceLowPassFilter roll_angle_lpf_;`    - description : Low Pass Filter for roll angle from IMU    `BalanceLowPassFilter pitch_angle_lpf_;`    - description : Low Pass Filter for pitch angle from IMU    `BalanceLowPassFilter right_foot_force_x_lpf_;`    - description : Low Pass Filter for x directional force from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_force_y_lpf_;`    - description : Low Pass Filter for y directional force from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_force_z_lpf_;`    - description : Low Pass Filter for z directional force from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_torque_roll_lpf_;`    - description : Low Pass Filter for x directional torque from force-torque sensor on right foot    `BalanceLowPassFilter right_foot_torque_pitch_lpf_;`    - description : Low Pass Filter for y directional torque from force-torque sensor on right foot    `BalanceLowPassFilter left_foot_force_x_lpf_;`    - description : Low Pass Filter for x directional force from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_force_y_lpf_;`    - description : Low Pass Filter for y directional force from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_force_z_lpf_;`    - description : Low Pass Filter for z directional force from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_torque_roll_lpf_;`    - description : Low Pass Filter for x directional torque from force-torque sensor on left foot    `BalanceLowPassFilter left_foot_torque_pitch_lpf_;`    - description : Low Pass Filter for y directional torque from force-torque sensor on left foot### [imu-3dm-gx4](#imu-3dm-gx4)This module is for the IMU Sensor(MicroStrain 3DM-GX4-25).This module exists in a separated Node, and this module is launched along with the thormang3_manager when executing .launch file of the thormang3_manager.This is the modified version of KumarRobotics/imu_3dm_gx4.#### ROS API- Published Topics    `/robotis/sensor/imu/imu` (sensor_msgs/Imu)    Current output of the IMU Sensor## [PPC Packages](#ppc-packages)## [OPC Packages](#opc-packages)## [Common Packages](#common-packages)## [Tools Packages](#tools-packages)## [THORMANG msgs Package](#thormang-msgs-package)[MPC Installation]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/ROBOTIS-ROS-Package-installation#21-mpc[std_msgs/Int32]: http://docs.ros.org/api/std_msgs/html/msg/Int32.html[std_msgs/String]: http://docs.ros.org/api/std_msgs/html/msg/String.html[thormang3_action_module_msgs/StartAction]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/StartAction.msg[robotis_controller_msgs/StatusMsg]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/StatusMsg.msg[thormang3_action_module_msgs/IsRunning]: https://github.com/ROBOTIS-GIT/ROBOTIS-Documents/wiki/(thormang3_action_module_msgs)IsRunning.srv",
        "url": " http://localhost:4000/emanual/docs/en/platform/thormang3/thormang3_ros_packages/"
      } ,
  
      "docs-en-dxl-x-xh430-v210":  {
        "title": "XH430-V210",
      "content"	 : "![](/assets/images/dxl/x/x_series_product.png)# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || Position Sensor       | Contactless absolute encoder (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| Motor       | Maxon       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || Control Algorithm | PID control     || Degree of Precision | 0.088&amp;deg;  || Operating Modes | Current Control Mode  Velocity Control Mode  Position Control Mode (0&amp;deg; ~ 360&amp;deg;)  Extended Position Control Mode  Current-based Position Control Mode  PWM Control Mode (Voltage Control Mode) || Weight | 82g || Dimensions (W x H x D) | 28.5mm x 46.5mm x 34mm || Gear Ratio | 212.6 : 1  || Stall Torque | 2.6Nm @ 24V, 0.7A || No Load Speed | 52rpm @ 24V || Operating Temperature | -5&amp;deg;C ~ +80&amp;deg;C || Input Voltage | 24.0V (**Recommended : 24.0V**) || Standby Current | 36mA || Command Signal | Digital Packet || Protocol Type | RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | RS485 Multidrop BUS || ID | 0 ~ 252 || Feedback | Position, Velocity, Current, Realtime tick, Trajectory, Temperature, Input Voltage, etc || Part Material | Full Metal GearMetal(Front, Middle), Engineering Plastic(Back) |## [Performance Graph](#performance-graph)![](/assets/images/dxl/x/xh430_v210_performance_graph.jpg){% include en/dxl/note_performance_graph.md %}{% include en/dxl/control_table_protocol2.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)                    |Model Number                             |R  |1050||2|4|[Model Information](#model-information)          |Model Information                        |R  |-||6|1|[Firmware Version](#firmware-version)            |Firmware Version                         |R  |-||7|1|[ID](#id)                                        |DYNAMIXEL ID                             |RW |1||8|1|[Baud Rate](#baud-rate)                          |Communication Speed                      |RW |1||9|1|[Return Delay Time](#return-delay-time)          |Response Delay Time                      |RW |250||10|1|[Drive Mode](#drive-mode)                       |Default Rotation Direction               |RW |0||11|1|[Operating Mode](#operating-mode)               |Operating Mode                           |RW |3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)    |Secondary(Shadow) ID                     |RW |255||13|1|[Protocol Version](#protocol-version)           |Protocol Version                         |RW |2||20|4|[Homing Offset](#homing-offset)                 |Home Position Offset                     |RW |0||24|4|[Moving Threshold](#moving-threshold)           |Velocity Threshold for Movement Detection|RW |10||31|1|[Temperature Limit](#temperature-limit)         |Maximum Internal Temperature Limit       |RW |80||32|2|[Max Voltage Limit](#max-voltage-limit)         |Maximum Input Voltage Limit              |RW |300||34|2|[Min Voltage Limit](#min-voltage-limit)         |Minimum Input Voltage Limit              |RW |110||36|2|[PWM Limit](#pwm-limit)                         |Maximum PWM Limit                        |RW |885||38|2|[Current Limit](#current-limit)                 |Maximum Current Limit                    |RW |689||40|4|[Acceleration Limit](#acceleration-limit)       |Maximum Accleration Limit                |RW |32767||44|4|[Velocity Limit](#velocity-limit)               |Maximum Velocity Limit                   |RW |380||48|4|[Max Position Limit](#max-position-limit)       |Maximum Position Limit                   |RW |4095||52|4|[Min Position Limit](#min-position-limit)       |Minimum Position Limit                   |RW |0||63|1|[Shutdown](#shutdown)                           |Shutdown Error Information               |RW |52|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)               |Motor Torque On/Off                        |RW |0||65|1|[LED](#led)                                   |Status LED On/Off                          |RW |0||68|1|[Status Return Level](#status-return-level)   |Select Types of Status Return              |RW |2||69|1|[Registered Instruction](#registered-instruction)|Check Reception of Instruction          |R  |0||70|1|[Hardware Error Status](#hardware-error-status)  |Hardware Error Status                   |R  |0||76|2|[Velocity I Gain](#velocity-i-gain)           |I Gain of Velocity                         |RW |1920||78|2|[Velocity P Gain](#velocity-p-gain)           |P Gain of Velocity                         |RW |100||80|2|[Position D Gain](#position-d-gain)           |D Gain of Position                         |RW |0||82|2|[Position I Gain](#position-i-gain)           |I Gain of Position                         |RW |0||84|2|[Position P Gain](#position-p-gain)           |P Gain of Position                         |RW |800||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain) |2nd Gain of Feed-Forward                   |RW |0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain) |1st Gain of Feed-Forward                   |RW |0||98|1|[Bus Watchdog](#bus-watchdog)                 |DYNAMIXEL Bus Watchdog                     |RW |0||100|2|[Goal PWM](#goal-pwm)                        |Target PWM Value                           |RW |-||102|2|[Goal Current](#goal-current)                |Target Current Value                       |RW |-||104|4|[Goal Velocity](#goal-velocity)              |Target Velocity Value                      |RW |-||108|4|[Profile Acceleration](#profile-acceleration)|Acceleration Value of Profile              |RW |0||112|4|[Profile Velocity](#profile-velocity)        |Velocity Value of Profile                  |RW |0||116|4|[Goal Position](#goal-position)              |Target Position Value                      |RW |-||120|2|[Realtime Tick](#realtime-tick)              |Count Time in millisecond                  |R  |-||122|1|[Moving](#moving)                            |Movement Status                            |R  |0||123|1|[Moving Status](#moving-status)              |Detailed Information of Movement Status    |R  |0||124|2|[Present PWM](#present-pwm)                  |Current PWM Value                          |R  |-||126|2|[Present Current](#present-current)          |Current Current Value                      |R  |-||128|4|[Present Velocity](#present-velocity)        |Current Velocity Value                     |R  |-||132|4|[Present Position](#present-position)        |Current Position Value                     |R  |-||136|4|[Velocity Trajectory](#velocity-trajectory)  |Target Velocity Trajectory Generated by Profile|R|-||140|4|[Position Trajectory](#position-trajectory)  |Target Position Trajectory Generated by Profile|R|-||144|2|[Present Input Voltage](#present-input-voltage)|Current Input Voltage                    |R  |-||146|1|[Present Temperature](#present-temperature)    |Current Internal Temperature             |R  |-||168|2|[Indirect Address 1](#indirect-address)      |Indirect Address 1                         |RW |224||170|2|[Indirect Address 2](#indirect-address)      |Indirect Address 2                         |RW |225||172|2|[Indirect Address 3](#indirect-address)      |Indirect Address 3                         |RW |226||…|…|…                        |…|…|…||218|2|[Indirect Address 26](#indirect-address)     |Indirect Address 26                        |RW |249||220|2|[Indirect Address 27](#indirect-address)     |Indirect Address 27                        |RW |250||222|2|[Indirect Address 28](#indirect-address)     |Indirect Address 28                        |RW |251||224|1|[Indirect Data 1](#indirect-data)            |Indirect Data 1                            |RW |0||225|1|[Indirect Data 2](#indirect-data)            |Indirect Data 2                            |RW |0||226|1|[Indirect Data 3](#indirect-data)            |Indirect Data 3                            |RW |0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)           |Indirect Data 26                           |RW |0||250|1|[Indirect Data 27](#indirect-data)           |Indirect Data 27                           |RW |0||251|1|[Indirect Data 28](#indirect-data)           |Indirect Data 28                           |RW |0||578|2|[Indirect Address 29](#indirect-address)     |Indirect Address 29                        |RW |634||580|2|[Indirect Address 30](#indirect-address)     |Indirect Address 30                        |RW |635||582|2|[Indirect Address 31](#indirect-address)     |Indirect Address 31                        |RW |636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)     |Indirect Address 54                        |RW |659||630|2|[Indirect Address 55](#indirect-address)     |Indirect Address 55                        |RW |660||632|2|[Indirect Address 56](#indirect-address)     |Indirect Address 56                        |RW |661||634|1|[Indirect Data 29](#indirect-data)           |Indirect Data 29                           |RW |0||635|1|[Indirect Data 30](#indirect-data)           |Indirect Data 30                           |RW |0||636|1|[Indirect Data 31](#indirect-data)           |Indirect Data 31                           |RW |0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)           |Indirect Data 54                           |RW |0||660|1|[Indirect Data 55](#indirect-data)           |Indirect Data 55                           |RW |0||661|1|[Indirect Data 56](#indirect-data)           |Indirect Data 56                           |RW |0|`Caution` Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.{: .notice--warning}## [Control Table Description](#control-table-description)`Caution` Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.{: .notice--warning}### **Model Number(0)** This address stores model number of the DYNAMIXEL.### **Firmware Version(6)** This address stores firmware version of the DYNAMIXEL.### **ID(7)**{% include en/dxl/control_table_id.md %}### **Baud Rate(8)**{% include en/dxl/control_table_baudrate_2.md %}### **Return Delay Time(9)**{% include en/dxl/control_table_return_delay_time.md %}### **Drive Mode(10, Available from Firmware v38)**{% include en/dxl/control_table_drivemode.md %}### **Operating Mode(11)**{% include en/dxl/control_table_opmode_six_2.md %}### **Secondary(Shadow) ID(12)**{% include en/dxl/control_table_shadowid.md %}### **Protocol version(13)**{% include en/dxl/control_table_protocolversion.md %}### **Homing Offset(20)**{% include en/dxl/control_table_homingoffset.md %}### **Moving Threshold(24)**{% include en/dxl/control_table_movingthreshold.md %}### **Temperature Limit(31)**{% include en/dxl/control_table_temp_limit_2.md %}### **Min/Max Voltage Limit(34, 32)**{% include en/dxl/control_table_volt_limit_24v.md %}### **PWM Limit(36)**{% include en/dxl/control_table_pwm_limit.md %}### **Current Limit(38)**{% include en/dxl/control_table_current_limit.md %}| Unit | Value Range     || :---: | :------------: ||about  1.34[mA]|0 ~ 689|`Note` Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.{: .notice}### **Acceleration Limit(40)**{% include en/dxl/control_table_acclimit.md %}### **Velocity Limit(44)**{% include en/dxl/control_table_vellimit.md %}### **Min/Max Position Limits(52, 48)**{% include en/dxl/control_table_positionlimit.md %}### **Shutdown(63)**{% include en/dxl/control_table_shutdown.md %}### **Torque Enable(64)**{% include en/dxl/control_table_torque_enable_2.md %}### **LED(65)**{% include en/dxl/control_table_led.md %}### **Status Return Level(68)**{% include en/dxl/control_table_status_return_lv.md %}### **Registered Instruction(69)**{% include en/dxl/control_table_reg_instruction.md %}### **Hardware Error Status(70)**This value indicates hardware error status.{% include en/dxl/control_table_shutdown.md %}### **Velocity PI Gain(78, 76)**{% include en/dxl/control_table_velocity_pi_gain.md %}### **Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)**{% include en/dxl/control_table_position_pid_gain.md %}{% include en/dxl/control_table_current_position_pid_gain.md %}### **Bus Watchdog(98, Available from Firmware v38)**{% include en/dxl/control_table_buswatchdog.md %}### **Goal PWM(100)**{% include en/dxl/control_table_goal_pwm.md %}### **Goal Current(102)**{% include en/dxl/control_table_goal_current.md %}| Unit | Value Range     || :---: | :------------: ||about  1.34[mA]|-Current Limit(38) ~ Current Limit(38)|`Note` Applying high current to the motor for long period of time might damage the motor.{: .notice}### **Goal Velocity(104)**{% include en/dxl/control_table_goal_velocity.md %}### **Profile Acceleration(108)**{% include en/dxl/control_table_profile_acceleration.md %}### **Profile Velocity(112)**{% include en/dxl/control_table_profile_velocity.md %}### **Goal Position(116)**{% include en/dxl/control_table_goal_position_2.md %}### **Realtime Tick(120)**{% include en/dxl/control_table_realtime_tick.md %}### **Moving(122)**{% include en/dxl/control_table_moving_2.md %}### **Moving Status(123)**{% include en/dxl/control_table_moving_status.md %}### **Present PWM(124)**This value indicates current PWM. For more details, please refer to the [Goal PWM(100)](#goal-pwm).### **Present Current(126)**This value indicates current Current. For more details, please refer to the Goal Current(102).### **Present Velocity(128)**This value indicates current Velocity. For more details, please refer to the Goal Velocity(104).### **Present Position(132)**{% include en/dxl/control_table_present_position.md %}### **Velocity Trajectory(136)**{% include en/dxl/control_table_velocity_trajectory.md %}### **Position Trajectory(140)**{% include en/dxl/control_table_position_trajectory.md %}### **Present Input Voltage(144)**{% include en/dxl/control_table_present_volt_2.md %}### **Present Temperature (144)**{% include en/dxl/control_table_present_temp_2.md %}### **Indirect Address, Indirect Data**{% include en/dxl/control_table_indirect_data.md %}# [How to Assemble](#how-to-assemble)## [Wiring through Back Case](#wiring-through-back-case)![](/assets/images/dxl/x/wiring_through_back_case.jpg)## [Option Frame Assembly](#option-frame-assembly)![](/assets/images/dxl/x/x430_option_frame.jpg)# [Maintenance](#maintenance){% include en/dxl/horn_bearing_replacement.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Quick Start](#quick-start){% include en/dxl/quick_start.md %}## [Drawings](#drawings)`Download` [X_430_std_ref.pdf][X_430_std_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/x-430_std_ref.pdf[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xh430-v210/"
      } ,
  
      "docs-kr-dxl-x-xh430-v210":  {
        "title": "XH430-V210",
      "content"	 : "DYNAMIXEL XH430-V210",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xh430-v210/"
      } ,
  
      "docs-en-dxl-x-xh430-v350":  {
        "title": "XH430-V350",
      "content"	 : "![](/assets/images/dxl/x/x_series_product.png)# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || Position Sensor       | Contactless absolute encoder (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| Motor       | Maxon       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || Control Algorithm | PID control     || Degree of Precision | 0.088&amp;deg;  || Operating Modes | Current Control Mode  Velocity Control Mode  Position Control Mode (0&amp;deg; ~ 360&amp;deg;)  Extended Position Control Mode  Current-based Position Control Mode  PWM Control Mode (Voltage Control Mode) || Weight | 82g || Dimensions (W x H x D) | 28.5mm x 46.5mm x 34mm || Gear Ratio | 353.5 : 1  || Stall Torque | 3.3Nm @ 24V, 0.7A || No Load Speed | 31rpm @ 24V || Operating Temperature | -5&amp;deg;C ~ +80&amp;deg;C || Input Voltage | 24.0V (**Recommended : 24.0V**) || Standby Current | 36mA || Command Signal | Digital Packet || Protocol Type | RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | RS485 Multidrop BUS || ID | 0 ~ 252 || Feedback | Position, Velocity, Current, Realtime tick, Trajectory, Temperature, Input Voltage, etc || Part Material | Full Metal GearMetal(Front, Middle), Engineering Plastic(Back) |## [Performance Graph](#performance-graph)![](/assets/images/dxl/x/xh430_v350_performance_graph.jpg){% include en/dxl/note_performance_graph.md %}{% include en/dxl/control_table_protocol2.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)                    |Model Number                             |R  |1040||2|4|[Model Information](#model-information)          |Model Information                        |R  |-||6|1|[Firmware Version](#firmware-version)            |Firmware Version                         |R  |-||7|1|[ID](#id)                                        |DYNAMIXEL ID                             |RW |1||8|1|[Baud Rate](#baud-rate)                          |Communication Speed                      |RW |1||9|1|[Return Delay Time](#return-delay-time)          |Response Delay Time                      |RW |250||10|1|[Drive Mode](#drive-mode)                       |Default Rotation Direction               |RW |0||11|1|[Operating Mode](#operating-mode)               |Operating Mode                           |RW |3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)    |Secondary(Shadow) ID                     |RW |255||13|1|[Protocol Version](#protocol-version)           |Protocol Version                         |RW |2||20|4|[Homing Offset](#homing-offset)                 |Home Position Offset                     |RW |0||24|4|[Moving Threshold](#moving-threshold)           |Velocity Threshold for Movement Detection|RW |10||31|1|[Temperature Limit](#temperature-limit)         |Maximum Internal Temperature Limit       |RW |80||32|2|[Max Voltage Limit](#max-voltage-limit)         |Maximum Input Voltage Limit              |RW |300||34|2|[Min Voltage Limit](#min-voltage-limit)         |Minimum Input Voltage Limit              |RW |110||36|2|[PWM Limit](#pwm-limit)                         |Maximum PWM Limit                        |RW |885||38|2|[Current Limit](#current-limit)                 |Maximum Current Limit                    |RW |689||40|4|[Acceleration Limit](#acceleration-limit)       |Maximum Accleration Limit                |RW |32767||44|4|[Velocity Limit](#velocity-limit)               |Maximum Velocity Limit                   |RW |285||48|4|[Max Position Limit](#max-position-limit)       |Maximum Position Limit                   |RW |4095||52|4|[Min Position Limit](#min-position-limit)       |Minimum Position Limit                   |RW |0||63|1|[Shutdown](#shutdown)                           |Shutdown Error Information               |RW |52|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)               |Motor Torque On/Off                        |RW |0||65|1|[LED](#led)                                   |Status LED On/Off                          |RW |0||68|1|[Status Return Level](#status-return-level)   |Select Types of Status Return              |RW |2||69|1|[Registered Instruction](#registered-instruction)|Check Reception of Instruction          |R  |0||70|1|[Hardware Error Status](#hardware-error-status)  |Hardware Error Status                   |R  |0||76|2|[Velocity I Gain](#velocity-i-gain)           |I Gain of Velocity                         |RW |1920||78|2|[Velocity P Gain](#velocity-p-gain)           |P Gain of Velocity                         |RW |100||80|2|[Position D Gain](#position-d-gain)           |D Gain of Position                         |RW |0||82|2|[Position I Gain](#position-i-gain)           |I Gain of Position                         |RW |0||84|2|[Position P Gain](#position-p-gain)           |P Gain of Position                         |RW |800||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain) |2nd Gain of Feed-Forward                   |RW |0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain) |1st Gain of Feed-Forward                   |RW |0||98|1|[Bus Watchdog](#bus-watchdog)                 |DYNAMIXEL Bus Watchdog                     |RW |0||100|2|[Goal PWM](#goal-pwm)                        |Target PWM Value                           |RW |-||102|2|[Goal Current](#goal-current)                |Target Current Value                       |RW |-||104|4|[Goal Velocity](#goal-velocity)              |Target Velocity Value                      |RW |-||108|4|[Profile Acceleration](#profile-acceleration)|Acceleration Value of Profile              |RW |0||112|4|[Profile Velocity](#profile-velocity)        |Velocity Value of Profile                  |RW |0||116|4|[Goal Position](#goal-position)              |Target Position Value                      |RW |-||120|2|[Realtime Tick](#realtime-tick)              |Count Time in millisecond                  |R  |-||122|1|[Moving](#moving)                            |Movement Status                            |R  |0||123|1|[Moving Status](#moving-status)              |Detailed Information of Movement Status    |R  |0||124|2|[Present PWM](#present-pwm)                  |Current PWM Value                          |R  |-||126|2|[Present Current](#present-current)          |Current Current Value                      |R  |-||128|4|[Present Velocity](#present-velocity)        |Current Velocity Value                     |R  |-||132|4|[Present Position](#present-position)        |Current Position Value                     |R  |-||136|4|[Velocity Trajectory](#velocity-trajectory)  |Target Velocity Trajectory Generated by Profile|R|-||140|4|[Position Trajectory](#position-trajectory)  |Target Position Trajectory Generated by Profile|R|-||144|2|[Present Input Voltage](#present-input-voltage)|Current Input Voltage                    |R  |-||146|1|[Present Temperature](#present-temperature)    |Current Internal Temperature             |R  |-||168|2|[Indirect Address 1](#indirect-address)      |Indirect Address 1                         |RW |224||170|2|[Indirect Address 2](#indirect-address)      |Indirect Address 2                         |RW |225||172|2|[Indirect Address 3](#indirect-address)      |Indirect Address 3                         |RW |226||…|…|…                        |…|…|…||218|2|[Indirect Address 26](#indirect-address)     |Indirect Address 26                        |RW |249||220|2|[Indirect Address 27](#indirect-address)     |Indirect Address 27                        |RW |250||222|2|[Indirect Address 28](#indirect-address)     |Indirect Address 28                        |RW |251||224|1|[Indirect Data 1](#indirect-data)            |Indirect Data 1                            |RW |0||225|1|[Indirect Data 2](#indirect-data)            |Indirect Data 2                            |RW |0||226|1|[Indirect Data 3](#indirect-data)            |Indirect Data 3                            |RW |0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)           |Indirect Data 26                           |RW |0||250|1|[Indirect Data 27](#indirect-data)           |Indirect Data 27                           |RW |0||251|1|[Indirect Data 28](#indirect-data)           |Indirect Data 28                           |RW |0||578|2|[Indirect Address 29](#indirect-address)     |Indirect Address 29                        |RW |634||580|2|[Indirect Address 30](#indirect-address)     |Indirect Address 30                        |RW |635||582|2|[Indirect Address 31](#indirect-address)     |Indirect Address 31                        |RW |636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)     |Indirect Address 54                        |RW |659||630|2|[Indirect Address 55](#indirect-address)     |Indirect Address 55                        |RW |660||632|2|[Indirect Address 56](#indirect-address)     |Indirect Address 56                        |RW |661||634|1|[Indirect Data 29](#indirect-data)           |Indirect Data 29                           |RW |0||635|1|[Indirect Data 30](#indirect-data)           |Indirect Data 30                           |RW |0||636|1|[Indirect Data 31](#indirect-data)           |Indirect Data 31                           |RW |0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)           |Indirect Data 54                           |RW |0||660|1|[Indirect Data 55](#indirect-data)           |Indirect Data 55                           |RW |0||661|1|[Indirect Data 56](#indirect-data)           |Indirect Data 56                           |RW |0|`Caution` Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.{: .notice--warning}## [Control Table Description](#control-table-description)`Caution` Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.{: .notice--warning}### **Model Number(0)** This address stores model number of the DYNAMIXEL.### **Firmware Version(6)** This address stores firmware version of the DYNAMIXEL.### **ID(7)**{% include en/dxl/control_table_id.md %}### **Baud Rate(8)**{% include en/dxl/control_table_baudrate_2.md %}### **Return Delay Time(9)**{% include en/dxl/control_table_return_delay_time.md %}### **Drive Mode(10, Available from Firmware v38)**{% include en/dxl/control_table_drivemode.md %}### **Operating Mode(11)**{% include en/dxl/control_table_opmode_six_2.md %}### **Secondary(Shadow) ID(12)**{% include en/dxl/control_table_shadowid.md %}### **Protocol version(13)**{% include en/dxl/control_table_protocolversion.md %}### **Homing Offset(20)**{% include en/dxl/control_table_homingoffset.md %}### **Moving Threshold(24)**{% include en/dxl/control_table_movingthreshold.md %}### **Temperature Limit(31)**{% include en/dxl/control_table_temp_limit_2.md %}### **Min/Max Voltage Limit(34, 32)**{% include en/dxl/control_table_volt_limit_24v.md %}### **PWM Limit(36)**{% include en/dxl/control_table_pwm_limit.md %}### **Current Limit(38)**{% include en/dxl/control_table_current_limit.md %}| Unit | Value Range     || :---: | :------------: ||about  1.34[mA]|0 ~ 689|`Note` Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.{: .notice}### **Acceleration Limit(40)**{% include en/dxl/control_table_acclimit.md %}### **Velocity Limit(44)**{% include en/dxl/control_table_vellimit.md %}### **Min/Max Position Limits(52, 48)**{% include en/dxl/control_table_positionlimit.md %}### **Shutdown(63)**{% include en/dxl/control_table_shutdown.md %}### **Torque Enable(64)**{% include en/dxl/control_table_torque_enable_2.md %}### **LED(65)**{% include en/dxl/control_table_led.md %}### **Status Return Level(68)**{% include en/dxl/control_table_status_return_lv.md %}### **Registered Instruction(69)**{% include en/dxl/control_table_reg_instruction.md %}### **Hardware Error Status(70)**This value indicates hardware error status.{% include en/dxl/control_table_shutdown.md %}### **Velocity PI Gain(78, 76)**{% include en/dxl/control_table_velocity_pi_gain.md %}### **Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)**{% include en/dxl/control_table_position_pid_gain.md %}{% include en/dxl/control_table_current_position_pid_gain.md %}### **Bus Watchdog(98, Available from Firmware v38)**{% include en/dxl/control_table_buswatchdog.md %}### **Goal PWM(100)**{% include en/dxl/control_table_goal_pwm.md %}### **Goal Current(102)**{% include en/dxl/control_table_goal_current.md %}| Unit | Value Range     || :---: | :------------: ||about  1.34[mA]|-Current Limit(38) ~ Current Limit(38)|`Note` Applying high current to the motor for long period of time might damage the motor.{: .notice}### **Goal Velocity(104)**{% include en/dxl/control_table_goal_velocity.md %}### **Profile Acceleration(108)**{% include en/dxl/control_table_profile_acceleration.md %}### **Profile Velocity(112)**{% include en/dxl/control_table_profile_velocity.md %}### **Goal Position(116)**{% include en/dxl/control_table_goal_position_2.md %}### **Realtime Tick(120)**{% include en/dxl/control_table_realtime_tick.md %}### **Moving(122)**{% include en/dxl/control_table_moving_2.md %}### **Moving Status(123)**{% include en/dxl/control_table_moving_status.md %}### **Present PWM(124)**This value indicates current PWM. For more details, please refer to the [Goal PWM(100)](#goal-pwm).### **Present Current(126)**This value indicates current Current. For more details, please refer to the Goal Current(102).### **Present Velocity(128)**This value indicates current Velocity. For more details, please refer to the Goal Velocity(104).### **Present Position(132)**{% include en/dxl/control_table_present_position.md %}### **Velocity Trajectory(136)**{% include en/dxl/control_table_velocity_trajectory.md %}### **Position Trajectory(140)**{% include en/dxl/control_table_position_trajectory.md %}### **Present Input Voltage(144)**{% include en/dxl/control_table_present_volt_2.md %}### **Present Temperature (144)**{% include en/dxl/control_table_present_temp_2.md %}### **Indirect Address, Indirect Data**{% include en/dxl/control_table_indirect_data.md %}# [How to Assemble](#how-to-assemble)## [Wiring through Back Case](#wiring-through-back-case)![](/assets/images/dxl/x/wiring_through_back_case.jpg)## [Option Frame Assembly](#option-frame-assembly)![](/assets/images/dxl/x/x430_option_frame.jpg)# [Maintenance](#maintenance){% include en/dxl/horn_bearing_replacement.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Quick Start](#quick-start){% include en/dxl/quick_start.md %}## [Drawings](#drawings)`Download` [X_430_std_ref.pdf][X_430_std_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/x-430_std_ref.pdf[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xh430-v350/"
      } ,
  
      "docs-kr-dxl-x-xh430-v350":  {
        "title": "XH430-V350",
      "content"	 : "DYNAMIXEL XH430-V350",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xh430-v350/"
      } ,
  
      "docs-en-dxl-x-xh430-w210":  {
        "title": "XH430-W210",
      "content"	 : "![](/assets/images/dxl/x/x_series_product.png)# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || Position Sensor       | Contactless absolute encoder (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| Motor       | Maxon       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || Control Algorithm | PID control     || Degree of Precision | 0.088&amp;deg;  || Operating Modes | Current Control Mode  Velocity Control Mode  Position Control Mode (0&amp;deg; ~ 360&amp;deg;)  Extended Position Control Mode  Current-based Position Control Mode  PWM Control Mode (Voltage Control Mode) || Weight | 82g || Dimensions (W x H x D) | 28.5mm x 46.5mm x 34mm || Gear Ratio | 212.6 : 1  || Stall Torque | 2.2N.m @ 11.1V, 1.2A2.5Nm @ 12.0V, 1.3A3.1Nm @ 14.8V, 1.5A || No Load Speed | 46rpm @ 11.1V50rpm @ 12.0V62rpm @ 14.8V || Operating Temperature | -5&amp;deg;C ~ +80&amp;deg;C || Input Voltage | 10.0 ~ 14.8V (**Recommended : 12.0V**) || Standby Current | 40mA || Command Signal | Digital Packet || Protocol Type | XH430-W210-T: Half Duplex Asynchronous Serial CommunicationXH430-W210-R: RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | XH430-W210-T: TTL Level Multidrop BUS XH430-W210-R: RS485 Multidrop BUS || ID | 0 ~ 252 || Feedback | Position, Velocity, Current, Realtime tick, Trajectory, Temperature, Input Voltage, etc || Part Material | Full Metal GearMetal(Front, Middle), Engineering Plastic(Back) |## [Performance Graph](#performance-graph)![](/assets/images/dxl/x/xh430_w210_performance_graph.jpg){% include en/dxl/note_performance_graph.md %}{% include en/dxl/control_table_protocol2.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)                    |Model Number                             |R  |1010||2|4|[Model Information](#model-information)          |Model Information                        |R  |-||6|1|[Firmware Version](#firmware-version)            |Firmware Version                         |R  |-||7|1|[ID](#id)                                        |DYNAMIXEL ID                             |RW |1||8|1|[Baud Rate](#baud-rate)                          |Communication Speed                      |RW |1||9|1|[Return Delay Time](#return-delay-time)          |Response Delay Time                      |RW |250||10|1|[Drive Mode](#drive-mode)                       |Default Rotation Direction               |RW |0||11|1|[Operating Mode](#operating-mode)               |Operating Mode                           |RW |3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)    |Secondary(Shadow) ID                     |RW |255||13|1|[Protocol Version](#protocol-version)           |Protocol Version                         |RW |2||20|4|[Homing Offset](#homing-offset)                 |Home Position Offset                     |RW |0||24|4|[Moving Threshold](#moving-threshold)           |Velocity Threshold for Movement Detection|RW |10||31|1|[Temperature Limit](#temperature-limit)         |Maximum Internal Temperature Limit       |RW |80||32|2|[Max Voltage Limit](#max-voltage-limit)         |Maximum Input Voltage Limit              |RW |160||34|2|[Min Voltage Limit](#min-voltage-limit)         |Minimum Input Voltage Limit              |RW |95||36|2|[PWM Limit](#pwm-limit)                         |Maximum PWM Limit                        |RW |885||38|2|[Current Limit](#current-limit)                 |Maximum Current Limit                    |RW |648||40|4|[Acceleration Limit](#acceleration-limit)       |Maximum Accleration Limit                |RW |32767||44|4|[Velocity Limit](#velocity-limit)               |Maximum Velocity Limit                   |RW |360||48|4|[Max Position Limit](#max-position-limit)       |Maximum Position Limit                   |RW |4095||52|4|[Min Position Limit](#min-position-limit)       |Minimum Position Limit                   |RW |0||63|1|[Shutdown](#shutdown)                           |Shutdown Error Information               |RW |52|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)               |Motor Torque On/Off                        |RW |0||65|1|[LED](#led)                                   |Status LED On/Off                          |RW |0||68|1|[Status Return Level](#status-return-level)   |Select Types of Status Return              |RW |2||69|1|[Registered Instruction](#registered-instruction)|Check Reception of Instruction          |R  |0||70|1|[Hardware Error Status](#hardware-error-status)  |Hardware Error Status                   |R  |0||76|2|[Velocity I Gain](#velocity-i-gain)           |I Gain of Velocity                         |RW |1920||78|2|[Velocity P Gain](#velocity-p-gain)           |P Gain of Velocity                         |RW |100||80|2|[Position D Gain](#position-d-gain)           |D Gain of Position                         |RW |0||82|2|[Position I Gain](#position-i-gain)           |I Gain of Position                         |RW |0||84|2|[Position P Gain](#position-p-gain)           |P Gain of Position                         |RW |900||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain) |2nd Gain of Feed-Forward                   |RW |0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain) |1st Gain of Feed-Forward                   |RW |0||98|1|[Bus Watchdog](#bus-watchdog)                 |DYNAMIXEL Bus Watchdog                     |RW |0||100|2|[Goal PWM](#goal-pwm)                        |Target PWM Value                           |RW |-||102|2|[Goal Current](#goal-current)                |Target Current Value                       |RW |-||104|4|[Goal Velocity](#goal-velocity)              |Target Velocity Value                      |RW |-||108|4|[Profile Acceleration](#profile-acceleration)|Acceleration Value of Profile              |RW |0||112|4|[Profile Velocity](#profile-velocity)        |Velocity Value of Profile                  |RW |0||116|4|[Goal Position](#goal-position)              |Target Position Value                      |RW |-||120|2|[Realtime Tick](#realtime-tick)              |Count Time in millisecond                  |R  |-||122|1|[Moving](#moving)                            |Movement Status                            |R  |0||123|1|[Moving Status](#moving-status)              |Detailed Information of Movement Status    |R  |0||124|2|[Present PWM](#present-pwm)                  |Current PWM Value                          |R  |-||126|2|[Present Current](#present-current)          |Current Current Value                      |R  |-||128|4|[Present Velocity](#present-velocity)        |Current Velocity Value                     |R  |-||132|4|[Present Position](#present-position)        |Current Position Value                     |R  |-||136|4|[Velocity Trajectory](#velocity-trajectory)  |Target Velocity Trajectory Generated by Profile|R|-||140|4|[Position Trajectory](#position-trajectory)  |Target Position Trajectory Generated by Profile|R|-||144|2|[Present Input Voltage](#present-input-voltage)|Current Input Voltage                    |R  |-||146|1|[Present Temperature](#present-temperature)    |Current Internal Temperature             |R  |-||168|2|[Indirect Address 1](#indirect-address)      |Indirect Address 1                         |RW |224||170|2|[Indirect Address 2](#indirect-address)      |Indirect Address 2                         |RW |225||172|2|[Indirect Address 3](#indirect-address)      |Indirect Address 3                         |RW |226||…|…|…                        |…|…|…||218|2|[Indirect Address 26](#indirect-address)     |Indirect Address 26                        |RW |249||220|2|[Indirect Address 27](#indirect-address)     |Indirect Address 27                        |RW |250||222|2|[Indirect Address 28](#indirect-address)     |Indirect Address 28                        |RW |251||224|1|[Indirect Data 1](#indirect-data)            |Indirect Data 1                            |RW |0||225|1|[Indirect Data 2](#indirect-data)            |Indirect Data 2                            |RW |0||226|1|[Indirect Data 3](#indirect-data)            |Indirect Data 3                            |RW |0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)           |Indirect Data 26                           |RW |0||250|1|[Indirect Data 27](#indirect-data)           |Indirect Data 27                           |RW |0||251|1|[Indirect Data 28](#indirect-data)           |Indirect Data 28                           |RW |0||578|2|[Indirect Address 29](#indirect-address)     |Indirect Address 29                        |RW |634||580|2|[Indirect Address 30](#indirect-address)     |Indirect Address 30                        |RW |635||582|2|[Indirect Address 31](#indirect-address)     |Indirect Address 31                        |RW |636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)     |Indirect Address 54                        |RW |659||630|2|[Indirect Address 55](#indirect-address)     |Indirect Address 55                        |RW |660||632|2|[Indirect Address 56](#indirect-address)     |Indirect Address 56                        |RW |661||634|1|[Indirect Data 29](#indirect-data)           |Indirect Data 29                           |RW |0||635|1|[Indirect Data 30](#indirect-data)           |Indirect Data 30                           |RW |0||636|1|[Indirect Data 31](#indirect-data)           |Indirect Data 31                           |RW |0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)           |Indirect Data 54                           |RW |0||660|1|[Indirect Data 55](#indirect-data)           |Indirect Data 55                           |RW |0||661|1|[Indirect Data 56](#indirect-data)           |Indirect Data 56                           |RW |0|`Caution` Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.{: .notice--warning}## [Control Table Description](#control-table-description)`Caution` Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.{: .notice--warning}### **Model Number(0)** This address stores model number of the DYNAMIXEL.### **Firmware Version(6)** This address stores firmware version of the DYNAMIXEL.### **ID(7)**{% include en/dxl/control_table_id.md %}### **Baud Rate(8)**{% include en/dxl/control_table_baudrate_2.md %}### **Return Delay Time(9)**{% include en/dxl/control_table_return_delay_time.md %}### **Drive Mode(10, Available from Firmware v38)**{% include en/dxl/control_table_drivemode.md %}### **Operating Mode(11)**{% include en/dxl/control_table_opmode_six_2.md %}### **Secondary(Shadow) ID(12)**{% include en/dxl/control_table_shadowid.md %}### **Protocol version(13)**{% include en/dxl/control_table_protocolversion.md %}### **Homing Offset(20)**{% include en/dxl/control_table_homingoffset.md %}### **Moving Threshold(24)**{% include en/dxl/control_table_movingthreshold.md %}### **Temperature Limit(31)**{% include en/dxl/control_table_temp_limit_2.md %}### **Min/Max Voltage Limit(34, 32)**{% include en/dxl/control_table_volt_limit_2.md %}### **PWM Limit(36)**{% include en/dxl/control_table_pwm_limit.md %}### **Current Limit(38)**{% include en/dxl/control_table_current_limit.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|0 ~ 648|`Note` Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.{: .notice}### **Acceleration Limit(40)**{% include en/dxl/control_table_acclimit.md %}### **Velocity Limit(44)**{% include en/dxl/control_table_vellimit.md %}### **Min/Max Position Limits(52, 48)**{% include en/dxl/control_table_positionlimit.md %}### **Shutdown(63)**{% include en/dxl/control_table_shutdown.md %}### **Torque Enable(64)**{% include en/dxl/control_table_torque_enable_2.md %}### **LED(65)**{% include en/dxl/control_table_led.md %}### **Status Return Level(68)**{% include en/dxl/control_table_status_return_lv.md %}### **Registered Instruction(69)**{% include en/dxl/control_table_reg_instruction.md %}### **Hardware Error Status(70)**This value indicates hardware error status.{% include en/dxl/control_table_shutdown.md %}### **Velocity PI Gain(78, 76)**{% include en/dxl/control_table_velocity_pi_gain.md %}### **Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)**{% include en/dxl/control_table_position_pid_gain.md %}{% include en/dxl/control_table_current_position_pid_gain.md %}### **Bus Watchdog(98, Available from Firmware v38)**{% include en/dxl/control_table_buswatchdog.md %}### **Goal PWM(100)**{% include en/dxl/control_table_goal_pwm.md %}### **Goal Current(102)**{% include en/dxl/control_table_goal_current.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|-Current Limit(38) ~ Current Limit(38)|`Note` Applying high current to the motor for long period of time might damage the motor.{: .notice}### **Goal Velocity(104)**{% include en/dxl/control_table_goal_velocity.md %}### **Profile Acceleration(108)**{% include en/dxl/control_table_profile_acceleration.md %}### **Profile Velocity(112)**{% include en/dxl/control_table_profile_velocity.md %}### **Goal Position(116)**{% include en/dxl/control_table_goal_position_2.md %}### **Realtime Tick(120)**{% include en/dxl/control_table_realtime_tick.md %}### **Moving(122)**{% include en/dxl/control_table_moving_2.md %}### **Moving Status(123)**{% include en/dxl/control_table_moving_status.md %}### **Present PWM(124)**This value indicates current PWM. For more details, please refer to the [Goal PWM(100)](#goal-pwm).### **Present Current(126)**This value indicates current Current. For more details, please refer to the Goal Current(102).### **Present Velocity(128)**This value indicates current Velocity. For more details, please refer to the Goal Velocity(104).### **Present Position(132)**{% include en/dxl/control_table_present_position.md %}### **Velocity Trajectory(136)**{% include en/dxl/control_table_velocity_trajectory.md %}### **Position Trajectory(140)**{% include en/dxl/control_table_position_trajectory.md %}### **Present Input Voltage(144)**{% include en/dxl/control_table_present_volt_2.md %}### **Present Temperature (144)**{% include en/dxl/control_table_present_temp_2.md %}### **Indirect Address, Indirect Data**{% include en/dxl/control_table_indirect_data.md %}# [How to Assemble](#how-to-assemble)## [Wiring through Back Case](#wiring-through-back-case)![](/assets/images/dxl/x/wiring_through_back_case.jpg)## [Option Frame Assembly](#option-frame-assembly)![](/assets/images/dxl/x/x430_option_frame.jpg)# [Maintenance](#maintenance){% include en/dxl/horn_bearing_replacement.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Quick Start](#quick-start){% include en/dxl/quick_start.md %}## [Drawings](#drawings)`Download` [X_430_std_ref.pdf][X_430_std_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/x-430_std_ref.pdf[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xh430-w210/"
      } ,
  
      "docs-kr-dxl-x-xh430-w210":  {
        "title": "XH430-W210",
      "content"	 : "![](/assets/images/dxl/x/x_series_product.png)# [스펙](#스펙)| 항목           | 스펙     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || 위치값 센서       | 무접점 절대값 엔코더 (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| 모터       | Maxon       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || 제어 알고리즘 | PID 제어     || 위치 정확도 | 0.088&amp;deg;  || 제어 모드 | 전류제어  속도제어  위치제어 (0&amp;deg; ~ 360&amp;deg;)  확장 위치제어  전류기반 위치제어  PWM 제어 (전압 제어) || 무게 | 82g || 크기 (W x H x D) | 28.5mm x 46.5mm x 34mm || 기어비 | 212.6 : 1  || 정지토크 | 2.2 N.m (at 11.1V, 1.2A)2.5 N.m (at 12.0V, 1.3A)3.1 N.m (at 14.8V, 1.5A) || Stall Current | 2.3A || No Load Speed | 46rpm (at 11.1V)50rpm (at 12.0V)62rpm (at 14.8V) || 동작 온도 | -5&amp;deg;C ~ +80&amp;deg;F || 사용 전압 | 10.0 ~ 14.8V (**권장 전압 : 12.0V**) || 제어 명령 | Digital Packet || 통신 타입 | XH430-W210-T (Half Duplex Asynchronous Serial Communication with 8bit, 1stop, No Parity)XH430-W210-R (RS485 Asynchronous Serial Communication with 8bit, 1stop, No Parity) || 통신 연결 | XH430-W210-T (TTL Level Multi Drop Bus)  XH430-W210-R (RS485 Multi Drop Bus) || ID | 0 ~ 252 (253 IDs are available in a single channel) || 피드백 | Position, Velocity, Current, Realtime tick, Trajectory, Temperature, Input Voltage, etc || 재료 | Full Metal Gear, Metal Body(front and middle), Engineering Plastic Body(back) || 대기전류 | 40mA |## [성능 그래프](#성능-그래프)![](/assets/images/dxl/x/xh430_w210_performance_graph.jpg)`Note` Stall torque와 Performance Graph의 Max torque의 차이는 측정 방식에 기인합니다. Stall torque는 순간적인 최대토크를 측정하는 방식으로, 고전적인 RC Servo 제품에서 주로 사용하는 사양입니다. Performance Graph는 N-T Curve라고도 불리며, 부하(load)를 점진적으로 증가시키면서 측정됩니다. 모터 구동되는 환경은 Stall torque 측정 방식보다는 Performance Graph 측정 방식에 가깝습니다. 이러한 이유로 Performance Graph가 산업전반에서 보다 폭넓게 사용됩니다. 일반적으로 Performance Graph의 Max torque는 Stall torque보다 적게 측정됩니다.{: .notice}`Warning` 전원공급시, 안정적인 전원공급을 위해 로보티즈 제어기나 SMPS2DYNAMIXEL을 통한 전원공급을 권장드립니다. 전원이 꺼진 상태에서 다이나믹셀과 전원을 연결하시고 스위치로 On/Off 해주세요.{: .notice--warning}# [컨트롤 테이블](#컨트롤-테이블)Control Table은 다이나믹셀 내부에 존재하는 Data의 집합체입니다. 사용자는 Instruction Packet을 통해 Control Table의 특정 Data를 읽어서(READ Instruction) 다이나믹셀의 상태를 파악할 수 있고, Data를 변경함으로써(WRITE Instruction) 다이나믹셀을 제어할 수 있습니다.## [컨트롤 테이블, 데이터, 주소](#컨트롤-테이블-데이터-주소)Control Table은 다이나믹셀의 상태와 제어를 위한 다수의 Data 필드로 구성된 집합체입니다. 사용자는 READ Instruction Packet을 통해 Control Table의 특정 Data를 읽어서 다이나믹셀의 상태를 파악할 수 있습니다. 또한 WRITE Instruction Packet을 통해 Control Table의 특정 Data를 변경함으로써 다이나믹셀을 제어할 수 있습니다. Address는 Instruction Packet으로 Control Table의 특정 Data를 접근할 때 사용하는 고유값입니다. 다이나믹셀의 Data를 읽거나 쓰기 위해서는 Instruction Packet에 해당 Data의 Address를 지정해 주어야 합니다. Packet에 대한 자세한 내용은 e-Manual의 프로토콜을 참고해주세요.`Note` 음수의 표현 방법은 2의 보수(Two’s complement) 규칙을 따릅니다. 2의 보수에 대한 자세한 설명은 위키피디아를 참고하세요. [Two&#39;s complement]{: .notice}### Area (EEPROM, RAM)Control Table은 2가지 영역으로 구분됩니다. RAM Area에 위치한 Data는 전원이 인가될 때마다 다시 초기값으로 설정됩니다(Volatile). 반면 EEPROM Area에 위치한 Data는 값을 변경하면 전원이 꺼져도 그 값이 보존됩니다(Non-Volatile). EEPROM Area에 위치한 모든 Data는 Torque Enable(64)의 값이 ‘0’일 때만 변경할 수 있습니다.### SizeData의 Size는 용도에 따라 1, 2, 4[byte]로 정해져 있습니다. Instruction Packet을 통해 Data를 변경할 때는 해당 Data의 Size를 확인하시기 바랍니다.### AccessControl Table의 Data는 2가지 접근 속성을 갖습니다. ‘RW’는 읽기와 쓰기 접근이 모두 가능합니다. 반면 ‘R’은 읽기 전용(Read Only) 속성을 갖습니다. 읽기 전용 속성의 Data는 WRITE Instruction으로 값이 변경되지 않습니다. 읽기 전용 속성(‘R’)은 주로 측정 또는 모니터링 용도로 사용되고, 읽기쓰기 속성(‘RW’)은 다이나믹셀의 제어 용도로 사용됩니다.### Initial Value다이나믹셀에 전원이 인가될 때, Control Table의 각 Data는 초기값으로 설정됩니다. 매뉴얼에 표기된 EEPROM 영역의 Default Value는 제품의 초기 설정값(공장 출하 설정값)입니다. 사용자가 변경한 경우, 초기값은 사용자가 변경한 값으로 적용됩니다. RAM 영역의 Default Value 값은 전원이 인가되었을 때 설정되는 값입니다.## [EEPROM 영역](#eeprom-영역)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)         | 모델 번호       | R       | 1010       ||2|4|[Model Information](#model-information)   |모델 정보|R|-||6|1|[Firmware Version](#firmware-version)    |펌웨어 버전 정보|R|-||7|1|[ID](#id)                  |다이나믹셀 ID      |RW|1||8|1|[Baud Rate](#baud-rate)           |다이나믹셀 통신속도|RW|1||9|1|[Return Delay Time](#return-delay-time)   |응답 지연 시간|RW|250||10|1|[Drive Mode](#drive-mode)          |드라이브 모드|RW|0||11|1|[Operating Mode](#operating-mode)      |동작 모드|RW|3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)|보조 ID|RW|255||13|1|[Protocol Version](#protocol-version)    |프로토콜 버전|RW|2||20|4|[Homing Offset](#homing-offset)       |&#39;0&#39;점위치 조정값&#39;|RW|0||24|4|[Moving Threshold](#moving-threshold)    |움직임 유무를 결정하는 속도 기준값|RW|10||31|1|[Temperature Limit](#temperature-limit)   |내부 한계온도|RW|80||32|2|[Max Voltage Limit](#max-voltage-limit)   |최고 한계전압|RW|160||34|2|[Min Voltage Limit](#min-voltage-limit)   |최저 한계전압|RW|95||36|2|[PWM Limit](#pwm-limit)           |PWM 한계값|RW|885||38|2|[Current Limit](#current-limit)       |전류 한계값|RW|648||40|4|[Acceleration Limit](#acceleration-limit)  |가속도 한계값|RW|32767||44|4|[Velocity Limit](#velocity-limit)      |속도 한계값|RW|360||48|4|[Max Position Limit](#max-position-limit)  |최대 위치 제한값|RW|4095||52|4|[Min Position Limit](#min-position-limit)  |최소 위치 제한값|RW|00||63|1|[Shutdown](#shutdown)            |셧다운 에러 정보|RW|52|## [RAM 영역](#ram-영역)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)            |토크 On/Off|RW|0||65|1|[LED](#led)                             |상태 LED On/Off|RW|0||68|1|[Status Return Level](status-return-level)      |응답레벨|RW|2||69|1|[Registered Instruction](#registered-instruction)   |Instruction의 등록 여부|R|0||70|1|[Hardware Error Status](#hardware-error-status)    |하드웨어 에러 상태|R|0||76|2|[Velocity I Gain](#velocity-i-gain)           |속도 I Gain|RW|1920||78|2|[Velocity P Gain](#velocity-p-gain)           |속도 P Gain|RW|100||80|2|[Position D Gain](#position-d-gain)           |위치 D Gain|RW|0||82|2|[Position I Gain](#position-i-gain)           |위치 I Gain|RW|0||84|2|[Position P Gain](#position-p-gain)           |위치 P Gain|RW|900||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain)      |피드포워드 2nd Gain|RW|0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain)      |피드포워드 1st Gain|RW|0||98|1|[Bus Watchdog](#bus-watchdog)              |다이나믹셀 버스 워치독|RW|0||100|2|[Goal PWM](#goal-pwm)                 |목표 PWM값|RW|-||102|2|[Goal Current](#goal-current)             |목표 전류값|RW|-||104|4|[Goal Velocity](#goal-velocity)            |목표 속도값|RW|-||108|4|[Profile Acceleration](#profile-acceleration)     |프로파일 가속도값|RW|0||112|4|[Profile Velocity](#profile-velocity)         |프로파일 속도값|RW|0||116|4|[Goal Position](#goal-position)            |목표 위치값|RW|-||120|2|[Realtime Tick](#realtime-tick)            |실시간 Tick[ms]|R|-||122|1|[Moving](#moving)                   |음직임 유무|R|0||123|1|[Moving Status](#moving-status)            |움직임의 상태|R|0||124|2|[Present PWM](#present-pwm)              |현재 PWM값|R|-||126|2|[Present Current](#present-current)          |현지 전류값|R|-||128|4|[Present Velocity](#present-velocity)         |현재 속도값|R|-||132|4|[Present Position](#present-position)         |현재 위치값|R|-||136|4|[Velocity Trajectory](#velocity-trajectory)      |속도 궤적값|R|-||140|4|[Position Trajectory](#position-trajectory)      |위치 궤적값|R|-||144|2|[Present Input Voltage](#present-input-voltage)    |현재 전압|R|-||146|1|[Present Temperature](#present-temperature)      |현재 내부온도|R|-||168|2|[Indirect Address 1](#indirect-address)       |간접 주소값 1|RW|224||170|2|[Indirect Address 2](#indirect-address)       |간접 주소값 2|RW|225||172|2|[Indirect Address 3](#indirect-address)       |간접 주소값 3|RW|226||…|…|…                        |…|…|…||220|2|[Indirect Address 27](#indirect-address)      |간접 주소값 27|RW|250||218|2|[Indirect Address 26](#indirect-address)      |간접 주소값 26|RW|249||222|2|[Indirect Address 28](#indirect-address)     |간접 주소값 28|RW|251||224|1|[Indirect Data 1](#indirect-data)          |간접 주소 데이터 1|RW|0||225|1|[Indirect Data 2](#indirect-data)           |간접 주소 데이터 2|RW|0||226|1|[Indirect Data 3](#indirect-data)           |간접 주소 데이터 3|RW|0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)          |간접 주소 데이터 26|RW|0||250|1|[Indirect Data 27](#indirect-data)          |간접 주소 데이터 27|RW|0||251|1|[Indirect Data 28](#indirect-data)          |간접 주소 데이터 28|RW|0||578|2|[Indirect Address 29](#indirect-address)      |간접 주소값 29|RW|634||580|2|[Indirect Address 30](#indirect-address)      |간접 주소값 30|RW|635||582|2|[Indirect Address 31](#indirect-address)      |간접 주소값 31|RW|636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)      |간접 주소값 54|RW|659||630|2|[Indirect Address 55](#indirect-address)      |간접 주소값 55|RW|660||632|2|[Indirect Address 56](#indirect-address)      |간접 주소값 56|RW|661||634|1|[Indirect Data 29](#indirect-data)          |간접 주소 데이터 29|RW|0||635|1|[Indirect Data 30](#indirect-data)          |간접 주소 데이터 30|RW|0||636|1|[Indirect Data 31](#indirect-data)          |간접 주소 데이터 31|RW|0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)          |간접 주소 데이터 54|RW|0||660|1|[Indirect Data 55](#indirect-data)          |간접 주소 데이터 55|RW|0||661|1|[Indirect Data 56](#indirect-data)          |간접 주소 데이터 56|RW|0|`Note` Address가 256보다 큰 경우 프로토콜 1.0으로 접근할 수 없습니다. 따라서 Indirect Address 29 ~ 56과 Indirect Data29~56은 프로토콜 2.0으로만 접근이 가능합니다.{: .notice}## [컨트롤 테이블 설명](#컨트롤-테이블-설명)### **Model Number (0)**다이나믹셀의 모델 번호입니다.### **Firmware Version (6)**다이나믹셀 펌웨어 버전입니다.### **ID (7)**Instruction Packet으로 다이나믹셀을 식별하기 위한 고유 번호입니다. 0~252 (0xFC) 까지 사용 가능하며, 254(0xFE)는 브로드캐스트(Broadcast) ID로 특수하게 사용됩니다. 브로드캐스트 ID(254, 0xFE)로 Instruction Packet을 전송하면 모든 다이나믹셀에 명령을 내릴 수 있습니다. `Note` 연결된 다이나믹셀의 ID가 중복되지 않도록 주의해야 합니다. 또한 ID(7)은 EEPROM Area에 존재하기 때문에 Torque Enable(64) 의 값이 ’0’ 일 때만 변경할 수 있습니다. {: .notice}### **Baud Rate (8)**제어기와 통신하기 위한 통신 속도 입니다.| Value     | Baud Rate     | Margin of Error     || :------------- | :------------- | :------------- ||0|9,600|0.000%||1(Default)|57,600|0.000%|| 2|115,200| 0.000%|| 3| 1M| 0.000%|| 4| 2M| 0.000%|| 5| 3M| 0.000%|| 6| 4M| 0.000%|| 7| 4.5M| 0.000%|`Note` UART는 Baudrate오차가 3% 이내이면 통신에 지장이 없습니다.{: .notice}### **Return Delay Time (9)**다이나믹셀이 Instruction Packet을 받은 후, Status Packet을 반환하기까지 걸리는 시간입니다. Return Delay Time(9)의 값이 ‘10’인 경우를 예로 들면, Instruction Packet을 받고 20[μsec] 만큼 경과한 후에 Status Packet을 반환합니다. |      | Value     | Description     | | :------------- | :------------- | :------------- | |Unit| 2[μsec] | - | |Range| 0 ~ 254  | Default value ‘250’(500[μsec]), Maximum 508[μsec]|### **Drive Mode (10, Available after Firmware version 38)**Dynamixel의 드라이브 모드를 설정합니다.||     | Definition     | Values     || :------------- | :------------- | :------------- | :------------- ||Bit 7|0x80|-|Unused, always ‘0’||Bit 6|0x40|-|Unused, always ‘0’||Bit 5|0x20|-|Unused, always ‘0’||Bit 4|0x10|-|Unused, always ‘0’||Bit 3|0x08|-|Unused, always ‘0’||Bit 2|0x04|-|Unused, always ‘0’||Bit 1|0x02|Rotation Direction| Normal Mode(&#39;0&#39;) : CCW(Positive), CW(Negative)||Bit 0|0x01|Rotation Direction| Reverse Mode(&#39;1&#39;) : CCW(Negative), CW(Positive)|`Note` Direction of rotation의 Reverse mode(‘1’)를 설정하면, Dynamixel의 회전 방향이 변경됩니다. 따라서 Position, Velocity, Current, PWM의 방향이 모두 변경됩니다. 좌우 대칭적인 구조의 관절이나 바퀴 구동 시스템을 구성할 때 편리하게 사용할 수 있습니다.{: .notice}### **Operating Mode (11)**다이나믹셀의 제어 모드를 설정합니다. 각 제어 모드마다 특성이 다르기 때문에, 구현하려는 시스템에 적합한 제어 모드를 설정하시기 바랍니다.|Value|Operating Mode| Description     || :---- | :------------------------------ | :------------------------------------------- || 0 | 전류 제어 모드 | 전류 제어 모드 속도와 위치는 제어하지 않고 전류(토크)를 제어합니다. 지령된 전류(토크)만 제어하는 시스템이나 그리퍼 또는 상위 제어기(위치, 속도 등)를 별도로 구성할 경우에 유용합니다. || 1 | 속도 제어 모드(0&amp;deg; ~ 360&amp;deg;) | 속도를 제어하는 모드 입니다. 기존제품의 바퀴 모드(무한회전)과 동일합니다. 바퀴형태의 로봇에 유용합니다. || 3(Default) | 위치 제어 모드  | 위치를 제어하는 모드 입니다. 기존제품의 관절 모드와 동일합니다. Max Position Limit(48), Min Position Limit(52)에 의해서 동작 범위가 제한됩니다. 1회전 내에서 구동하는 다관절 로봇에 유용합니다.  ||  4  |  확장 위치 제어 모드(Multi-turn)  |  위치를 제어하는 모드 입니다. 기존제품의 다중 회전 모드와 동일합니다. 동작 범위는 총 512회전(-256[rev] ~ 256[rev]) 입니다. 다수의 회전(멀티턴)이 필요한 로봇의 손목 부위나 컨베이어시스템 또는 추가 감속기가 필요한 시스템에 유용합니다.  ||  5  |  전류기반 위치 제어 모드  |  위치와 전류(토크)를 제어합니다. 동작 범위는 총 512회전(-256[rev] ~ 256[rev]) 입니다. 위치와 전류를 동시에 제어할 필요가 있는 다관절 로봇이나 그리퍼에 유용합니다.  ||  16  |  PWM 제어 모드 (Voltage Control Mode)  |  PWM 출력을 직접 제어합니다. (Voltage Control Mode)  |{% capture group_notice_01 %}`Note` 제어 모드가 변경될 때 제어기의Gain(PID, Feedforward)은 제어 모드에 적합하게 초기화 됩니다. 또한 프로파일 생성기와 제한값들 역시 초기화 됩니다.1. Profile Velocity(112), Profile Acceleration(108) : ‘0’으로 초기화2. Goal PWM(100), Goal Current(102) : PWM Limit(36), Current Limit(38)으로 초기화3. 전류기반 위치 제어 모드 : 별도의 Position Gain(PID)과 PWM Limit(36) 값으로 재설정 됩니다.변경된 Position Gain(PID)과 PWM Limit(36) 값은 컨트롤테이블을 통해서 확인할 수 있습니다.{% endcapture %}  {{ group_notice_01 | markdownify }}`Note` PWM이란Pulse Width Modulation(펄스 폭 변조)의 약자로 펄스의 폭(PWM Duty)을 변경시키는 변조방식을 뜻합니다. 모터 제어 분야에서는 펄스의 폭을 변경하여 모터에 공급되는 평균 전압을 제어하는 용도로 폭넓게 사용되고 있습니다. 따라서 PWM 제어 모드는 Goal PWM(100)을 이용하여 모터에 공급되는 전압을 제어하는 제어 방식을 뜻합니다. PWM 모드는 다이나믹셀AX, RX 시리즈의 바퀴모드와 유사합니다.{: .notice}### **Secondary(Shadow) ID (12)**Dynamixel의 Secondary ID를 설정합니다. Secondary ID(12)는 ID(7)과 동일하게 다이나믹셀을 식별하기 위한 번호로 사용됩니다. 다만, Secondary ID(12)는 ID(7)과 달리 고유한 번호가 아닙니다. 따라서 동일한 Secondary ID 값을 갖은 다이나믹셀들은 하나의 그룹을 형성하게 됩니다. Secondary ID(12)와 ID(7)의 차이는 다음과 같습니다.1. Secondary ID(12)는 ID(7)과 달리 고유 번호가 아닙니다. 즉, 다수의 다이나믹셀이 동일한 Secondary ID 값을 가질 수 있습니다.2. Secondary ID(12)보다 ID(7)의 우선순위가 높습니다. 따라서 Secondary ID(12)와 ID(7)가 같을 경우, ID(7)가 우선적으로 적용됩니다.3. Secondary ID(12)로는 컨트롤테이블의 EEPROM 영역을 변경할 수 없습니다. RAM 영역만 변경이 가능합니다.4. Instruction Packet의 ID가 Sencodary ID(12)와 같은 경우, Status Packet을 반환하지 않습니다.5. Secondary ID(12)의 값이 253 이상인 경우, Secondary ID 기능은 비활성화 됩니다.|      | Values     | Description     || :------------- | :------------- | :------------- || 범위     | 0 ~ 252253 ~ 255       | Secondary ID 기능 활성화Secondary ID 기능 비활성화, 초기값 ‘255’ |다음은 ID(7)가 1부터 5로 설정된 5개의 다이나믹셀이 있는 경우에 대한 동작 예시입니다.1. 5개 다이나믹셀의 Secondary ID(12)를 모두 ‘5’로 동일하게 설정합니다.2. Write Instruction Packet(ID = 1, LED(65) = 1)을 전송합니다.3. ID가 ‘1’인 다이나믹셀은 LED를 켠 후, Status Packet을 반환합니다.4. Write Instruction Packet(ID = 5, LED(65) = 1)을 전송합니다.5. 5개의 다이나믹셀은 모두 LED를 켭니다. 단, Status Packet은 ID가 ‘5’인 다이나믹셀만 반환합니다.6. 5개 다이나믹셀의 Secondary ID(12)를 모두 ‘100’으로 동일하게 설정합니다.7. Write Instruction Packet(ID = 100, LED(65) = 0)을 전송합니다.8. 5개의 다이나믹셀은 모두 LED를 끕니다. 단, ID ‘100’인 다이나믹셀이 없으므로 Status Packet은 반환되지 않습니다.### **Protocol version (13)**다이나믹셀의 프로토콜 버전(1.0, 2.0)을 설정할 수 있습니다. 함께 사용할 다이나믹셀의 프로토콜 버전에 맞춰서 설정하세요.|      | Protocol Version     |Compatible DYNAMIXELs|| :------------- | :------------- | :------------- ||1|1.0| AX, DX, RX, MX, EX 시리즈||2(Default)|2.0|DYNAMIXEL-X, DYNAMIXEL-PRO 시리즈|`Note` 프로토콜 2.0은 프로토콜 1.0의 문제점을 대폭 개선한 버전입니다. 프로토콜 1.0을 사용할 경우, 컨트롤테이블의 일부 영역의 접근이 제한될 수 있습니다. 매뉴얼에서는 프로토콜 2.0을 기준으로 설명합니다. 프로토콜에 대한 자세한 사항은 e-Manual의 프로토콜을 참고해주세요.{: .notice}### **Homing Offset (20)**‘0’ 점의 위치를 조절 할 수 있습니다. 이 값은 Present Position(132)에 더해지게 됩니다.Present Position(132) = 실제 위치 + Homing Offset(20) 이 됩니다.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|약 0.088&amp;deg;|4096 분해능, 위치 관련 Data의 단위는 모두 동일||Range|-1,044,479 ~ 1,044,479|±255[rev] 범위|`Note` 1회전 내에서 제어하는 위치 제어 모드(관절 모드)의 경우, Homing Offset(20)은 (-1024 ~ 1024) 범위보다 클 경우 무시됩니다.{: .notice}### **Moving Threshold (24)**움직임의 유무를 판별하는 기준 속도로 사용됩니다. Present Velocity(128)의 절대값이 Moving Threshold(24)보다 크면, 움직임 유무를 나타내는 Moving(122) 이 ‘1’이 되고, 적으면 ‘0’이 됩니다.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|about 0.229rpm|속도 관련 Data의 단위는 모두 동일||Range|0 ~ 1,023|-|### **Temperature Limit (31)**동작 온도의 상한 값입니다. 다이나믹셀의 현재 내부온도를 나타내는 Present Temperature(146)가 Temperature Limit(31)보다 높아지면 Hardware Error Status(70)의 Over Heating Error Bit(0x04)와 Hardware Error Bit(0x80)이 설정됩니다. Shutdown(63)에 Overheating Error Bit(0x04)가 설정된 경우, Torque Enable(64)은 ‘0’이 되고 Torque가 OFF됩니다. 자세한 설명은 Shutdown(63)을 참고하세요.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|약 1&amp;deg;C|온도 관련 Data의 단위는 모두 동일||Range|0 ~ 100|-|### **Max Voltage Limit (32), Min Voltage Limit (34)**동작 전압의 상한 값과 하한 값입니다. 다이나믹셀에 현재 인가된 전압을 나타내는 Present Input Voltage(144)가 Max Voltage Limit(32)와 Min Voltage Limit(34)의 범위를 벗어날 경우, Hardware Error Status(70)의 Voltage Range Error Bit(0x01)와 Hardware Error Bit(0x80)이 설정됩니다. Shutdown(63)에 Input Voltage Error Bit(0x10)가 설정된 경우, Torque Enable(64)은 ‘0’이 되고 Torque가 OFF 됩니다. 자세한 설명은 Shutdown(63)을 참고하세요.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|약 0.1[V]|전압 관련 Data의 단위는 모두 동일||Range|95 ~ 160|9.5 ~ 16.0[V]|### **PWM Limit (36)**PWM 출력의 한계 값입니다. Goal PWM(100)에는 PWM Limit(36)보다 큰 값을 쓸 수 없습니다. PWM Limit(36)은 모든 제어모드에 공통으로 적용되는 출력 제한 값으로써, PWM 출력을 낮추면 다이나믹셀의 토크와 속도 모두 감소합니다. 자세한 사항은 해당 제어 모드의 Gain 부분을 참고하세요.|      | Values     | Description     || :------------- | :------------- | :------------- ||Range|0 ~ 885|885 = 100[%] 출력|### **Current Limit (38)**전류(토크) 출력의 한계 값입니다. Goal Current(102)에는 Current Limit(38)보다 큰 값을 쓸 수 없습니다. Current Limit(38)은 전류 제어 모드와 전류기반 위치 제어 모드에서 적용되는 제한 값으로써, 전류 출력을 낮추면 다이나믹셀의 토크가 감소합니다. 자세한 사항은 Position PID Gain(80 ~ 84)을 참고하세요.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|약  2.69[mA]|전류 관련 Data의 단위는 모두 동일||Range|0 ~ 648|-|`Note` Current Limit(38)은 다이나믹셀 별로 다를 수 있으니 Control Table을 확인하시기 바랍니다.{: .notice}### **Acceleration Limit (40)**Profile Acceleration(108)의 한계 값입니다. Profile Acceleration(108)에는 Acceleration Limit(40)보다 큰 값을 쓸 수 없습니다. Profile Acceleration(108)은 전류 제어 모드를 제외한 모든 제어 모드에서 목표 궤적을 생성하는데 사용됩니다. 자세한 설명은 Profile Velocity(112)을 참고하세요.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|214.577[Rev/min2]|가속도 관련 Data의 단위는 모두 동일||Range|0 ~ 32.767|-|`Note` Status Packet의 Error필드의 비트정보는 프로토콜 1.0과 2.0이 다릅니다. 여기서는 프로토콜 2.0을 기준으로 설명합니다. 자세한 사항은 e-Manual의 프로토콜을 참고해주세요.{: .notice}### **Velocity Limit (44)**Goal Velocity(104)와 Profile Velocity(112)의 한계 값입니다. 자세한 설명은 Profile Velocity(112)을 참고하세요.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|0.229[RPM]|속도 관련 Data의 단위는 모두 동일||Range|0 ~ 1,023|-|### **Max Position Limit (48), Min Position Limit (52)**위치 제어 모드(관절 모드)에서 목표 위치의 제한 값으로써, 1회전(0~4095) 범위 내에서 목표 위치를 제한 합니다. 따라서 위치 제어 모드에서 Goal position(116)은 이 값보다 클 수 없습니다. 확장 위치 제어 모드와 전류기반 위치 제어 모드에서는 적용되지 않습니다.|      | Values     | Description     || :------------- | :------------- | :------------- ||Unit|0.088&amp;deg;|위치 관련 Data의 단위는 모두 동일||Range|0 ~ 4095|제한 값의 범위는 1회전으로 국한됨|`Note` 1회전 내에서 제어하는 위치 제어 모드(관절 모드)에서만 적용 됩니다.{: .notice}### **Shutdown (63)**다이나믹셀은 동작 중에 발생하는 위험 상황을 감지하여 스스로를 보호할 수 있습니다. 각 Bit의 기능은 ‘OR’의 논리로 적용되기 때문에 중복 설정이 가능합니다. 즉 Shutdown(63)이 ‘0x05’ (2 진수: 0000,0101)로 설정되었을 경우, Input Voltage Error(2 진수 : 0000,0001)와 Overheating Error(2 진수 : 0000,0100)가 발생하는 것을 모두 감지할 수 있습니다. 위험 상황이 감지되면, Torque Enable(64) 값이 ‘0’으로 변경되고 모터 출력은 0[%]가 됩니다. 위험 상황이 감지된 후에는 REBOOT을 하지 않는 한, Torque Enable(64)을 ‘1’(Torque ON)로 설정할 수 없습니다. Shutdown(63)에서 감지할 수 있는 위험 상황은 아래 표와 같습니다.|||Definition|Description||bit 7|0x80|-|미사용, 항상 ‘0’||bit 6|0x40|-|미사용, 항상 ‘0’||bit 5|0x20|Overload Error(Default)|최대 출력으로 제어할 수 없는 하중이 지속적으로 발생한 경우||bit 4|0x10|Electrical Shock Error(Default)|전기적으로 회로가 충격을 받았거나, 입력 전력이 부족해서 모터가 정상 동작하지 못하는 경우||bit 3|0x08|Motor Encoder Error|모터의 엔코더가 동작하지 않는 경우||bit 2|0x04|Overheating Error(Default)|내부 온도가 설정된 동작 온도 범위를 벗어난 경우||bit 1|0x02|Motor Hall Sensor Error(Unused)|미사용, 항상 ‘0’||bit 0|0x01|Input Voltage Error|인가된 전압이 설정된 동작 전압 범위를 벗어난 경우|{% capture group_notice_02 %}`Note` Shutdown이 발생하면 다음과 같은 방법으로 다이나믹셀을 REBOOT 시킬 수 있습니다.1. H/W REBOOT : 전원을 껐다 켜는 방법2. S/W REBOOT : REBOOT Instruction 전송하는 방법(자세한 사항은 e-Manual의 프로토콜을 참고해주세요.){% endcapture %}  {{ group_notice_02 | markdownify }}### **Torque Enable (64)**Torque ON/OFF를 제어합니다. ‘1’을 쓰면 Torque ON 상태가 되고, EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다.| Values     | Description     || :------------- | :------------- ||0(Default)|Torque OFF(Free-run) 상태로 변경됩니다.||1|Torque ON 상태로 변경되고 EEPROM 영역의 모든 Data는 잠김 상태로 변경됩니다.|`Note` Present Position(132)은 Operating Mode(11)와 Torque Enable(64)이 변경되는 시점에 초기화 될 수 있습니다. 자세한 사항은 Homing Offset(20)과 Present Position(132)를 참고하세요.{: .notice}### **LED (65)**LED를 ON/OFF 합니다. 다이나믹셀의 LED는 LED(65)에 의해서만 제어 됩니다.| Values     | Description     || :------------- | :------------- ||0(Default)|LED를 OFF 시킵니다.||1|LED를 ON 시킵니다.|### **Status Return Level (68)**다이나믹셀이 Instruction Packet을 수령했을 때, Status Packet의 반환 방식을 결정합니다.| Values     |When to return Status Packet| Description     || :------------- | :------------- | :------------- ||0|PING Instruction|모든 Instruction에 대해 Status Packet을 반환하지 않습니다.(PING Instruction 제외)||1|PING InstructionREAD Instruction|READ Instruction에만 Status Packet을 반환합니다.PING Instruction은 예외적으로 모든 Instruction에 Status Packet을 반환합니다.||2|All Instructions|모든 Instruction에 대해 Status Packet을 반환합니다.|`Note` Instruction Packet의 ID가 Broad Cast ID(0xFE)인 경우, READ, WRITE Instruction에 대해서는 Status Return Level(68)과 무관하게 Status Packet을 반환하지 않습니다. 자세한 사항은 e-Manual의 프로토콜을 참고해주세요.{: .notice}### **Registered Instruction (69)**다이나믹셀이 REG_WRITE Instruction Packet을 수신한 경우 ‘1’로 설정되고, ACTION Instruction Packet을 수행하면 ‘0’으로 변경됩니다.### **Hardware Error Status (70)**하드웨어의 에러 상태를 나타냅니다. 자세한 사항은 Shutdown(63)을 참고하세요.### **Velocity I Gain (76), Velocity P Gain (78)**속도 제어 모드에서 동작하는 속도 제어기의 Gain 입니다. Control Table의 Gain과 다이나믹셀 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다.하기의 상수에는 샘플링타임이 포함되어 있습니다. 편의상 다이나믹셀 내부 제어기의 Velocity P Gain을 KVP로 표기하고 Control Table의 Gain은 KVP(TBL)로 표기합니다.|| Controller Gain     | Conversion Equations     | Range | Description || :------------- | :------------- | :------------- | :------------- || Velocity I Gain(76) | KVI | KVI = KVI(TBL) / 65536 | 0 ~ 16383 | I Gain || Velocity P Gain(78) | KVP | KVP = KVP(TBL) / 128 | 0 ~ 16383 | P Gain|다음은 속도 제어 모드에서 동작하는 속도제어기의 블록다이어그램입니다. 사용자의 요청이 다이나믹셀에 전달된 후, 다이나믹셀의 Horn이 구동되기까지의 과정은 다음과 같습니다.1. 사용자의 요청이 다이나믹셀 버스를 통해 Goal Velocity(104)에 등록됩니다.2. Goal Velocity(104)는 Profile Acceleration(108)에 의해서 목표 속도 궤적으로 변경됩니다.3. 목표 속도 궤적은 Velocity Trajectory(136) 에 표기됩니다.4. PI 제어기는 목표 속도 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다.5. Goal PWM(100)은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다.6. 최종 PWM값은 Inverter를 통해 모터에 적용되고 다이나믹셀의 Horn이 구동됩니다.7. 구동 결과는 Present Position(132), Present Velocity(128) Present PWM(124), Present Current(126)에 표기됩니다.![](/assets/images/dxl/x/dxl_velocity_controller.jpg)`Note` Ka는 Anti-windup Gain이고 ‘β’는 위치와 속도의 변환계수로 사용자가 변경할 수는 없습니다. PID 제어기에 대한 자세한 설명은 위키피디아 사이트를 참고하세요. [PID Controller at wikipedia](http://en.wikipedia.org/wiki/PID_controller).{: .notice}### **Position D Gain (80), Position I Gain (82), Position P Gain (84)**### **Feedforward 2nd Gain (88), Feedforward 1st Gain (90)**위치 제어 모드, 확장 위치 제어 모드에서 동작하는 위치 제어기의 Gain입니다. Control Table의 Gain과 다이나믹셀 내부 제어기의 Gain은 다음은 같은 관계를 갖습니다. 하기의 상수에는 샘플링타임이 포함되어 있습니다.편의상 다이나믹셀 내부 제어기의 Position P Gain을 KPP로 표기하고 Control Table의 Gain은 KPP(TBL)로 표기합니다.|  | Controller Gain | Conversion Equation | Range | Description || :------------- | :------------- || Position D Gain(76)| KPD | KPD = KPD(TBL) / 16 | 0 ~ 16383 | D Gain || Position I Gain(76)| KPI | KPI = KPI(TBL) / 65536 | 0 ~ 16383 | I Gain || Position P Gain(78)| KPP | KPP = KPP(TBL) / 128 | 0 ~ 16383 | P Gain || Feedforward 2nd Gain(88) | KFF2nd | KFF2nd = KFF2nd(TBL) / 4 | 0 ~ 16383 | Feedforward Acceleration Gain || Feedforward 1st Gain(90) | KFF1st | KFF1st = KFF1st(TBL) / 4 | 0 ~ 16383 | Feedforward Velocity Gain |다음은 위치 제어 모드, 확장 위치 제어 모드에서 동작하는 위치제어기의 블록다이어그램입니다. 사용자의 요청이 다이나믹셀에 전달된 후, 다이나믹셀의 Horn이 구동되기까지의 과정은 다음과 같습니다.1. 사용자의 요청이 다이나믹셀 버스를 통해 Goal Position(116)에 등록됩니다.2. Goal Position은 Profile Velocity(112)와 Profile Acceleration(108)에 의해서 목표 위치 궤적과 목표 속도 궤적으로 변경됩니다.3. 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory(136), Position Trajectory(140)에 표기됩니다.4. Feedforward와 PID 제어기는 목표 궤적을 기반으로 모터에 인가할 PWM 출력을 계산합니다.5. Goal PWM(100)은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다.6. 최종 PWM값은 Inverter를 통해 모터에 적용되고 다이나믹셀의 Horn이 구동됩니다.7. 구동 결과는 Present Position(132), Present Velocity(128) Present PWM(124), Present Current(126)에 표기됩니다.![](/assets/images/dxl/x/dxl_position_controller.jpg)`Note` PWM 제어 모드의 경우, PID 제어기와 Feedforward 제어기는 모두 비활성화되고 Goal PWM(100) 값이 Inverter를 통해서 모터에 직접 인가됩니다. 이를 통해 모터의 전압을 직접 제어할 수 있습니다.{: .notice}`Note` Ka는 Anti-windup Gain로서 사용자가 변경할 수는 없습니다..{: .notice}다음은 전류기반 위치제어기(전류기반 위치 제어 모드)의 블록다이어그램입니다. 기본적인 내용은 위치제어기와 동일하므로, 위치제어기와의 차이점만 설명합니다. 블록다이어그램에서 위치제어기와 다른 부분은 초록색으로 표기 하였습니다.1. Feedforward와 PID 제어기는 목표 궤적을 기반으로 목표 전류를 계산합니다.2. Goal Current(102)는 계산된 목표 전류를 제한하여 최종 목표 전류를 결정합니다.3. 전류제어기는 최종 목표 전류를 기반으로 모터에 인가할 PWM 출력을 계산합니다.4. Goal PWM(100)은 계산된 PWM 출력을 제한하여 최종 PWM값을 결정합니다.5. 최종 PWM값은 Inverter를 통해 모터에 적용되고 다이나믹셀의 Horn이 구동됩니다.6. 구동 결과는 Present Position(132), Present Velocity(128) Present PWM(124), Present Current(126)에 표기됩니다.![](/assets/images/dxl/x/dxl_current_position_controller.jpg)`Note` Ka는 Anti-windup Gain로서 사용자가 변경할 수는 없습니다. 보다 자세한 PID 제어기와 Feedforward 제어기에 대한 설명은 위키피디아 사이트를 참고하세요. [PID Controller](http://en.wikipedia.org/wiki/PID_controller), [Feed Forward](https://en.wikipedia.org/wiki/Feed_forward_(control)).{: .notice}### **Bus Watchdog (98, Available after Firmware version 38)**Bus Watchdog(98)은 특정할 수 없는 오류에 의해 제어기와 다이나믹셀의 통신(RS485, TTL)이 단절된 경우, 다이나믹셀을 정지시키기 위한 안전장치(Fail-safe) 입니다. 여기서 통신이란 DYNAMIXEL Protocol에서 정의된 모든 Instruction Packet을 의미합니다.|  | Values  | Description || :------------- | :------------- || Unit | 20[ms] | - || Range | 0 | Bus Watchdog 기능 비활성화, Bus Watchdog Error 해제 ||Range| 1 ~ 127 | Bus Watchdog 활성화 ||Range| -1 | Bus Watchdog Error 상태 |Bus Watchdog 기능은 Torque Enable(64)가 ‘1’인 경우, 제어기와 다이나믹셀의 통신 간격(시간)을 감시합니다. 측정된 통신 간격(시간)이 Bus Watchdog(98) 보다 클 경우, 다이나믹셀은 정지합니다. 이때 Bus Watchdog(98)은 ‘-1’(Bus Watchdog Error)로 변경됩니다. Bus Watchdog Error 상태가 되면, Goal Value(Goal PWM(100), Goal Current(102), Goal Velocity(104), Goal Position(116))의 Access(접근 속성)은 읽기 전용(Read Only)로 변경됩니다. 따라서 Goal Value에 새로운 값을 쓸 경우, Status packet을 통해 Range Error를 회신합니다. Bus Wathdog(98)의 값을 ‘0’으로 변경하면, Bus Watchdog Error는 해제됩니다.`Note` Range Error에 대한 자세한 사항은 e-Manual의 프로토콜을 참고해주세요.{: .notice}다음은 Bus Watchdog 기능의 동작 예시입니다.1. Operating Mode(11)를 속도 제어 모드로 설정한 후, Torque Enable(64)를 ‘1’로 변경 합니다.2. Goal Velocity(104)에 ‘50’을 쓰면, 다이나믹셀은 CCW 방향으로 회전합니다.3. Bus Watchdog(98)의 값을 ‘100’(2,000[ms])으로 변경합니다.(Bus Watchdog 기능 활성화)4. 2,000[ms] 동안 Instruction packet이 수신되지 않으면, Dynamixel은 정지합니다. 정지할 때 Profile Acceleration(108)과 Profile Velocity(112)는 ‘0’으로 적용됩니다.5. Bus Watchdog(98)의 값은 ‘-1’(Bus Watchdog Error)으로 변경됩니다. 이때 Goal Value의 접근속성(Access)은 모두 읽기전용(Read Only)으로 변경됩니다.6. Goal Velocity(104)에 ‘150’을 쓰면, Status Packet을 통해 Range Error가 회신합니다.7. Bus Watchdog(98)의 값을 ‘0’으로 변경하면, Bus Watchdog Error가 해제됩니다.8. Goal Velocity(104)에 ‘150’을 쓰면, Dynamixel은 CCW 방향으로 회전합니다.### **Goal PWM (100)**PWM 제어 모드의 경우, PID 제어기나 Feedforward 제어기는 모두 비활성화되고 Goal PWM(100) 값이 Inverter를 통해서 모터에 직접 인가됩니다. 그 외 제어 모드에서는 PWM 제한값으로 사용됩니다. 이 값은 PWM Limit(36)보다 클 수 없습니다. 제어 모드 별 Goal PWM(100)의 동작 방식은 해당 Gain의 설명 부분을 참고하세요.|  | Values  | Description || :------------- | :------------- ||Range | -PWM Limit(36) ~ PWM Limit(36) | PWM Limit(36)의 초기값은 ‘885’ 입니다. |### **Goal Current (102)**전류 제어 모드의 경우, Goal Current(102)를 통해 목표 전류를 설정할 수 있습니다. 전류기반 위치 제어 모드에서는 Current 제한값으로 사용됩니다. 이 값은 Current Limit(38)보다 클 수 없습니다.|  | Values  | Description || :------------- | :------------- ||Unit | 약 2.69[mA] | 전류 관련 Data의 단위는 모두 동일 || Range | -Current Limit(38) ~ Current Limit(38) | - |`Note` 높은 전류를 장시간 사용할 경우, 모터가 손상될 수 있습니다.{: .notice}### **Goal Velocity (104)**속도 제어 모드의 경우, Goal Velocity(104)를 통해 목표 속도를 설정할 수 있습니다. 이 값은 Velocity Limit(44)보다 클 수 없습니다. 현재 Goal Velocity(104)는 목표 속도로만 사용되고, 속도 제한 값으로는 사용되지 않습니다.|  | Values  | Description || :------------- | :------------- ||Unit | 0.229[RPM] | 속도 관련 Data의 단위는 모두 동일 ||Range | -Velocity Limit(44) ~ Velocity Limit(44) | - |`Note` 다이나믹셀의 최대 속도와 최대 토크는 입력전압에 따라 달라집니다. 따라서 입력 전압에 따라 추종할 수 있는 최대 속도 역시 달라집니다. 매뉴얼에서는 권장전압(12[V])를 기준으로 설명합니다.{: .notice}`Note` Profile Acceleration(108)과 Goal Velocity(104)를 동시에 변경할 경우, 변경된 Profile Acceleration(108)이 적용되어 Goal Velocity(104)가 수행됩니다.{: .notice}### **Profile Acceleration (108)**Profile의 가속도를 설정합니다. Profile Acceleration(108)은 전류 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다. Profile Acceleration(108)은 Acceleration Limit(40)보다 클 수 없습니다. 자세한 사항은 Profile Velocity(112)를 참고하세요.|  | Values  | Description || :------------- | :------------- ||Unit | 214.577[Rev/min2] | 가속도 관련 Data의 단위는 모두 동일 || Range | 0 ~ Acceleration Limit(40) | Profile Acceleration(108)이 &#39;0&#39;인 경우, 무한대 가속도를 뜻합니다. |### **Profile Velocity (112)**Profile의 최대 속도를 설정합니다. Profile Velocity(112)는 전류 제어 모드와 속도 제어 모드를 제외한 모든 제어 모드에서 적용 가능합니다. Profile Velocity(112)는 Velocity Limit(44)보다 클 수 없습니다. 참고로 속도 제어 모드에서는 Profile Velocity(112)는 적용되지 않고 Profile Acceleration(108)만 적용됩니다.|  | Values  | Description || :------------- | :------------- ||Unit | 0.229[RPM] | 속도 관련 Data의 단위는 모두 동일 ||Range|0 ~ Velocity Limit(44) | Profile Velocity(112)이 ‘0’인 경우, 무한대 속도를 뜻합니다.|Profile이란 모터 구동 시 급격하게 변하는 속도와 가속도를 조절함으로써 진동, 소음 및 모터의 부하를 줄이는 가감속 제어 방법입니다. 일반적으로 속도에 근거하여 가감속을 제어하기 때문에 Velocity Profile이라고 불립니다. 다이나믹셀은 4가지 형태의 Profile을 제공합니다. 다음은 4가지 종류의 Profile과 Profile의 선택 방법을 표시합니다. 기본적으로 Profile의 선택은 Profile Velocity(112)와 Profile Acceleration(108)의 조합에 의해서 결정됩니다. 예외적으로 Triangle과 Trapezoidal Profile은 총 이동거리(ΔPos, 목표위치와 현재위치의 차이)가 추가로 고려되어 선택됩니다. 편의상 Profile Velocity(112)를 VPRFL, Profile Acceleration(108)을 APRFL로 표기합니다. ‘X’는 “상관없음”(Don’t Care)를 뜻합니다.![](/assets/images/dxl/x/dxl_profiles.jpg)다이나믹셀의 Profile은 Goal Position(116)이 주어졌을 때, 현재 속도(Profile의 시작속도)를 기반으로 목표 속도 궤적을 생성합니다. 따라서 다이나믹셀이 Goal Position(116)로 이동하는 중에 새로운 Goal Position(116)로 목표위치가 변경되어도, 속도의 연속성을 유지하면서 목표 속도 궤적을 생성합니다. 이와 같이 속도의 불연속이 발생하지 않도록 목표 속도 궤적을 생성하는 기능을 Velocity Override라고 합니다. 여기서는 수식의 단순화를 위해 Profile의 시작속도를 ‘0’으로 가정합니다.다음은 위치 제어 모드, 확장 위치 제어 모드, 전류기반 위치 제어 모드에서, Goal Position(116) 명령에 대한 Profile의 동작 과정을 나타냅니다.1. 사용자의 요청이 다이나믹셀 버스를 통해 Goal Position(116)에 등록됩니다.2. Profile Velocity(112)와 Profile Acceleration(108)에 의해서 가속 시간(t1)이 결정됩니다.3. Profile Velocity(112), Profile Acceleration(108) 그리고 총 이동거리(ΔPos, 목표위치와 현재위치의 차이)에 의해서 Profile의 형태가 다음과 같이 결정됩니다.4. 최종 선정된 Profile의 형태는 Moving Status(123)에 표기됩니다.(Moving Status(123) 참고)5. 다이나믹셀은 Profile에 의해 산출된 목표 궤적에 따라 이동하게 됩니다.6. Profile에 의한 목표 속도 궤적과 목표 위치 궤적은 Velocity Trajectory(136)와 Position Trajectory(140)에 표기됩니다.7. Goal Position(116)에 도달하는 시간(t3)와 ③의 VPRFL_TRI은 다음과 같이 계산됩니다.| Condition     | Types of Profile     || :------------- | :------------- || VPRFL(112) = 0 | 프로파일 미사용(Step 명령) || (VPRFL(112) ≠ 0) &amp; (APRF(108) = 0) | 사각(Rectangle) 프로파일 형태 || (VPRFL(112) ≠ 0) &amp; (APRF(108) ≠ 0) &amp; (VPRFL_TRI ≤ VPRFL(112)) | 삼각(Triangle) 프로파일 형태 || (VPRFL(112) ≠ 0) &amp; (APRF(108) ≠ 0) &amp; (VPRFL_TRI ＞ VPRFL(112))| 사다리꼴(Trapezoidal) 프로파일 형태 |![](/assets/images/dxl/x/dxl_velocity_profiles.jpg)`Note` 급격한 가속도의 변화를 최소화하기 위해서 다이나믹셀은 Jerk를 관리하고 있습니다. 따라서 Profile에 의한 목표궤적의 정확한 완료시간은 t3 보다 다소 길어질 수 있습니다.(상기 그림의 t4){: .notice}{% capture group_notice_03 %}`Note` 속도 제어 모드에서는 Profile Acceleration(108)만 적용됩니다. 제공되는 Profile의 형태는 Step과 Trapezoidal 2가지 입니다. Velocity Override 기능과 Jerk 관리 기능은 동일하게 동작합니다. 이때의 가속시간(t1)은 다음과 같습니다.![](/assets/images/dxl/x/equation_01.gif){% endcapture %}  {{ group_notice_03 | markdownify }}### **Goal Position (116)**Goal Position(116)을 통해 목표위치를 설정할 수 있습니다. 모든 다이나믹셀은 Horn을 정면에서 바라봤을 때 CCW(Counter Clockwise) 방향이 증가 방향이고, CW(Clockwise) 방향이 감소 방향입니다. Goal Position(116)에 도달하는 방식은 다이나믹셀이 제공하는 4가지 형태의 Profile에 따라 달라집니다. Profile에 대한 자세한 내용은 Profile Velocity(112)를 참고하세요.![](/assets/images/dxl/x/dxl_goal_position.jpg)|| Mode     | Values     | Description || :------------- | :------------- || Unit |  | 0.088&amp;deg; | 1[rev] : 0 ~ 4,095 || Range | 위치제어 모드확장 위치제어 모드전류기반 위치제어 모드 | Min Position Limit(52) ~ Max Position Limit(48)-1,048,575 ~ 1,048,575-1,048,575 ~ 1,048,575 | Initial Value : 0 ~ 4,095-256[rev] ~ 256[rev]-256[rev] ~ 256[rev]|`Note` Profile Acceleration(108), Profile Velocity(112)와 Goal Position(116)을 동시에 변경할 경우, 변경된 Profile Acceleration(108)과 Profile Velocity(112)가 적용되어 Goal Position(116)이 수행됩니다.{: .notice}### **Realtime Tick (120)**다이나믹셀의 시간을 나타내는 지수입니다.|     | Values     | Description || :------------- | :------------- || Unit | 1[ms] | - || Range | 0 ~ 32,767 | 32,767 이후에는 ‘0’부터 다시 시작 합니다. |### **Moving (122)**움직임의 유무를 나타냅니다. Present Velocity(128)의 절대값이 Moving Threshold(24)보다 크면 Moving(122) 이 ‘1’이 되고, 적으면 ‘0’이 됩니다. 단 Profile 진행 중, 즉 Goal Position(116) 명령을 수행하는 중에는 Present Velocity(128)와 무관하게 ‘1’로 설정됩니다.| Value | Description     || :------------- | :------------- || 0 | 움직임이 감지 되지 않음 || 1 | 움직임이 감지 되었거나, Profile 진행 중인 경우(Goal Position(116) 명령을 수행하는 중) |### **Moving Status (123)**움직임에 대한 추가적인 정보를 제공합니다. Following Error Bit(0x08)과 In-Position Bit(0x01)은 위치 제어 모드, 확장 위치 제어 모드, 전류기반 위치 제어 모드에서만 동작합니다.||| Details     | Description     || :------------- | :------------- |:------------- | :------------- || Bit 7 | 0x80 | - | 미사용 || Bit 6 | 0x40 | - | 미사용 || Bit 5~Bit 4 | 0x30 | Profile Type(0x30)Profile Type(0x20)Profile Type(0x10)Profile Type(0x00)|사다리꼴 속도 프로파일(Trapezoidal Velocity Profile)삼각 속도 프로파일(Triangle Velocity Profile)사각 속도 프로파일(Rectangle Velocity Profile)프로파일 미사용(Step)|| Bit 3 | 0x08 | Following Error | 다이나믹셀이 목표위치 궤적을 추종하지 못하는 경우 || Bit 2 | 0x04 | - | 미사용 || Bit 1 | 0x02 | Profile Ongoing | Goal Position(116) 명령에 따라 Profile 진행 중인 경우 || Bit 0 | 0x01 | In-Position | 다이나믹셀이 목표위치에 도달 경우 |### **Present PWM (124)**현재 PWM 값입니다. 자세한 사항은 Goal PWM(100)을 참고하세요.### **Present Current (126)**현재 전류 값입니다. 자세한 사항은 Goal Current(102)를 참고하세요.### **Present Velocity (128)**현재 속도 값입니다. 자세한 사항은 Goal Velocity(104) 참고하세요.### **Present Position (132)**현재 위치 값입니다. 자세한 사항은 Goal Position(116)을 참고하세요.{% capture group_notice_04 %}`Note` Present Position(132)은 Torque OFF 상태일 경우, Operating Mode(11)와 상관없이 4[byte](-2,147,483,648 ~ 2,147,483,647)의 범위를 연속적으로 표현합니다. Present Position(132)의 값이 초기화되는 시점은 다음과 같습니다.1. Operating Mode(11)가 위치 제어 모드로 변경되는 시점에 1[rev](0~4,095) 범위로 초기화2. 위치 제어 모드에서 Torque ON으로 변경되는 시점에 1[rev](0~4,095) 범위로 초기화Homing Offset(20)에 의해 초기화 되는 값은 변경될 수 있습니다.{% endcapture %}  {{ group_notice_04 | markdownify }}### **Velocity Trajectory (136)**Profile에 의해 생성된 목표 속도 궤적입니다. 제어 모드에 따라 동작 방식이 다음과 같이 달라집니다. 자세한 사항은 Profile Velocity(112)를 참고하세요.1. 속도 제어 모드 : Profile이 종료되면 Velocity Trajectory(136)은 Goal Velocity(104)와 동일해 집니다.2. 위치 제어 모드, 확장 위치 제어 모드, 전류기반 위치 제어 모드 : Position Trajectory(140)을 생성하기 위한 목표 속도 궤적입니다. Profile이 종료되면 Velocity Trajectory(136)은 ‘0’이 됩니다.### **Position Trajectory (140)**Profile에 의해 생성된 목표 위치 궤적입니다. 위치 제어 모드, 확장 위치 제어 모드, 전류기반 위치 제어 모드에서만 동작 합니다. 자세한 사항은 Profile Velocity(112)를 참고하세요.### **Present Input Voltage (144)**현재 공급되는 전압입니다. 자세한 사항은 Max/Min Voltage Limit(32, 34)를 참고하세요.### **Present Temperature (144)**현재 내부온도입니다. 자세한 사항은 Temperature Limit(31)을 참고하세요.### **Indirect Address 1 ~ 28 (168, 170 ~ 220, 222), Indirect Address 29 ~ 56 (578, 580 ~ 630, 632)Indirect Data 1 ~ 28 (224, 225 ~ 250, 251), Indirect Data 29 ~ 56 (634, 635 ~ 660, 661)**Indirect Address와 Indirect Data 용도는 서로 떨어져있는 Control Table의 Address를 연속된 Address로 사용하기 위함입니다. 연속된 Address는 Instruction Packet을 효율성을 향상 시킵니다. Indirect Address로 설정할 수 있는 Address는 RAM 영역(Address 64 ~ 661)으로 한정 됩니다.Indirect Address에 특정 Address를 설정하면, Indirect Data는 특정한 Address에 해당하는 Data의 기능과 속성을 모두 상속받습니다. 동일한 속성이란 Size(Byte 길이), 값의 범위 그리고 Access(읽기 전용 속성, 읽기 쓰기 속성)를 모두 포함합니다. 즉 Indirect Address 1(168)에 65(LED의 Address)를 설정하면, Indirect Data 1(224)은 LED(65)와 동일한 기능을 수행하게 됩니다.1. 예제1) Size 1[byte]인 LED(65)를 Indirect Data 1(224)로 사용할 경우  A. Indirect Address 1(168) : LED의 주소 ‘65’로 변경  B. Indirect Data 1(224)를 ‘1’로 변경 -&gt; LED(65) 역시 ‘1’로 변경되면서 LED가 켜집니다.  C. Indirect Data 1(224)를 ‘0’로 변경 -&gt; LED(65) 역시 ‘0’로 변경되면서 LED가 꺼집니다.2. 예제2) Size 4[byte]인 Goal Position(116)을 Indirect Data 2(225)로 사용할 경우, 4[byte] 모두 변경 해야함  A. Indirect Address 2(170) : Goal Position의 첫 번째 주소 ‘116’으로 변경  B. Indirect Address 3(172) : Goal Position의 두 번째 주소 ‘117’으로 변경  C. Indirect Address 4(174) : Goal Position의 세 번째 주소 ‘118’으로 변경  D. Indirect Address 5(176) : Goal Position의 네 번째 주소 ‘119’으로 변경  E. Indirect Data 2에서 4[byte] 값을 ‘1024’ 변경 -&gt; Goal Position(116) 역시 ‘1024’로 변경되고 다이나믹셀이 구동됩니다.| | Values | Description     || :------------- | :------------- || Indirect Address Range | 64~661 | Indirection Address는 EEPROM 영역을 지정할 수 없습니다. |`Note` 2[byte] 이상의 길이를 갖는 Control Table의 Data를 Indirect Address로 설정할 경우에는 &quot;예제 2)&quot;와 같이 Control Table의 Data가 포함된 모든 Address를 Indirect Address로 설정해 주어야 정상동작합니다.{: .notice}`Note` Indirect Address 29 ~ 56과 Indirect Data 29 ~ 56은 프로토콜 2.0으로만 접근할 수 있습니다.{: .notice}# [조립 예시](#조립-예시)## [배선 예시](#배선-예시)![](/assets/images/dxl/x/wiring_through_back_case.jpg)## [옵션프레임 조립](#옵션프레임-조립)![](/assets/images/dxl/x/x430_option_frame.jpg)# [유지보수](#유지보수)## [혼, 베어링](#혼-베어링)혼은 다이나믹셀의 전면 휠기어에 장착되며, 베어링은 후면에 장착됩니다.![](/assets/images/dxl/x/horn_bearing.jpg)### Installing the Horn혼을 삽입하기 전에 혼 와셔를 와셔 홈에 맞도록 올려놓으십시오.혼과 휠기어에 표시된 도트 표시를 맞추어서 혼을 끼워넣으십시오.![](/assets/images/dxl/x/horn_alignment.jpg)도트 표시를 맞추어서 혼을 휠기어에 끼웠으면 혼의 중심부를 누르면서 휠기어의 끝까지 완전히 삽입되도록 조립하십시오. 이 과정에서 먼저 끼워진 혼 와셔가 이탈하지 않는지 확인하십시오. 혼과 와셔가 모두 정상적으로 조립되면 볼트를 이용해서 혼과 휠기어를 단단히 고정하십시오.### Installing the Bearing Set다이나믹셀에 사용되던 베어링 셋트를 분리하거나 새로운 베어링 셋트를 구입해서 다이나믹셀에 조립할 수 있습니다.  베어링 셋트는 구동축과 분리되어 자유롭게 회전하기 때문에 혼을 조립할때 처럼 위치를 맞추어 조립할 필요가 없습니다.![](/assets/images/dxl/x/bearing.jpg)# [참고자료](#참고자료)## [퀵스타트](#퀵스타트){% include en/dxl/quick_start.md %}## [도면](#도면)- [X_430_std_ref.pdf][Protocol]: #[Two&#39;s complement]: #[X_430_std_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/x-430_std_ref.pdf",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xh430-w210/"
      } ,
  
      "docs-en-dxl-x-xh430-w350":  {
        "title": "XH430-W350",
      "content"	 : "![](/assets/images/dxl/x/x_series_product.png)# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || Position Sensor       | Contactless absolute encoder (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| Motor       | Maxon       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || Control Algorithm | PID control     || Degree of Precision | 0.088&amp;deg;  || Operating Modes | Current Control Mode  Velocity Control Mode  Position Control Mode (0&amp;deg; ~ 360&amp;deg;)  Extended Position Control Mode  Current-based Position Control Mode  PWM Control Mode (Voltage Control Mode) || Weight | 82g || Dimensions (W x H x D) | 28.5mm x 46.5mm x 34mm || Gear Ratio | 353.5 : 1  || Stall Torque | 3.1Nm @ 11.1V, 1.2A3.4Nm @ 12.0V, 1.3A4.2Nm @ 14.8V, 1.5A || No Load Speed | 27rpm @ 11.1V30rpm @ 12.0V37rpm @ 14.8V || Operating Temperature | -5&amp;deg;C ~ +80&amp;deg;C || Input Voltage | 10.0 ~ 14.8V (**Recommended : 12.0V**) || Standby Current | 40mA || Command Signal | Digital Packet || Protocol Type | XH430-W350-T: Half Duplex Asynchronous Serial CommunicationXH430-W350-R: RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | XH430-W350-T: TTL Level Multidrop BUS XH430-W350-R: RS485 Multidrop BUS || ID | 0 ~ 252 || Feedback | Position, Velocity, Current, Realtime tick, Trajectory, Temperature, Input Voltage, etc || Part Material | Full Metal GearMetal(Front, Middle), Engineering Plastic(Back) |## [Performance Graph](#performance-graph)![](/assets/images/dxl/x/xh430_w350_performance_graph.jpg){% include en/dxl/note_performance_graph.md %}{% include en/dxl/control_table_protocol2.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)                    |Model Number                             |R  |1000||2|4|[Model Information](#model-information)          |Model Information                        |R  |-||6|1|[Firmware Version](#firmware-version)            |Firmware Version                         |R  |-||7|1|[ID](#id)                                        |DYNAMIXEL ID                             |RW |1||8|1|[Baud Rate](#baud-rate)                          |Communication Speed                      |RW |1||9|1|[Return Delay Time](#return-delay-time)          |Response Delay Time                      |RW |250||10|1|[Drive Mode](#drive-mode)                       |Default Rotation Direction               |RW |0||11|1|[Operating Mode](#operating-mode)               |Operating Mode                           |RW |3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)    |Secondary(Shadow) ID                     |RW |255||13|1|[Protocol Version](#protocol-version)           |Protocol Version                         |RW |2||20|4|[Homing Offset](#homing-offset)                 |Home Position Offset                     |RW |0||24|4|[Moving Threshold](#moving-threshold)           |Velocity Threshold for Movement Detection|RW |10||31|1|[Temperature Limit](#temperature-limit)         |Maximum Internal Temperature Limit       |RW |80||32|2|[Max Voltage Limit](#max-voltage-limit)         |Maximum Input Voltage Limit              |RW |160||34|2|[Min Voltage Limit](#min-voltage-limit)         |Minimum Input Voltage Limit              |RW |95||36|2|[PWM Limit](#pwm-limit)                         |Maximum PWM Limit                        |RW |885||38|2|[Current Limit](#current-limit)                 |Maximum Current Limit                    |RW |648||40|4|[Acceleration Limit](#acceleration-limit)       |Maximum Accleration Limit                |RW |32767||44|4|[Velocity Limit](#velocity-limit)               |Maximum Velocity Limit                   |RW |280||48|4|[Max Position Limit](#max-position-limit)       |Maximum Position Limit                   |RW |4095||52|4|[Min Position Limit](#min-position-limit)       |Minimum Position Limit                   |RW |0||63|1|[Shutdown](#shutdown)                           |Shutdown Error Information               |RW |52|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)               |Motor Torque On/Off                        |RW |0||65|1|[LED](#led)                                   |Status LED On/Off                          |RW |0||68|1|[Status Return Level](#status-return-level)   |Select Types of Status Return              |RW |2||69|1|[Registered Instruction](#registered-instruction)|Check Reception of Instruction          |R  |0||70|1|[Hardware Error Status](#hardware-error-status)  |Hardware Error Status                   |R  |0||76|2|[Velocity I Gain](#velocity-i-gain)           |I Gain of Velocity                         |RW |1920||78|2|[Velocity P Gain](#velocity-p-gain)           |P Gain of Velocity                         |RW |100||80|2|[Position D Gain](#position-d-gain)           |D Gain of Position                         |RW |0||82|2|[Position I Gain](#position-i-gain)           |I Gain of Position                         |RW |0||84|2|[Position P Gain](#position-p-gain)           |P Gain of Position                         |RW |900||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain) |2nd Gain of Feed-Forward                   |RW |0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain) |1st Gain of Feed-Forward                   |RW |0||98|1|[Bus Watchdog](#bus-watchdog)                 |DYNAMIXEL Bus Watchdog                     |RW |0||100|2|[Goal PWM](#goal-pwm)                        |Target PWM Value                           |RW |-||102|2|[Goal Current](#goal-current)                |Target Current Value                       |RW |-||104|4|[Goal Velocity](#goal-velocity)              |Target Velocity Value                      |RW |-||108|4|[Profile Acceleration](#profile-acceleration)|Acceleration Value of Profile              |RW |0||112|4|[Profile Velocity](#profile-velocity)        |Velocity Value of Profile                  |RW |0||116|4|[Goal Position](#goal-position)              |Target Position Value                      |RW |-||120|2|[Realtime Tick](#realtime-tick)              |Count Time in millisecond                  |R  |-||122|1|[Moving](#moving)                            |Movement Status                            |R  |0||123|1|[Moving Status](#moving-status)              |Detailed Information of Movement Status    |R  |0||124|2|[Present PWM](#present-pwm)                  |Current PWM Value                          |R  |-||126|2|[Present Current](#present-current)          |Current Current Value                      |R  |-||128|4|[Present Velocity](#present-velocity)        |Current Velocity Value                     |R  |-||132|4|[Present Position](#present-position)        |Current Position Value                     |R  |-||136|4|[Velocity Trajectory](#velocity-trajectory)  |Target Velocity Trajectory Generated by Profile|R|-||140|4|[Position Trajectory](#position-trajectory)  |Target Position Trajectory Generated by Profile|R|-||144|2|[Present Input Voltage](#present-input-voltage)|Current Input Voltage                    |R  |-||146|1|[Present Temperature](#present-temperature)    |Current Internal Temperature             |R  |-||168|2|[Indirect Address 1](#indirect-address)      |Indirect Address 1                         |RW |224||170|2|[Indirect Address 2](#indirect-address)      |Indirect Address 2                         |RW |225||172|2|[Indirect Address 3](#indirect-address)      |Indirect Address 3                         |RW |226||…|…|…                        |…|…|…||218|2|[Indirect Address 26](#indirect-address)     |Indirect Address 26                        |RW |249||220|2|[Indirect Address 27](#indirect-address)     |Indirect Address 27                        |RW |250||222|2|[Indirect Address 28](#indirect-address)     |Indirect Address 28                        |RW |251||224|1|[Indirect Data 1](#indirect-data)            |Indirect Data 1                            |RW |0||225|1|[Indirect Data 2](#indirect-data)            |Indirect Data 2                            |RW |0||226|1|[Indirect Data 3](#indirect-data)            |Indirect Data 3                            |RW |0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)           |Indirect Data 26                           |RW |0||250|1|[Indirect Data 27](#indirect-data)           |Indirect Data 27                           |RW |0||251|1|[Indirect Data 28](#indirect-data)           |Indirect Data 28                           |RW |0||578|2|[Indirect Address 29](#indirect-address)     |Indirect Address 29                        |RW |634||580|2|[Indirect Address 30](#indirect-address)     |Indirect Address 30                        |RW |635||582|2|[Indirect Address 31](#indirect-address)     |Indirect Address 31                        |RW |636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)     |Indirect Address 54                        |RW |659||630|2|[Indirect Address 55](#indirect-address)     |Indirect Address 55                        |RW |660||632|2|[Indirect Address 56](#indirect-address)     |Indirect Address 56                        |RW |661||634|1|[Indirect Data 29](#indirect-data)           |Indirect Data 29                           |RW |0||635|1|[Indirect Data 30](#indirect-data)           |Indirect Data 30                           |RW |0||636|1|[Indirect Data 31](#indirect-data)           |Indirect Data 31                           |RW |0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)           |Indirect Data 54                           |RW |0||660|1|[Indirect Data 55](#indirect-data)           |Indirect Data 55                           |RW |0||661|1|[Indirect Data 56](#indirect-data)           |Indirect Data 56                           |RW |0|`Caution` Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.{: .notice--warning}## [Control Table Description](#control-table-description)`Caution` Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.{: .notice--warning}### **Model Number(0)** This address stores model number of the DYNAMIXEL.### **Firmware Version(6)** This address stores firmware version of the DYNAMIXEL.### **ID(7)**{% include en/dxl/control_table_id.md %}### **Baud Rate(8)**{% include en/dxl/control_table_baudrate_2.md %}### **Return Delay Time(9)**{% include en/dxl/control_table_return_delay_time.md %}### **Drive Mode(10, Available from Firmware v38)**{% include en/dxl/control_table_drivemode.md %}### **Operating Mode(11)**{% include en/dxl/control_table_opmode_six_2.md %}### **Secondary(Shadow) ID(12)**{% include en/dxl/control_table_shadowid.md %}### **Protocol version(13)**{% include en/dxl/control_table_protocolversion.md %}### **Homing Offset(20)**{% include en/dxl/control_table_homingoffset.md %}### **Moving Threshold(24)**{% include en/dxl/control_table_movingthreshold.md %}### **Temperature Limit(31)**{% include en/dxl/control_table_temp_limit_2.md %}### **Min/Max Voltage Limit(34, 32)**{% include en/dxl/control_table_volt_limit_2.md %}### **PWM Limit(36)**{% include en/dxl/control_table_pwm_limit.md %}### **Current Limit(38)**{% include en/dxl/control_table_current_limit.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|0 ~ 648|`Note` Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.{: .notice}### **Acceleration Limit(40)**{% include en/dxl/control_table_acclimit.md %}### **Velocity Limit(44)**{% include en/dxl/control_table_vellimit.md %}### **Min/Max Position Limits(52, 48)**{% include en/dxl/control_table_positionlimit.md %}### **Shutdown(63)**{% include en/dxl/control_table_shutdown.md %}### **Torque Enable(64)**{% include en/dxl/control_table_torque_enable_2.md %}### **LED(65)**{% include en/dxl/control_table_led.md %}### **Status Return Level(68)**{% include en/dxl/control_table_status_return_lv.md %}### **Registered Instruction(69)**{% include en/dxl/control_table_reg_instruction.md %}### **Hardware Error Status(70)**This value indicates hardware error status.{% include en/dxl/control_table_shutdown.md %}### **Velocity PI Gain(78, 76)**{% include en/dxl/control_table_velocity_pi_gain.md %}### **Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)**{% include en/dxl/control_table_position_pid_gain.md %}{% include en/dxl/control_table_current_position_pid_gain.md %}### **Bus Watchdog(98, Available from Firmware v38)**{% include en/dxl/control_table_buswatchdog.md %}### **Goal PWM(100)**{% include en/dxl/control_table_goal_pwm.md %}### **Goal Current(102)**{% include en/dxl/control_table_goal_current.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|-Current Limit(38) ~ Current Limit(38)|`Note` Applying high current to the motor for long period of time might damage the motor.{: .notice}### **Goal Velocity(104)**{% include en/dxl/control_table_goal_velocity.md %}### **Profile Acceleration(108)**{% include en/dxl/control_table_profile_acceleration.md %}### **Profile Velocity(112)**{% include en/dxl/control_table_profile_velocity.md %}### **Goal Position(116)**{% include en/dxl/control_table_goal_position_2.md %}### **Realtime Tick(120)**{% include en/dxl/control_table_realtime_tick.md %}### **Moving(122)**{% include en/dxl/control_table_moving_2.md %}### **Moving Status(123)**{% include en/dxl/control_table_moving_status.md %}### **Present PWM(124)**This value indicates current PWM. For more details, please refer to the [Goal PWM(100)](#goal-pwm).### **Present Current(126)**This value indicates current Current. For more details, please refer to the Goal Current(102).### **Present Velocity(128)**This value indicates current Velocity. For more details, please refer to the Goal Velocity(104).### **Present Position(132)**{% include en/dxl/control_table_present_position.md %}### **Velocity Trajectory(136)**{% include en/dxl/control_table_velocity_trajectory.md %}### **Position Trajectory(140)**{% include en/dxl/control_table_position_trajectory.md %}### **Present Input Voltage(144)**{% include en/dxl/control_table_present_volt_2.md %}### **Present Temperature (144)**{% include en/dxl/control_table_present_temp_2.md %}### **Indirect Address, Indirect Data**{% include en/dxl/control_table_indirect_data.md %}# [How to Assemble](#how-to-assemble)## [Wiring through Back Case](#wiring-through-back-case)![](/assets/images/dxl/x/wiring_through_back_case.jpg)## [Option Frame Assembly](#option-frame-assembly)![](/assets/images/dxl/x/x430_option_frame.jpg)# [Maintenance](#maintenance){% include en/dxl/horn_bearing_replacement.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Quick Start](#quick-start){% include en/dxl/quick_start.md %}## [Drawings](#drawings)`Download` [X_430_std_ref.pdf][X_430_std_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/x-430_std_ref.pdf[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xh430-w350/"
      } ,
  
      "docs-kr-dxl-x-xh430-w350":  {
        "title": "XH430-W350",
      "content"	 : "DYNAMIXEL XH430-W350",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xh430-w350/"
      } ,
  
      "docs-en-dxl-x-xl320":  {
        "title": "XL320",
      "content"	 : "![](/assets/images/dxl/x/xl320_product.jpg)`Caution` XL-320 is a different product from the OLLO Geared and Servo Motor.{: .notice--warning}# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || Baud Rate       | 7343 bps ~ 1 Mbps       || Resolution | 0.29&amp;deg;  || Running Degree | 0&amp;deg; ~ 360&amp;deg;Endless Turn || Weight | 16.7g || Dimensions (W x H x D) | 24mm x 36mm x 27mm || Gear Ratio | 238 : 1  || Stall Torque | 0.39Nm @ 7.4V, 1.1A || No Load Speed | 114rpm @ 7.4V, 0.18A || Operating Temperature | -5&amp;deg;C ~ +70&amp;deg;C || Input Voltage | 6 ~ 8.4V (**Recommended : 7.4V**) || Command Signal | Digital Packet || Protocol Type | Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | TTL Level Multidrop Bus(Daisy Chain Type Connector) || ID | 0 ~ 252 || Feedback | Position, Temperature, Load, Input Voltage, etc || Material | Engineering Plastic |`Note` Stall torque is the maximum instantaneous and static torque. Stable motions are possible with robots designed for loads with 1/5 or less of the stall torque.{: .notice}{% include en/dxl/control_table_protocol1.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     | Min | Max || :---------: | :----------: | :-------------: | :-------------: | :--------: | :-------------: | :---: | :---: ||0|2|[Model Number](#model-number)         | Model Number       | R       | 350 |-|-||2|1|[Firmware Version](#firmware-version)    |Firmware Version|R|-|-|-||3|1|[ID](#id)                  |DYNAMIXEL ID      |RW|1|0|252||4|1|[Baud Rate](#baud-rate)           |Communication Speed|RW|3|0|3||5|1|[Return Delay Time](#return-delay-time)   |Response Delay Time|RW|250|0|254||6|2|[CW Angle Limit](#cw-angle-limit)          |Clockwise Angle Limit|RW|0|0|1023||8|2|[CCW Angle Limit](#ccw-angle-limit)          |Counter-Clockwise Angle Limit|RW|1023|0|1023||11|1|[Control Mode](#control-mode)             |Control Mode|RW|2|1|2||12|1|[Temperature Limit](#temperature-limit)   |Maximum Internal Temperature Limit|RW|65|0|150||13|1|[Min Voltage Limit](#min-voltage-limit)   |Minimum Input Voltage Limit|RW|60|50|250||14|1|[Max Voltage Limit](#max-voltage-limit)   |Maximum Input Voltage Limit|RW|90|50|250||15|2|[Max Torque](#max-torque)           |Maximun Torque|RW|1023|0|1023||17|1|[Status Return Level](#status-return-level)      |Select Types of Status Return|RW|2|0|2||18|1|[Shutdown](#shutdown)            |Shutdown Error Information|RW|3|0|7|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     | Min | Max || :---------: | :----------: | :-------------: | :-------------: | :--------: | :-------------: | :---: | :---: ||24|1|[Torque Enable](#torque-enable)            |Motor Torque On/Off|RW|0|0|1||25|1|[LED](#led)                             |Status LED On/Off|RW|0|0|7||27|1|[D Gain](#d-gain)   |Derivative Gain|RW|0|0|254||28|1|[I Gain](#i-gain)   |Integral Gain|RW|0|0|254||29|1|[P Gain](#p-gain)   |Proportional Gain|RW|32|0|254||30|2|[Goal Position](#goal-position)                 |Target Position|RW|-|0|1023||32|2|[Moving Speed](#moving-speed)             |Moving Speed(Moving Velocity)|RW|-|0|2047||35|2|[Torque Limit](#torque-limit)            |Torque Limit(Goal Torque)|RW|-|0|1023||37|2|[Present Position](#present-position)     |Present Position|R|-|-|-||39|2|[Present Speed](#present-speed)           |Present Speed|R|-|-|-||41|2|[Present Load](#present-load)             |Present Load|R|-|-|-||45|1|[Present Voltage](#present-voltage)       |Present Voltage|R|-|-|-||46|1|[Present Temperature](#present-temperature)|Present Temperature|R|-|-|-||47|1|[Registered](#registered)                 |If Instruction is registered|R|0|-|-||49|1|[Moving](#moving)                   |Movement Status|R|0|-|-||50|1|[Hardware Error Stat](#hardware-error-stat)|Hardware Error Status|R|0|-|-||51|2|[Punch](#punch)                   |Minimum Current Threshold|RW|32|0|1023|## [Control Table Description](#control-table-description)### **Model Number (0)** This address stores model number of the DYNAMIXEL.### **Firmware Version (2)** This address stores firmware version of the DYNAMIXEL.### **ID (3)**{% include en/dxl/control_table_id.md %}### **Baud Rate (4)**Baud Rate determines serial communication speed between a controller and DYNAMIXELs.| Value     | Baud Rate     || :-------: | :-----------: ||0          |9,600 bps      ||1          |57,600 bps     ||2          |115,200 bps    ||3          |1 Mbps         |### **Return Delay Time (5)**{% include en/dxl/control_table_return_delay_time.md %}### **CW/CCW Angle Limit(6, 8)**{% include en/dxl/control_table_angle_limit.md %}### **Control Mode(11)**| Value     | Mode     || :-------: | :-----------: ||0          |Wheel Mode      ||1          |Joint Mode     |### **Temperature Limit(12)**{% include en/dxl/control_table_temp_limit.md %}### **Min/Max Voltage Limit(13, 14)**It is the operation range of voltage.|Unit|Value Range|Description|| :---: | :---: | :---: ||About 0.1V|50 ~ 250|5.0 ~ 25.0V|For example, if the value is 80, the voltage is 8V.If [Present Voltage(45)] is out of the range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and [Shutdown(18)] is triggered.[Present Voltage(45)]: #present-voltage[Shutdown(18)]: #shutdown### **Max Torque(15)**{% include en/dxl/control_table_max_torque.md %}### **Status Return Level(17)**{% include en/dxl/control_table_status_return_lv.md %}### **Shutdown(18)**Dynamixel can protect itself by detecting errors occur during the operation.The errors can be set are as the table below.|Bit   | Item     | Description     || :-------------: | :-------------: | :------------- ||Bit 3~7|-|-||Bit 2|ERROR_INPUT_VOLTAGE|Voltage is out of operational voatage range||Bit 1|ERROR_OVER_HEATING|Temperature is out of operational temperature range||Bit 0|ERROR_OVERLOAD|Motor cannot output max load due to load being applied continouosly|It is possible to make duplicate set since the function of each bit is run by  the logic of ‘OR’. That is, if 0x05 (binary 00000101) is set, both Input Voltage Error and Overload Error can be detected.If errors occur, in case of Alarm LED, the LED blinks; in case of Alarm Shutdown, the motor output becomes 0 % by making the value of Torque Limit(35) to 0.### **Torque Enable(24)**{% include en/dxl/control_table_torque_enable.md %}### **LED(25)**The combination of bit changes the output color of XL-320.|Bit   | Output Color || :-------------: | :-------------: ||0      | Red   ||1      | Green ||2      | Blue  ||0 + 1  | Yellow||1 + 2  | Cyan  ||0 + 2  | Purple||0 + 1 + 2  | White |### **PID Gains(27, 28, 29)**{% include en/dxl/control_table_mx_pid.md %}### **Goal Position(30)**{% include en/dxl/control_table_dx_goal_position.md %}### **Moving Speed(32)**- Join Mode, Multi-Turn mode  It is a moving speed to Goal Position.  0~1,023 (0x3FF) can be used, and the unit is about 0.111rpm.  If it is set to 0, it means the maximum rpm of the motor is used without controlling the speed.  If it is 1,023, it is about 114rpm.  For example, if it is set to 300, it is about 33.3 rpm.  However, the rpm will not exceed the No Load Speed.- Wheel Mode  It is a moving speed to Goal direction.  0~2,047 (0x7FF) can be used, and the unit is about 0.1%.  If a value in the range of 0~1,023 is used, it is stopped by setting to 0 while rotating to CCW direction.  If a value in the range of 1,024~2,047 is used, it is stopped by setting to 1,024 while rotating to CW direction.  That is, the 10th bit becomes the direction bit to control the direction.  For example, if it is set to 512, it means the output is controlled by 50% of the maximum output.  `Note` Wheel mode allows to check max rpm. Any values higher than max rpm will not take effect.  {: .notice}### **Torque Limit(35)**{% include en/dxl/control_table_torque_limit.md %}### **Present Position(37)**{% include en/dxl/control_table_dx_present_position.md %}`Caution` If it is set to Wheel Mode, the value cannot be used to measure the moving distance and the rotation frequency.{: .notice--warning}### **Present Speed(39)**Is the present moving speed.0~2,047 (0x000 ~ 0x7FF) can be used.If a value is in the rage of 0~1,023 then the motor rotates to the CCW direction.If a value is in the rage of 1,024~2,047 then the motor rotates to the CW direction.The 10th bit becomes the direction bit to control the direction; 0 and 1,024 are equal.The unit of this value varies depending on operation mode.- Joint Mode  The unit is about 0.111rpm.  For example, if it is set to 300, it means that the motor is moving to the CCW direction at a rate of about 33.3rpm.- Wheel Mode  The unit is about 0.1%.  For example, if it is set to 512, it means that the torque is controlled by 50% of the maximum torque to the CCW direction.### **Present Load(41)**{% include en/dxl/control_table_present_load.md %}### **Present Voltage(45)**It is the size of the present voltage supplied.This value is 10 times larger than the actual voltage. For example, when 10V is supplied, the data value is 100 (0x64)If Present Voltage(45) value is out of range, Voltage Range Error Bit (Bit0) of Status Packet is returned as ‘1’ and Shutdown(18) is triggered by setting 1 to the Bit 0 of the address 18.### **Present Temperature(46)**{% include en/dxl/control_table_present_temp.md %}### **Registered Instruction(47)**{% include en/dxl/control_table_reg_instruction.md %}### **Moving(49)**{% include en/dxl/control_table_moving.md %}### **Hardware Error Status(50)**Present hardware error staus. Alarm shutdown error value.### **Punch(51)**{% include en/dxl/control_table_punch.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Drawings](#drawings)![](/assets/images/dxl/x/xl320_dimension.png)[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xl320/"
      } ,
  
      "docs-kr-dxl-x-xl320":  {
        "title": "XL320",
      "content"	 : "DYNAMIXEL XL320",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xl320/"
      } ,
  
      "docs-en-dxl-x-xl430-w250":  {
        "title": "XL430-W250",
      "content"	 : "![](/assets/images/dxl/x/xl430_product.png)# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || Position Sensor       | Contactless absolute encoder (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| Motor       | Cored Motor       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || Control Algorithm | PID control     || Degree of Precision | 0.088&amp;deg;  || Operating Modes | Velocity Control Mode  Position Control Mode (0&amp;deg; ~ 360&amp;deg;)  Extended Position Control Mode PWM Control Mode (Voltage Control Mode) || Weight | 57.2g || Dimensions (W x H x D) | 28.5mm x 46.5mm x 34mm || Gear Ratio | 258.5 : 1  || Stall Torque | 1.0N.m @ 9.0V, 1.0A1.4Nm @ 11.1V, 1.3A1.5Nm @ 12.0V, 1.4A || No Load Speed | 47rpm @ 9.0V57rpm @ 11.1V61rpm @ 12.0V || Operating Temperature | -5&amp;deg;C ~ +72&amp;deg;C || Input Voltage | 6.5 ~ 12.0V (**Recommended : 11.1V**) || Standby Current | 52mA || Command Signal | Digital Packet || Protocol Type | Half Duplex Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | TTL Level Multidrop BUS|| ID | 0 ~ 252 || Feedback | Position, Velocity, Load, Realtime tick, Trajectory, Temperature, Input Voltage, etc || Part Material | Engineering Plastic |## [Performance Graph](#performance-graph)![](/assets/images/dxl/x/xl430_w250_performance_graph.png){% include en/dxl/note_performance_graph.md %}{% include en/dxl/control_table_protocol2.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)                    |Model Number                             |R  |1060||2|4|[Model Information](#model-information)          |Model Information                        |R  |-||6|1|[Firmware Version](#firmware-version)            |Firmware Version                         |R  |-||7|1|[ID](#id)                                        |DYNAMIXEL ID                             |RW |1||8|1|[Baud Rate](#baud-rate)                          |Communication Speed                      |RW |1||9|1|[Return Delay Time](#return-delay-time)          |Response Delay Time                      |RW |250||10|1|[Drive Mode](#drive-mode)                       |Default Rotation Direction               |RW |0||11|1|[Operating Mode](#operating-mode)               |Operating Mode                           |RW |3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)    |Secondary(Shadow) ID                     |RW |255||13|1|[Protocol Version](#protocol-version)           |Protocol Version                         |RW |2||20|4|[Homing Offset](#homing-offset)                 |Home Position Offset                     |RW |0||24|4|[Moving Threshold](#moving-threshold)           |Velocity Threshold for Movement Detection|RW |10||31|1|[Temperature Limit](#temperature-limit)         |Maximum Internal Temperature Limit       |RW |72||32|2|[Max Voltage Limit](#max-voltage-limit)         |Maximum Input Voltage Limit              |RW |140||34|2|[Min Voltage Limit](#min-voltage-limit)         |Minimum Input Voltage Limit              |RW |60||36|2|[PWM Limit](#pwm-limit)                         |Maximum PWM Limit                        |RW |885||40|4|[Acceleration Limit](#acceleration-limit)       |Maximum Accleration Limit                |RW |32767||44|4|[Velocity Limit](#velocity-limit)               |Maximum Velocity Limit                   |RW |415||48|4|[Max Position Limit](#max-position-limit)       |Maximum Position Limit                   |RW |4095||52|4|[Min Position Limit](#min-position-limit)       |Minimum Position Limit                   |RW |0||63|1|[Shutdown](#shutdown)                           |Shutdown Error Information               |RW |52|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)               |Motor Torque On/Off                        |RW |0||65|1|[LED](#led)                                   |Status LED On/Off                          |RW |0||68|1|[Status Return Level](#status-return-level)   |Select Types of Status Return              |RW |2||69|1|[Registered Instruction](#registered-instruction)|Check Reception of Instruction          |R  |0||70|1|[Hardware Error Status](#hardware-error-status)  |Hardware Error Status                   |R  |0||76|2|[Velocity I Gain](#velocity-i-gain)           |I Gain of Velocity                         |RW |1000||78|2|[Velocity P Gain](#velocity-p-gain)           |P Gain of Velocity                         |RW |100||80|2|[Position D Gain](#position-d-gain)           |D Gain of Position                         |RW |4000||82|2|[Position I Gain](#position-i-gain)           |I Gain of Position                         |RW |0||84|2|[Position P Gain](#position-p-gain)           |P Gain of Position                         |RW |640||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain) |2nd Gain of Feed-Forward                   |RW |0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain) |1st Gain of Feed-Forward                   |RW |0||98|1|[Bus Watchdog](#bus-watchdog)                 |DYNAMIXEL Bus Watchdog                     |RW |0||100|2|[Goal PWM](#goal-pwm)                        |Target PWM Value                           |RW |-||102|2|[Goal Current](#goal-current)                |Target Current Value                       |RW |-||104|4|[Goal Velocity](#goal-velocity)              |Target Velocity Value                      |RW |-||108|4|[Profile Acceleration](#profile-acceleration)|Acceleration Value of Profile              |RW |0||112|4|[Profile Velocity](#profile-velocity)        |Velocity Value of Profile                  |RW |0||116|4|[Goal Position](#goal-position)              |Target Position Value                      |RW |-||120|2|[Realtime Tick](#realtime-tick)              |Count Time in millisecond                  |R  |-||122|1|[Moving](#moving)                            |Movement Status                            |R  |0||123|1|[Moving Status](#moving-status)              |Detailed Information of Movement Status    |R  |0||124|2|[Present PWM](#present-pwm)                  |Present PWM Value                          |R  |-||126|2|[Present Load](#present-load)                |Present Load Value                         |R  |-||128|4|[Present Velocity](#present-velocity)        |Present Velocity Value                     |R  |-||132|4|[Present Position](#present-position)        |Present Position Value                     |R  |-||136|4|[Velocity Trajectory](#velocity-trajectory)  |Target Velocity Trajectory Generated by Profile|R|-||140|4|[Position Trajectory](#position-trajectory)  |Target Position Trajectory Generated by Profile|R|-||144|2|[Present Input Voltage](#present-input-voltage)|Present Input Voltage                    |R  |-||146|1|[Present Temperature](#present-temperature)    |Present Internal Temperature             |R  |-||168|2|[Indirect Address 1](#indirect-address)      |Indirect Address 1                         |RW |224||170|2|[Indirect Address 2](#indirect-address)      |Indirect Address 2                         |RW |225||172|2|[Indirect Address 3](#indirect-address)      |Indirect Address 3                         |RW |226||…|…|…                        |…|…|…||218|2|[Indirect Address 26](#indirect-address)     |Indirect Address 26                        |RW |249||220|2|[Indirect Address 27](#indirect-address)     |Indirect Address 27                        |RW |250||222|2|[Indirect Address 28](#indirect-address)     |Indirect Address 28                        |RW |251||224|1|[Indirect Data 1](#indirect-data)            |Indirect Data 1                            |RW |0||225|1|[Indirect Data 2](#indirect-data)            |Indirect Data 2                            |RW |0||226|1|[Indirect Data 3](#indirect-data)            |Indirect Data 3                            |RW |0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)           |Indirect Data 26                           |RW |0||250|1|[Indirect Data 27](#indirect-data)           |Indirect Data 27                           |RW |0||251|1|[Indirect Data 28](#indirect-data)           |Indirect Data 28                           |RW |0||578|2|[Indirect Address 29](#indirect-address)     |Indirect Address 29                        |RW |634||580|2|[Indirect Address 30](#indirect-address)     |Indirect Address 30                        |RW |635||582|2|[Indirect Address 31](#indirect-address)     |Indirect Address 31                        |RW |636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)     |Indirect Address 54                        |RW |659||630|2|[Indirect Address 55](#indirect-address)     |Indirect Address 55                        |RW |660||632|2|[Indirect Address 56](#indirect-address)     |Indirect Address 56                        |RW |661||634|1|[Indirect Data 29](#indirect-data)           |Indirect Data 29                           |RW |0||635|1|[Indirect Data 30](#indirect-data)           |Indirect Data 30                           |RW |0||636|1|[Indirect Data 31](#indirect-data)           |Indirect Data 31                           |RW |0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)           |Indirect Data 54                           |RW |0||660|1|[Indirect Data 55](#indirect-data)           |Indirect Data 55                           |RW |0||661|1|[Indirect Data 56](#indirect-data)           |Indirect Data 56                           |RW |0|`Caution` Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.{: .notice--warning}## [Control Table Description](#control-table-description)`Caution` Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.{: .notice--warning}### **Model Number(0)** This address stores model number of the DYNAMIXEL.### **Firmware Version(6)** This address stores firmware version of the DYNAMIXEL.### **ID(7)**{% include en/dxl/control_table_id.md %}### **Baud Rate(8)**{% include en/dxl/control_table_baudrate_2.md %}### **Return Delay Time(9)**{% include en/dxl/control_table_return_delay_time.md %}### **Drive Mode(10, Available from Firmware v38)**{% include en/dxl/control_table_drivemode.md %}### **Operating Mode(11)**{% include en/dxl/control_table_mx_opmode_2.md %}### **Secondary(Shadow) ID(12)**{% include en/dxl/control_table_shadowid.md %}### **Protocol version(13)**{% include en/dxl/control_table_protocolversion.md %}### **Homing Offset(20)**{% include en/dxl/control_table_homingoffset.md %}### **Moving Threshold(24)**{% include en/dxl/control_table_movingthreshold.md %}### **Temperature Limit(31)**{% include en/dxl/control_table_temp_limit_2.md %}### **Min/Max Voltage Limit(34, 32)**These values are maximum and minimum operating voltages.When current input voltage acquired from Present Input Voltage(144) exceeds the range of Max Voltage Limit(32) and Min Voltage Limit(34), Voltage Range Error Bit(0x01) and Hardware Error Bit(0x80) in the Hardware Error Status(70) are set. If Input Voltage Error Bit(0x10) is configured in the Shutdown(63), Torque Enable(64) is cleared to ‘0’ and Torque is disabled. For more details, please refer to the [Shutdown(63)](#shutdown) section.|Unit|Value Range|Description|| :---: | :---: | :---: ||About 0.1V|60 ~ 140|6.0 ~ 14.0V|### **PWM Limit(36)**{% include en/dxl/control_table_pwm_limit.md %}### **Acceleration Limit(40)**{% include en/dxl/control_table_acclimit.md %}### **Velocity Limit(44)**{% include en/dxl/control_table_vellimit.md %}### **Min/Max Position Limits(52, 48)**These values limit maximum and minimum target positions for Position Control Mode(Joint Mode) within the range of 1 rotation(0 ~ 4,095). Therefore, Goal Position(116) should be configured within the position limit range. These values are not used in Extended Position Control Mode.|Unit|Value Range|| :---: | :---: ||0.088&amp;deg;|0 ~ 4,095(1 rotation)|`Note` Max Position Limit(48) and Min Position Limit(52) are only used in Position Control Mode with a single turn.### **Shutdown(63)**{% include en/dxl/control_table_shutdown.md %}### **Torque Enable(64)**{% include en/dxl/control_table_torque_enable_2.md %}### **LED(65)**{% include en/dxl/control_table_led.md %}### **Status Return Level(68)**{% include en/dxl/control_table_status_return_lv.md %}### **Registered Instruction(69)**{% include en/dxl/control_table_reg_instruction.md %}### **Hardware Error Status(70)**This value indicates hardware error status.{% include en/dxl/control_table_shutdown.md %}### **Velocity PI Gain(78, 76)**These values indicate Gains of Velocity Control Mode. Gains of DYNAMIXEL’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Velocity P Gain of DYNAMIXEL’s internal controller is abbreviated to KVP and that of the Control Table is abbreviated to KVP(TBL).|| Controller Gain     | Conversion Equations     | Range | Description || :------------- | :------------- | :------------- | :------------- || Velocity I Gain(76) | KVI | KVI = KVI(TBL) / 65536 | 0 ~ 16383 | I Gain || Velocity P Gain(78) | KVP | KVP = KVP(TBL) / 128 | 0 ~ 16383 | P Gain|Below figure is a block diagram describing the velocity controller in Velocity Control Mode. When the instruction transmitted from the user is received by DYNAMIXEL, it takes following steps until driving the horn.1. An Instruction from the user is transmitted via DYNAMIXEL bus, then registered to Goal Velocity(104).2. Goal Velocity(104) is converted to target velocity trajectory by Profile Acceleration(108).3. The target velocity trajectory is stored at Velocity Trajectory(136).4. PI controller calculates PWM output for the motor based on the target velocity trajectory.5. Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.6. The final PWM value is applied to the motor through an Inverter, and the horn of DYNAMIXEL is driven.7. Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Load(126).![](/assets/images/dxl/velocity_controller_pi_gain.jpg)`Note` Ka stands for Anti-windup Gain and ‘β’ is a conversion coefficient of position and velocity that cannot be modified by users. For more details about the PID controller, please refer to the [PID Controller at wikipedia](http://en.wikipedia.org/wiki/PID_controller).{: .notice}### **Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)**These Gains are used in Position Control Mode and Extended Position Control Mode. Gains of Dynamixel’s internal controller can be calculated from Gains of the Control Table as shown below. The constant in each equations include sampling time. Position P Gain of Dynamixel’s internal controller is abbreviated to KPP and that of the Control Table is abbreviated to KPP(TBL).|| Controller Gain     | Conversion Equations     | Range | Description || :------------- | :------------- | :------------- | :------------- || Position D Gain(80) | KPD | KPD = KPD(TBL) / 16 | 0 ~ 16,383 | D Gain || Position I Gain(82) | KPI | KPI = KPI(TBL) / 65,536 | 0 ~ 16,383 | I Gain || Position P Gain(84) | KPP | KPP = KPP(TBL) / 128 | 0 ~ 16,383 | P Gain || Feedforward 2nd Gain(88) | KFF2nd | KFF2nd(TBL) / 4 | 0 ~ 16,383 | Feedforward Acceleration Gain || Feedforward 1st Gain(90) | KFF1st | KFF1st(TBL) / 4 | 0 ~ 16,383 | Feedforward Velocity Gain |Below figure is a block diagram describing the position controller in Position Control Mode and Extended Position Control Mode. When the instruction from the user is received by Dynamixel, it takes following steps until driving the horn.1. An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).2. Goal Position(116) is converted to target position trajectory and target velocity trajectory by Profile Velocity(112) and Profile Acceleration(108).3. The target position trajectory and target velocity trajectory is stored at Position Trajectory(140) and Velocity Trajectory(136) respectively.4. Feedforward and PID controller calculate PWM output for the motor based on target trajectories.5. Goal PWM(100) sets a limit on the calculated PWM output and decides the final PWM value.6. The final PWM value is applied to the motor through an Inverter, and the horn of Dynamixel is driven.7. Results are stored at Present Position(132), Present Velocity(128), Present PWM(124) and Present Load(126).![](/assets/images/dxl/position_controller_pid_gain.jpg)`Note` In case of PWM Control Mode, both PID controller and Feedforward controller are deactivated while Goal PWM(100) value is directly controlling the motor through an Inverter. In this manner, users can directly control the supplying voltage to the motor.{: .notice}`Note` Ka is an Anti-windup Gain that cannot be modified by users. For more details about the PID controller and Feedforward controller, please refer to the [PID Controller](http://en.wikipedia.org/wiki/PID_controller) and [Feed Forward](https://en.wikipedia.org/wiki/Feed_forward_(control)).{: .notice}### **Bus Watchdog(98, Available from Firmware v38)**{% include en/dxl/control_table_buswatchdog.md %}### **Goal PWM(100)**{% include en/dxl/control_table_goal_pwm.md %}### **Goal Velocity(104)**{% include en/dxl/control_table_goal_velocity.md %}### **Profile Acceleration(108)**{% include en/dxl/control_table_profile_acceleration.md %}### **Profile Velocity(112)**The Maximum velocity of Profile can be set with this value. Profile Velocity(112) can be used in all control modes except Torque Control Mode and Velocity Control Mode. Profile Velocity(112) cannot exceed Velocity Limit(44). Velocity Control Mode only uses Profile Acceleration(108) instead of Profile Velocity(112).|Unit|Value Range|Description|| :---: | :---: | :---: || 0.229 rpm | 0 ~ Velocity Limit(44) | &#39;0&#39; stands for an infinite velocity |The Profile is an acceleration/deceleration control method to reduce vibration, noise and load of the motor by controlling dramatically changing velocity and acceleration. It is also called Velocity Profile as it controls acceleration and deceleration based on velocity. DYNAMIXEL provides 4 different types of Profile. The following explains 4 Profiles and how to select them. Profiles are usually selected by a combination of Profile Velocity(112) and Profile Acceleration(108). Triangular and Trapezoidal Profiles exceptionally consider total travel distance(ΔPos, the distance difference between target position and current position) as an additional factor. For convenience, Profile Velocity(112) is abbreviated to VPRFL and Profile Acceleration(108) is abbreviated to VPRFL. &#39;X&#39; stands for &quot;Don&#39;t Care&quot; case.![](/assets/images/dxl/dxl_profiles.jpg)When given Goal Position(116), Dynamixel&#39;s profile creates target velocity trajectory based on current velocity(initial velocity of the Profile). When Dynamixel receives updated target position from a new Goal Position(116) while it is moving toward the previous Goal Position(116), velocity smoothly varies for the new target velocity trajectory. Maintaining velocity continuity while updating target velocity trajectory is called Velocity Override. For a simple calculation, let&#39;s assume that the initial velocity of the Profile is &#39;0&#39;. The following explains how Profile processes Goal Position(116) instruction in Position Control mode, Extended Position Control Mode.1. An Instruction from the user is transmitted via Dynamixel bus, then registered to Goal Position(116).2. Acceleration time(t1) is calculated from Profile Velocity(112) and Profile Acceleration(108).3. Types of Profile is decided based on Profile Velocity(112), Profile Acceleration(108) and total travel distance(ΔPos, the distance difference between target position and current position).4. Selected Profile type is stored at Moving Status(123).(Refer to the Moving Status(123))5. Dynamixel is driven by the calculated target trajectory from Profile.6. Target velocity trajectory and target position trajectory from Profile are stored at Velocity Trajectory(136) and Position Trajectory(140) respectively.7. VPRFL_TRI of ③ and Travel time(t3) to reach Goal Position(116) is calculated as below.| Condition     | Types of Profile     || :------------- | :------------- || VPRFL(112) = 0 | Profile not used (Step Instruction) || (VPRFL(112) ≠ 0) &amp; (APRF(108) = 0) | Rectangular Profile || (VPRFL(112) ≠ 0) &amp; (APRF(108) ≠ 0) &amp; (VPRFL_TRI ≤ VPRFL(112)) | Triangular Profile || (VPRFL(112) ≠ 0) &amp; (APRF(108) ≠ 0) &amp; (VPRFL_TRI ＞ VPRFL(112))| Trapezoidal Profile |![](/assets/images/dxl/dxl_velocity_profiles.jpg)`Note` Dynamixel supports Jerk control in order to minimize dramatic change of acceleration. Therefore, actual travel time by the target trajectory of Profile could be longer than t3(t4 of above figure).{: .notice}{% capture group_notice_03 %}`Note` Velocity Control Mode only uses Profile Acceleration(108). Step and Trapezoidal Profiles are supported. Velocity Override and Jerk control are supported as well. Acceleration time(t1) can be calculated as below equation.![](/assets/images/dxl/x/equation_01.gif){% endcapture %}  {{ group_notice_03 | markdownify }}### **Goal Position(116)**{% include en/dxl/control_table_goal_position_2.md %}### **Realtime Tick(120)**{% include en/dxl/control_table_realtime_tick.md %}### **Moving(122)**{% include en/dxl/control_table_moving_2.md %}### **Moving Status(123)**{% include en/dxl/control_table_moving_status.md %}### **Present PWM(124)**This value indicates present PWM. For more details, please refer to the [Goal PWM(100)](#goal-pwm).### **Present Load(126)**{% include en/dxl/control_table_present_load_2.md %}### **Present Velocity(128)**This value indicates present Velocity. For more details, please refer to the Goal Velocity(104).### **Present Position(132)**{% include en/dxl/control_table_present_position.md %}### **Velocity Trajectory(136)**This is a target velocity trajectory created by Profile. Operating method can be changed based on control mode. For more details, please refer to the Profile Velocity(112).1. **Velocity Control Mode** : When Profile reaches to the endpoint, Velocity Trajectory(136) becomes equal to Goal Velocity(104).2. **Position Control Mode, Extended Position Control Mode** : Velocity Trajectory is used to create Position Trajectory(140). When Profile reaches to an endpoint, Velocity Trajectory(136) is cleared to &#39;0&#39;.### **Position Trajectory(140)**{% include en/dxl/control_table_position_trajectory.md %}### **Present Input Voltage(144)**{% include en/dxl/control_table_present_volt_2.md %}### **Present Temperature (144)**{% include en/dxl/control_table_present_temp_2.md %}### **Indirect Address, Indirect Data**{% include en/dxl/control_table_indirect_data.md %}# [How to Assemble](#how-to-assemble)## [Wiring through Back Case](#wiring-through-back-case)## [Option Frame Assembly](#option-frame-assembly)![](/assets/images/dxl/x/xl430_option_frame.jpg)# [Maintenance](#maintenance){% include en/dxl/horn_bearing_replacement.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Quick Start](#quick-start){% include en/dxl/quick_start.md %}## [Drawings](#drawings)`Download` [dc11_a01_xl430_ref.pdf][dc11_a01_xl430_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/dc11_a01_xl430_ref.pdf[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xl430-w250/"
      } ,
  
      "docs-kr-dxl-x-xl430-w250":  {
        "title": "XL430-W250",
      "content"	 : "DYNAMIXEL XL430-W250",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xl430-w250/"
      } ,
  
      "docs-en-dxl-x-xm430-w210":  {
        "title": "XM430-W210",
      "content"	 : "![](/assets/images/dxl/x/x_series_product.png)# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || Position Sensor       | Contactless absolute encoder (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| Motor       | Coreless Motor       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || Control Algorithm | PID control     || Degree of Precision | 0.088&amp;deg;  || Operating Modes | Current Control Mode  Velocity Control Mode  Position Control Mode (0&amp;deg; ~ 360&amp;deg;)  Extended Position Control Mode  Current-based Position Control Mode  PWM Control Mode (Voltage Control Mode) || Weight | 82g || Dimensions (W x H x D) | 28.5mm x 46.5mm x 34mm || Gear Ratio | 212.6 : 1  || Stall Torque | 2.7N.m @ 11.1V, 2.1A3.0Nm @ 12.0V, 2.3A3.7Nm @ 14.8V, 2.7A || No Load Speed | 70rpm @ 11.1V77rpm @ 12.0V95rpm @ 14.8V || Operating Temperature | -5&amp;deg;C ~ +80&amp;deg;C || Input Voltage | 10.0 ~ 14.8V (**Recommended : 12.0V**) || Standby Current | 40mA || Command Signal | Digital Packet || Protocol Type | XM430-W210-T: Half Duplex Asynchronous Serial CommunicationXM430-W210-R: RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | XM430-W210-T: TTL Level Multidrop BUS XM430-W210-R: RS485 Multidrop BUS || ID | 0 ~ 252 || Feedback | Position, Velocity, Current, Realtime tick, Trajectory, Temperature, Input Voltage, etc || Part Material | Full Metal GearMetal(Front, Middle), Engineering Plastic(Back) |## [Performance Graph](#performance-graph)![](/assets/images/dxl/x/xm430_w210_performance_graph.jpg){% include en/dxl/note_performance_graph.md %}{% include en/dxl/control_table_protocol2.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)                    |Model Number                             |R  |1030||2|4|[Model Information](#model-information)          |Model Information                        |R  |-||6|1|[Firmware Version](#firmware-version)            |Firmware Version                         |R  |-||7|1|[ID](#id)                                        |DYNAMIXEL ID                             |RW |1||8|1|[Baud Rate](#baud-rate)                          |Communication Speed                      |RW |1||9|1|[Return Delay Time](#return-delay-time)          |Response Delay Time                      |RW |250||10|1|[Drive Mode](#drive-mode)                       |Default Rotation Direction               |RW |0||11|1|[Operating Mode](#operating-mode)               |Operating Mode                           |RW |3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)    |Secondary(Shadow) ID                     |RW |255||13|1|[Protocol Version](#protocol-version)           |Protocol Version                         |RW |2||20|4|[Homing Offset](#homing-offset)                 |Home Position Offset                     |RW |0||24|4|[Moving Threshold](#moving-threshold)           |Velocity Threshold for Movement Detection|RW |10||31|1|[Temperature Limit](#temperature-limit)         |Maximum Internal Temperature Limit       |RW |80||32|2|[Max Voltage Limit](#max-voltage-limit)         |Maximum Input Voltage Limit              |RW |160||34|2|[Min Voltage Limit](#min-voltage-limit)         |Minimum Input Voltage Limit              |RW |95||36|2|[PWM Limit](#pwm-limit)                         |Maximum PWM Limit                        |RW |885||38|2|[Current Limit](#current-limit)                 |Maximum Current Limit                    |RW |1193||40|4|[Acceleration Limit](#acceleration-limit)       |Maximum Accleration Limit                |RW |32767||44|4|[Velocity Limit](#velocity-limit)               |Maximum Velocity Limit                   |RW |480||48|4|[Max Position Limit](#max-position-limit)       |Maximum Position Limit                   |RW |4095||52|4|[Min Position Limit](#min-position-limit)       |Minimum Position Limit                   |RW |0||63|1|[Shutdown](#shutdown)                           |Shutdown Error Information               |RW |52|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)               |Motor Torque On/Off                        |RW |0||65|1|[LED](#led)                                   |Status LED On/Off                          |RW |0||68|1|[Status Return Level](#status-return-level)   |Select Types of Status Return              |RW |2||69|1|[Registered Instruction](#registered-instruction)|Check Reception of Instruction          |R  |0||70|1|[Hardware Error Status](#hardware-error-status)  |Hardware Error Status                   |R  |0||76|2|[Velocity I Gain](#velocity-i-gain)           |I Gain of Velocity                         |RW |1920||78|2|[Velocity P Gain](#velocity-p-gain)           |P Gain of Velocity                         |RW |100||80|2|[Position D Gain](#position-d-gain)           |D Gain of Position                         |RW |0||82|2|[Position I Gain](#position-i-gain)           |I Gain of Position                         |RW |0||84|2|[Position P Gain](#position-p-gain)           |P Gain of Position                         |RW |800||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain) |2nd Gain of Feed-Forward                   |RW |0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain) |1st Gain of Feed-Forward                   |RW |0||98|1|[Bus Watchdog](#bus-watchdog)                 |DYNAMIXEL Bus Watchdog                     |RW |0||100|2|[Goal PWM](#goal-pwm)                        |Target PWM Value                           |RW |-||102|2|[Goal Current](#goal-current)                |Target Current Value                       |RW |-||104|4|[Goal Velocity](#goal-velocity)              |Target Velocity Value                      |RW |-||108|4|[Profile Acceleration](#profile-acceleration)|Acceleration Value of Profile              |RW |0||112|4|[Profile Velocity](#profile-velocity)        |Velocity Value of Profile                  |RW |0||116|4|[Goal Position](#goal-position)              |Target Position Value                      |RW |-||120|2|[Realtime Tick](#realtime-tick)              |Count Time in millisecond                  |R  |-||122|1|[Moving](#moving)                            |Movement Status                            |R  |0||123|1|[Moving Status](#moving-status)              |Detailed Information of Movement Status    |R  |0||124|2|[Present PWM](#present-pwm)                  |Current PWM Value                          |R  |-||126|2|[Present Current](#present-current)          |Current Current Value                      |R  |-||128|4|[Present Velocity](#present-velocity)        |Current Velocity Value                     |R  |-||132|4|[Present Position](#present-position)        |Current Position Value                     |R  |-||136|4|[Velocity Trajectory](#velocity-trajectory)  |Target Velocity Trajectory Generated by Profile|R|-||140|4|[Position Trajectory](#position-trajectory)  |Target Position Trajectory Generated by Profile|R|-||144|2|[Present Input Voltage](#present-input-voltage)|Current Input Voltage                    |R  |-||146|1|[Present Temperature](#present-temperature)    |Current Internal Temperature             |R  |-||168|2|[Indirect Address 1](#indirect-address)      |Indirect Address 1                         |RW |224||170|2|[Indirect Address 2](#indirect-address)      |Indirect Address 2                         |RW |225||172|2|[Indirect Address 3](#indirect-address)      |Indirect Address 3                         |RW |226||…|…|…                        |…|…|…||218|2|[Indirect Address 26](#indirect-address)     |Indirect Address 26                        |RW |249||220|2|[Indirect Address 27](#indirect-address)     |Indirect Address 27                        |RW |250||222|2|[Indirect Address 28](#indirect-address)     |Indirect Address 28                        |RW |251||224|1|[Indirect Data 1](#indirect-data)            |Indirect Data 1                            |RW |0||225|1|[Indirect Data 2](#indirect-data)            |Indirect Data 2                            |RW |0||226|1|[Indirect Data 3](#indirect-data)            |Indirect Data 3                            |RW |0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)           |Indirect Data 26                           |RW |0||250|1|[Indirect Data 27](#indirect-data)           |Indirect Data 27                           |RW |0||251|1|[Indirect Data 28](#indirect-data)           |Indirect Data 28                           |RW |0||578|2|[Indirect Address 29](#indirect-address)     |Indirect Address 29                        |RW |634||580|2|[Indirect Address 30](#indirect-address)     |Indirect Address 30                        |RW |635||582|2|[Indirect Address 31](#indirect-address)     |Indirect Address 31                        |RW |636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)     |Indirect Address 54                        |RW |659||630|2|[Indirect Address 55](#indirect-address)     |Indirect Address 55                        |RW |660||632|2|[Indirect Address 56](#indirect-address)     |Indirect Address 56                        |RW |661||634|1|[Indirect Data 29](#indirect-data)           |Indirect Data 29                           |RW |0||635|1|[Indirect Data 30](#indirect-data)           |Indirect Data 30                           |RW |0||636|1|[Indirect Data 31](#indirect-data)           |Indirect Data 31                           |RW |0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)           |Indirect Data 54                           |RW |0||660|1|[Indirect Data 55](#indirect-data)           |Indirect Data 55                           |RW |0||661|1|[Indirect Data 56](#indirect-data)           |Indirect Data 56                           |RW |0|`Caution` Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.{: .notice--warning}## [Control Table Description](#control-table-description)`Caution` Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.{: .notice--warning}### **Model Number(0)** This address stores model number of the DYNAMIXEL.### **Firmware Version(6)** This address stores firmware version of the DYNAMIXEL.### **ID(7)**{% include en/dxl/control_table_id.md %}### **Baud Rate(8)**{% include en/dxl/control_table_baudrate_2.md %}### **Return Delay Time(9)**{% include en/dxl/control_table_return_delay_time.md %}### **Drive Mode(10, Available from Firmware v38)**{% include en/dxl/control_table_drivemode.md %}### **Operating Mode(11)**{% include en/dxl/control_table_opmode_six_2.md %}### **Secondary(Shadow) ID(12)**{% include en/dxl/control_table_shadowid.md %}### **Protocol version(13)**{% include en/dxl/control_table_protocolversion.md %}### **Homing Offset(20)**{% include en/dxl/control_table_homingoffset.md %}### **Moving Threshold(24)**{% include en/dxl/control_table_movingthreshold.md %}### **Temperature Limit(31)**{% include en/dxl/control_table_temp_limit_2.md %}### **Min/Max Voltage Limit(34, 32)**{% include en/dxl/control_table_volt_limit_2.md %}### **PWM Limit(36)**{% include en/dxl/control_table_pwm_limit.md %}### **Current Limit(38)**{% include en/dxl/control_table_current_limit.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|0 ~ 1,193|`Note` Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.{: .notice}### **Acceleration Limit(40)**{% include en/dxl/control_table_acclimit.md %}### **Velocity Limit(44)**{% include en/dxl/control_table_vellimit.md %}### **Min/Max Position Limits(52, 48)**{% include en/dxl/control_table_positionlimit.md %}### **Shutdown(63)**{% include en/dxl/control_table_shutdown.md %}### **Torque Enable(64)**{% include en/dxl/control_table_torque_enable_2.md %}### **LED(65)**{% include en/dxl/control_table_led.md %}### **Status Return Level(68)**{% include en/dxl/control_table_status_return_lv.md %}### **Registered Instruction(69)**{% include en/dxl/control_table_reg_instruction.md %}### **Hardware Error Status(70)**This value indicates hardware error status.{% include en/dxl/control_table_shutdown.md %}### **Velocity PI Gain(78, 76)**{% include en/dxl/control_table_velocity_pi_gain.md %}### **Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)**{% include en/dxl/control_table_position_pid_gain.md %}{% include en/dxl/control_table_current_position_pid_gain.md %}### **Bus Watchdog(98, Available from Firmware v38)**{% include en/dxl/control_table_buswatchdog.md %}### **Goal PWM(100)**{% include en/dxl/control_table_goal_pwm.md %}### **Goal Current(102)**{% include en/dxl/control_table_goal_current.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|-Current Limit(38) ~ Current Limit(38)|`Note` Applying high current to the motor for long period of time might damage the motor.{: .notice}### **Goal Velocity(104)**{% include en/dxl/control_table_goal_velocity.md %}### **Profile Acceleration(108)**{% include en/dxl/control_table_profile_acceleration.md %}### **Profile Velocity(112)**{% include en/dxl/control_table_profile_velocity.md %}### **Goal Position(116)**{% include en/dxl/control_table_goal_position_2.md %}### **Realtime Tick(120)**{% include en/dxl/control_table_realtime_tick.md %}### **Moving(122)**{% include en/dxl/control_table_moving_2.md %}### **Moving Status(123)**{% include en/dxl/control_table_moving_status.md %}### **Present PWM(124)**This value indicates current PWM. For more details, please refer to the [Goal PWM(100)](#goal-pwm).### **Present Current(126)**This value indicates current Current. For more details, please refer to the Goal Current(102).### **Present Velocity(128)**This value indicates current Velocity. For more details, please refer to the Goal Velocity(104).### **Present Position(132)**{% include en/dxl/control_table_present_position.md %}### **Velocity Trajectory(136)**{% include en/dxl/control_table_velocity_trajectory.md %}### **Position Trajectory(140)**{% include en/dxl/control_table_position_trajectory.md %}### **Present Input Voltage(144)**{% include en/dxl/control_table_present_volt_2.md %}### **Present Temperature (144)**{% include en/dxl/control_table_present_temp_2.md %}### **Indirect Address, Indirect Data**{% include en/dxl/control_table_indirect_data.md %}# [How to Assemble](#how-to-assemble)## [Wiring through Back Case](#wiring-through-back-case)![](/assets/images/dxl/x/wiring_through_back_case.jpg)## [Option Frame Assembly](#option-frame-assembly)![](/assets/images/dxl/x/x430_option_frame.jpg)# [Maintenance](#maintenance){% include en/dxl/horn_bearing_replacement.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Quick Start](#quick-start){% include en/dxl/quick_start.md %}## [Drawings](#drawings)`Download` [X_430_std_ref.pdf][X_430_std_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/x-430_std_ref.pdf[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xm430-w210/"
      } ,
  
      "docs-kr-dxl-x-xm430-w210":  {
        "title": "XM430-W210",
      "content"	 : "DYNAMIXEL XM430-W210",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xm430-w210/"
      } ,
  
      "docs-en-dxl-x-xm430-w350":  {
        "title": "XM430-W350",
      "content"	 : "![](/assets/images/dxl/x/x_series_product.png)# [Specifications](#specifications)| Item           | Specifications     || :------------- | :------------- || MCU       | ST CORTEX-M3 (STM32F103C8 @ 72Mhz, 32Bit)       || Position Sensor       | Contactless absolute encoder (12Bit, 360&amp;deg;)Maker : ams(www.ams.com), Part No : AS5045|| Motor       | Coreless Motor       || Baud Rate       | 9600 bps ~ 4.5 Mbps       || Control Algorithm | PID control     || Degree of Precision | 0.088&amp;deg;  || Operating Modes | Current Control Mode  Velocity Control Mode  Position Control Mode (0&amp;deg; ~ 360&amp;deg;)  Extended Position Control Mode  Current-based Position Control Mode  PWM Control Mode (Voltage Control Mode) || Weight | 82g || Dimensions (W x H x D) | 28.5mm x 46.5mm x 34mm || Gear Ratio | 353.5 : 1  || Stall Torque | 3.8N.m @ 11.1V, 2.1A4.1Nm @ 12.0V, 2.3A4.8Nm @ 14.8V, 2.7A || No Load Speed | 43rpm @ 11.1V46rpm @ 12.0V57rpm @ 14.8V || Operating Temperature | -5&amp;deg;C ~ +80&amp;deg;C || Input Voltage | 10.0 ~ 14.8V (**Recommended : 12.0V**) || Standby Current | 40mA || Command Signal | Digital Packet || Protocol Type | XM430-W350-T: Half Duplex Asynchronous Serial CommunicationXM430-W350-R: RS485 Asynchronous Serial Communication(8bit, 1stop, No Parity) || Physical Connection | XM430-W350-T: TTL Level Multidrop BUS XM430-W350-R: RS485 Multidrop BUS || ID | 0 ~ 252 || Feedback | Position, Velocity, Current, Realtime tick, Trajectory, Temperature, Input Voltage, etc || Part Material | Full Metal GearMetal(Front, Middle), Engineering Plastic(Back) |## [Performance Graph](#performance-graph)![](/assets/images/dxl/x/xm430_w350_performance_graph.jpg){% include en/dxl/note_performance_graph.md %}{% include en/dxl/control_table_protocol2.md %}## [Control Table of EEPROM Area](#control-table-of-eeprom-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||0|2|[Model Number](#model-number)                    |Model Number                             |R  |1020||2|4|[Model Information](#model-information)          |Model Information                        |R  |-||6|1|[Firmware Version](#firmware-version)            |Firmware Version                         |R  |-||7|1|[ID](#id)                                        |DYNAMIXEL ID                             |RW |1||8|1|[Baud Rate](#baud-rate)                          |Communication Speed                      |RW |1||9|1|[Return Delay Time](#return-delay-time)          |Response Delay Time                      |RW |250||10|1|[Drive Mode](#drive-mode)                       |Default Rotation Direction               |RW |0||11|1|[Operating Mode](#operating-mode)               |Operating Mode                           |RW |3||12|1|[Secondary(Shadow) ID](#secondary-shadow-id)    |Secondary(Shadow) ID                     |RW |255||13|1|[Protocol Version](#protocol-version)           |Protocol Version                         |RW |2||20|4|[Homing Offset](#homing-offset)                 |Home Position Offset                     |RW |0||24|4|[Moving Threshold](#moving-threshold)           |Velocity Threshold for Movement Detection|RW |10||31|1|[Temperature Limit](#temperature-limit)         |Maximum Internal Temperature Limit       |RW |80||32|2|[Max Voltage Limit](#max-voltage-limit)         |Maximum Input Voltage Limit              |RW |160||34|2|[Min Voltage Limit](#min-voltage-limit)         |Minimum Input Voltage Limit              |RW |95||36|2|[PWM Limit](#pwm-limit)                         |Maximum PWM Limit                        |RW |885||38|2|[Current Limit](#current-limit)                 |Maximum Current Limit                    |RW |1193||40|4|[Acceleration Limit](#acceleration-limit)       |Maximum Accleration Limit                |RW |32767||44|4|[Velocity Limit](#velocity-limit)               |Maximum Velocity Limit                   |RW |350||48|4|[Max Position Limit](#max-position-limit)       |Maximum Position Limit                   |RW |4095||52|4|[Min Position Limit](#min-position-limit)       |Minimum Position Limit                   |RW |0||63|1|[Shutdown](#shutdown)                           |Shutdown Error Information               |RW |52|## [Control Table of RAM Area](#control-table-of-ram-area)| Address     | Size(Byte)     | Data Name     | Description     | Access     | Initial Value     || :------------- | :------------- | :------------- | :------------- | :------------- | :------------- ||64|1|[Torque Enable](#torque-enable)               |Motor Torque On/Off                        |RW |0||65|1|[LED](#led)                                   |Status LED On/Off                          |RW |0||68|1|[Status Return Level](#status-return-level)   |Select Types of Status Return              |RW |2||69|1|[Registered Instruction](#registered-instruction)|Check Reception of Instruction          |R  |0||70|1|[Hardware Error Status](#hardware-error-status)  |Hardware Error Status                   |R  |0||76|2|[Velocity I Gain](#velocity-i-gain)           |I Gain of Velocity                         |RW |1920||78|2|[Velocity P Gain](#velocity-p-gain)           |P Gain of Velocity                         |RW |100||80|2|[Position D Gain](#position-d-gain)           |D Gain of Position                         |RW |0||82|2|[Position I Gain](#position-i-gain)           |I Gain of Position                         |RW |0||84|2|[Position P Gain](#position-p-gain)           |P Gain of Position                         |RW |800||88|2|[Feedforward 2nd Gain](#feedforward-2nd-gain) |2nd Gain of Feed-Forward                   |RW |0||90|2|[Feedforward 1st Gain](#feedforward-1st-gain) |1st Gain of Feed-Forward                   |RW |0||98|1|[Bus Watchdog](#bus-watchdog)                 |DYNAMIXEL Bus Watchdog                     |RW |0||100|2|[Goal PWM](#goal-pwm)                        |Target PWM Value                           |RW |-||102|2|[Goal Current](#goal-current)                |Target Current Value                       |RW |-||104|4|[Goal Velocity](#goal-velocity)              |Target Velocity Value                      |RW |-||108|4|[Profile Acceleration](#profile-acceleration)|Acceleration Value of Profile              |RW |0||112|4|[Profile Velocity](#profile-velocity)        |Velocity Value of Profile                  |RW |0||116|4|[Goal Position](#goal-position)              |Target Position Value                      |RW |-||120|2|[Realtime Tick](#realtime-tick)              |Count Time in millisecond                  |R  |-||122|1|[Moving](#moving)                            |Movement Status                            |R  |0||123|1|[Moving Status](#moving-status)              |Detailed Information of Movement Status    |R  |0||124|2|[Present PWM](#present-pwm)                  |Current PWM Value                          |R  |-||126|2|[Present Current](#present-current)          |Current Current Value                      |R  |-||128|4|[Present Velocity](#present-velocity)        |Current Velocity Value                     |R  |-||132|4|[Present Position](#present-position)        |Current Position Value                     |R  |-||136|4|[Velocity Trajectory](#velocity-trajectory)  |Target Velocity Trajectory Generated by Profile|R|-||140|4|[Position Trajectory](#position-trajectory)  |Target Position Trajectory Generated by Profile|R|-||144|2|[Present Input Voltage](#present-input-voltage)|Current Input Voltage                    |R  |-||146|1|[Present Temperature](#present-temperature)    |Current Internal Temperature             |R  |-||168|2|[Indirect Address 1](#indirect-address)      |Indirect Address 1                         |RW |224||170|2|[Indirect Address 2](#indirect-address)      |Indirect Address 2                         |RW |225||172|2|[Indirect Address 3](#indirect-address)      |Indirect Address 3                         |RW |226||…|…|…                        |…|…|…||218|2|[Indirect Address 26](#indirect-address)     |Indirect Address 26                        |RW |249||220|2|[Indirect Address 27](#indirect-address)     |Indirect Address 27                        |RW |250||222|2|[Indirect Address 28](#indirect-address)     |Indirect Address 28                        |RW |251||224|1|[Indirect Data 1](#indirect-data)            |Indirect Data 1                            |RW |0||225|1|[Indirect Data 2](#indirect-data)            |Indirect Data 2                            |RW |0||226|1|[Indirect Data 3](#indirect-data)            |Indirect Data 3                            |RW |0||…|…|…                        |…|…|…||249|1|[Indirect Data 26](#indirect-data)           |Indirect Data 26                           |RW |0||250|1|[Indirect Data 27](#indirect-data)           |Indirect Data 27                           |RW |0||251|1|[Indirect Data 28](#indirect-data)           |Indirect Data 28                           |RW |0||578|2|[Indirect Address 29](#indirect-address)     |Indirect Address 29                        |RW |634||580|2|[Indirect Address 30](#indirect-address)     |Indirect Address 30                        |RW |635||582|2|[Indirect Address 31](#indirect-address)     |Indirect Address 31                        |RW |636||…|…|…|…|…|…||628|2|[Indirect Address 54](#indirect-address)     |Indirect Address 54                        |RW |659||630|2|[Indirect Address 55](#indirect-address)     |Indirect Address 55                        |RW |660||632|2|[Indirect Address 56](#indirect-address)     |Indirect Address 56                        |RW |661||634|1|[Indirect Data 29](#indirect-data)           |Indirect Data 29                           |RW |0||635|1|[Indirect Data 30](#indirect-data)           |Indirect Data 30                           |RW |0||636|1|[Indirect Data 31](#indirect-data)           |Indirect Data 31                           |RW |0||…|…|…|…|…|…||659|1|[Indirect Data 54](#indirect-data)           |Indirect Data 54                           |RW |0||660|1|[Indirect Data 55](#indirect-data)           |Indirect Data 55                           |RW |0||661|1|[Indirect Data 56](#indirect-data)           |Indirect Data 56                           |RW |0|`Caution` Protocol 1.0 does not support addresses greater than 256. Therefore, Indirect Address 29 ~ 56 and Indirect Data 29 ~ 56 can only be accessed with Protocol 2.0.{: .notice--warning}## [Control Table Description](#control-table-description)`Caution` Data in the EEPROM Area can only be written when the value of Torque Enable(64) is cleared to ‘0’.{: .notice--warning}### **Model Number(0)** This address stores model number of the DYNAMIXEL.### **Firmware Version(6)** This address stores firmware version of the DYNAMIXEL.### **ID(7)**{% include en/dxl/control_table_id.md %}### **Baud Rate(8)**{% include en/dxl/control_table_baudrate_2.md %}### **Return Delay Time(9)**{% include en/dxl/control_table_return_delay_time.md %}### **Drive Mode(10, Available from Firmware v38)**{% include en/dxl/control_table_drivemode.md %}### **Operating Mode(11)**{% include en/dxl/control_table_opmode_six_2.md %}### **Secondary(Shadow) ID(12)**{% include en/dxl/control_table_shadowid.md %}### **Protocol version(13)**{% include en/dxl/control_table_protocolversion.md %}### **Homing Offset(20)**{% include en/dxl/control_table_homingoffset.md %}### **Moving Threshold(24)**{% include en/dxl/control_table_movingthreshold.md %}### **Temperature Limit(31)**{% include en/dxl/control_table_temp_limit_2.md %}### **Min/Max Voltage Limit(34, 32)**{% include en/dxl/control_table_volt_limit_2.md %}### **PWM Limit(36)**{% include en/dxl/control_table_pwm_limit.md %}### **Current Limit(38)**{% include en/dxl/control_table_current_limit.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|0 ~ 1,193|`Note` Current Limit(38) could be differ by each DYNAMIXEL so please check the Control Table.{: .notice}### **Acceleration Limit(40)**{% include en/dxl/control_table_acclimit.md %}### **Velocity Limit(44)**{% include en/dxl/control_table_vellimit.md %}### **Min/Max Position Limits(52, 48)**{% include en/dxl/control_table_positionlimit.md %}### **Shutdown(63)**{% include en/dxl/control_table_shutdown.md %}### **Torque Enable(64)**{% include en/dxl/control_table_torque_enable_2.md %}### **LED(65)**{% include en/dxl/control_table_led.md %}### **Status Return Level(68)**{% include en/dxl/control_table_status_return_lv.md %}### **Registered Instruction(69)**{% include en/dxl/control_table_reg_instruction.md %}### **Hardware Error Status(70)**This value indicates hardware error status.{% include en/dxl/control_table_shutdown.md %}### **Velocity PI Gain(78, 76)**{% include en/dxl/control_table_velocity_pi_gain.md %}### **Position PID Gain(84, 82, 80), Feedforward 1st/2nd Gains(90, 88)**{% include en/dxl/control_table_position_pid_gain.md %}{% include en/dxl/control_table_current_position_pid_gain.md %}### **Bus Watchdog(98, Available from Firmware v38)**{% include en/dxl/control_table_buswatchdog.md %}### **Goal PWM(100)**{% include en/dxl/control_table_goal_pwm.md %}### **Goal Current(102)**{% include en/dxl/control_table_goal_current.md %}| Unit | Value Range     || :---: | :------------: ||about  2.69[mA]|-Current Limit(38) ~ Current Limit(38)|`Note` Applying high current to the motor for long period of time might damage the motor.{: .notice}### **Goal Velocity(104)**{% include en/dxl/control_table_goal_velocity.md %}### **Profile Acceleration(108)**{% include en/dxl/control_table_profile_acceleration.md %}### **Profile Velocity(112)**{% include en/dxl/control_table_profile_velocity.md %}### **Goal Position(116)**{% include en/dxl/control_table_goal_position_2.md %}### **Realtime Tick(120)**{% include en/dxl/control_table_realtime_tick.md %}### **Moving(122)**{% include en/dxl/control_table_moving_2.md %}### **Moving Status(123)**{% include en/dxl/control_table_moving_status.md %}### **Present PWM(124)**This value indicates current PWM. For more details, please refer to the [Goal PWM(100)](#goal-pwm).### **Present Current(126)**This value indicates current Current. For more details, please refer to the Goal Current(102).### **Present Velocity(128)**This value indicates current Velocity. For more details, please refer to the Goal Velocity(104).### **Present Position(132)**{% include en/dxl/control_table_present_position.md %}### **Velocity Trajectory(136)**{% include en/dxl/control_table_velocity_trajectory.md %}### **Position Trajectory(140)**{% include en/dxl/control_table_position_trajectory.md %}### **Present Input Voltage(144)**{% include en/dxl/control_table_present_volt_2.md %}### **Present Temperature (144)**{% include en/dxl/control_table_present_temp_2.md %}### **Indirect Address, Indirect Data**{% include en/dxl/control_table_indirect_data.md %}# [How to Assemble](#how-to-assemble)## [Wiring through Back Case](#wiring-through-back-case)![](/assets/images/dxl/x/wiring_through_back_case.jpg)## [Option Frame Assembly](#option-frame-assembly)![](/assets/images/dxl/x/x430_option_frame.jpg)# [Maintenance](#maintenance){% include en/dxl/horn_bearing_replacement.md %}# [Reference](#reference)`Note` [Compatibility Guide]{: .notice}## [Quick Start](#quick-start){% include en/dxl/quick_start.md %}## [Drawings](#drawings)`Download` [X_430_std_ref.pdf][X_430_std_ref.pdf]: http://support.robotis.com/en/baggage_files/dynamixel/x-430_std_ref.pdf[Compatibility Guide]: http://en.robotis.com/BlueAD/board.php?bbs_id=faq&amp;mode=view&amp;bbs_no=47&amp;page=1&amp;key=&amp;keyword=&amp;sort=&amp;scate=",
        "url": " http://localhost:4000/emanual/docs/en/dxl/x/xm430-w350/"
      } ,
  
      "docs-kr-dxl-x-xm430-w350":  {
        "title": "XM430-W350",
      "content"	 : "DYNAMIXEL XM430-W350",
        "url": " http://localhost:4000/emanual/docs/kr/dxl/x/xm430-w350/"
      } ,
  
      "sitemap-xml":  {
        "title": "",
      "content"	 : "{% if page.xsl %}{% endif %}{% assign collections = site.collections | where_exp:&#39;collection&#39;,&#39;collection.output != false&#39; %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:&#39;doc&#39;,&#39;doc.sitemap != false&#39; %}{% for doc in docs %}{{ doc.url | replace:&#39;/index.html&#39;,&#39;/&#39; | absolute_url | xml_escape }}{% if doc.last_modified_at or doc.date %}{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}{% endif %}{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:&#39;doc&#39;,&#39;doc.sitemap != false&#39; | where_exp:&#39;doc&#39;,&#39;doc.url != &quot;/404.html&quot;&#39; %}{% for page in pages %}{{ page.url | replace:&#39;/index.html&#39;,&#39;/&#39; | absolute_url | xml_escape }}{% if page.last_modified_at %}{{ page.last_modified_at | date_to_xmlschema }}{% endif %}{% endfor %}{% assign static_files = page.static_files | where_exp:&#39;page&#39;,&#39;page.name != &quot;404.html&quot;&#39; %}{% for file in static_files %}{{ file.path | absolute_url | xml_escape }}{{ file.modified_time | date_to_xmlschema }}{% endfor %}",
        "url": " "
      } ,
  
      "robots-txt":  {
        "title": "",
      "content"	 : "Sitemap: {{ &quot;sitemap.xml&quot; | absolute_url }}",
        "url": " "
      } ,
  
      "feed-xml":  {
        "title": "",
      "content"	 : "{% if page.xsl %}{% endif %}Jekyll{{ site.time | date_to_xmlschema }}{{ &#39;/&#39; | absolute_url | xml_escape }}{% if site.title %}{{ site.title | smartify | xml_escape }}{% elsif site.name %}{{ site.name | smartify | xml_escape }}{% endif %}{% if site.description %}{{ site.description | xml_escape }}{% endif %}{% if site.author %}{{ site.author.name | default: site.author | xml_escape }}{% if site.author.email %}{{ site.author.email | xml_escape }}{% endif %}{% if site.author.uri %}{{ site.author.uri | xml_escape }}{% endif %}{% endif %}{% assign posts = site.posts | where_exp: &quot;post&quot;, &quot;post.draft != true&quot; %}{% for post in posts limit: 10 %}{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}{{ post.date | date_to_xmlschema }}{{ post.last_modified_at | default: post.date | date_to_xmlschema }}{{ post.id | absolute_url | xml_escape }}{{ post.content | strip | xml_escape }}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}{{ post_author_name | default: &quot;&quot; | xml_escape }}{% if post_author_email %}{{ post_author_email | xml_escape }}{% endif %}{% if post_author_uri %}{{ post_author_uri | xml_escape }}{% endif %}{% if post.category %}{% endif %}{% for tag in post.tags %}{% endfor %}{% if post.excerpt and post.excerpt != empty %}{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains &quot;://&quot; %}{% assign post_image = post_image | absolute_url | xml_escape  %}{% endunless %}{% endif %}{% endfor %}",
        "url": " "
      } 
  
}
